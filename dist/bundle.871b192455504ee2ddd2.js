"use strict";(self.webpackChunkbreak_the_blocks_game=self.webpackChunkbreak_the_blocks_game||[]).push([["src_js_mainMenu_mjs"],{"./threeJS/three.module.js":
/*!*********************************!*\
  !*** ./threeJS/three.module.js ***!
  \*********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ACESFilmicToneMapping\": () => (/* binding */ ACESFilmicToneMapping),\n/* harmony export */   \"AddEquation\": () => (/* binding */ AddEquation),\n/* harmony export */   \"AddOperation\": () => (/* binding */ AddOperation),\n/* harmony export */   \"AdditiveAnimationBlendMode\": () => (/* binding */ AdditiveAnimationBlendMode),\n/* harmony export */   \"AdditiveBlending\": () => (/* binding */ AdditiveBlending),\n/* harmony export */   \"AlphaFormat\": () => (/* binding */ AlphaFormat),\n/* harmony export */   \"AlwaysDepth\": () => (/* binding */ AlwaysDepth),\n/* harmony export */   \"AlwaysStencilFunc\": () => (/* binding */ AlwaysStencilFunc),\n/* harmony export */   \"AmbientLight\": () => (/* binding */ AmbientLight),\n/* harmony export */   \"AmbientLightProbe\": () => (/* binding */ AmbientLightProbe),\n/* harmony export */   \"AnimationClip\": () => (/* binding */ AnimationClip),\n/* harmony export */   \"AnimationLoader\": () => (/* binding */ AnimationLoader),\n/* harmony export */   \"AnimationMixer\": () => (/* binding */ AnimationMixer),\n/* harmony export */   \"AnimationObjectGroup\": () => (/* binding */ AnimationObjectGroup),\n/* harmony export */   \"AnimationUtils\": () => (/* binding */ AnimationUtils),\n/* harmony export */   \"ArcCurve\": () => (/* binding */ ArcCurve),\n/* harmony export */   \"ArrayCamera\": () => (/* binding */ ArrayCamera),\n/* harmony export */   \"ArrowHelper\": () => (/* binding */ ArrowHelper),\n/* harmony export */   \"Audio\": () => (/* binding */ Audio),\n/* harmony export */   \"AudioAnalyser\": () => (/* binding */ AudioAnalyser),\n/* harmony export */   \"AudioContext\": () => (/* binding */ AudioContext),\n/* harmony export */   \"AudioListener\": () => (/* binding */ AudioListener),\n/* harmony export */   \"AudioLoader\": () => (/* binding */ AudioLoader),\n/* harmony export */   \"AxesHelper\": () => (/* binding */ AxesHelper),\n/* harmony export */   \"AxisHelper\": () => (/* binding */ AxisHelper),\n/* harmony export */   \"BackSide\": () => (/* binding */ BackSide),\n/* harmony export */   \"BasicDepthPacking\": () => (/* binding */ BasicDepthPacking),\n/* harmony export */   \"BasicShadowMap\": () => (/* binding */ BasicShadowMap),\n/* harmony export */   \"BinaryTextureLoader\": () => (/* binding */ BinaryTextureLoader),\n/* harmony export */   \"Bone\": () => (/* binding */ Bone),\n/* harmony export */   \"BooleanKeyframeTrack\": () => (/* binding */ BooleanKeyframeTrack),\n/* harmony export */   \"BoundingBoxHelper\": () => (/* binding */ BoundingBoxHelper),\n/* harmony export */   \"Box2\": () => (/* binding */ Box2),\n/* harmony export */   \"Box3\": () => (/* binding */ Box3),\n/* harmony export */   \"Box3Helper\": () => (/* binding */ Box3Helper),\n/* harmony export */   \"BoxBufferGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxGeometry\": () => (/* binding */ BoxGeometry),\n/* harmony export */   \"BoxHelper\": () => (/* binding */ BoxHelper),\n/* harmony export */   \"BufferAttribute\": () => (/* binding */ BufferAttribute),\n/* harmony export */   \"BufferGeometry\": () => (/* binding */ BufferGeometry),\n/* harmony export */   \"BufferGeometryLoader\": () => (/* binding */ BufferGeometryLoader),\n/* harmony export */   \"ByteType\": () => (/* binding */ ByteType),\n/* harmony export */   \"Cache\": () => (/* binding */ Cache),\n/* harmony export */   \"Camera\": () => (/* binding */ Camera),\n/* harmony export */   \"CameraHelper\": () => (/* binding */ CameraHelper),\n/* harmony export */   \"CanvasRenderer\": () => (/* binding */ CanvasRenderer),\n/* harmony export */   \"CanvasTexture\": () => (/* binding */ CanvasTexture),\n/* harmony export */   \"CatmullRomCurve3\": () => (/* binding */ CatmullRomCurve3),\n/* harmony export */   \"CineonToneMapping\": () => (/* binding */ CineonToneMapping),\n/* harmony export */   \"CircleBufferGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"CircleGeometry\": () => (/* binding */ CircleGeometry),\n/* harmony export */   \"ClampToEdgeWrapping\": () => (/* binding */ ClampToEdgeWrapping),\n/* harmony export */   \"Clock\": () => (/* binding */ Clock),\n/* harmony export */   \"Color\": () => (/* binding */ Color),\n/* harmony export */   \"ColorKeyframeTrack\": () => (/* binding */ ColorKeyframeTrack),\n/* harmony export */   \"CompressedTexture\": () => (/* binding */ CompressedTexture),\n/* harmony export */   \"CompressedTextureLoader\": () => (/* binding */ CompressedTextureLoader),\n/* harmony export */   \"ConeBufferGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"ConeGeometry\": () => (/* binding */ ConeGeometry),\n/* harmony export */   \"CubeCamera\": () => (/* binding */ CubeCamera),\n/* harmony export */   \"CubeReflectionMapping\": () => (/* binding */ CubeReflectionMapping),\n/* harmony export */   \"CubeRefractionMapping\": () => (/* binding */ CubeRefractionMapping),\n/* harmony export */   \"CubeTexture\": () => (/* binding */ CubeTexture),\n/* harmony export */   \"CubeTextureLoader\": () => (/* binding */ CubeTextureLoader),\n/* harmony export */   \"CubeUVReflectionMapping\": () => (/* binding */ CubeUVReflectionMapping),\n/* harmony export */   \"CubeUVRefractionMapping\": () => (/* binding */ CubeUVRefractionMapping),\n/* harmony export */   \"CubicBezierCurve\": () => (/* binding */ CubicBezierCurve),\n/* harmony export */   \"CubicBezierCurve3\": () => (/* binding */ CubicBezierCurve3),\n/* harmony export */   \"CubicInterpolant\": () => (/* binding */ CubicInterpolant),\n/* harmony export */   \"CullFaceBack\": () => (/* binding */ CullFaceBack),\n/* harmony export */   \"CullFaceFront\": () => (/* binding */ CullFaceFront),\n/* harmony export */   \"CullFaceFrontBack\": () => (/* binding */ CullFaceFrontBack),\n/* harmony export */   \"CullFaceNone\": () => (/* binding */ CullFaceNone),\n/* harmony export */   \"Curve\": () => (/* binding */ Curve),\n/* harmony export */   \"CurvePath\": () => (/* binding */ CurvePath),\n/* harmony export */   \"CustomBlending\": () => (/* binding */ CustomBlending),\n/* harmony export */   \"CustomToneMapping\": () => (/* binding */ CustomToneMapping),\n/* harmony export */   \"CylinderBufferGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"CylinderGeometry\": () => (/* binding */ CylinderGeometry),\n/* harmony export */   \"Cylindrical\": () => (/* binding */ Cylindrical),\n/* harmony export */   \"DataTexture\": () => (/* binding */ DataTexture),\n/* harmony export */   \"DataTexture2DArray\": () => (/* binding */ DataTexture2DArray),\n/* harmony export */   \"DataTexture3D\": () => (/* binding */ DataTexture3D),\n/* harmony export */   \"DataTextureLoader\": () => (/* binding */ DataTextureLoader),\n/* harmony export */   \"DataUtils\": () => (/* binding */ DataUtils),\n/* harmony export */   \"DecrementStencilOp\": () => (/* binding */ DecrementStencilOp),\n/* harmony export */   \"DecrementWrapStencilOp\": () => (/* binding */ DecrementWrapStencilOp),\n/* harmony export */   \"DefaultLoadingManager\": () => (/* binding */ DefaultLoadingManager),\n/* harmony export */   \"DepthFormat\": () => (/* binding */ DepthFormat),\n/* harmony export */   \"DepthStencilFormat\": () => (/* binding */ DepthStencilFormat),\n/* harmony export */   \"DepthTexture\": () => (/* binding */ DepthTexture),\n/* harmony export */   \"DirectionalLight\": () => (/* binding */ DirectionalLight),\n/* harmony export */   \"DirectionalLightHelper\": () => (/* binding */ DirectionalLightHelper),\n/* harmony export */   \"DiscreteInterpolant\": () => (/* binding */ DiscreteInterpolant),\n/* harmony export */   \"DodecahedronBufferGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DodecahedronGeometry\": () => (/* binding */ DodecahedronGeometry),\n/* harmony export */   \"DoubleSide\": () => (/* binding */ DoubleSide),\n/* harmony export */   \"DstAlphaFactor\": () => (/* binding */ DstAlphaFactor),\n/* harmony export */   \"DstColorFactor\": () => (/* binding */ DstColorFactor),\n/* harmony export */   \"DynamicBufferAttribute\": () => (/* binding */ DynamicBufferAttribute),\n/* harmony export */   \"DynamicCopyUsage\": () => (/* binding */ DynamicCopyUsage),\n/* harmony export */   \"DynamicDrawUsage\": () => (/* binding */ DynamicDrawUsage),\n/* harmony export */   \"DynamicReadUsage\": () => (/* binding */ DynamicReadUsage),\n/* harmony export */   \"EdgesGeometry\": () => (/* binding */ EdgesGeometry),\n/* harmony export */   \"EdgesHelper\": () => (/* binding */ EdgesHelper),\n/* harmony export */   \"EllipseCurve\": () => (/* binding */ EllipseCurve),\n/* harmony export */   \"EqualDepth\": () => (/* binding */ EqualDepth),\n/* harmony export */   \"EqualStencilFunc\": () => (/* binding */ EqualStencilFunc),\n/* harmony export */   \"EquirectangularReflectionMapping\": () => (/* binding */ EquirectangularReflectionMapping),\n/* harmony export */   \"EquirectangularRefractionMapping\": () => (/* binding */ EquirectangularRefractionMapping),\n/* harmony export */   \"Euler\": () => (/* binding */ Euler),\n/* harmony export */   \"EventDispatcher\": () => (/* binding */ EventDispatcher),\n/* harmony export */   \"ExtrudeBufferGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"ExtrudeGeometry\": () => (/* binding */ ExtrudeGeometry),\n/* harmony export */   \"FaceColors\": () => (/* binding */ FaceColors),\n/* harmony export */   \"FileLoader\": () => (/* binding */ FileLoader),\n/* harmony export */   \"FlatShading\": () => (/* binding */ FlatShading),\n/* harmony export */   \"Float16BufferAttribute\": () => (/* binding */ Float16BufferAttribute),\n/* harmony export */   \"Float32Attribute\": () => (/* binding */ Float32Attribute),\n/* harmony export */   \"Float32BufferAttribute\": () => (/* binding */ Float32BufferAttribute),\n/* harmony export */   \"Float64Attribute\": () => (/* binding */ Float64Attribute),\n/* harmony export */   \"Float64BufferAttribute\": () => (/* binding */ Float64BufferAttribute),\n/* harmony export */   \"FloatType\": () => (/* binding */ FloatType),\n/* harmony export */   \"Fog\": () => (/* binding */ Fog),\n/* harmony export */   \"FogExp2\": () => (/* binding */ FogExp2),\n/* harmony export */   \"Font\": () => (/* binding */ Font),\n/* harmony export */   \"FontLoader\": () => (/* binding */ FontLoader),\n/* harmony export */   \"FrontSide\": () => (/* binding */ FrontSide),\n/* harmony export */   \"Frustum\": () => (/* binding */ Frustum),\n/* harmony export */   \"GLBufferAttribute\": () => (/* binding */ GLBufferAttribute),\n/* harmony export */   \"GLSL1\": () => (/* binding */ GLSL1),\n/* harmony export */   \"GLSL3\": () => (/* binding */ GLSL3),\n/* harmony export */   \"GammaEncoding\": () => (/* binding */ GammaEncoding),\n/* harmony export */   \"GreaterDepth\": () => (/* binding */ GreaterDepth),\n/* harmony export */   \"GreaterEqualDepth\": () => (/* binding */ GreaterEqualDepth),\n/* harmony export */   \"GreaterEqualStencilFunc\": () => (/* binding */ GreaterEqualStencilFunc),\n/* harmony export */   \"GreaterStencilFunc\": () => (/* binding */ GreaterStencilFunc),\n/* harmony export */   \"GridHelper\": () => (/* binding */ GridHelper),\n/* harmony export */   \"Group\": () => (/* binding */ Group),\n/* harmony export */   \"HalfFloatType\": () => (/* binding */ HalfFloatType),\n/* harmony export */   \"HemisphereLight\": () => (/* binding */ HemisphereLight),\n/* harmony export */   \"HemisphereLightHelper\": () => (/* binding */ HemisphereLightHelper),\n/* harmony export */   \"HemisphereLightProbe\": () => (/* binding */ HemisphereLightProbe),\n/* harmony export */   \"IcosahedronBufferGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"IcosahedronGeometry\": () => (/* binding */ IcosahedronGeometry),\n/* harmony export */   \"ImageBitmapLoader\": () => (/* binding */ ImageBitmapLoader),\n/* harmony export */   \"ImageLoader\": () => (/* binding */ ImageLoader),\n/* harmony export */   \"ImageUtils\": () => (/* binding */ ImageUtils),\n/* harmony export */   \"ImmediateRenderObject\": () => (/* binding */ ImmediateRenderObject),\n/* harmony export */   \"IncrementStencilOp\": () => (/* binding */ IncrementStencilOp),\n/* harmony export */   \"IncrementWrapStencilOp\": () => (/* binding */ IncrementWrapStencilOp),\n/* harmony export */   \"InstancedBufferAttribute\": () => (/* binding */ InstancedBufferAttribute),\n/* harmony export */   \"InstancedBufferGeometry\": () => (/* binding */ InstancedBufferGeometry),\n/* harmony export */   \"InstancedInterleavedBuffer\": () => (/* binding */ InstancedInterleavedBuffer),\n/* harmony export */   \"InstancedMesh\": () => (/* binding */ InstancedMesh),\n/* harmony export */   \"Int16Attribute\": () => (/* binding */ Int16Attribute),\n/* harmony export */   \"Int16BufferAttribute\": () => (/* binding */ Int16BufferAttribute),\n/* harmony export */   \"Int32Attribute\": () => (/* binding */ Int32Attribute),\n/* harmony export */   \"Int32BufferAttribute\": () => (/* binding */ Int32BufferAttribute),\n/* harmony export */   \"Int8Attribute\": () => (/* binding */ Int8Attribute),\n/* harmony export */   \"Int8BufferAttribute\": () => (/* binding */ Int8BufferAttribute),\n/* harmony export */   \"IntType\": () => (/* binding */ IntType),\n/* harmony export */   \"InterleavedBuffer\": () => (/* binding */ InterleavedBuffer),\n/* harmony export */   \"InterleavedBufferAttribute\": () => (/* binding */ InterleavedBufferAttribute),\n/* harmony export */   \"Interpolant\": () => (/* binding */ Interpolant),\n/* harmony export */   \"InterpolateDiscrete\": () => (/* binding */ InterpolateDiscrete),\n/* harmony export */   \"InterpolateLinear\": () => (/* binding */ InterpolateLinear),\n/* harmony export */   \"InterpolateSmooth\": () => (/* binding */ InterpolateSmooth),\n/* harmony export */   \"InvertStencilOp\": () => (/* binding */ InvertStencilOp),\n/* harmony export */   \"JSONLoader\": () => (/* binding */ JSONLoader),\n/* harmony export */   \"KeepStencilOp\": () => (/* binding */ KeepStencilOp),\n/* harmony export */   \"KeyframeTrack\": () => (/* binding */ KeyframeTrack),\n/* harmony export */   \"LOD\": () => (/* binding */ LOD),\n/* harmony export */   \"LatheBufferGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"LatheGeometry\": () => (/* binding */ LatheGeometry),\n/* harmony export */   \"Layers\": () => (/* binding */ Layers),\n/* harmony export */   \"LensFlare\": () => (/* binding */ LensFlare),\n/* harmony export */   \"LessDepth\": () => (/* binding */ LessDepth),\n/* harmony export */   \"LessEqualDepth\": () => (/* binding */ LessEqualDepth),\n/* harmony export */   \"LessEqualStencilFunc\": () => (/* binding */ LessEqualStencilFunc),\n/* harmony export */   \"LessStencilFunc\": () => (/* binding */ LessStencilFunc),\n/* harmony export */   \"Light\": () => (/* binding */ Light),\n/* harmony export */   \"LightProbe\": () => (/* binding */ LightProbe),\n/* harmony export */   \"Line\": () => (/* binding */ Line),\n/* harmony export */   \"Line3\": () => (/* binding */ Line3),\n/* harmony export */   \"LineBasicMaterial\": () => (/* binding */ LineBasicMaterial),\n/* harmony export */   \"LineCurve\": () => (/* binding */ LineCurve),\n/* harmony export */   \"LineCurve3\": () => (/* binding */ LineCurve3),\n/* harmony export */   \"LineDashedMaterial\": () => (/* binding */ LineDashedMaterial),\n/* harmony export */   \"LineLoop\": () => (/* binding */ LineLoop),\n/* harmony export */   \"LinePieces\": () => (/* binding */ LinePieces),\n/* harmony export */   \"LineSegments\": () => (/* binding */ LineSegments),\n/* harmony export */   \"LineStrip\": () => (/* binding */ LineStrip),\n/* harmony export */   \"LinearEncoding\": () => (/* binding */ LinearEncoding),\n/* harmony export */   \"LinearFilter\": () => (/* binding */ LinearFilter),\n/* harmony export */   \"LinearInterpolant\": () => (/* binding */ LinearInterpolant),\n/* harmony export */   \"LinearMipMapLinearFilter\": () => (/* binding */ LinearMipMapLinearFilter),\n/* harmony export */   \"LinearMipMapNearestFilter\": () => (/* binding */ LinearMipMapNearestFilter),\n/* harmony export */   \"LinearMipmapLinearFilter\": () => (/* binding */ LinearMipmapLinearFilter),\n/* harmony export */   \"LinearMipmapNearestFilter\": () => (/* binding */ LinearMipmapNearestFilter),\n/* harmony export */   \"LinearToneMapping\": () => (/* binding */ LinearToneMapping),\n/* harmony export */   \"Loader\": () => (/* binding */ Loader),\n/* harmony export */   \"LoaderUtils\": () => (/* binding */ LoaderUtils),\n/* harmony export */   \"LoadingManager\": () => (/* binding */ LoadingManager),\n/* harmony export */   \"LogLuvEncoding\": () => (/* binding */ LogLuvEncoding),\n/* harmony export */   \"LoopOnce\": () => (/* binding */ LoopOnce),\n/* harmony export */   \"LoopPingPong\": () => (/* binding */ LoopPingPong),\n/* harmony export */   \"LoopRepeat\": () => (/* binding */ LoopRepeat),\n/* harmony export */   \"LuminanceAlphaFormat\": () => (/* binding */ LuminanceAlphaFormat),\n/* harmony export */   \"LuminanceFormat\": () => (/* binding */ LuminanceFormat),\n/* harmony export */   \"MOUSE\": () => (/* binding */ MOUSE),\n/* harmony export */   \"Material\": () => (/* binding */ Material),\n/* harmony export */   \"MaterialLoader\": () => (/* binding */ MaterialLoader),\n/* harmony export */   \"Math\": () => (/* binding */ MathUtils),\n/* harmony export */   \"MathUtils\": () => (/* binding */ MathUtils),\n/* harmony export */   \"Matrix3\": () => (/* binding */ Matrix3),\n/* harmony export */   \"Matrix4\": () => (/* binding */ Matrix4),\n/* harmony export */   \"MaxEquation\": () => (/* binding */ MaxEquation),\n/* harmony export */   \"Mesh\": () => (/* binding */ Mesh),\n/* harmony export */   \"MeshBasicMaterial\": () => (/* binding */ MeshBasicMaterial),\n/* harmony export */   \"MeshDepthMaterial\": () => (/* binding */ MeshDepthMaterial),\n/* harmony export */   \"MeshDistanceMaterial\": () => (/* binding */ MeshDistanceMaterial),\n/* harmony export */   \"MeshFaceMaterial\": () => (/* binding */ MeshFaceMaterial),\n/* harmony export */   \"MeshLambertMaterial\": () => (/* binding */ MeshLambertMaterial),\n/* harmony export */   \"MeshMatcapMaterial\": () => (/* binding */ MeshMatcapMaterial),\n/* harmony export */   \"MeshNormalMaterial\": () => (/* binding */ MeshNormalMaterial),\n/* harmony export */   \"MeshPhongMaterial\": () => (/* binding */ MeshPhongMaterial),\n/* harmony export */   \"MeshPhysicalMaterial\": () => (/* binding */ MeshPhysicalMaterial),\n/* harmony export */   \"MeshStandardMaterial\": () => (/* binding */ MeshStandardMaterial),\n/* harmony export */   \"MeshToonMaterial\": () => (/* binding */ MeshToonMaterial),\n/* harmony export */   \"MinEquation\": () => (/* binding */ MinEquation),\n/* harmony export */   \"MirroredRepeatWrapping\": () => (/* binding */ MirroredRepeatWrapping),\n/* harmony export */   \"MixOperation\": () => (/* binding */ MixOperation),\n/* harmony export */   \"MultiMaterial\": () => (/* binding */ MultiMaterial),\n/* harmony export */   \"MultiplyBlending\": () => (/* binding */ MultiplyBlending),\n/* harmony export */   \"MultiplyOperation\": () => (/* binding */ MultiplyOperation),\n/* harmony export */   \"NearestFilter\": () => (/* binding */ NearestFilter),\n/* harmony export */   \"NearestMipMapLinearFilter\": () => (/* binding */ NearestMipMapLinearFilter),\n/* harmony export */   \"NearestMipMapNearestFilter\": () => (/* binding */ NearestMipMapNearestFilter),\n/* harmony export */   \"NearestMipmapLinearFilter\": () => (/* binding */ NearestMipmapLinearFilter),\n/* harmony export */   \"NearestMipmapNearestFilter\": () => (/* binding */ NearestMipmapNearestFilter),\n/* harmony export */   \"NeverDepth\": () => (/* binding */ NeverDepth),\n/* harmony export */   \"NeverStencilFunc\": () => (/* binding */ NeverStencilFunc),\n/* harmony export */   \"NoBlending\": () => (/* binding */ NoBlending),\n/* harmony export */   \"NoColors\": () => (/* binding */ NoColors),\n/* harmony export */   \"NoToneMapping\": () => (/* binding */ NoToneMapping),\n/* harmony export */   \"NormalAnimationBlendMode\": () => (/* binding */ NormalAnimationBlendMode),\n/* harmony export */   \"NormalBlending\": () => (/* binding */ NormalBlending),\n/* harmony export */   \"NotEqualDepth\": () => (/* binding */ NotEqualDepth),\n/* harmony export */   \"NotEqualStencilFunc\": () => (/* binding */ NotEqualStencilFunc),\n/* harmony export */   \"NumberKeyframeTrack\": () => (/* binding */ NumberKeyframeTrack),\n/* harmony export */   \"Object3D\": () => (/* binding */ Object3D),\n/* harmony export */   \"ObjectLoader\": () => (/* binding */ ObjectLoader),\n/* harmony export */   \"ObjectSpaceNormalMap\": () => (/* binding */ ObjectSpaceNormalMap),\n/* harmony export */   \"OctahedronBufferGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OctahedronGeometry\": () => (/* binding */ OctahedronGeometry),\n/* harmony export */   \"OneFactor\": () => (/* binding */ OneFactor),\n/* harmony export */   \"OneMinusDstAlphaFactor\": () => (/* binding */ OneMinusDstAlphaFactor),\n/* harmony export */   \"OneMinusDstColorFactor\": () => (/* binding */ OneMinusDstColorFactor),\n/* harmony export */   \"OneMinusSrcAlphaFactor\": () => (/* binding */ OneMinusSrcAlphaFactor),\n/* harmony export */   \"OneMinusSrcColorFactor\": () => (/* binding */ OneMinusSrcColorFactor),\n/* harmony export */   \"OrthographicCamera\": () => (/* binding */ OrthographicCamera),\n/* harmony export */   \"PCFShadowMap\": () => (/* binding */ PCFShadowMap),\n/* harmony export */   \"PCFSoftShadowMap\": () => (/* binding */ PCFSoftShadowMap),\n/* harmony export */   \"PMREMGenerator\": () => (/* binding */ PMREMGenerator),\n/* harmony export */   \"ParametricGeometry\": () => (/* binding */ ParametricGeometry),\n/* harmony export */   \"Particle\": () => (/* binding */ Particle),\n/* harmony export */   \"ParticleBasicMaterial\": () => (/* binding */ ParticleBasicMaterial),\n/* harmony export */   \"ParticleSystem\": () => (/* binding */ ParticleSystem),\n/* harmony export */   \"ParticleSystemMaterial\": () => (/* binding */ ParticleSystemMaterial),\n/* harmony export */   \"Path\": () => (/* binding */ Path),\n/* harmony export */   \"PerspectiveCamera\": () => (/* binding */ PerspectiveCamera),\n/* harmony export */   \"Plane\": () => (/* binding */ Plane),\n/* harmony export */   \"PlaneBufferGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneGeometry\": () => (/* binding */ PlaneGeometry),\n/* harmony export */   \"PlaneHelper\": () => (/* binding */ PlaneHelper),\n/* harmony export */   \"PointCloud\": () => (/* binding */ PointCloud),\n/* harmony export */   \"PointCloudMaterial\": () => (/* binding */ PointCloudMaterial),\n/* harmony export */   \"PointLight\": () => (/* binding */ PointLight),\n/* harmony export */   \"PointLightHelper\": () => (/* binding */ PointLightHelper),\n/* harmony export */   \"Points\": () => (/* binding */ Points),\n/* harmony export */   \"PointsMaterial\": () => (/* binding */ PointsMaterial),\n/* harmony export */   \"PolarGridHelper\": () => (/* binding */ PolarGridHelper),\n/* harmony export */   \"PolyhedronBufferGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PolyhedronGeometry\": () => (/* binding */ PolyhedronGeometry),\n/* harmony export */   \"PositionalAudio\": () => (/* binding */ PositionalAudio),\n/* harmony export */   \"PropertyBinding\": () => (/* binding */ PropertyBinding),\n/* harmony export */   \"PropertyMixer\": () => (/* binding */ PropertyMixer),\n/* harmony export */   \"QuadraticBezierCurve\": () => (/* binding */ QuadraticBezierCurve),\n/* harmony export */   \"QuadraticBezierCurve3\": () => (/* binding */ QuadraticBezierCurve3),\n/* harmony export */   \"Quaternion\": () => (/* binding */ Quaternion),\n/* harmony export */   \"QuaternionKeyframeTrack\": () => (/* binding */ QuaternionKeyframeTrack),\n/* harmony export */   \"QuaternionLinearInterpolant\": () => (/* binding */ QuaternionLinearInterpolant),\n/* harmony export */   \"REVISION\": () => (/* binding */ REVISION),\n/* harmony export */   \"RGBADepthPacking\": () => (/* binding */ RGBADepthPacking),\n/* harmony export */   \"RGBAFormat\": () => (/* binding */ RGBAFormat),\n/* harmony export */   \"RGBAIntegerFormat\": () => (/* binding */ RGBAIntegerFormat),\n/* harmony export */   \"RGBA_ASTC_10x10_Format\": () => (/* binding */ RGBA_ASTC_10x10_Format),\n/* harmony export */   \"RGBA_ASTC_10x5_Format\": () => (/* binding */ RGBA_ASTC_10x5_Format),\n/* harmony export */   \"RGBA_ASTC_10x6_Format\": () => (/* binding */ RGBA_ASTC_10x6_Format),\n/* harmony export */   \"RGBA_ASTC_10x8_Format\": () => (/* binding */ RGBA_ASTC_10x8_Format),\n/* harmony export */   \"RGBA_ASTC_12x10_Format\": () => (/* binding */ RGBA_ASTC_12x10_Format),\n/* harmony export */   \"RGBA_ASTC_12x12_Format\": () => (/* binding */ RGBA_ASTC_12x12_Format),\n/* harmony export */   \"RGBA_ASTC_4x4_Format\": () => (/* binding */ RGBA_ASTC_4x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x4_Format\": () => (/* binding */ RGBA_ASTC_5x4_Format),\n/* harmony export */   \"RGBA_ASTC_5x5_Format\": () => (/* binding */ RGBA_ASTC_5x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x5_Format\": () => (/* binding */ RGBA_ASTC_6x5_Format),\n/* harmony export */   \"RGBA_ASTC_6x6_Format\": () => (/* binding */ RGBA_ASTC_6x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x5_Format\": () => (/* binding */ RGBA_ASTC_8x5_Format),\n/* harmony export */   \"RGBA_ASTC_8x6_Format\": () => (/* binding */ RGBA_ASTC_8x6_Format),\n/* harmony export */   \"RGBA_ASTC_8x8_Format\": () => (/* binding */ RGBA_ASTC_8x8_Format),\n/* harmony export */   \"RGBA_BPTC_Format\": () => (/* binding */ RGBA_BPTC_Format),\n/* harmony export */   \"RGBA_ETC2_EAC_Format\": () => (/* binding */ RGBA_ETC2_EAC_Format),\n/* harmony export */   \"RGBA_PVRTC_2BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGBA_PVRTC_4BPPV1_Format\": () => (/* binding */ RGBA_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT1_Format\": () => (/* binding */ RGBA_S3TC_DXT1_Format),\n/* harmony export */   \"RGBA_S3TC_DXT3_Format\": () => (/* binding */ RGBA_S3TC_DXT3_Format),\n/* harmony export */   \"RGBA_S3TC_DXT5_Format\": () => (/* binding */ RGBA_S3TC_DXT5_Format),\n/* harmony export */   \"RGBDEncoding\": () => (/* binding */ RGBDEncoding),\n/* harmony export */   \"RGBEEncoding\": () => (/* binding */ RGBEEncoding),\n/* harmony export */   \"RGBEFormat\": () => (/* binding */ RGBEFormat),\n/* harmony export */   \"RGBFormat\": () => (/* binding */ RGBFormat),\n/* harmony export */   \"RGBIntegerFormat\": () => (/* binding */ RGBIntegerFormat),\n/* harmony export */   \"RGBM16Encoding\": () => (/* binding */ RGBM16Encoding),\n/* harmony export */   \"RGBM7Encoding\": () => (/* binding */ RGBM7Encoding),\n/* harmony export */   \"RGB_ETC1_Format\": () => (/* binding */ RGB_ETC1_Format),\n/* harmony export */   \"RGB_ETC2_Format\": () => (/* binding */ RGB_ETC2_Format),\n/* harmony export */   \"RGB_PVRTC_2BPPV1_Format\": () => (/* binding */ RGB_PVRTC_2BPPV1_Format),\n/* harmony export */   \"RGB_PVRTC_4BPPV1_Format\": () => (/* binding */ RGB_PVRTC_4BPPV1_Format),\n/* harmony export */   \"RGB_S3TC_DXT1_Format\": () => (/* binding */ RGB_S3TC_DXT1_Format),\n/* harmony export */   \"RGFormat\": () => (/* binding */ RGFormat),\n/* harmony export */   \"RGIntegerFormat\": () => (/* binding */ RGIntegerFormat),\n/* harmony export */   \"RawShaderMaterial\": () => (/* binding */ RawShaderMaterial),\n/* harmony export */   \"Ray\": () => (/* binding */ Ray),\n/* harmony export */   \"Raycaster\": () => (/* binding */ Raycaster),\n/* harmony export */   \"RectAreaLight\": () => (/* binding */ RectAreaLight),\n/* harmony export */   \"RedFormat\": () => (/* binding */ RedFormat),\n/* harmony export */   \"RedIntegerFormat\": () => (/* binding */ RedIntegerFormat),\n/* harmony export */   \"ReinhardToneMapping\": () => (/* binding */ ReinhardToneMapping),\n/* harmony export */   \"RepeatWrapping\": () => (/* binding */ RepeatWrapping),\n/* harmony export */   \"ReplaceStencilOp\": () => (/* binding */ ReplaceStencilOp),\n/* harmony export */   \"ReverseSubtractEquation\": () => (/* binding */ ReverseSubtractEquation),\n/* harmony export */   \"RingBufferGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"RingGeometry\": () => (/* binding */ RingGeometry),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x10_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x10_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_10x8_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_10x8_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_12x10_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_12x10_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_12x12_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_12x12_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_4x4_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_4x4_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_5x4_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_5x4_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_5x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_5x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_6x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_6x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_6x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_6x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x5_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x5_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x6_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x6_Format),\n/* harmony export */   \"SRGB8_ALPHA8_ASTC_8x8_Format\": () => (/* binding */ SRGB8_ALPHA8_ASTC_8x8_Format),\n/* harmony export */   \"Scene\": () => (/* binding */ Scene),\n/* harmony export */   \"SceneUtils\": () => (/* binding */ SceneUtils),\n/* harmony export */   \"ShaderChunk\": () => (/* binding */ ShaderChunk),\n/* harmony export */   \"ShaderLib\": () => (/* binding */ ShaderLib),\n/* harmony export */   \"ShaderMaterial\": () => (/* binding */ ShaderMaterial),\n/* harmony export */   \"ShadowMaterial\": () => (/* binding */ ShadowMaterial),\n/* harmony export */   \"Shape\": () => (/* binding */ Shape),\n/* harmony export */   \"ShapeBufferGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapeGeometry\": () => (/* binding */ ShapeGeometry),\n/* harmony export */   \"ShapePath\": () => (/* binding */ ShapePath),\n/* harmony export */   \"ShapeUtils\": () => (/* binding */ ShapeUtils),\n/* harmony export */   \"ShortType\": () => (/* binding */ ShortType),\n/* harmony export */   \"Skeleton\": () => (/* binding */ Skeleton),\n/* harmony export */   \"SkeletonHelper\": () => (/* binding */ SkeletonHelper),\n/* harmony export */   \"SkinnedMesh\": () => (/* binding */ SkinnedMesh),\n/* harmony export */   \"SmoothShading\": () => (/* binding */ SmoothShading),\n/* harmony export */   \"Sphere\": () => (/* binding */ Sphere),\n/* harmony export */   \"SphereBufferGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"SphereGeometry\": () => (/* binding */ SphereGeometry),\n/* harmony export */   \"Spherical\": () => (/* binding */ Spherical),\n/* harmony export */   \"SphericalHarmonics3\": () => (/* binding */ SphericalHarmonics3),\n/* harmony export */   \"SplineCurve\": () => (/* binding */ SplineCurve),\n/* harmony export */   \"SpotLight\": () => (/* binding */ SpotLight),\n/* harmony export */   \"SpotLightHelper\": () => (/* binding */ SpotLightHelper),\n/* harmony export */   \"Sprite\": () => (/* binding */ Sprite),\n/* harmony export */   \"SpriteMaterial\": () => (/* binding */ SpriteMaterial),\n/* harmony export */   \"SrcAlphaFactor\": () => (/* binding */ SrcAlphaFactor),\n/* harmony export */   \"SrcAlphaSaturateFactor\": () => (/* binding */ SrcAlphaSaturateFactor),\n/* harmony export */   \"SrcColorFactor\": () => (/* binding */ SrcColorFactor),\n/* harmony export */   \"StaticCopyUsage\": () => (/* binding */ StaticCopyUsage),\n/* harmony export */   \"StaticDrawUsage\": () => (/* binding */ StaticDrawUsage),\n/* harmony export */   \"StaticReadUsage\": () => (/* binding */ StaticReadUsage),\n/* harmony export */   \"StereoCamera\": () => (/* binding */ StereoCamera),\n/* harmony export */   \"StreamCopyUsage\": () => (/* binding */ StreamCopyUsage),\n/* harmony export */   \"StreamDrawUsage\": () => (/* binding */ StreamDrawUsage),\n/* harmony export */   \"StreamReadUsage\": () => (/* binding */ StreamReadUsage),\n/* harmony export */   \"StringKeyframeTrack\": () => (/* binding */ StringKeyframeTrack),\n/* harmony export */   \"SubtractEquation\": () => (/* binding */ SubtractEquation),\n/* harmony export */   \"SubtractiveBlending\": () => (/* binding */ SubtractiveBlending),\n/* harmony export */   \"TOUCH\": () => (/* binding */ TOUCH),\n/* harmony export */   \"TangentSpaceNormalMap\": () => (/* binding */ TangentSpaceNormalMap),\n/* harmony export */   \"TetrahedronBufferGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TetrahedronGeometry\": () => (/* binding */ TetrahedronGeometry),\n/* harmony export */   \"TextGeometry\": () => (/* binding */ TextGeometry),\n/* harmony export */   \"Texture\": () => (/* binding */ Texture),\n/* harmony export */   \"TextureLoader\": () => (/* binding */ TextureLoader),\n/* harmony export */   \"TorusBufferGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusGeometry\": () => (/* binding */ TorusGeometry),\n/* harmony export */   \"TorusKnotBufferGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"TorusKnotGeometry\": () => (/* binding */ TorusKnotGeometry),\n/* harmony export */   \"Triangle\": () => (/* binding */ Triangle),\n/* harmony export */   \"TriangleFanDrawMode\": () => (/* binding */ TriangleFanDrawMode),\n/* harmony export */   \"TriangleStripDrawMode\": () => (/* binding */ TriangleStripDrawMode),\n/* harmony export */   \"TrianglesDrawMode\": () => (/* binding */ TrianglesDrawMode),\n/* harmony export */   \"TubeBufferGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"TubeGeometry\": () => (/* binding */ TubeGeometry),\n/* harmony export */   \"UVMapping\": () => (/* binding */ UVMapping),\n/* harmony export */   \"Uint16Attribute\": () => (/* binding */ Uint16Attribute),\n/* harmony export */   \"Uint16BufferAttribute\": () => (/* binding */ Uint16BufferAttribute),\n/* harmony export */   \"Uint32Attribute\": () => (/* binding */ Uint32Attribute),\n/* harmony export */   \"Uint32BufferAttribute\": () => (/* binding */ Uint32BufferAttribute),\n/* harmony export */   \"Uint8Attribute\": () => (/* binding */ Uint8Attribute),\n/* harmony export */   \"Uint8BufferAttribute\": () => (/* binding */ Uint8BufferAttribute),\n/* harmony export */   \"Uint8ClampedAttribute\": () => (/* binding */ Uint8ClampedAttribute),\n/* harmony export */   \"Uint8ClampedBufferAttribute\": () => (/* binding */ Uint8ClampedBufferAttribute),\n/* harmony export */   \"Uniform\": () => (/* binding */ Uniform),\n/* harmony export */   \"UniformsLib\": () => (/* binding */ UniformsLib),\n/* harmony export */   \"UniformsUtils\": () => (/* binding */ UniformsUtils),\n/* harmony export */   \"UnsignedByteType\": () => (/* binding */ UnsignedByteType),\n/* harmony export */   \"UnsignedInt248Type\": () => (/* binding */ UnsignedInt248Type),\n/* harmony export */   \"UnsignedIntType\": () => (/* binding */ UnsignedIntType),\n/* harmony export */   \"UnsignedShort4444Type\": () => (/* binding */ UnsignedShort4444Type),\n/* harmony export */   \"UnsignedShort5551Type\": () => (/* binding */ UnsignedShort5551Type),\n/* harmony export */   \"UnsignedShort565Type\": () => (/* binding */ UnsignedShort565Type),\n/* harmony export */   \"UnsignedShortType\": () => (/* binding */ UnsignedShortType),\n/* harmony export */   \"VSMShadowMap\": () => (/* binding */ VSMShadowMap),\n/* harmony export */   \"Vector2\": () => (/* binding */ Vector2),\n/* harmony export */   \"Vector3\": () => (/* binding */ Vector3),\n/* harmony export */   \"Vector4\": () => (/* binding */ Vector4),\n/* harmony export */   \"VectorKeyframeTrack\": () => (/* binding */ VectorKeyframeTrack),\n/* harmony export */   \"Vertex\": () => (/* binding */ Vertex),\n/* harmony export */   \"VertexColors\": () => (/* binding */ VertexColors),\n/* harmony export */   \"VideoTexture\": () => (/* binding */ VideoTexture),\n/* harmony export */   \"WebGL1Renderer\": () => (/* binding */ WebGL1Renderer),\n/* harmony export */   \"WebGLCubeRenderTarget\": () => (/* binding */ WebGLCubeRenderTarget),\n/* harmony export */   \"WebGLMultipleRenderTargets\": () => (/* binding */ WebGLMultipleRenderTargets),\n/* harmony export */   \"WebGLMultisampleRenderTarget\": () => (/* binding */ WebGLMultisampleRenderTarget),\n/* harmony export */   \"WebGLRenderTarget\": () => (/* binding */ WebGLRenderTarget),\n/* harmony export */   \"WebGLRenderTargetCube\": () => (/* binding */ WebGLRenderTargetCube),\n/* harmony export */   \"WebGLRenderer\": () => (/* binding */ WebGLRenderer),\n/* harmony export */   \"WebGLUtils\": () => (/* binding */ WebGLUtils),\n/* harmony export */   \"WireframeGeometry\": () => (/* binding */ WireframeGeometry),\n/* harmony export */   \"WireframeHelper\": () => (/* binding */ WireframeHelper),\n/* harmony export */   \"WrapAroundEnding\": () => (/* binding */ WrapAroundEnding),\n/* harmony export */   \"XHRLoader\": () => (/* binding */ XHRLoader),\n/* harmony export */   \"ZeroCurvatureEnding\": () => (/* binding */ ZeroCurvatureEnding),\n/* harmony export */   \"ZeroFactor\": () => (/* binding */ ZeroFactor),\n/* harmony export */   \"ZeroSlopeEnding\": () => (/* binding */ ZeroSlopeEnding),\n/* harmony export */   \"ZeroStencilOp\": () => (/* binding */ ZeroStencilOp),\n/* harmony export */   \"sRGBEncoding\": () => (/* binding */ sRGBEncoding)\n/* harmony export */ });\nfunction _typeof(obj){\"@babel/helpers - typeof\";return _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(obj){return typeof obj;}:function(obj){return obj&&\"function\"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;},_typeof(obj);}var _ENCODINGS;function asyncGeneratorStep(gen,resolve,reject,_next,_throw,key,arg){try{var info=gen[key](arg);var value=info.value;}catch(error){reject(error);return;}if(info.done){resolve(value);}else{Promise.resolve(value).then(_next,_throw);}}function _asyncToGenerator(fn){return function(){var self=this,args=arguments;return new Promise(function(resolve,reject){var gen=fn.apply(self,args);function _next(value){asyncGeneratorStep(gen,resolve,reject,_next,_throw,\"next\",value);}function _throw(err){asyncGeneratorStep(gen,resolve,reject,_next,_throw,\"throw\",err);}_next(undefined);});};}function _createForOfIteratorHelper(o,allowArrayLike){var it=typeof Symbol!==\"undefined\"&&o[Symbol.iterator]||o[\"@@iterator\"];if(!it){if(Array.isArray(o)||(it=_unsupportedIterableToArray(o))||allowArrayLike&&o&&typeof o.length===\"number\"){if(it)o=it;var i=0;var F=function F(){};return{s:F,n:function n(){if(i>=o.length)return{done:true};return{done:false,value:o[i++]};},e:function e(_e2){throw _e2;},f:F};}throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}var normalCompletion=true,didErr=false,err;return{s:function s(){it=it.call(o);},n:function n(){var step=it.next();normalCompletion=step.done;return step;},e:function e(_e3){didErr=true;err=_e3;},f:function f(){try{if(!normalCompletion&&it[\"return\"]!=null)it[\"return\"]();}finally{if(didErr)throw err;}}};}function _slicedToArray(arr,i){return _arrayWithHoles(arr)||_iterableToArrayLimit(arr,i)||_unsupportedIterableToArray(arr,i)||_nonIterableRest();}function _nonIterableRest(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");}function _unsupportedIterableToArray(o,minLen){if(!o)return;if(typeof o===\"string\")return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);if(n===\"Object\"&&o.constructor)n=o.constructor.name;if(n===\"Map\"||n===\"Set\")return Array.from(o);if(n===\"Arguments\"||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen);}function _arrayLikeToArray(arr,len){if(len==null||len>arr.length)len=arr.length;for(var i=0,arr2=new Array(len);i<len;i++){arr2[i]=arr[i];}return arr2;}function _iterableToArrayLimit(arr,i){var _i=arr==null?null:typeof Symbol!==\"undefined\"&&arr[Symbol.iterator]||arr[\"@@iterator\"];if(_i==null)return;var _arr=[];var _n=true;var _d=false;var _s,_e;try{for(_i=_i.call(arr);!(_n=(_s=_i.next()).done);_n=true){_arr.push(_s.value);if(i&&_arr.length===i)break;}}catch(err){_d=true;_e=err;}finally{try{if(!_n&&_i[\"return\"]!=null)_i[\"return\"]();}finally{if(_d)throw _e;}}return _arr;}function _arrayWithHoles(arr){if(Array.isArray(arr))return arr;}function _get(){if(typeof Reflect!==\"undefined\"&&Reflect.get){_get=Reflect.get;}else{_get=function _get(target,property,receiver){var base=_superPropBase(target,property);if(!base)return;var desc=Object.getOwnPropertyDescriptor(base,property);if(desc.get){return desc.get.call(arguments.length<3?target:receiver);}return desc.value;};}return _get.apply(this,arguments);}function _superPropBase(object,property){while(!Object.prototype.hasOwnProperty.call(object,property)){object=_getPrototypeOf(object);if(object===null)break;}return object;}function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function\");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});Object.defineProperty(subClass,\"prototype\",{writable:false});if(superClass)_setPrototypeOf(subClass,superClass);}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _possibleConstructorReturn(self,call){if(call&&(_typeof(call)===\"object\"||typeof call===\"function\")){return call;}else if(call!==void 0){throw new TypeError(\"Derived constructors may only return object or undefined\");}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return self;}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);Object.defineProperty(Constructor,\"prototype\",{writable:false});return Constructor;}/**\r\n * @license\r\n * Copyright 2010-2021 Three.js Authors\r\n * SPDX-License-Identifier: MIT\r\n */var REVISION='133';var MOUSE={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2};var TOUCH={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3};var CullFaceNone=0;var CullFaceBack=1;var CullFaceFront=2;var CullFaceFrontBack=3;var BasicShadowMap=0;var PCFShadowMap=1;var PCFSoftShadowMap=2;var VSMShadowMap=3;var FrontSide=0;var BackSide=1;var DoubleSide=2;var FlatShading=1;var SmoothShading=2;var NoBlending=0;var NormalBlending=1;var AdditiveBlending=2;var SubtractiveBlending=3;var MultiplyBlending=4;var CustomBlending=5;var AddEquation=100;var SubtractEquation=101;var ReverseSubtractEquation=102;var MinEquation=103;var MaxEquation=104;var ZeroFactor=200;var OneFactor=201;var SrcColorFactor=202;var OneMinusSrcColorFactor=203;var SrcAlphaFactor=204;var OneMinusSrcAlphaFactor=205;var DstAlphaFactor=206;var OneMinusDstAlphaFactor=207;var DstColorFactor=208;var OneMinusDstColorFactor=209;var SrcAlphaSaturateFactor=210;var NeverDepth=0;var AlwaysDepth=1;var LessDepth=2;var LessEqualDepth=3;var EqualDepth=4;var GreaterEqualDepth=5;var GreaterDepth=6;var NotEqualDepth=7;var MultiplyOperation=0;var MixOperation=1;var AddOperation=2;var NoToneMapping=0;var LinearToneMapping=1;var ReinhardToneMapping=2;var CineonToneMapping=3;var ACESFilmicToneMapping=4;var CustomToneMapping=5;var UVMapping=300;var CubeReflectionMapping=301;var CubeRefractionMapping=302;var EquirectangularReflectionMapping=303;var EquirectangularRefractionMapping=304;var CubeUVReflectionMapping=306;var CubeUVRefractionMapping=307;var RepeatWrapping=1000;var ClampToEdgeWrapping=1001;var MirroredRepeatWrapping=1002;var NearestFilter=1003;var NearestMipmapNearestFilter=1004;var NearestMipMapNearestFilter=1004;var NearestMipmapLinearFilter=1005;var NearestMipMapLinearFilter=1005;var LinearFilter=1006;var LinearMipmapNearestFilter=1007;var LinearMipMapNearestFilter=1007;var LinearMipmapLinearFilter=1008;var LinearMipMapLinearFilter=1008;var UnsignedByteType=1009;var ByteType=1010;var ShortType=1011;var UnsignedShortType=1012;var IntType=1013;var UnsignedIntType=1014;var FloatType=1015;var HalfFloatType=1016;var UnsignedShort4444Type=1017;var UnsignedShort5551Type=1018;var UnsignedShort565Type=1019;var UnsignedInt248Type=1020;var AlphaFormat=1021;var RGBFormat=1022;var RGBAFormat=1023;var LuminanceFormat=1024;var LuminanceAlphaFormat=1025;var RGBEFormat=RGBAFormat;var DepthFormat=1026;var DepthStencilFormat=1027;var RedFormat=1028;var RedIntegerFormat=1029;var RGFormat=1030;var RGIntegerFormat=1031;var RGBIntegerFormat=1032;var RGBAIntegerFormat=1033;var RGB_S3TC_DXT1_Format=33776;var RGBA_S3TC_DXT1_Format=33777;var RGBA_S3TC_DXT3_Format=33778;var RGBA_S3TC_DXT5_Format=33779;var RGB_PVRTC_4BPPV1_Format=35840;var RGB_PVRTC_2BPPV1_Format=35841;var RGBA_PVRTC_4BPPV1_Format=35842;var RGBA_PVRTC_2BPPV1_Format=35843;var RGB_ETC1_Format=36196;var RGB_ETC2_Format=37492;var RGBA_ETC2_EAC_Format=37496;var RGBA_ASTC_4x4_Format=37808;var RGBA_ASTC_5x4_Format=37809;var RGBA_ASTC_5x5_Format=37810;var RGBA_ASTC_6x5_Format=37811;var RGBA_ASTC_6x6_Format=37812;var RGBA_ASTC_8x5_Format=37813;var RGBA_ASTC_8x6_Format=37814;var RGBA_ASTC_8x8_Format=37815;var RGBA_ASTC_10x5_Format=37816;var RGBA_ASTC_10x6_Format=37817;var RGBA_ASTC_10x8_Format=37818;var RGBA_ASTC_10x10_Format=37819;var RGBA_ASTC_12x10_Format=37820;var RGBA_ASTC_12x12_Format=37821;var RGBA_BPTC_Format=36492;var SRGB8_ALPHA8_ASTC_4x4_Format=37840;var SRGB8_ALPHA8_ASTC_5x4_Format=37841;var SRGB8_ALPHA8_ASTC_5x5_Format=37842;var SRGB8_ALPHA8_ASTC_6x5_Format=37843;var SRGB8_ALPHA8_ASTC_6x6_Format=37844;var SRGB8_ALPHA8_ASTC_8x5_Format=37845;var SRGB8_ALPHA8_ASTC_8x6_Format=37846;var SRGB8_ALPHA8_ASTC_8x8_Format=37847;var SRGB8_ALPHA8_ASTC_10x5_Format=37848;var SRGB8_ALPHA8_ASTC_10x6_Format=37849;var SRGB8_ALPHA8_ASTC_10x8_Format=37850;var SRGB8_ALPHA8_ASTC_10x10_Format=37851;var SRGB8_ALPHA8_ASTC_12x10_Format=37852;var SRGB8_ALPHA8_ASTC_12x12_Format=37853;var LoopOnce=2200;var LoopRepeat=2201;var LoopPingPong=2202;var InterpolateDiscrete=2300;var InterpolateLinear=2301;var InterpolateSmooth=2302;var ZeroCurvatureEnding=2400;var ZeroSlopeEnding=2401;var WrapAroundEnding=2402;var NormalAnimationBlendMode=2500;var AdditiveAnimationBlendMode=2501;var TrianglesDrawMode=0;var TriangleStripDrawMode=1;var TriangleFanDrawMode=2;var LinearEncoding=3000;var sRGBEncoding=3001;var GammaEncoding=3007;var RGBEEncoding=3002;var LogLuvEncoding=3003;var RGBM7Encoding=3004;var RGBM16Encoding=3005;var RGBDEncoding=3006;var BasicDepthPacking=3200;var RGBADepthPacking=3201;var TangentSpaceNormalMap=0;var ObjectSpaceNormalMap=1;var ZeroStencilOp=0;var KeepStencilOp=7680;var ReplaceStencilOp=7681;var IncrementStencilOp=7682;var DecrementStencilOp=7683;var IncrementWrapStencilOp=34055;var DecrementWrapStencilOp=34056;var InvertStencilOp=5386;var NeverStencilFunc=512;var LessStencilFunc=513;var EqualStencilFunc=514;var LessEqualStencilFunc=515;var GreaterStencilFunc=516;var NotEqualStencilFunc=517;var GreaterEqualStencilFunc=518;var AlwaysStencilFunc=519;var StaticDrawUsage=35044;var DynamicDrawUsage=35048;var StreamDrawUsage=35040;var StaticReadUsage=35045;var DynamicReadUsage=35049;var StreamReadUsage=35041;var StaticCopyUsage=35046;var DynamicCopyUsage=35050;var StreamCopyUsage=35042;var GLSL1='100';var GLSL3='300 es';/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */var EventDispatcher=/*#__PURE__*/function(){function EventDispatcher(){_classCallCheck(this,EventDispatcher);}_createClass(EventDispatcher,[{key:\"addEventListener\",value:function addEventListener(type,listener){if(this._listeners===undefined)this._listeners={};var listeners=this._listeners;if(listeners[type]===undefined){listeners[type]=[];}if(listeners[type].indexOf(listener)===-1){listeners[type].push(listener);}}},{key:\"hasEventListener\",value:function hasEventListener(type,listener){if(this._listeners===undefined)return false;var listeners=this._listeners;return listeners[type]!==undefined&&listeners[type].indexOf(listener)!==-1;}},{key:\"removeEventListener\",value:function removeEventListener(type,listener){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[type];if(listenerArray!==undefined){var index=listenerArray.indexOf(listener);if(index!==-1){listenerArray.splice(index,1);}}}},{key:\"dispatchEvent\",value:function dispatchEvent(event){if(this._listeners===undefined)return;var listeners=this._listeners;var listenerArray=listeners[event.type];if(listenerArray!==undefined){event.target=this;// Make a copy, in case listeners are removed while iterating.\nvar array=listenerArray.slice(0);for(var i=0,l=array.length;i<l;i++){array[i].call(this,event);}event.target=null;}}}]);return EventDispatcher;}();var _seed=1234567;var DEG2RAD=Math.PI/180;var RAD2DEG=180/Math.PI;//\nvar _lut=[];for(var i=0;i<256;i++){_lut[i]=(i<16?'0':'')+i.toString(16);}var hasRandomUUID=typeof crypto!=='undefined'&&'randomUUID'in crypto;function generateUUID(){if(hasRandomUUID){return crypto.randomUUID().toUpperCase();}// TODO Remove this code when crypto.randomUUID() is available everywhere\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nvar d0=Math.random()*0xffffffff|0;var d1=Math.random()*0xffffffff|0;var d2=Math.random()*0xffffffff|0;var d3=Math.random()*0xffffffff|0;var uuid=_lut[d0&0xff]+_lut[d0>>8&0xff]+_lut[d0>>16&0xff]+_lut[d0>>24&0xff]+'-'+_lut[d1&0xff]+_lut[d1>>8&0xff]+'-'+_lut[d1>>16&0x0f|0x40]+_lut[d1>>24&0xff]+'-'+_lut[d2&0x3f|0x80]+_lut[d2>>8&0xff]+'-'+_lut[d2>>16&0xff]+_lut[d2>>24&0xff]+_lut[d3&0xff]+_lut[d3>>8&0xff]+_lut[d3>>16&0xff]+_lut[d3>>24&0xff];// .toUpperCase() here flattens concatenated strings to save heap memory space.\nreturn uuid.toUpperCase();}function clamp(value,min,max){return Math.max(min,Math.min(max,value));}// compute euclidian modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo(n,m){return(n%m+m)%m;}// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear(x,a1,a2,b1,b2){return b1+(x-a1)*(b2-b1)/(a2-a1);}// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp(x,y,value){if(x!==y){return(value-x)/(y-x);}else{return 0;}}// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp(x,y,t){return(1-t)*x+t*y;}// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp(x,y,lambda,dt){return lerp(x,y,1-Math.exp(-lambda*dt));}// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong(x){var length=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;return length-Math.abs(euclideanModulo(x,length*2)-length);}// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*(3-2*x);}function smootherstep(x,min,max){if(x<=min)return 0;if(x>=max)return 1;x=(x-min)/(max-min);return x*x*x*(x*(x*6-15)+10);}// Random integer from <low, high> interval\nfunction randInt(low,high){return low+Math.floor(Math.random()*(high-low+1));}// Random float from <low, high> interval\nfunction randFloat(low,high){return low+Math.random()*(high-low);}// Random float from <-range/2, range/2> interval\nfunction randFloatSpread(range){return range*(0.5-Math.random());}// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom(s){if(s!==undefined)_seed=s%2147483647;// Park-Miller algorithm\n_seed=_seed*16807%2147483647;return(_seed-1)/2147483646;}function degToRad(degrees){return degrees*DEG2RAD;}function radToDeg(radians){return radians*RAD2DEG;}function isPowerOfTwo(value){return(value&value-1)===0&&value!==0;}function ceilPowerOfTwo(value){return Math.pow(2,Math.ceil(Math.log(value)/Math.LN2));}function floorPowerOfTwo(value){return Math.pow(2,Math.floor(Math.log(value)/Math.LN2));}function setQuaternionFromProperEuler(q,a,b,c,order){// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n// rotations are applied to the axes in the order specified by 'order'\n// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n// angles are in radians\nvar cos=Math.cos;var sin=Math.sin;var c2=cos(b/2);var s2=sin(b/2);var c13=cos((a+c)/2);var s13=sin((a+c)/2);var c1_3=cos((a-c)/2);var s1_3=sin((a-c)/2);var c3_1=cos((c-a)/2);var s3_1=sin((c-a)/2);switch(order){case'XYX':q.set(c2*s13,s2*c1_3,s2*s1_3,c2*c13);break;case'YZY':q.set(s2*s1_3,c2*s13,s2*c1_3,c2*c13);break;case'ZXZ':q.set(s2*c1_3,s2*s1_3,c2*s13,c2*c13);break;case'XZX':q.set(c2*s13,s2*s3_1,s2*c3_1,c2*c13);break;case'YXY':q.set(s2*c3_1,c2*s13,s2*s3_1,c2*c13);break;case'ZYZ':q.set(s2*s3_1,s2*c3_1,c2*s13,c2*c13);break;default:console.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: '+order);}}var MathUtils=/*#__PURE__*/Object.freeze({__proto__:null,DEG2RAD:DEG2RAD,RAD2DEG:RAD2DEG,generateUUID:generateUUID,clamp:clamp,euclideanModulo:euclideanModulo,mapLinear:mapLinear,inverseLerp:inverseLerp,lerp:lerp,damp:damp,pingpong:pingpong,smoothstep:smoothstep,smootherstep:smootherstep,randInt:randInt,randFloat:randFloat,randFloatSpread:randFloatSpread,seededRandom:seededRandom,degToRad:degToRad,radToDeg:radToDeg,isPowerOfTwo:isPowerOfTwo,ceilPowerOfTwo:ceilPowerOfTwo,floorPowerOfTwo:floorPowerOfTwo,setQuaternionFromProperEuler:setQuaternionFromProperEuler});var Vector2=/*#__PURE__*/function(_Symbol$iterator){function Vector2(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,Vector2);this.x=x;this.y=y;}_createClass(Vector2,[{key:\"width\",get:function get(){return this.x;},set:function set(value){this.x=value;}},{key:\"height\",get:function get(){return this.y;},set:function set(value){this.y=value;}},{key:\"set\",value:function set(x,y){this.x=x;this.y=y;return this;}},{key:\"setScalar\",value:function setScalar(scalar){this.x=scalar;this.y=scalar;return this;}},{key:\"setX\",value:function setX(x){this.x=x;return this;}},{key:\"setY\",value:function setY(y){this.y=y;return this;}},{key:\"setComponent\",value:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;default:throw new Error('index is out of range: '+index);}return this;}},{key:\"getComponent\",value:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;default:throw new Error('index is out of range: '+index);}}},{key:\"clone\",value:function clone(){return new this.constructor(this.x,this.y);}},{key:\"copy\",value:function copy(v){this.x=v.x;this.y=v.y;return this;}},{key:\"add\",value:function add(v,w){if(w!==undefined){console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;return this;}},{key:\"addScalar\",value:function addScalar(s){this.x+=s;this.y+=s;return this;}},{key:\"addVectors\",value:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this;}},{key:\"addScaledVector\",value:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;return this;}},{key:\"sub\",value:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;return this;}},{key:\"subScalar\",value:function subScalar(s){this.x-=s;this.y-=s;return this;}},{key:\"subVectors\",value:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this;}},{key:\"multiply\",value:function multiply(v){this.x*=v.x;this.y*=v.y;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;return this;}},{key:\"divide\",value:function divide(v){this.x/=v.x;this.y/=v.y;return this;}},{key:\"divideScalar\",value:function divideScalar(scalar){return this.multiplyScalar(1/scalar);}},{key:\"applyMatrix3\",value:function applyMatrix3(m){var x=this.x,y=this.y;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6];this.y=e[1]*x+e[4]*y+e[7];return this;}},{key:\"min\",value:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);return this;}},{key:\"max\",value:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);return this;}},{key:\"clamp\",value:function clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));return this;}},{key:\"clampScalar\",value:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));return this;}},{key:\"clampLength\",value:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}},{key:\"floor\",value:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);return this;}},{key:\"ceil\",value:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);return this;}},{key:\"round\",value:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);return this;}},{key:\"roundToZero\",value:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);return this;}},{key:\"negate\",value:function negate(){this.x=-this.x;this.y=-this.y;return this;}},{key:\"dot\",value:function dot(v){return this.x*v.x+this.y*v.y;}},{key:\"cross\",value:function cross(v){return this.x*v.y-this.y*v.x;}},{key:\"lengthSq\",value:function lengthSq(){return this.x*this.x+this.y*this.y;}},{key:\"length\",value:function length(){return Math.sqrt(this.x*this.x+this.y*this.y);}},{key:\"manhattanLength\",value:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y);}},{key:\"normalize\",value:function normalize(){return this.divideScalar(this.length()||1);}},{key:\"angle\",value:function angle(){// computes the angle in radians with respect to the positive x-axis\nvar angle=Math.atan2(-this.y,-this.x)+Math.PI;return angle;}},{key:\"distanceTo\",value:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}},{key:\"distanceToSquared\",value:function distanceToSquared(v){var dx=this.x-v.x,dy=this.y-v.y;return dx*dx+dy*dy;}},{key:\"manhattanDistanceTo\",value:function manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y);}},{key:\"setLength\",value:function setLength(length){return this.normalize().multiplyScalar(length);}},{key:\"lerp\",value:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;return this;}},{key:\"lerpVectors\",value:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;return this;}},{key:\"equals\",value:function equals(v){return v.x===this.x&&v.y===this.y;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.x=array[offset];this.y=array[offset+1];return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this.x;array[offset+1]=this.y;return array;}},{key:\"fromBufferAttribute\",value:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);return this;}},{key:\"rotateAround\",value:function rotateAround(center,angle){var c=Math.cos(angle),s=Math.sin(angle);var x=this.x-center.x;var y=this.y-center.y;this.x=x*c-y*s+center.x;this.y=x*s+y*c+center.y;return this;}},{key:\"random\",value:function random(){this.x=Math.random();this.y=Math.random();return this;}},{key:_Symbol$iterator,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return this.x;case 2:_context2.next=4;return this.y;case 4:case\"end\":return _context2.stop();}}},value,this);})}]);return Vector2;}(Symbol.iterator);Vector2.prototype.isVector2=true;var Matrix3=/*#__PURE__*/function(){function Matrix3(){_classCallCheck(this,Matrix3);this.elements=[1,0,0,0,1,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');}}_createClass(Matrix3,[{key:\"set\",value:function set(n11,n12,n13,n21,n22,n23,n31,n32,n33){var te=this.elements;te[0]=n11;te[1]=n21;te[2]=n31;te[3]=n12;te[4]=n22;te[5]=n32;te[6]=n13;te[7]=n23;te[8]=n33;return this;}},{key:\"identity\",value:function identity(){this.set(1,0,0,0,1,0,0,0,1);return this;}},{key:\"copy\",value:function copy(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];return this;}},{key:\"extractBasis\",value:function extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrix3Column(this,0);yAxis.setFromMatrix3Column(this,1);zAxis.setFromMatrix3Column(this,2);return this;}},{key:\"setFromMatrix4\",value:function setFromMatrix4(m){var me=m.elements;this.set(me[0],me[4],me[8],me[1],me[5],me[9],me[2],me[6],me[10]);return this;}},{key:\"multiply\",value:function multiply(m){return this.multiplyMatrices(this,m);}},{key:\"premultiply\",value:function premultiply(m){return this.multiplyMatrices(m,this);}},{key:\"multiplyMatrices\",value:function multiplyMatrices(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[3],a13=ae[6];var a21=ae[1],a22=ae[4],a23=ae[7];var a31=ae[2],a32=ae[5],a33=ae[8];var b11=be[0],b12=be[3],b13=be[6];var b21=be[1],b22=be[4],b23=be[7];var b31=be[2],b32=be[5],b33=be[8];te[0]=a11*b11+a12*b21+a13*b31;te[3]=a11*b12+a12*b22+a13*b32;te[6]=a11*b13+a12*b23+a13*b33;te[1]=a21*b11+a22*b21+a23*b31;te[4]=a21*b12+a22*b22+a23*b32;te[7]=a21*b13+a22*b23+a23*b33;te[2]=a31*b11+a32*b21+a33*b31;te[5]=a31*b12+a32*b22+a33*b32;te[8]=a31*b13+a32*b23+a33*b33;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[3]*=s;te[6]*=s;te[1]*=s;te[4]*=s;te[7]*=s;te[2]*=s;te[5]*=s;te[8]*=s;return this;}},{key:\"determinant\",value:function determinant(){var te=this.elements;var a=te[0],b=te[1],c=te[2],d=te[3],e=te[4],f=te[5],g=te[6],h=te[7],i=te[8];return a*e*i-a*f*h-b*d*i+b*f*g+c*d*h-c*e*g;}},{key:\"invert\",value:function invert(){var te=this.elements,n11=te[0],n21=te[1],n31=te[2],n12=te[3],n22=te[4],n32=te[5],n13=te[6],n23=te[7],n33=te[8],t11=n33*n22-n32*n23,t12=n32*n13-n33*n12,t13=n23*n12-n22*n13,det=n11*t11+n21*t12+n31*t13;if(det===0)return this.set(0,0,0,0,0,0,0,0,0);var detInv=1/det;te[0]=t11*detInv;te[1]=(n31*n23-n33*n21)*detInv;te[2]=(n32*n21-n31*n22)*detInv;te[3]=t12*detInv;te[4]=(n33*n11-n31*n13)*detInv;te[5]=(n31*n12-n32*n11)*detInv;te[6]=t13*detInv;te[7]=(n21*n13-n23*n11)*detInv;te[8]=(n22*n11-n21*n12)*detInv;return this;}},{key:\"transpose\",value:function transpose(){var tmp;var m=this.elements;tmp=m[1];m[1]=m[3];m[3]=tmp;tmp=m[2];m[2]=m[6];m[6]=tmp;tmp=m[5];m[5]=m[7];m[7]=tmp;return this;}},{key:\"getNormalMatrix\",value:function getNormalMatrix(matrix4){return this.setFromMatrix4(matrix4).invert().transpose();}},{key:\"transposeIntoArray\",value:function transposeIntoArray(r){var m=this.elements;r[0]=m[0];r[1]=m[3];r[2]=m[6];r[3]=m[1];r[4]=m[4];r[5]=m[7];r[6]=m[2];r[7]=m[5];r[8]=m[8];return this;}},{key:\"setUvTransform\",value:function setUvTransform(tx,ty,sx,sy,rotation,cx,cy){var c=Math.cos(rotation);var s=Math.sin(rotation);this.set(sx*c,sx*s,-sx*(c*cx+s*cy)+cx+tx,-sy*s,sy*c,-sy*(-s*cx+c*cy)+cy+ty,0,0,1);return this;}},{key:\"scale\",value:function scale(sx,sy){var te=this.elements;te[0]*=sx;te[3]*=sx;te[6]*=sx;te[1]*=sy;te[4]*=sy;te[7]*=sy;return this;}},{key:\"rotate\",value:function rotate(theta){var c=Math.cos(theta);var s=Math.sin(theta);var te=this.elements;var a11=te[0],a12=te[3],a13=te[6];var a21=te[1],a22=te[4],a23=te[7];te[0]=c*a11+s*a21;te[3]=c*a12+s*a22;te[6]=c*a13+s*a23;te[1]=-s*a11+c*a21;te[4]=-s*a12+c*a22;te[7]=-s*a13+c*a23;return this;}},{key:\"translate\",value:function translate(tx,ty){var te=this.elements;te[0]+=tx*te[2];te[3]+=tx*te[5];te[6]+=tx*te[8];te[1]+=ty*te[2];te[4]+=ty*te[5];te[7]+=ty*te[8];return this;}},{key:\"equals\",value:function equals(matrix){var te=this.elements;var me=matrix.elements;for(var _i=0;_i<9;_i++){if(te[_i]!==me[_i])return false;}return true;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;for(var _i2=0;_i2<9;_i2++){this.elements[_i2]=array[_i2+offset];}return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];return array;}},{key:\"clone\",value:function clone(){return new this.constructor().fromArray(this.elements);}}]);return Matrix3;}();Matrix3.prototype.isMatrix3=true;function arrayMax(array){if(array.length===0)return-Infinity;var max=array[0];for(var _i3=1,l=array.length;_i3<l;++_i3){if(array[_i3]>max)max=array[_i3];}return max;}var TYPED_ARRAYS={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:Uint8ClampedArray,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function getTypedArray(type,buffer){return new TYPED_ARRAYS[type](buffer);}function createElementNS(name){return document.createElementNS('http://www.w3.org/1999/xhtml',name);}var _canvas;var ImageUtils=/*#__PURE__*/function(){function ImageUtils(){_classCallCheck(this,ImageUtils);}_createClass(ImageUtils,null,[{key:\"getDataURL\",value:function getDataURL(image){if(/^data:/i.test(image.src)){return image.src;}if(typeof HTMLCanvasElement=='undefined'){return image.src;}var canvas;if(image instanceof HTMLCanvasElement){canvas=image;}else{if(_canvas===undefined)_canvas=createElementNS('canvas');_canvas.width=image.width;_canvas.height=image.height;var context=_canvas.getContext('2d');if(image instanceof ImageData){context.putImageData(image,0,0);}else{context.drawImage(image,0,0,image.width,image.height);}canvas=_canvas;}if(canvas.width>2048||canvas.height>2048){console.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons',image);return canvas.toDataURL('image/jpeg',0.6);}else{return canvas.toDataURL('image/png');}}}]);return ImageUtils;}();var textureId=0;var Texture=/*#__PURE__*/function(_EventDispatcher){_inherits(Texture,_EventDispatcher);var _super=_createSuper(Texture);function Texture(){var _this2;var image=arguments.length>0&&arguments[0]!==undefined?arguments[0]:Texture.DEFAULT_IMAGE;var mapping=arguments.length>1&&arguments[1]!==undefined?arguments[1]:Texture.DEFAULT_MAPPING;var wrapS=arguments.length>2&&arguments[2]!==undefined?arguments[2]:ClampToEdgeWrapping;var wrapT=arguments.length>3&&arguments[3]!==undefined?arguments[3]:ClampToEdgeWrapping;var magFilter=arguments.length>4&&arguments[4]!==undefined?arguments[4]:LinearFilter;var minFilter=arguments.length>5&&arguments[5]!==undefined?arguments[5]:LinearMipmapLinearFilter;var format=arguments.length>6&&arguments[6]!==undefined?arguments[6]:RGBAFormat;var type=arguments.length>7&&arguments[7]!==undefined?arguments[7]:UnsignedByteType;var anisotropy=arguments.length>8&&arguments[8]!==undefined?arguments[8]:1;var encoding=arguments.length>9&&arguments[9]!==undefined?arguments[9]:LinearEncoding;_classCallCheck(this,Texture);_this2=_super.call(this);Object.defineProperty(_assertThisInitialized(_this2),'id',{value:textureId++});_this2.uuid=generateUUID();_this2.name='';_this2.image=image;_this2.mipmaps=[];_this2.mapping=mapping;_this2.wrapS=wrapS;_this2.wrapT=wrapT;_this2.magFilter=magFilter;_this2.minFilter=minFilter;_this2.anisotropy=anisotropy;_this2.format=format;_this2.internalFormat=null;_this2.type=type;_this2.offset=new Vector2(0,0);_this2.repeat=new Vector2(1,1);_this2.center=new Vector2(0,0);_this2.rotation=0;_this2.matrixAutoUpdate=true;_this2.matrix=new Matrix3();_this2.generateMipmaps=true;_this2.premultiplyAlpha=false;_this2.flipY=true;_this2.unpackAlignment=4;// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n//\n// Also changing the encoding after already used by a Material will not automatically make the Material\n// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n_this2.encoding=encoding;_this2.version=0;_this2.onUpdate=null;_this2.isRenderTargetTexture=false;return _this2;}_createClass(Texture,[{key:\"updateMatrix\",value:function updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(source){this.name=source.name;this.image=source.image;this.mipmaps=source.mipmaps.slice(0);this.mapping=source.mapping;this.wrapS=source.wrapS;this.wrapT=source.wrapT;this.magFilter=source.magFilter;this.minFilter=source.minFilter;this.anisotropy=source.anisotropy;this.format=source.format;this.internalFormat=source.internalFormat;this.type=source.type;this.offset.copy(source.offset);this.repeat.copy(source.repeat);this.center.copy(source.center);this.rotation=source.rotation;this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrix.copy(source.matrix);this.generateMipmaps=source.generateMipmaps;this.premultiplyAlpha=source.premultiplyAlpha;this.flipY=source.flipY;this.unpackAlignment=source.unpackAlignment;this.encoding=source.encoding;return this;}},{key:\"toJSON\",value:function toJSON(meta){var isRootObject=meta===undefined||typeof meta==='string';if(!isRootObject&&meta.textures[this.uuid]!==undefined){return meta.textures[this.uuid];}var output={metadata:{version:4.5,type:'Texture',generator:'Texture.toJSON'},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(this.image!==undefined){// TODO: Move to THREE.Image\nvar image=this.image;if(image.uuid===undefined){image.uuid=generateUUID();// UGH\n}if(!isRootObject&&meta.images[image.uuid]===undefined){var url;if(Array.isArray(image)){// process array of images e.g. CubeTexture\nurl=[];for(var _i4=0,l=image.length;_i4<l;_i4++){// check cube texture with data textures\nif(image[_i4].isDataTexture){url.push(serializeImage(image[_i4].image));}else{url.push(serializeImage(image[_i4]));}}}else{// process single image\nurl=serializeImage(image);}meta.images[image.uuid]={uuid:image.uuid,url:url};}output.image=image.uuid;}if(!isRootObject){meta.textures[this.uuid]=output;}return output;}},{key:\"dispose\",value:function dispose(){this.dispatchEvent({type:'dispose'});}},{key:\"transformUv\",value:function transformUv(uv){if(this.mapping!==UVMapping)return uv;uv.applyMatrix3(this.matrix);if(uv.x<0||uv.x>1){switch(this.wrapS){case RepeatWrapping:uv.x=uv.x-Math.floor(uv.x);break;case ClampToEdgeWrapping:uv.x=uv.x<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.x)%2)===1){uv.x=Math.ceil(uv.x)-uv.x;}else{uv.x=uv.x-Math.floor(uv.x);}break;}}if(uv.y<0||uv.y>1){switch(this.wrapT){case RepeatWrapping:uv.y=uv.y-Math.floor(uv.y);break;case ClampToEdgeWrapping:uv.y=uv.y<0?0:1;break;case MirroredRepeatWrapping:if(Math.abs(Math.floor(uv.y)%2)===1){uv.y=Math.ceil(uv.y)-uv.y;}else{uv.y=uv.y-Math.floor(uv.y);}break;}}if(this.flipY){uv.y=1-uv.y;}return uv;}},{key:\"needsUpdate\",set:function set(value){if(value===true)this.version++;}}]);return Texture;}(EventDispatcher);Texture.DEFAULT_IMAGE=undefined;Texture.DEFAULT_MAPPING=UVMapping;Texture.prototype.isTexture=true;function serializeImage(image){if(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){// default images\nreturn ImageUtils.getDataURL(image);}else{if(image.data){// images of DataTexture\nreturn{data:Array.prototype.slice.call(image.data),width:image.width,height:image.height,type:image.data.constructor.name};}else{console.warn('THREE.Texture: Unable to serialize Texture.');return{};}}}var Vector4=/*#__PURE__*/function(_Symbol$iterator2){function Vector4(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var z=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var w=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,Vector4);this.x=x;this.y=y;this.z=z;this.w=w;}_createClass(Vector4,[{key:\"width\",get:function get(){return this.z;},set:function set(value){this.z=value;}},{key:\"height\",get:function get(){return this.w;},set:function set(value){this.w=value;}},{key:\"set\",value:function set(x,y,z,w){this.x=x;this.y=y;this.z=z;this.w=w;return this;}},{key:\"setScalar\",value:function setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;this.w=scalar;return this;}},{key:\"setX\",value:function setX(x){this.x=x;return this;}},{key:\"setY\",value:function setY(y){this.y=y;return this;}},{key:\"setZ\",value:function setZ(z){this.z=z;return this;}},{key:\"setW\",value:function setW(w){this.w=w;return this;}},{key:\"setComponent\",value:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;case 3:this.w=value;break;default:throw new Error('index is out of range: '+index);}return this;}},{key:\"getComponent\",value:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error('index is out of range: '+index);}}},{key:\"clone\",value:function clone(){return new this.constructor(this.x,this.y,this.z,this.w);}},{key:\"copy\",value:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;this.w=v.w!==undefined?v.w:1;return this;}},{key:\"add\",value:function add(v,w){if(w!==undefined){console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;this.w+=v.w;return this;}},{key:\"addScalar\",value:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;this.w+=s;return this;}},{key:\"addVectors\",value:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this;}},{key:\"addScaledVector\",value:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;this.w+=v.w*s;return this;}},{key:\"sub\",value:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;this.w-=v.w;return this;}},{key:\"subScalar\",value:function subScalar(s){this.x-=s;this.y-=s;this.z-=s;this.w-=s;return this;}},{key:\"subVectors\",value:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this;}},{key:\"multiply\",value:function multiply(v){this.x*=v.x;this.y*=v.y;this.z*=v.z;this.w*=v.w;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;this.w*=scalar;return this;}},{key:\"applyMatrix4\",value:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z,w=this.w;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z+e[12]*w;this.y=e[1]*x+e[5]*y+e[9]*z+e[13]*w;this.z=e[2]*x+e[6]*y+e[10]*z+e[14]*w;this.w=e[3]*x+e[7]*y+e[11]*z+e[15]*w;return this;}},{key:\"divideScalar\",value:function divideScalar(scalar){return this.multiplyScalar(1/scalar);}},{key:\"setAxisAngleFromQuaternion\",value:function setAxisAngleFromQuaternion(q){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n// q is assumed to be normalized\nthis.w=2*Math.acos(q.w);var s=Math.sqrt(1-q.w*q.w);if(s<0.0001){this.x=1;this.y=0;this.z=0;}else{this.x=q.x/s;this.y=q.y/s;this.z=q.z/s;}return this;}},{key:\"setAxisAngleFromRotationMatrix\",value:function setAxisAngleFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar angle,x,y,z;// variables for result\nvar epsilon=0.01,// margin to allow for rounding errors\nepsilon2=0.1,// margin to distinguish between 0 and 180 degrees\nte=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10];if(Math.abs(m12-m21)<epsilon&&Math.abs(m13-m31)<epsilon&&Math.abs(m23-m32)<epsilon){// singularity found\n// first check for identity matrix which must have +1 for all terms\n// in leading diagonal and zero in other terms\nif(Math.abs(m12+m21)<epsilon2&&Math.abs(m13+m31)<epsilon2&&Math.abs(m23+m32)<epsilon2&&Math.abs(m11+m22+m33-3)<epsilon2){// this singularity is identity matrix so angle = 0\nthis.set(1,0,0,0);return this;// zero angle, arbitrary axis\n}// otherwise this singularity is angle = 180\nangle=Math.PI;var xx=(m11+1)/2;var yy=(m22+1)/2;var zz=(m33+1)/2;var xy=(m12+m21)/4;var xz=(m13+m31)/4;var yz=(m23+m32)/4;if(xx>yy&&xx>zz){// m11 is the largest diagonal term\nif(xx<epsilon){x=0;y=0.707106781;z=0.707106781;}else{x=Math.sqrt(xx);y=xy/x;z=xz/x;}}else if(yy>zz){// m22 is the largest diagonal term\nif(yy<epsilon){x=0.707106781;y=0;z=0.707106781;}else{y=Math.sqrt(yy);x=xy/y;z=yz/y;}}else{// m33 is the largest diagonal term so base result on this\nif(zz<epsilon){x=0.707106781;y=0.707106781;z=0;}else{z=Math.sqrt(zz);x=xz/z;y=yz/z;}}this.set(x,y,z,angle);return this;// return 180 deg rotation\n}// as we have reached here there are no singularities so we can handle normally\nvar s=Math.sqrt((m32-m23)*(m32-m23)+(m13-m31)*(m13-m31)+(m21-m12)*(m21-m12));// used to normalize\nif(Math.abs(s)<0.001)s=1;// prevent divide by zero, should not happen if matrix is orthogonal and should be\n// caught by singularity test above, but I've left it in just in case\nthis.x=(m32-m23)/s;this.y=(m13-m31)/s;this.z=(m21-m12)/s;this.w=Math.acos((m11+m22+m33-1)/2);return this;}},{key:\"min\",value:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);this.w=Math.min(this.w,v.w);return this;}},{key:\"max\",value:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);this.w=Math.max(this.w,v.w);return this;}},{key:\"clamp\",value:function clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));this.w=Math.max(min.w,Math.min(max.w,this.w));return this;}},{key:\"clampScalar\",value:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));this.w=Math.max(minVal,Math.min(maxVal,this.w));return this;}},{key:\"clampLength\",value:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}},{key:\"floor\",value:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);this.w=Math.floor(this.w);return this;}},{key:\"ceil\",value:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);this.w=Math.ceil(this.w);return this;}},{key:\"round\",value:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);this.w=Math.round(this.w);return this;}},{key:\"roundToZero\",value:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w);return this;}},{key:\"negate\",value:function negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;this.w=-this.w;return this;}},{key:\"dot\",value:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z+this.w*v.w;}},{key:\"lengthSq\",value:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w;}},{key:\"length\",value:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);}},{key:\"manhattanLength\",value:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w);}},{key:\"normalize\",value:function normalize(){return this.divideScalar(this.length()||1);}},{key:\"setLength\",value:function setLength(length){return this.normalize().multiplyScalar(length);}},{key:\"lerp\",value:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;this.w+=(v.w-this.w)*alpha;return this;}},{key:\"lerpVectors\",value:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;this.w=v1.w+(v2.w-v1.w)*alpha;return this;}},{key:\"equals\",value:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z&&v.w===this.w;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];this.w=array[offset+3];return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;array[offset+3]=this.w;return array;}},{key:\"fromBufferAttribute\",value:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);this.w=attribute.getW(index);return this;}},{key:\"random\",value:function random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();this.w=Math.random();return this;}},{key:_Symbol$iterator2,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return this.x;case 2:_context3.next=4;return this.y;case 4:_context3.next=6;return this.z;case 6:_context3.next=8;return this.w;case 8:case\"end\":return _context3.stop();}}},value,this);})}]);return Vector4;}(Symbol.iterator);Vector4.prototype.isVector4=true;/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/var WebGLRenderTarget=/*#__PURE__*/function(_EventDispatcher2){_inherits(WebGLRenderTarget,_EventDispatcher2);var _super2=_createSuper(WebGLRenderTarget);function WebGLRenderTarget(width,height){var _this3;var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};_classCallCheck(this,WebGLRenderTarget);_this3=_super2.call(this);_this3.width=width;_this3.height=height;_this3.depth=1;_this3.scissor=new Vector4(0,0,width,height);_this3.scissorTest=false;_this3.viewport=new Vector4(0,0,width,height);_this3.texture=new Texture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);_this3.texture.isRenderTargetTexture=true;_this3.texture.image={width:width,height:height,depth:1};_this3.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;_this3.texture.internalFormat=options.internalFormat!==undefined?options.internalFormat:null;_this3.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;_this3.depthBuffer=options.depthBuffer!==undefined?options.depthBuffer:true;_this3.stencilBuffer=options.stencilBuffer!==undefined?options.stencilBuffer:false;_this3.depthTexture=options.depthTexture!==undefined?options.depthTexture:null;return _this3;}_createClass(WebGLRenderTarget,[{key:\"setTexture\",value:function setTexture(texture){texture.image={width:this.width,height:this.height,depth:this.depth};this.texture=texture;}},{key:\"setSize\",value:function setSize(width,height){var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;this.texture.image.width=width;this.texture.image.height=height;this.texture.image.depth=depth;this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(source){this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.copy(source.viewport);this.texture=source.texture.clone();this.texture.image=_objectSpread({},this.texture.image);// See #20328.\nthis.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;return this;}},{key:\"dispose\",value:function dispose(){this.dispatchEvent({type:'dispose'});}}]);return WebGLRenderTarget;}(EventDispatcher);WebGLRenderTarget.prototype.isWebGLRenderTarget=true;var WebGLMultipleRenderTargets=/*#__PURE__*/function(_WebGLRenderTarget){_inherits(WebGLMultipleRenderTargets,_WebGLRenderTarget);var _super3=_createSuper(WebGLMultipleRenderTargets);function WebGLMultipleRenderTargets(width,height,count){var _this4;_classCallCheck(this,WebGLMultipleRenderTargets);_this4=_super3.call(this,width,height);var texture=_this4.texture;_this4.texture=[];for(var _i5=0;_i5<count;_i5++){_this4.texture[_i5]=texture.clone();}return _this4;}_createClass(WebGLMultipleRenderTargets,[{key:\"setSize\",value:function setSize(width,height){var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;if(this.width!==width||this.height!==height||this.depth!==depth){this.width=width;this.height=height;this.depth=depth;for(var _i6=0,il=this.texture.length;_i6<il;_i6++){this.texture[_i6].image.width=width;this.texture[_i6].image.height=height;this.texture[_i6].image.depth=depth;}this.dispose();}this.viewport.set(0,0,width,height);this.scissor.set(0,0,width,height);return this;}},{key:\"copy\",value:function copy(source){this.dispose();this.width=source.width;this.height=source.height;this.depth=source.depth;this.viewport.set(0,0,this.width,this.height);this.scissor.set(0,0,this.width,this.height);this.depthBuffer=source.depthBuffer;this.stencilBuffer=source.stencilBuffer;this.depthTexture=source.depthTexture;this.texture.length=0;for(var _i7=0,il=source.texture.length;_i7<il;_i7++){this.texture[_i7]=source.texture[_i7].clone();}return this;}}]);return WebGLMultipleRenderTargets;}(WebGLRenderTarget);WebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets=true;var WebGLMultisampleRenderTarget=/*#__PURE__*/function(_WebGLRenderTarget2){_inherits(WebGLMultisampleRenderTarget,_WebGLRenderTarget2);var _super4=_createSuper(WebGLMultisampleRenderTarget);function WebGLMultisampleRenderTarget(width,height,options){var _this5;_classCallCheck(this,WebGLMultisampleRenderTarget);_this5=_super4.call(this,width,height,options);_this5.samples=4;return _this5;}_createClass(WebGLMultisampleRenderTarget,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(WebGLMultisampleRenderTarget.prototype),\"copy\",this).call(this,source);this.samples=source.samples;return this;}}]);return WebGLMultisampleRenderTarget;}(WebGLRenderTarget);WebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget=true;var Quaternion=/*#__PURE__*/function(){function Quaternion(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var z=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var w=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,Quaternion);this._x=x;this._y=y;this._z=z;this._w=w;}_createClass(Quaternion,[{key:\"x\",get:function get(){return this._x;},set:function set(value){this._x=value;this._onChangeCallback();}},{key:\"y\",get:function get(){return this._y;},set:function set(value){this._y=value;this._onChangeCallback();}},{key:\"z\",get:function get(){return this._z;},set:function set(value){this._z=value;this._onChangeCallback();}},{key:\"w\",get:function get(){return this._w;},set:function set(value){this._w=value;this._onChangeCallback();}},{key:\"set\",value:function set(x,y,z,w){this._x=x;this._y=y;this._z=z;this._w=w;this._onChangeCallback();return this;}},{key:\"clone\",value:function clone(){return new this.constructor(this._x,this._y,this._z,this._w);}},{key:\"copy\",value:function copy(quaternion){this._x=quaternion.x;this._y=quaternion.y;this._z=quaternion.z;this._w=quaternion.w;this._onChangeCallback();return this;}},{key:\"setFromEuler\",value:function setFromEuler(euler,update){if(!(euler&&euler.isEuler)){throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');}var x=euler._x,y=euler._y,z=euler._z,order=euler._order;// http://www.mathworks.com/matlabcentral/fileexchange/\n// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n//\tcontent/SpinCalc.m\nvar cos=Math.cos;var sin=Math.sin;var c1=cos(x/2);var c2=cos(y/2);var c3=cos(z/2);var s1=sin(x/2);var s2=sin(y/2);var s3=sin(z/2);switch(order){case'XYZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'YXZ':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'ZXY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'ZYX':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;case'YZX':this._x=s1*c2*c3+c1*s2*s3;this._y=c1*s2*c3+s1*c2*s3;this._z=c1*c2*s3-s1*s2*c3;this._w=c1*c2*c3-s1*s2*s3;break;case'XZY':this._x=s1*c2*c3-c1*s2*s3;this._y=c1*s2*c3-s1*c2*s3;this._z=c1*c2*s3+s1*s2*c3;this._w=c1*c2*c3+s1*s2*s3;break;default:console.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: '+order);}if(update!==false)this._onChangeCallback();return this;}},{key:\"setFromAxisAngle\",value:function setFromAxisAngle(axis,angle){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n// assumes axis is normalized\nvar halfAngle=angle/2,s=Math.sin(halfAngle);this._x=axis.x*s;this._y=axis.y*s;this._z=axis.z*s;this._w=Math.cos(halfAngle);this._onChangeCallback();return this;}},{key:\"setFromRotationMatrix\",value:function setFromRotationMatrix(m){// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar te=m.elements,m11=te[0],m12=te[4],m13=te[8],m21=te[1],m22=te[5],m23=te[9],m31=te[2],m32=te[6],m33=te[10],trace=m11+m22+m33;if(trace>0){var s=0.5/Math.sqrt(trace+1.0);this._w=0.25/s;this._x=(m32-m23)*s;this._y=(m13-m31)*s;this._z=(m21-m12)*s;}else if(m11>m22&&m11>m33){var _s=2.0*Math.sqrt(1.0+m11-m22-m33);this._w=(m32-m23)/_s;this._x=0.25*_s;this._y=(m12+m21)/_s;this._z=(m13+m31)/_s;}else if(m22>m33){var _s2=2.0*Math.sqrt(1.0+m22-m11-m33);this._w=(m13-m31)/_s2;this._x=(m12+m21)/_s2;this._y=0.25*_s2;this._z=(m23+m32)/_s2;}else{var _s3=2.0*Math.sqrt(1.0+m33-m11-m22);this._w=(m21-m12)/_s3;this._x=(m13+m31)/_s3;this._y=(m23+m32)/_s3;this._z=0.25*_s3;}this._onChangeCallback();return this;}},{key:\"setFromUnitVectors\",value:function setFromUnitVectors(vFrom,vTo){// assumes direction vectors vFrom and vTo are normalized\nvar r=vFrom.dot(vTo)+1;if(r<Number.EPSILON){// vFrom and vTo point in opposite directions\nr=0;if(Math.abs(vFrom.x)>Math.abs(vFrom.z)){this._x=-vFrom.y;this._y=vFrom.x;this._z=0;this._w=r;}else{this._x=0;this._y=-vFrom.z;this._z=vFrom.y;this._w=r;}}else{// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\nthis._x=vFrom.y*vTo.z-vFrom.z*vTo.y;this._y=vFrom.z*vTo.x-vFrom.x*vTo.z;this._z=vFrom.x*vTo.y-vFrom.y*vTo.x;this._w=r;}return this.normalize();}},{key:\"angleTo\",value:function angleTo(q){return 2*Math.acos(Math.abs(clamp(this.dot(q),-1,1)));}},{key:\"rotateTowards\",value:function rotateTowards(q,step){var angle=this.angleTo(q);if(angle===0)return this;var t=Math.min(1,step/angle);this.slerp(q,t);return this;}},{key:\"identity\",value:function identity(){return this.set(0,0,0,1);}},{key:\"invert\",value:function invert(){// quaternion is assumed to have unit length\nreturn this.conjugate();}},{key:\"conjugate\",value:function conjugate(){this._x*=-1;this._y*=-1;this._z*=-1;this._onChangeCallback();return this;}},{key:\"dot\",value:function dot(v){return this._x*v._x+this._y*v._y+this._z*v._z+this._w*v._w;}},{key:\"lengthSq\",value:function lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w;}},{key:\"length\",value:function length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w);}},{key:\"normalize\",value:function normalize(){var l=this.length();if(l===0){this._x=0;this._y=0;this._z=0;this._w=1;}else{l=1/l;this._x=this._x*l;this._y=this._y*l;this._z=this._z*l;this._w=this._w*l;}this._onChangeCallback();return this;}},{key:\"multiply\",value:function multiply(q,p){if(p!==undefined){console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');return this.multiplyQuaternions(q,p);}return this.multiplyQuaternions(this,q);}},{key:\"premultiply\",value:function premultiply(q){return this.multiplyQuaternions(q,this);}},{key:\"multiplyQuaternions\",value:function multiplyQuaternions(a,b){// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\nvar qax=a._x,qay=a._y,qaz=a._z,qaw=a._w;var qbx=b._x,qby=b._y,qbz=b._z,qbw=b._w;this._x=qax*qbw+qaw*qbx+qay*qbz-qaz*qby;this._y=qay*qbw+qaw*qby+qaz*qbx-qax*qbz;this._z=qaz*qbw+qaw*qbz+qax*qby-qay*qbx;this._w=qaw*qbw-qax*qbx-qay*qby-qaz*qbz;this._onChangeCallback();return this;}},{key:\"slerp\",value:function slerp(qb,t){if(t===0)return this;if(t===1)return this.copy(qb);var x=this._x,y=this._y,z=this._z,w=this._w;// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\nvar cosHalfTheta=w*qb._w+x*qb._x+y*qb._y+z*qb._z;if(cosHalfTheta<0){this._w=-qb._w;this._x=-qb._x;this._y=-qb._y;this._z=-qb._z;cosHalfTheta=-cosHalfTheta;}else{this.copy(qb);}if(cosHalfTheta>=1.0){this._w=w;this._x=x;this._y=y;this._z=z;return this;}var sqrSinHalfTheta=1.0-cosHalfTheta*cosHalfTheta;if(sqrSinHalfTheta<=Number.EPSILON){var s=1-t;this._w=s*w+t*this._w;this._x=s*x+t*this._x;this._y=s*y+t*this._y;this._z=s*z+t*this._z;this.normalize();this._onChangeCallback();return this;}var sinHalfTheta=Math.sqrt(sqrSinHalfTheta);var halfTheta=Math.atan2(sinHalfTheta,cosHalfTheta);var ratioA=Math.sin((1-t)*halfTheta)/sinHalfTheta,ratioB=Math.sin(t*halfTheta)/sinHalfTheta;this._w=w*ratioA+this._w*ratioB;this._x=x*ratioA+this._x*ratioB;this._y=y*ratioA+this._y*ratioB;this._z=z*ratioA+this._z*ratioB;this._onChangeCallback();return this;}},{key:\"slerpQuaternions\",value:function slerpQuaternions(qa,qb,t){this.copy(qa).slerp(qb,t);}},{key:\"random\",value:function random(){// Derived from http://planning.cs.uiuc.edu/node198.html\n// Note, this source uses w, x, y, z ordering,\n// so we swap the order below.\nvar u1=Math.random();var sqrt1u1=Math.sqrt(1-u1);var sqrtu1=Math.sqrt(u1);var u2=2*Math.PI*Math.random();var u3=2*Math.PI*Math.random();return this.set(sqrt1u1*Math.cos(u2),sqrtu1*Math.sin(u3),sqrtu1*Math.cos(u3),sqrt1u1*Math.sin(u2));}},{key:\"equals\",value:function equals(quaternion){return quaternion._x===this._x&&quaternion._y===this._y&&quaternion._z===this._z&&quaternion._w===this._w;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this._x=array[offset];this._y=array[offset+1];this._z=array[offset+2];this._w=array[offset+3];this._onChangeCallback();return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._w;return array;}},{key:\"fromBufferAttribute\",value:function fromBufferAttribute(attribute,index){this._x=attribute.getX(index);this._y=attribute.getY(index);this._z=attribute.getZ(index);this._w=attribute.getW(index);return this;}},{key:\"_onChange\",value:function _onChange(callback){this._onChangeCallback=callback;return this;}},{key:\"_onChangeCallback\",value:function _onChangeCallback(){}}],[{key:\"slerp\",value:function slerp(qa,qb,qm,t){console.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');return qm.slerpQuaternions(qa,qb,t);}},{key:\"slerpFlat\",value:function slerpFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1,t){// fuzz-free, array-based Quaternion SLERP operation\nvar x0=src0[srcOffset0+0],y0=src0[srcOffset0+1],z0=src0[srcOffset0+2],w0=src0[srcOffset0+3];var x1=src1[srcOffset1+0],y1=src1[srcOffset1+1],z1=src1[srcOffset1+2],w1=src1[srcOffset1+3];if(t===0){dst[dstOffset+0]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;return;}if(t===1){dst[dstOffset+0]=x1;dst[dstOffset+1]=y1;dst[dstOffset+2]=z1;dst[dstOffset+3]=w1;return;}if(w0!==w1||x0!==x1||y0!==y1||z0!==z1){var s=1-t;var cos=x0*x1+y0*y1+z0*z1+w0*w1,dir=cos>=0?1:-1,sqrSin=1-cos*cos;// Skip the Slerp for tiny steps to avoid numeric problems:\nif(sqrSin>Number.EPSILON){var sin=Math.sqrt(sqrSin),len=Math.atan2(sin,cos*dir);s=Math.sin(s*len)/sin;t=Math.sin(t*len)/sin;}var tDir=t*dir;x0=x0*s+x1*tDir;y0=y0*s+y1*tDir;z0=z0*s+z1*tDir;w0=w0*s+w1*tDir;// Normalize in case we just did a lerp:\nif(s===1-t){var f=1/Math.sqrt(x0*x0+y0*y0+z0*z0+w0*w0);x0*=f;y0*=f;z0*=f;w0*=f;}}dst[dstOffset]=x0;dst[dstOffset+1]=y0;dst[dstOffset+2]=z0;dst[dstOffset+3]=w0;}},{key:\"multiplyQuaternionsFlat\",value:function multiplyQuaternionsFlat(dst,dstOffset,src0,srcOffset0,src1,srcOffset1){var x0=src0[srcOffset0];var y0=src0[srcOffset0+1];var z0=src0[srcOffset0+2];var w0=src0[srcOffset0+3];var x1=src1[srcOffset1];var y1=src1[srcOffset1+1];var z1=src1[srcOffset1+2];var w1=src1[srcOffset1+3];dst[dstOffset]=x0*w1+w0*x1+y0*z1-z0*y1;dst[dstOffset+1]=y0*w1+w0*y1+z0*x1-x0*z1;dst[dstOffset+2]=z0*w1+w0*z1+x0*y1-y0*x1;dst[dstOffset+3]=w0*w1-x0*x1-y0*y1-z0*z1;return dst;}}]);return Quaternion;}();Quaternion.prototype.isQuaternion=true;var Vector3=/*#__PURE__*/function(_Symbol$iterator3){function Vector3(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var z=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;_classCallCheck(this,Vector3);this.x=x;this.y=y;this.z=z;}_createClass(Vector3,[{key:\"set\",value:function set(x,y,z){if(z===undefined)z=this.z;// sprite.scale.set(x,y)\nthis.x=x;this.y=y;this.z=z;return this;}},{key:\"setScalar\",value:function setScalar(scalar){this.x=scalar;this.y=scalar;this.z=scalar;return this;}},{key:\"setX\",value:function setX(x){this.x=x;return this;}},{key:\"setY\",value:function setY(y){this.y=y;return this;}},{key:\"setZ\",value:function setZ(z){this.z=z;return this;}},{key:\"setComponent\",value:function setComponent(index,value){switch(index){case 0:this.x=value;break;case 1:this.y=value;break;case 2:this.z=value;break;default:throw new Error('index is out of range: '+index);}return this;}},{key:\"getComponent\",value:function getComponent(index){switch(index){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error('index is out of range: '+index);}}},{key:\"clone\",value:function clone(){return new this.constructor(this.x,this.y,this.z);}},{key:\"copy\",value:function copy(v){this.x=v.x;this.y=v.y;this.z=v.z;return this;}},{key:\"add\",value:function add(v,w){if(w!==undefined){console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');return this.addVectors(v,w);}this.x+=v.x;this.y+=v.y;this.z+=v.z;return this;}},{key:\"addScalar\",value:function addScalar(s){this.x+=s;this.y+=s;this.z+=s;return this;}},{key:\"addVectors\",value:function addVectors(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this;}},{key:\"addScaledVector\",value:function addScaledVector(v,s){this.x+=v.x*s;this.y+=v.y*s;this.z+=v.z*s;return this;}},{key:\"sub\",value:function sub(v,w){if(w!==undefined){console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');return this.subVectors(v,w);}this.x-=v.x;this.y-=v.y;this.z-=v.z;return this;}},{key:\"subScalar\",value:function subScalar(s){this.x-=s;this.y-=s;this.z-=s;return this;}},{key:\"subVectors\",value:function subVectors(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this;}},{key:\"multiply\",value:function multiply(v,w){if(w!==undefined){console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');return this.multiplyVectors(v,w);}this.x*=v.x;this.y*=v.y;this.z*=v.z;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(scalar){this.x*=scalar;this.y*=scalar;this.z*=scalar;return this;}},{key:\"multiplyVectors\",value:function multiplyVectors(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this;}},{key:\"applyEuler\",value:function applyEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');}return this.applyQuaternion(_quaternion$4.setFromEuler(euler));}},{key:\"applyAxisAngle\",value:function applyAxisAngle(axis,angle){return this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis,angle));}},{key:\"applyMatrix3\",value:function applyMatrix3(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[3]*y+e[6]*z;this.y=e[1]*x+e[4]*y+e[7]*z;this.z=e[2]*x+e[5]*y+e[8]*z;return this;}},{key:\"applyNormalMatrix\",value:function applyNormalMatrix(m){return this.applyMatrix3(m).normalize();}},{key:\"applyMatrix4\",value:function applyMatrix4(m){var x=this.x,y=this.y,z=this.z;var e=m.elements;var w=1/(e[3]*x+e[7]*y+e[11]*z+e[15]);this.x=(e[0]*x+e[4]*y+e[8]*z+e[12])*w;this.y=(e[1]*x+e[5]*y+e[9]*z+e[13])*w;this.z=(e[2]*x+e[6]*y+e[10]*z+e[14])*w;return this;}},{key:\"applyQuaternion\",value:function applyQuaternion(q){var x=this.x,y=this.y,z=this.z;var qx=q.x,qy=q.y,qz=q.z,qw=q.w;// calculate quat * vector\nvar ix=qw*x+qy*z-qz*y;var iy=qw*y+qz*x-qx*z;var iz=qw*z+qx*y-qy*x;var iw=-qx*x-qy*y-qz*z;// calculate result * inverse quat\nthis.x=ix*qw+iw*-qx+iy*-qz-iz*-qy;this.y=iy*qw+iw*-qy+iz*-qx-ix*-qz;this.z=iz*qw+iw*-qz+ix*-qy-iy*-qx;return this;}},{key:\"project\",value:function project(camera){return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);}},{key:\"unproject\",value:function unproject(camera){return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);}},{key:\"transformDirection\",value:function transformDirection(m){// input: THREE.Matrix4 affine matrix\n// vector interpreted as a direction\nvar x=this.x,y=this.y,z=this.z;var e=m.elements;this.x=e[0]*x+e[4]*y+e[8]*z;this.y=e[1]*x+e[5]*y+e[9]*z;this.z=e[2]*x+e[6]*y+e[10]*z;return this.normalize();}},{key:\"divide\",value:function divide(v){this.x/=v.x;this.y/=v.y;this.z/=v.z;return this;}},{key:\"divideScalar\",value:function divideScalar(scalar){return this.multiplyScalar(1/scalar);}},{key:\"min\",value:function min(v){this.x=Math.min(this.x,v.x);this.y=Math.min(this.y,v.y);this.z=Math.min(this.z,v.z);return this;}},{key:\"max\",value:function max(v){this.x=Math.max(this.x,v.x);this.y=Math.max(this.y,v.y);this.z=Math.max(this.z,v.z);return this;}},{key:\"clamp\",value:function clamp(min,max){// assumes min < max, componentwise\nthis.x=Math.max(min.x,Math.min(max.x,this.x));this.y=Math.max(min.y,Math.min(max.y,this.y));this.z=Math.max(min.z,Math.min(max.z,this.z));return this;}},{key:\"clampScalar\",value:function clampScalar(minVal,maxVal){this.x=Math.max(minVal,Math.min(maxVal,this.x));this.y=Math.max(minVal,Math.min(maxVal,this.y));this.z=Math.max(minVal,Math.min(maxVal,this.z));return this;}},{key:\"clampLength\",value:function clampLength(min,max){var length=this.length();return this.divideScalar(length||1).multiplyScalar(Math.max(min,Math.min(max,length)));}},{key:\"floor\",value:function floor(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this;}},{key:\"ceil\",value:function ceil(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this;}},{key:\"round\",value:function round(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this;}},{key:\"roundToZero\",value:function roundToZero(){this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x);this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y);this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z);return this;}},{key:\"negate\",value:function negate(){this.x=-this.x;this.y=-this.y;this.z=-this.z;return this;}},{key:\"dot\",value:function dot(v){return this.x*v.x+this.y*v.y+this.z*v.z;}// TODO lengthSquared?\n},{key:\"lengthSq\",value:function lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z;}},{key:\"length\",value:function length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);}},{key:\"manhattanLength\",value:function manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z);}},{key:\"normalize\",value:function normalize(){return this.divideScalar(this.length()||1);}},{key:\"setLength\",value:function setLength(length){return this.normalize().multiplyScalar(length);}},{key:\"lerp\",value:function lerp(v,alpha){this.x+=(v.x-this.x)*alpha;this.y+=(v.y-this.y)*alpha;this.z+=(v.z-this.z)*alpha;return this;}},{key:\"lerpVectors\",value:function lerpVectors(v1,v2,alpha){this.x=v1.x+(v2.x-v1.x)*alpha;this.y=v1.y+(v2.y-v1.y)*alpha;this.z=v1.z+(v2.z-v1.z)*alpha;return this;}},{key:\"cross\",value:function cross(v,w){if(w!==undefined){console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');return this.crossVectors(v,w);}return this.crossVectors(this,v);}},{key:\"crossVectors\",value:function crossVectors(a,b){var ax=a.x,ay=a.y,az=a.z;var bx=b.x,by=b.y,bz=b.z;this.x=ay*bz-az*by;this.y=az*bx-ax*bz;this.z=ax*by-ay*bx;return this;}},{key:\"projectOnVector\",value:function projectOnVector(v){var denominator=v.lengthSq();if(denominator===0)return this.set(0,0,0);var scalar=v.dot(this)/denominator;return this.copy(v).multiplyScalar(scalar);}},{key:\"projectOnPlane\",value:function projectOnPlane(planeNormal){_vector$c.copy(this).projectOnVector(planeNormal);return this.sub(_vector$c);}},{key:\"reflect\",value:function reflect(normal){// reflect incident vector off plane orthogonal to normal\n// normal is assumed to have unit length\nreturn this.sub(_vector$c.copy(normal).multiplyScalar(2*this.dot(normal)));}},{key:\"angleTo\",value:function angleTo(v){var denominator=Math.sqrt(this.lengthSq()*v.lengthSq());if(denominator===0)return Math.PI/2;var theta=this.dot(v)/denominator;// clamp, to handle numerical problems\nreturn Math.acos(clamp(theta,-1,1));}},{key:\"distanceTo\",value:function distanceTo(v){return Math.sqrt(this.distanceToSquared(v));}},{key:\"distanceToSquared\",value:function distanceToSquared(v){var dx=this.x-v.x,dy=this.y-v.y,dz=this.z-v.z;return dx*dx+dy*dy+dz*dz;}},{key:\"manhattanDistanceTo\",value:function manhattanDistanceTo(v){return Math.abs(this.x-v.x)+Math.abs(this.y-v.y)+Math.abs(this.z-v.z);}},{key:\"setFromSpherical\",value:function setFromSpherical(s){return this.setFromSphericalCoords(s.radius,s.phi,s.theta);}},{key:\"setFromSphericalCoords\",value:function setFromSphericalCoords(radius,phi,theta){var sinPhiRadius=Math.sin(phi)*radius;this.x=sinPhiRadius*Math.sin(theta);this.y=Math.cos(phi)*radius;this.z=sinPhiRadius*Math.cos(theta);return this;}},{key:\"setFromCylindrical\",value:function setFromCylindrical(c){return this.setFromCylindricalCoords(c.radius,c.theta,c.y);}},{key:\"setFromCylindricalCoords\",value:function setFromCylindricalCoords(radius,theta,y){this.x=radius*Math.sin(theta);this.y=y;this.z=radius*Math.cos(theta);return this;}},{key:\"setFromMatrixPosition\",value:function setFromMatrixPosition(m){var e=m.elements;this.x=e[12];this.y=e[13];this.z=e[14];return this;}},{key:\"setFromMatrixScale\",value:function setFromMatrixScale(m){var sx=this.setFromMatrixColumn(m,0).length();var sy=this.setFromMatrixColumn(m,1).length();var sz=this.setFromMatrixColumn(m,2).length();this.x=sx;this.y=sy;this.z=sz;return this;}},{key:\"setFromMatrixColumn\",value:function setFromMatrixColumn(m,index){return this.fromArray(m.elements,index*4);}},{key:\"setFromMatrix3Column\",value:function setFromMatrix3Column(m,index){return this.fromArray(m.elements,index*3);}},{key:\"equals\",value:function equals(v){return v.x===this.x&&v.y===this.y&&v.z===this.z;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.x=array[offset];this.y=array[offset+1];this.z=array[offset+2];return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this.x;array[offset+1]=this.y;array[offset+2]=this.z;return array;}},{key:\"fromBufferAttribute\",value:function fromBufferAttribute(attribute,index,offset){if(offset!==undefined){console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');}this.x=attribute.getX(index);this.y=attribute.getY(index);this.z=attribute.getZ(index);return this;}},{key:\"random\",value:function random(){this.x=Math.random();this.y=Math.random();this.z=Math.random();return this;}},{key:\"randomDirection\",value:function randomDirection(){// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\nvar u=(Math.random()-0.5)*2;var t=Math.random()*Math.PI*2;var f=Math.sqrt(1-Math.pow(u,2));this.x=f*Math.cos(t);this.y=f*Math.sin(t);this.z=u;return this;}},{key:_Symbol$iterator3,value:/*#__PURE__*/regeneratorRuntime.mark(function value(){return regeneratorRuntime.wrap(function value$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return this.x;case 2:_context4.next=4;return this.y;case 4:_context4.next=6;return this.z;case 6:case\"end\":return _context4.stop();}}},value,this);})}]);return Vector3;}(Symbol.iterator);Vector3.prototype.isVector3=true;var _vector$c=/*@__PURE__*/new Vector3();var _quaternion$4=/*@__PURE__*/new Quaternion();var Box3=/*#__PURE__*/function(){function Box3(){var min=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3(+Infinity,+Infinity,+Infinity);var max=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3(-Infinity,-Infinity,-Infinity);_classCallCheck(this,Box3);this.min=min;this.max=max;}_createClass(Box3,[{key:\"set\",value:function set(min,max){this.min.copy(min);this.max.copy(max);return this;}},{key:\"setFromArray\",value:function setFromArray(array){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var _i8=0,l=array.length;_i8<l;_i8+=3){var x=array[_i8];var y=array[_i8+1];var z=array[_i8+2];if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}},{key:\"setFromBufferAttribute\",value:function setFromBufferAttribute(attribute){var minX=+Infinity;var minY=+Infinity;var minZ=+Infinity;var maxX=-Infinity;var maxY=-Infinity;var maxZ=-Infinity;for(var _i9=0,l=attribute.count;_i9<l;_i9++){var x=attribute.getX(_i9);var y=attribute.getY(_i9);var z=attribute.getZ(_i9);if(x<minX)minX=x;if(y<minY)minY=y;if(z<minZ)minZ=z;if(x>maxX)maxX=x;if(y>maxY)maxY=y;if(z>maxZ)maxZ=z;}this.min.set(minX,minY,minZ);this.max.set(maxX,maxY,maxZ);return this;}},{key:\"setFromPoints\",value:function setFromPoints(points){this.makeEmpty();for(var _i10=0,il=points.length;_i10<il;_i10++){this.expandByPoint(points[_i10]);}return this;}},{key:\"setFromCenterAndSize\",value:function setFromCenterAndSize(center,size){var halfSize=_vector$b.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}},{key:\"setFromObject\",value:function setFromObject(object){this.makeEmpty();return this.expandByObject(object);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}},{key:\"makeEmpty\",value:function makeEmpty(){this.min.x=this.min.y=this.min.z=+Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this;}},{key:\"isEmpty\",value:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z;}},{key:\"getCenter\",value:function getCenter(target){return this.isEmpty()?target.set(0,0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}},{key:\"getSize\",value:function getSize(target){return this.isEmpty()?target.set(0,0,0):target.subVectors(this.max,this.min);}},{key:\"expandByPoint\",value:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;}},{key:\"expandByVector\",value:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}},{key:\"expandByScalar\",value:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}},{key:\"expandByObject\",value:function expandByObject(object){// Computes the world-axis-aligned bounding box of an object (including its children),\n// accounting for both the object's, and children's, world transforms\nobject.updateWorldMatrix(false,false);var geometry=object.geometry;if(geometry!==undefined){if(geometry.boundingBox===null){geometry.computeBoundingBox();}_box$3.copy(geometry.boundingBox);_box$3.applyMatrix4(object.matrixWorld);this.union(_box$3);}var children=object.children;for(var _i11=0,l=children.length;_i11<l;_i11++){this.expandByObject(children[_i11]);}return this;}},{key:\"containsPoint\",value:function containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y||point.z<this.min.z||point.z>this.max.z?false:true;}},{key:\"containsBox\",value:function containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y&&this.min.z<=box.min.z&&box.max.z<=this.max.z;}},{key:\"getParameter\",value:function getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nreturn target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y),(point.z-this.min.z)/(this.max.z-this.min.z));}},{key:\"intersectsBox\",value:function intersectsBox(box){// using 6 splitting planes to rule out intersections.\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y||box.max.z<this.min.z||box.min.z>this.max.z?false:true;}},{key:\"intersectsSphere\",value:function intersectsSphere(sphere){// Find the point on the AABB closest to the sphere center.\nthis.clampPoint(sphere.center,_vector$b);// If that point is inside the sphere, the AABB and sphere intersect.\nreturn _vector$b.distanceToSquared(sphere.center)<=sphere.radius*sphere.radius;}},{key:\"intersectsPlane\",value:function intersectsPlane(plane){// We compute the minimum and maximum dot product values. If those values\n// are on the same side (back or front) of the plane, then there is no intersection.\nvar min,max;if(plane.normal.x>0){min=plane.normal.x*this.min.x;max=plane.normal.x*this.max.x;}else{min=plane.normal.x*this.max.x;max=plane.normal.x*this.min.x;}if(plane.normal.y>0){min+=plane.normal.y*this.min.y;max+=plane.normal.y*this.max.y;}else{min+=plane.normal.y*this.max.y;max+=plane.normal.y*this.min.y;}if(plane.normal.z>0){min+=plane.normal.z*this.min.z;max+=plane.normal.z*this.max.z;}else{min+=plane.normal.z*this.max.z;max+=plane.normal.z*this.min.z;}return min<=-plane.constant&&max>=-plane.constant;}},{key:\"intersectsTriangle\",value:function intersectsTriangle(triangle){if(this.isEmpty()){return false;}// compute box center and extents\nthis.getCenter(_center);_extents.subVectors(this.max,_center);// translate triangle to aabb origin\n_v0$2.subVectors(triangle.a,_center);_v1$7.subVectors(triangle.b,_center);_v2$3.subVectors(triangle.c,_center);// compute edge vectors for triangle\n_f0.subVectors(_v1$7,_v0$2);_f1.subVectors(_v2$3,_v1$7);_f2.subVectors(_v0$2,_v2$3);// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\nvar axes=[0,-_f0.z,_f0.y,0,-_f1.z,_f1.y,0,-_f2.z,_f2.y,_f0.z,0,-_f0.x,_f1.z,0,-_f1.x,_f2.z,0,-_f2.x,-_f0.y,_f0.x,0,-_f1.y,_f1.x,0,-_f2.y,_f2.x,0];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// test 3 face normals from the aabb\naxes=[1,0,0,0,1,0,0,0,1];if(!satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents)){return false;}// finally testing the face normal of the triangle\n// use already existing triangle edge vectors here\n_triangleNormal.crossVectors(_f0,_f1);axes=[_triangleNormal.x,_triangleNormal.y,_triangleNormal.z];return satForAxes(axes,_v0$2,_v1$7,_v2$3,_extents);}},{key:\"clampPoint\",value:function clampPoint(point,target){return target.copy(point).clamp(this.min,this.max);}},{key:\"distanceToPoint\",value:function distanceToPoint(point){var clampedPoint=_vector$b.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}},{key:\"getBoundingSphere\",value:function getBoundingSphere(target){this.getCenter(target.center);target.radius=this.getSize(_vector$b).length()*0.5;return target;}},{key:\"intersect\",value:function intersect(box){this.min.max(box.min);this.max.min(box.max);// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\nif(this.isEmpty())this.makeEmpty();return this;}},{key:\"union\",value:function union(box){this.min.min(box.min);this.max.max(box.max);return this;}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix){// transform of empty box is an empty box.\nif(this.isEmpty())return this;// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n_points[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(matrix);// 000\n_points[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(matrix);// 001\n_points[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(matrix);// 010\n_points[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(matrix);// 011\n_points[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(matrix);// 100\n_points[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(matrix);// 101\n_points[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(matrix);// 110\n_points[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(matrix);// 111\nthis.setFromPoints(_points);return this;}},{key:\"translate\",value:function translate(offset){this.min.add(offset);this.max.add(offset);return this;}},{key:\"equals\",value:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}]);return Box3;}();Box3.prototype.isBox3=true;var _points=[/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3(),/*@__PURE__*/new Vector3()];var _vector$b=/*@__PURE__*/new Vector3();var _box$3=/*@__PURE__*/new Box3();// triangle centered vertices\nvar _v0$2=/*@__PURE__*/new Vector3();var _v1$7=/*@__PURE__*/new Vector3();var _v2$3=/*@__PURE__*/new Vector3();// triangle edge vectors\nvar _f0=/*@__PURE__*/new Vector3();var _f1=/*@__PURE__*/new Vector3();var _f2=/*@__PURE__*/new Vector3();var _center=/*@__PURE__*/new Vector3();var _extents=/*@__PURE__*/new Vector3();var _triangleNormal=/*@__PURE__*/new Vector3();var _testAxis=/*@__PURE__*/new Vector3();function satForAxes(axes,v0,v1,v2,extents){for(var _i12=0,j=axes.length-3;_i12<=j;_i12+=3){_testAxis.fromArray(axes,_i12);// project the aabb onto the seperating axis\nvar r=extents.x*Math.abs(_testAxis.x)+extents.y*Math.abs(_testAxis.y)+extents.z*Math.abs(_testAxis.z);// project all 3 vertices of the triangle onto the seperating axis\nvar p0=v0.dot(_testAxis);var p1=v1.dot(_testAxis);var p2=v2.dot(_testAxis);// actual test, basically see if either of the most extreme of the triangle points intersects r\nif(Math.max(-Math.max(p0,p1,p2),Math.min(p0,p1,p2))>r){// points of the projected triangle are outside the projected half-length of the aabb\n// the axis is seperating and we can exit\nreturn false;}}return true;}var _box$2=/*@__PURE__*/new Box3();var _v1$6=/*@__PURE__*/new Vector3();var _toFarthestPoint=/*@__PURE__*/new Vector3();var _toPoint=/*@__PURE__*/new Vector3();var Sphere=/*#__PURE__*/function(){function Sphere(){var center=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var radius=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;_classCallCheck(this,Sphere);this.center=center;this.radius=radius;}_createClass(Sphere,[{key:\"set\",value:function set(center,radius){this.center.copy(center);this.radius=radius;return this;}},{key:\"setFromPoints\",value:function setFromPoints(points,optionalCenter){var center=this.center;if(optionalCenter!==undefined){center.copy(optionalCenter);}else{_box$2.setFromPoints(points).getCenter(center);}var maxRadiusSq=0;for(var _i13=0,il=points.length;_i13<il;_i13++){maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(points[_i13]));}this.radius=Math.sqrt(maxRadiusSq);return this;}},{key:\"copy\",value:function copy(sphere){this.center.copy(sphere.center);this.radius=sphere.radius;return this;}},{key:\"isEmpty\",value:function isEmpty(){return this.radius<0;}},{key:\"makeEmpty\",value:function makeEmpty(){this.center.set(0,0,0);this.radius=-1;return this;}},{key:\"containsPoint\",value:function containsPoint(point){return point.distanceToSquared(this.center)<=this.radius*this.radius;}},{key:\"distanceToPoint\",value:function distanceToPoint(point){return point.distanceTo(this.center)-this.radius;}},{key:\"intersectsSphere\",value:function intersectsSphere(sphere){var radiusSum=this.radius+sphere.radius;return sphere.center.distanceToSquared(this.center)<=radiusSum*radiusSum;}},{key:\"intersectsBox\",value:function intersectsBox(box){return box.intersectsSphere(this);}},{key:\"intersectsPlane\",value:function intersectsPlane(plane){return Math.abs(plane.distanceToPoint(this.center))<=this.radius;}},{key:\"clampPoint\",value:function clampPoint(point,target){var deltaLengthSq=this.center.distanceToSquared(point);target.copy(point);if(deltaLengthSq>this.radius*this.radius){target.sub(this.center).normalize();target.multiplyScalar(this.radius).add(this.center);}return target;}},{key:\"getBoundingBox\",value:function getBoundingBox(target){if(this.isEmpty()){// Empty sphere produces empty bounding box\ntarget.makeEmpty();return target;}target.set(this.center,this.center);target.expandByScalar(this.radius);return target;}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix){this.center.applyMatrix4(matrix);this.radius=this.radius*matrix.getMaxScaleOnAxis();return this;}},{key:\"translate\",value:function translate(offset){this.center.add(offset);return this;}},{key:\"expandByPoint\",value:function expandByPoint(point){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n_toPoint.subVectors(point,this.center);var lengthSq=_toPoint.lengthSq();if(lengthSq>this.radius*this.radius){var length=Math.sqrt(lengthSq);var missingRadiusHalf=(length-this.radius)*0.5;// Nudge this sphere towards the target point. Add half the missing distance to radius,\n// and the other half to position. This gives a tighter enclosure, instead of if\n// the whole missing distance were just added to radius.\nthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf/length));this.radius+=missingRadiusHalf;}return this;}},{key:\"union\",value:function union(sphere){// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n// To enclose another sphere into this sphere, we only need to enclose two points:\n// 1) Enclose the farthest point on the other sphere into this sphere.\n// 2) Enclose the opposite point of the farthest point into this sphere.\n_toFarthestPoint.subVectors(sphere.center,this.center).normalize().multiplyScalar(sphere.radius);this.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));this.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));return this;}},{key:\"equals\",value:function equals(sphere){return sphere.center.equals(this.center)&&sphere.radius===this.radius;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Sphere;}();var _vector$a=/*@__PURE__*/new Vector3();var _segCenter=/*@__PURE__*/new Vector3();var _segDir=/*@__PURE__*/new Vector3();var _diff=/*@__PURE__*/new Vector3();var _edge1=/*@__PURE__*/new Vector3();var _edge2=/*@__PURE__*/new Vector3();var _normal$1=/*@__PURE__*/new Vector3();var Ray=/*#__PURE__*/function(){function Ray(){var origin=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var direction=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3(0,0,-1);_classCallCheck(this,Ray);this.origin=origin;this.direction=direction;}_createClass(Ray,[{key:\"set\",value:function set(origin,direction){this.origin.copy(origin);this.direction.copy(direction);return this;}},{key:\"copy\",value:function copy(ray){this.origin.copy(ray.origin);this.direction.copy(ray.direction);return this;}},{key:\"at\",value:function at(t,target){return target.copy(this.direction).multiplyScalar(t).add(this.origin);}},{key:\"lookAt\",value:function lookAt(v){this.direction.copy(v).sub(this.origin).normalize();return this;}},{key:\"recast\",value:function recast(t){this.origin.copy(this.at(t,_vector$a));return this;}},{key:\"closestPointToPoint\",value:function closestPointToPoint(point,target){target.subVectors(point,this.origin);var directionDistance=target.dot(this.direction);if(directionDistance<0){return target.copy(this.origin);}return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);}},{key:\"distanceToPoint\",value:function distanceToPoint(point){return Math.sqrt(this.distanceSqToPoint(point));}},{key:\"distanceSqToPoint\",value:function distanceSqToPoint(point){var directionDistance=_vector$a.subVectors(point,this.origin).dot(this.direction);// point behind the ray\nif(directionDistance<0){return this.origin.distanceToSquared(point);}_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);return _vector$a.distanceToSquared(point);}},{key:\"distanceSqToSegment\",value:function distanceSqToSegment(v0,v1,optionalPointOnRay,optionalPointOnSegment){// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n// It returns the min distance between the ray and the segment\n// defined by v0 and v1\n// It can also set two optional targets :\n// - The closest point on the ray\n// - The closest point on the segment\n_segCenter.copy(v0).add(v1).multiplyScalar(0.5);_segDir.copy(v1).sub(v0).normalize();_diff.copy(this.origin).sub(_segCenter);var segExtent=v0.distanceTo(v1)*0.5;var a01=-this.direction.dot(_segDir);var b0=_diff.dot(this.direction);var b1=-_diff.dot(_segDir);var c=_diff.lengthSq();var det=Math.abs(1-a01*a01);var s0,s1,sqrDist,extDet;if(det>0){// The ray and segment are not parallel.\ns0=a01*b1-b0;s1=a01*b0-b1;extDet=segExtent*det;if(s0>=0){if(s1>=-extDet){if(s1<=extDet){// region 0\n// Minimum at interior points of ray and segment.\nvar invDet=1/det;s0*=invDet;s1*=invDet;sqrDist=s0*(s0+a01*s1+2*b0)+s1*(a01*s0+s1+2*b1)+c;}else{// region 1\ns1=segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{// region 5\ns1=-segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}else{if(s1<=-extDet){// region 4\ns0=Math.max(0,-(-a01*segExtent+b0));s1=s0>0?-segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}else if(s1<=extDet){// region 3\ns0=0;s1=Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=s1*(s1+2*b1)+c;}else{// region 2\ns0=Math.max(0,-(a01*segExtent+b0));s1=s0>0?segExtent:Math.min(Math.max(-segExtent,-b1),segExtent);sqrDist=-s0*s0+s1*(s1+2*b1)+c;}}}else{// Ray and segment are parallel.\ns1=a01>0?-segExtent:segExtent;s0=Math.max(0,-(a01*s1+b0));sqrDist=-s0*s0+s1*(s1+2*b1)+c;}if(optionalPointOnRay){optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);}if(optionalPointOnSegment){optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);}return sqrDist;}},{key:\"intersectSphere\",value:function intersectSphere(sphere,target){_vector$a.subVectors(sphere.center,this.origin);var tca=_vector$a.dot(this.direction);var d2=_vector$a.dot(_vector$a)-tca*tca;var radius2=sphere.radius*sphere.radius;if(d2>radius2)return null;var thc=Math.sqrt(radius2-d2);// t0 = first intersect point - entrance on front of sphere\nvar t0=tca-thc;// t1 = second intersect point - exit point on back of sphere\nvar t1=tca+thc;// test to see if both t0 and t1 are behind the ray - if so, return null\nif(t0<0&&t1<0)return null;// test to see if t0 is behind the ray:\n// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n// in order to always return an intersect point that is in front of the ray.\nif(t0<0)return this.at(t1,target);// else t0 is in front of the ray, so return the first collision point scaled by t0\nreturn this.at(t0,target);}},{key:\"intersectsSphere\",value:function intersectsSphere(sphere){return this.distanceSqToPoint(sphere.center)<=sphere.radius*sphere.radius;}},{key:\"distanceToPlane\",value:function distanceToPlane(plane){var denominator=plane.normal.dot(this.direction);if(denominator===0){// line is coplanar, return origin\nif(plane.distanceToPoint(this.origin)===0){return 0;}// Null is preferable to undefined since undefined means.... it is undefined\nreturn null;}var t=-(this.origin.dot(plane.normal)+plane.constant)/denominator;// Return if the ray never intersects the plane\nreturn t>=0?t:null;}},{key:\"intersectPlane\",value:function intersectPlane(plane,target){var t=this.distanceToPlane(plane);if(t===null){return null;}return this.at(t,target);}},{key:\"intersectsPlane\",value:function intersectsPlane(plane){// check if the ray lies on the plane first\nvar distToPoint=plane.distanceToPoint(this.origin);if(distToPoint===0){return true;}var denominator=plane.normal.dot(this.direction);if(denominator*distToPoint<0){return true;}// ray origin is behind the plane (and is pointing behind it)\nreturn false;}},{key:\"intersectBox\",value:function intersectBox(box,target){var tmin,tmax,tymin,tymax,tzmin,tzmax;var invdirx=1/this.direction.x,invdiry=1/this.direction.y,invdirz=1/this.direction.z;var origin=this.origin;if(invdirx>=0){tmin=(box.min.x-origin.x)*invdirx;tmax=(box.max.x-origin.x)*invdirx;}else{tmin=(box.max.x-origin.x)*invdirx;tmax=(box.min.x-origin.x)*invdirx;}if(invdiry>=0){tymin=(box.min.y-origin.y)*invdiry;tymax=(box.max.y-origin.y)*invdiry;}else{tymin=(box.max.y-origin.y)*invdiry;tymax=(box.min.y-origin.y)*invdiry;}if(tmin>tymax||tymin>tmax)return null;// These lines also handle the case where tmin or tmax is NaN\n// (result of 0 * Infinity). x !== x returns true if x is NaN\nif(tymin>tmin||tmin!==tmin)tmin=tymin;if(tymax<tmax||tmax!==tmax)tmax=tymax;if(invdirz>=0){tzmin=(box.min.z-origin.z)*invdirz;tzmax=(box.max.z-origin.z)*invdirz;}else{tzmin=(box.max.z-origin.z)*invdirz;tzmax=(box.min.z-origin.z)*invdirz;}if(tmin>tzmax||tzmin>tmax)return null;if(tzmin>tmin||tmin!==tmin)tmin=tzmin;if(tzmax<tmax||tmax!==tmax)tmax=tzmax;//return point closest to the ray (positive side)\nif(tmax<0)return null;return this.at(tmin>=0?tmin:tmax,target);}},{key:\"intersectsBox\",value:function intersectsBox(box){return this.intersectBox(box,_vector$a)!==null;}},{key:\"intersectTriangle\",value:function intersectTriangle(a,b,c,backfaceCulling,target){// Compute the offset origin, edges, and normal.\n// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n_edge1.subVectors(b,a);_edge2.subVectors(c,a);_normal$1.crossVectors(_edge1,_edge2);// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\nvar DdN=this.direction.dot(_normal$1);var sign;if(DdN>0){if(backfaceCulling)return null;sign=1;}else if(DdN<0){sign=-1;DdN=-DdN;}else{return null;}_diff.subVectors(this.origin,a);var DdQxE2=sign*this.direction.dot(_edge2.crossVectors(_diff,_edge2));// b1 < 0, no intersection\nif(DdQxE2<0){return null;}var DdE1xQ=sign*this.direction.dot(_edge1.cross(_diff));// b2 < 0, no intersection\nif(DdE1xQ<0){return null;}// b1+b2 > 1, no intersection\nif(DdQxE2+DdE1xQ>DdN){return null;}// Line intersects triangle, check if ray does.\nvar QdN=-sign*_diff.dot(_normal$1);// t < 0, no intersection\nif(QdN<0){return null;}// Ray intersects triangle.\nreturn this.at(QdN/DdN,target);}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix4){this.origin.applyMatrix4(matrix4);this.direction.transformDirection(matrix4);return this;}},{key:\"equals\",value:function equals(ray){return ray.origin.equals(this.origin)&&ray.direction.equals(this.direction);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Ray;}();var Matrix4=/*#__PURE__*/function(){function Matrix4(){_classCallCheck(this,Matrix4);this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];if(arguments.length>0){console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');}}_createClass(Matrix4,[{key:\"set\",value:function set(n11,n12,n13,n14,n21,n22,n23,n24,n31,n32,n33,n34,n41,n42,n43,n44){var te=this.elements;te[0]=n11;te[4]=n12;te[8]=n13;te[12]=n14;te[1]=n21;te[5]=n22;te[9]=n23;te[13]=n24;te[2]=n31;te[6]=n32;te[10]=n33;te[14]=n34;te[3]=n41;te[7]=n42;te[11]=n43;te[15]=n44;return this;}},{key:\"identity\",value:function identity(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this;}},{key:\"clone\",value:function clone(){return new Matrix4().fromArray(this.elements);}},{key:\"copy\",value:function copy(m){var te=this.elements;var me=m.elements;te[0]=me[0];te[1]=me[1];te[2]=me[2];te[3]=me[3];te[4]=me[4];te[5]=me[5];te[6]=me[6];te[7]=me[7];te[8]=me[8];te[9]=me[9];te[10]=me[10];te[11]=me[11];te[12]=me[12];te[13]=me[13];te[14]=me[14];te[15]=me[15];return this;}},{key:\"copyPosition\",value:function copyPosition(m){var te=this.elements,me=m.elements;te[12]=me[12];te[13]=me[13];te[14]=me[14];return this;}},{key:\"setFromMatrix3\",value:function setFromMatrix3(m){var me=m.elements;this.set(me[0],me[3],me[6],0,me[1],me[4],me[7],0,me[2],me[5],me[8],0,0,0,0,1);return this;}},{key:\"extractBasis\",value:function extractBasis(xAxis,yAxis,zAxis){xAxis.setFromMatrixColumn(this,0);yAxis.setFromMatrixColumn(this,1);zAxis.setFromMatrixColumn(this,2);return this;}},{key:\"makeBasis\",value:function makeBasis(xAxis,yAxis,zAxis){this.set(xAxis.x,yAxis.x,zAxis.x,0,xAxis.y,yAxis.y,zAxis.y,0,xAxis.z,yAxis.z,zAxis.z,0,0,0,0,1);return this;}},{key:\"extractRotation\",value:function extractRotation(m){// this method does not support reflection matrices\nvar te=this.elements;var me=m.elements;var scaleX=1/_v1$5.setFromMatrixColumn(m,0).length();var scaleY=1/_v1$5.setFromMatrixColumn(m,1).length();var scaleZ=1/_v1$5.setFromMatrixColumn(m,2).length();te[0]=me[0]*scaleX;te[1]=me[1]*scaleX;te[2]=me[2]*scaleX;te[3]=0;te[4]=me[4]*scaleY;te[5]=me[5]*scaleY;te[6]=me[6]*scaleY;te[7]=0;te[8]=me[8]*scaleZ;te[9]=me[9]*scaleZ;te[10]=me[10]*scaleZ;te[11]=0;te[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}},{key:\"makeRotationFromEuler\",value:function makeRotationFromEuler(euler){if(!(euler&&euler.isEuler)){console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');}var te=this.elements;var x=euler.x,y=euler.y,z=euler.z;var a=Math.cos(x),b=Math.sin(x);var c=Math.cos(y),d=Math.sin(y);var e=Math.cos(z),f=Math.sin(z);if(euler.order==='XYZ'){var ae=a*e,af=a*f,be=b*e,bf=b*f;te[0]=c*e;te[4]=-c*f;te[8]=d;te[1]=af+be*d;te[5]=ae-bf*d;te[9]=-b*c;te[2]=bf-ae*d;te[6]=be+af*d;te[10]=a*c;}else if(euler.order==='YXZ'){var ce=c*e,cf=c*f,de=d*e,df=d*f;te[0]=ce+df*b;te[4]=de*b-cf;te[8]=a*d;te[1]=a*f;te[5]=a*e;te[9]=-b;te[2]=cf*b-de;te[6]=df+ce*b;te[10]=a*c;}else if(euler.order==='ZXY'){var _ce=c*e,_cf=c*f,_de=d*e,_df=d*f;te[0]=_ce-_df*b;te[4]=-a*f;te[8]=_de+_cf*b;te[1]=_cf+_de*b;te[5]=a*e;te[9]=_df-_ce*b;te[2]=-a*d;te[6]=b;te[10]=a*c;}else if(euler.order==='ZYX'){var _ae=a*e,_af=a*f,_be=b*e,_bf=b*f;te[0]=c*e;te[4]=_be*d-_af;te[8]=_ae*d+_bf;te[1]=c*f;te[5]=_bf*d+_ae;te[9]=_af*d-_be;te[2]=-d;te[6]=b*c;te[10]=a*c;}else if(euler.order==='YZX'){var ac=a*c,ad=a*d,bc=b*c,bd=b*d;te[0]=c*e;te[4]=bd-ac*f;te[8]=bc*f+ad;te[1]=f;te[5]=a*e;te[9]=-b*e;te[2]=-d*e;te[6]=ad*f+bc;te[10]=ac-bd*f;}else if(euler.order==='XZY'){var _ac=a*c,_ad=a*d,_bc=b*c,_bd=b*d;te[0]=c*e;te[4]=-f;te[8]=d*e;te[1]=_ac*f+_bd;te[5]=a*e;te[9]=_ad*f-_bc;te[2]=_bc*f-_ad;te[6]=b*e;te[10]=_bd*f+_ac;}// bottom row\nte[3]=0;te[7]=0;te[11]=0;// last column\nte[12]=0;te[13]=0;te[14]=0;te[15]=1;return this;}},{key:\"makeRotationFromQuaternion\",value:function makeRotationFromQuaternion(q){return this.compose(_zero,q,_one);}},{key:\"lookAt\",value:function lookAt(eye,target,up){var te=this.elements;_z.subVectors(eye,target);if(_z.lengthSq()===0){// eye and target are in the same position\n_z.z=1;}_z.normalize();_x.crossVectors(up,_z);if(_x.lengthSq()===0){// up and z are parallel\nif(Math.abs(up.z)===1){_z.x+=0.0001;}else{_z.z+=0.0001;}_z.normalize();_x.crossVectors(up,_z);}_x.normalize();_y.crossVectors(_z,_x);te[0]=_x.x;te[4]=_y.x;te[8]=_z.x;te[1]=_x.y;te[5]=_y.y;te[9]=_z.y;te[2]=_x.z;te[6]=_y.z;te[10]=_z.z;return this;}},{key:\"multiply\",value:function multiply(m,n){if(n!==undefined){console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');return this.multiplyMatrices(m,n);}return this.multiplyMatrices(this,m);}},{key:\"premultiply\",value:function premultiply(m){return this.multiplyMatrices(m,this);}},{key:\"multiplyMatrices\",value:function multiplyMatrices(a,b){var ae=a.elements;var be=b.elements;var te=this.elements;var a11=ae[0],a12=ae[4],a13=ae[8],a14=ae[12];var a21=ae[1],a22=ae[5],a23=ae[9],a24=ae[13];var a31=ae[2],a32=ae[6],a33=ae[10],a34=ae[14];var a41=ae[3],a42=ae[7],a43=ae[11],a44=ae[15];var b11=be[0],b12=be[4],b13=be[8],b14=be[12];var b21=be[1],b22=be[5],b23=be[9],b24=be[13];var b31=be[2],b32=be[6],b33=be[10],b34=be[14];var b41=be[3],b42=be[7],b43=be[11],b44=be[15];te[0]=a11*b11+a12*b21+a13*b31+a14*b41;te[4]=a11*b12+a12*b22+a13*b32+a14*b42;te[8]=a11*b13+a12*b23+a13*b33+a14*b43;te[12]=a11*b14+a12*b24+a13*b34+a14*b44;te[1]=a21*b11+a22*b21+a23*b31+a24*b41;te[5]=a21*b12+a22*b22+a23*b32+a24*b42;te[9]=a21*b13+a22*b23+a23*b33+a24*b43;te[13]=a21*b14+a22*b24+a23*b34+a24*b44;te[2]=a31*b11+a32*b21+a33*b31+a34*b41;te[6]=a31*b12+a32*b22+a33*b32+a34*b42;te[10]=a31*b13+a32*b23+a33*b33+a34*b43;te[14]=a31*b14+a32*b24+a33*b34+a34*b44;te[3]=a41*b11+a42*b21+a43*b31+a44*b41;te[7]=a41*b12+a42*b22+a43*b32+a44*b42;te[11]=a41*b13+a42*b23+a43*b33+a44*b43;te[15]=a41*b14+a42*b24+a43*b34+a44*b44;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(s){var te=this.elements;te[0]*=s;te[4]*=s;te[8]*=s;te[12]*=s;te[1]*=s;te[5]*=s;te[9]*=s;te[13]*=s;te[2]*=s;te[6]*=s;te[10]*=s;te[14]*=s;te[3]*=s;te[7]*=s;te[11]*=s;te[15]*=s;return this;}},{key:\"determinant\",value:function determinant(){var te=this.elements;var n11=te[0],n12=te[4],n13=te[8],n14=te[12];var n21=te[1],n22=te[5],n23=te[9],n24=te[13];var n31=te[2],n32=te[6],n33=te[10],n34=te[14];var n41=te[3],n42=te[7],n43=te[11],n44=te[15];//TODO: make this more efficient\n//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\nreturn n41*(+n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34)+n42*(+n11*n23*n34-n11*n24*n33+n14*n21*n33-n13*n21*n34+n13*n24*n31-n14*n23*n31)+n43*(+n11*n24*n32-n11*n22*n34-n14*n21*n32+n12*n21*n34+n14*n22*n31-n12*n24*n31)+n44*(-n13*n22*n31-n11*n23*n32+n11*n22*n33+n13*n21*n32-n12*n21*n33+n12*n23*n31);}},{key:\"transpose\",value:function transpose(){var te=this.elements;var tmp;tmp=te[1];te[1]=te[4];te[4]=tmp;tmp=te[2];te[2]=te[8];te[8]=tmp;tmp=te[6];te[6]=te[9];te[9]=tmp;tmp=te[3];te[3]=te[12];te[12]=tmp;tmp=te[7];te[7]=te[13];te[13]=tmp;tmp=te[11];te[11]=te[14];te[14]=tmp;return this;}},{key:\"setPosition\",value:function setPosition(x,y,z){var te=this.elements;if(x.isVector3){te[12]=x.x;te[13]=x.y;te[14]=x.z;}else{te[12]=x;te[13]=y;te[14]=z;}return this;}},{key:\"invert\",value:function invert(){// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\nvar te=this.elements,n11=te[0],n21=te[1],n31=te[2],n41=te[3],n12=te[4],n22=te[5],n32=te[6],n42=te[7],n13=te[8],n23=te[9],n33=te[10],n43=te[11],n14=te[12],n24=te[13],n34=te[14],n44=te[15],t11=n23*n34*n42-n24*n33*n42+n24*n32*n43-n22*n34*n43-n23*n32*n44+n22*n33*n44,t12=n14*n33*n42-n13*n34*n42-n14*n32*n43+n12*n34*n43+n13*n32*n44-n12*n33*n44,t13=n13*n24*n42-n14*n23*n42+n14*n22*n43-n12*n24*n43-n13*n22*n44+n12*n23*n44,t14=n14*n23*n32-n13*n24*n32-n14*n22*n33+n12*n24*n33+n13*n22*n34-n12*n23*n34;var det=n11*t11+n21*t12+n31*t13+n41*t14;if(det===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var detInv=1/det;te[0]=t11*detInv;te[1]=(n24*n33*n41-n23*n34*n41-n24*n31*n43+n21*n34*n43+n23*n31*n44-n21*n33*n44)*detInv;te[2]=(n22*n34*n41-n24*n32*n41+n24*n31*n42-n21*n34*n42-n22*n31*n44+n21*n32*n44)*detInv;te[3]=(n23*n32*n41-n22*n33*n41-n23*n31*n42+n21*n33*n42+n22*n31*n43-n21*n32*n43)*detInv;te[4]=t12*detInv;te[5]=(n13*n34*n41-n14*n33*n41+n14*n31*n43-n11*n34*n43-n13*n31*n44+n11*n33*n44)*detInv;te[6]=(n14*n32*n41-n12*n34*n41-n14*n31*n42+n11*n34*n42+n12*n31*n44-n11*n32*n44)*detInv;te[7]=(n12*n33*n41-n13*n32*n41+n13*n31*n42-n11*n33*n42-n12*n31*n43+n11*n32*n43)*detInv;te[8]=t13*detInv;te[9]=(n14*n23*n41-n13*n24*n41-n14*n21*n43+n11*n24*n43+n13*n21*n44-n11*n23*n44)*detInv;te[10]=(n12*n24*n41-n14*n22*n41+n14*n21*n42-n11*n24*n42-n12*n21*n44+n11*n22*n44)*detInv;te[11]=(n13*n22*n41-n12*n23*n41-n13*n21*n42+n11*n23*n42+n12*n21*n43-n11*n22*n43)*detInv;te[12]=t14*detInv;te[13]=(n13*n24*n31-n14*n23*n31+n14*n21*n33-n11*n24*n33-n13*n21*n34+n11*n23*n34)*detInv;te[14]=(n14*n22*n31-n12*n24*n31-n14*n21*n32+n11*n24*n32+n12*n21*n34-n11*n22*n34)*detInv;te[15]=(n12*n23*n31-n13*n22*n31+n13*n21*n32-n11*n23*n32-n12*n21*n33+n11*n22*n33)*detInv;return this;}},{key:\"scale\",value:function scale(v){var te=this.elements;var x=v.x,y=v.y,z=v.z;te[0]*=x;te[4]*=y;te[8]*=z;te[1]*=x;te[5]*=y;te[9]*=z;te[2]*=x;te[6]*=y;te[10]*=z;te[3]*=x;te[7]*=y;te[11]*=z;return this;}},{key:\"getMaxScaleOnAxis\",value:function getMaxScaleOnAxis(){var te=this.elements;var scaleXSq=te[0]*te[0]+te[1]*te[1]+te[2]*te[2];var scaleYSq=te[4]*te[4]+te[5]*te[5]+te[6]*te[6];var scaleZSq=te[8]*te[8]+te[9]*te[9]+te[10]*te[10];return Math.sqrt(Math.max(scaleXSq,scaleYSq,scaleZSq));}},{key:\"makeTranslation\",value:function makeTranslation(x,y,z){this.set(1,0,0,x,0,1,0,y,0,0,1,z,0,0,0,1);return this;}},{key:\"makeRotationX\",value:function makeRotationX(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(1,0,0,0,0,c,-s,0,0,s,c,0,0,0,0,1);return this;}},{key:\"makeRotationY\",value:function makeRotationY(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,0,s,0,0,1,0,0,-s,0,c,0,0,0,0,1);return this;}},{key:\"makeRotationZ\",value:function makeRotationZ(theta){var c=Math.cos(theta),s=Math.sin(theta);this.set(c,-s,0,0,s,c,0,0,0,0,1,0,0,0,0,1);return this;}},{key:\"makeRotationAxis\",value:function makeRotationAxis(axis,angle){// Based on http://www.gamedev.net/reference/articles/article1199.asp\nvar c=Math.cos(angle);var s=Math.sin(angle);var t=1-c;var x=axis.x,y=axis.y,z=axis.z;var tx=t*x,ty=t*y;this.set(tx*x+c,tx*y-s*z,tx*z+s*y,0,tx*y+s*z,ty*y+c,ty*z-s*x,0,tx*z-s*y,ty*z+s*x,t*z*z+c,0,0,0,0,1);return this;}},{key:\"makeScale\",value:function makeScale(x,y,z){this.set(x,0,0,0,0,y,0,0,0,0,z,0,0,0,0,1);return this;}},{key:\"makeShear\",value:function makeShear(xy,xz,yx,yz,zx,zy){this.set(1,yx,zx,0,xy,1,zy,0,xz,yz,1,0,0,0,0,1);return this;}},{key:\"compose\",value:function compose(position,quaternion,scale){var te=this.elements;var x=quaternion._x,y=quaternion._y,z=quaternion._z,w=quaternion._w;var x2=x+x,y2=y+y,z2=z+z;var xx=x*x2,xy=x*y2,xz=x*z2;var yy=y*y2,yz=y*z2,zz=z*z2;var wx=w*x2,wy=w*y2,wz=w*z2;var sx=scale.x,sy=scale.y,sz=scale.z;te[0]=(1-(yy+zz))*sx;te[1]=(xy+wz)*sx;te[2]=(xz-wy)*sx;te[3]=0;te[4]=(xy-wz)*sy;te[5]=(1-(xx+zz))*sy;te[6]=(yz+wx)*sy;te[7]=0;te[8]=(xz+wy)*sz;te[9]=(yz-wx)*sz;te[10]=(1-(xx+yy))*sz;te[11]=0;te[12]=position.x;te[13]=position.y;te[14]=position.z;te[15]=1;return this;}},{key:\"decompose\",value:function decompose(position,quaternion,scale){var te=this.elements;var sx=_v1$5.set(te[0],te[1],te[2]).length();var sy=_v1$5.set(te[4],te[5],te[6]).length();var sz=_v1$5.set(te[8],te[9],te[10]).length();// if determine is negative, we need to invert one scale\nvar det=this.determinant();if(det<0)sx=-sx;position.x=te[12];position.y=te[13];position.z=te[14];// scale the rotation part\n_m1$2.copy(this);var invSX=1/sx;var invSY=1/sy;var invSZ=1/sz;_m1$2.elements[0]*=invSX;_m1$2.elements[1]*=invSX;_m1$2.elements[2]*=invSX;_m1$2.elements[4]*=invSY;_m1$2.elements[5]*=invSY;_m1$2.elements[6]*=invSY;_m1$2.elements[8]*=invSZ;_m1$2.elements[9]*=invSZ;_m1$2.elements[10]*=invSZ;quaternion.setFromRotationMatrix(_m1$2);scale.x=sx;scale.y=sy;scale.z=sz;return this;}},{key:\"makePerspective\",value:function makePerspective(left,right,top,bottom,near,far){if(far===undefined){console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');}var te=this.elements;var x=2*near/(right-left);var y=2*near/(top-bottom);var a=(right+left)/(right-left);var b=(top+bottom)/(top-bottom);var c=-(far+near)/(far-near);var d=-2*far*near/(far-near);te[0]=x;te[4]=0;te[8]=a;te[12]=0;te[1]=0;te[5]=y;te[9]=b;te[13]=0;te[2]=0;te[6]=0;te[10]=c;te[14]=d;te[3]=0;te[7]=0;te[11]=-1;te[15]=0;return this;}},{key:\"makeOrthographic\",value:function makeOrthographic(left,right,top,bottom,near,far){var te=this.elements;var w=1.0/(right-left);var h=1.0/(top-bottom);var p=1.0/(far-near);var x=(right+left)*w;var y=(top+bottom)*h;var z=(far+near)*p;te[0]=2*w;te[4]=0;te[8]=0;te[12]=-x;te[1]=0;te[5]=2*h;te[9]=0;te[13]=-y;te[2]=0;te[6]=0;te[10]=-2*p;te[14]=-z;te[3]=0;te[7]=0;te[11]=0;te[15]=1;return this;}},{key:\"equals\",value:function equals(matrix){var te=this.elements;var me=matrix.elements;for(var _i14=0;_i14<16;_i14++){if(te[_i14]!==me[_i14])return false;}return true;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;for(var _i15=0;_i15<16;_i15++){this.elements[_i15]=array[_i15+offset];}return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var te=this.elements;array[offset]=te[0];array[offset+1]=te[1];array[offset+2]=te[2];array[offset+3]=te[3];array[offset+4]=te[4];array[offset+5]=te[5];array[offset+6]=te[6];array[offset+7]=te[7];array[offset+8]=te[8];array[offset+9]=te[9];array[offset+10]=te[10];array[offset+11]=te[11];array[offset+12]=te[12];array[offset+13]=te[13];array[offset+14]=te[14];array[offset+15]=te[15];return array;}}]);return Matrix4;}();Matrix4.prototype.isMatrix4=true;var _v1$5=/*@__PURE__*/new Vector3();var _m1$2=/*@__PURE__*/new Matrix4();var _zero=/*@__PURE__*/new Vector3(0,0,0);var _one=/*@__PURE__*/new Vector3(1,1,1);var _x=/*@__PURE__*/new Vector3();var _y=/*@__PURE__*/new Vector3();var _z=/*@__PURE__*/new Vector3();var _matrix$1=/*@__PURE__*/new Matrix4();var _quaternion$3=/*@__PURE__*/new Quaternion();var Euler=/*#__PURE__*/function(){function Euler(){var x=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var y=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var z=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var order=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Euler.DefaultOrder;_classCallCheck(this,Euler);this._x=x;this._y=y;this._z=z;this._order=order;}_createClass(Euler,[{key:\"x\",get:function get(){return this._x;},set:function set(value){this._x=value;this._onChangeCallback();}},{key:\"y\",get:function get(){return this._y;},set:function set(value){this._y=value;this._onChangeCallback();}},{key:\"z\",get:function get(){return this._z;},set:function set(value){this._z=value;this._onChangeCallback();}},{key:\"order\",get:function get(){return this._order;},set:function set(value){this._order=value;this._onChangeCallback();}},{key:\"set\",value:function set(x,y,z){var order=arguments.length>3&&arguments[3]!==undefined?arguments[3]:this._order;this._x=x;this._y=y;this._z=z;this._order=order;this._onChangeCallback();return this;}},{key:\"clone\",value:function clone(){return new this.constructor(this._x,this._y,this._z,this._order);}},{key:\"copy\",value:function copy(euler){this._x=euler._x;this._y=euler._y;this._z=euler._z;this._order=euler._order;this._onChangeCallback();return this;}},{key:\"setFromRotationMatrix\",value:function setFromRotationMatrix(m){var order=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._order;var update=arguments.length>2&&arguments[2]!==undefined?arguments[2]:true;// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nvar te=m.elements;var m11=te[0],m12=te[4],m13=te[8];var m21=te[1],m22=te[5],m23=te[9];var m31=te[2],m32=te[6],m33=te[10];switch(order){case'XYZ':this._y=Math.asin(clamp(m13,-1,1));if(Math.abs(m13)<0.9999999){this._x=Math.atan2(-m23,m33);this._z=Math.atan2(-m12,m11);}else{this._x=Math.atan2(m32,m22);this._z=0;}break;case'YXZ':this._x=Math.asin(-clamp(m23,-1,1));if(Math.abs(m23)<0.9999999){this._y=Math.atan2(m13,m33);this._z=Math.atan2(m21,m22);}else{this._y=Math.atan2(-m31,m11);this._z=0;}break;case'ZXY':this._x=Math.asin(clamp(m32,-1,1));if(Math.abs(m32)<0.9999999){this._y=Math.atan2(-m31,m33);this._z=Math.atan2(-m12,m22);}else{this._y=0;this._z=Math.atan2(m21,m11);}break;case'ZYX':this._y=Math.asin(-clamp(m31,-1,1));if(Math.abs(m31)<0.9999999){this._x=Math.atan2(m32,m33);this._z=Math.atan2(m21,m11);}else{this._x=0;this._z=Math.atan2(-m12,m22);}break;case'YZX':this._z=Math.asin(clamp(m21,-1,1));if(Math.abs(m21)<0.9999999){this._x=Math.atan2(-m23,m22);this._y=Math.atan2(-m31,m11);}else{this._x=0;this._y=Math.atan2(m13,m33);}break;case'XZY':this._z=Math.asin(-clamp(m12,-1,1));if(Math.abs(m12)<0.9999999){this._x=Math.atan2(m32,m22);this._y=Math.atan2(m13,m11);}else{this._x=Math.atan2(-m23,m33);this._y=0;}break;default:console.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: '+order);}this._order=order;if(update===true)this._onChangeCallback();return this;}},{key:\"setFromQuaternion\",value:function setFromQuaternion(q,order,update){_matrix$1.makeRotationFromQuaternion(q);return this.setFromRotationMatrix(_matrix$1,order,update);}},{key:\"setFromVector3\",value:function setFromVector3(v){var order=arguments.length>1&&arguments[1]!==undefined?arguments[1]:this._order;return this.set(v.x,v.y,v.z,order);}},{key:\"reorder\",value:function reorder(newOrder){// WARNING: this discards revolution information -bhouston\n_quaternion$3.setFromEuler(this);return this.setFromQuaternion(_quaternion$3,newOrder);}},{key:\"equals\",value:function equals(euler){return euler._x===this._x&&euler._y===this._y&&euler._z===this._z&&euler._order===this._order;}},{key:\"fromArray\",value:function fromArray(array){this._x=array[0];this._y=array[1];this._z=array[2];if(array[3]!==undefined)this._order=array[3];this._onChangeCallback();return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this._x;array[offset+1]=this._y;array[offset+2]=this._z;array[offset+3]=this._order;return array;}},{key:\"toVector3\",value:function toVector3(optionalResult){if(optionalResult){return optionalResult.set(this._x,this._y,this._z);}else{return new Vector3(this._x,this._y,this._z);}}},{key:\"_onChange\",value:function _onChange(callback){this._onChangeCallback=callback;return this;}},{key:\"_onChangeCallback\",value:function _onChangeCallback(){}}]);return Euler;}();Euler.prototype.isEuler=true;Euler.DefaultOrder='XYZ';Euler.RotationOrders=['XYZ','YZX','ZXY','XZY','YXZ','ZYX'];var Layers=/*#__PURE__*/function(){function Layers(){_classCallCheck(this,Layers);this.mask=1|0;}_createClass(Layers,[{key:\"set\",value:function set(channel){this.mask=1<<channel|0;}},{key:\"enable\",value:function enable(channel){this.mask|=1<<channel|0;}},{key:\"enableAll\",value:function enableAll(){this.mask=0xffffffff|0;}},{key:\"toggle\",value:function toggle(channel){this.mask^=1<<channel|0;}},{key:\"disable\",value:function disable(channel){this.mask&=~(1<<channel|0);}},{key:\"disableAll\",value:function disableAll(){this.mask=0;}},{key:\"test\",value:function test(layers){return(this.mask&layers.mask)!==0;}}]);return Layers;}();var _object3DId=0;var _v1$4=/*@__PURE__*/new Vector3();var _q1=/*@__PURE__*/new Quaternion();var _m1$1=/*@__PURE__*/new Matrix4();var _target=/*@__PURE__*/new Vector3();var _position$3=/*@__PURE__*/new Vector3();var _scale$2=/*@__PURE__*/new Vector3();var _quaternion$2=/*@__PURE__*/new Quaternion();var _xAxis=/*@__PURE__*/new Vector3(1,0,0);var _yAxis=/*@__PURE__*/new Vector3(0,1,0);var _zAxis=/*@__PURE__*/new Vector3(0,0,1);var _addedEvent={type:'added'};var _removedEvent={type:'removed'};var Object3D=/*#__PURE__*/function(_EventDispatcher3){_inherits(Object3D,_EventDispatcher3);var _super5=_createSuper(Object3D);function Object3D(){var _this6;_classCallCheck(this,Object3D);_this6=_super5.call(this);Object.defineProperty(_assertThisInitialized(_this6),'id',{value:_object3DId++});_this6.uuid=generateUUID();_this6.name='';_this6.type='Object3D';_this6.parent=null;_this6.children=[];_this6.up=Object3D.DefaultUp.clone();var position=new Vector3();var rotation=new Euler();var quaternion=new Quaternion();var scale=new Vector3(1,1,1);function onRotationChange(){quaternion.setFromEuler(rotation,false);}function onQuaternionChange(){rotation.setFromQuaternion(quaternion,undefined,false);}rotation._onChange(onRotationChange);quaternion._onChange(onQuaternionChange);Object.defineProperties(_assertThisInitialized(_this6),{position:{configurable:true,enumerable:true,value:position},rotation:{configurable:true,enumerable:true,value:rotation},quaternion:{configurable:true,enumerable:true,value:quaternion},scale:{configurable:true,enumerable:true,value:scale},modelViewMatrix:{value:new Matrix4()},normalMatrix:{value:new Matrix3()}});_this6.matrix=new Matrix4();_this6.matrixWorld=new Matrix4();_this6.matrixAutoUpdate=Object3D.DefaultMatrixAutoUpdate;_this6.matrixWorldNeedsUpdate=false;_this6.layers=new Layers();_this6.visible=true;_this6.castShadow=false;_this6.receiveShadow=false;_this6.frustumCulled=true;_this6.renderOrder=0;_this6.animations=[];_this6.userData={};return _this6;}_createClass(Object3D,[{key:\"onBeforeRender\",value:function/* renderer, scene, camera, geometry, material, group */onBeforeRender(){}},{key:\"onAfterRender\",value:function/* renderer, scene, camera, geometry, material, group */onAfterRender(){}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix){if(this.matrixAutoUpdate)this.updateMatrix();this.matrix.premultiply(matrix);this.matrix.decompose(this.position,this.quaternion,this.scale);}},{key:\"applyQuaternion\",value:function applyQuaternion(q){this.quaternion.premultiply(q);return this;}},{key:\"setRotationFromAxisAngle\",value:function setRotationFromAxisAngle(axis,angle){// assumes axis is normalized\nthis.quaternion.setFromAxisAngle(axis,angle);}},{key:\"setRotationFromEuler\",value:function setRotationFromEuler(euler){this.quaternion.setFromEuler(euler,true);}},{key:\"setRotationFromMatrix\",value:function setRotationFromMatrix(m){// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nthis.quaternion.setFromRotationMatrix(m);}},{key:\"setRotationFromQuaternion\",value:function setRotationFromQuaternion(q){// assumes q is normalized\nthis.quaternion.copy(q);}},{key:\"rotateOnAxis\",value:function rotateOnAxis(axis,angle){// rotate object on axis in object space\n// axis is assumed to be normalized\n_q1.setFromAxisAngle(axis,angle);this.quaternion.multiply(_q1);return this;}},{key:\"rotateOnWorldAxis\",value:function rotateOnWorldAxis(axis,angle){// rotate object on axis in world space\n// axis is assumed to be normalized\n// method assumes no rotated parent\n_q1.setFromAxisAngle(axis,angle);this.quaternion.premultiply(_q1);return this;}},{key:\"rotateX\",value:function rotateX(angle){return this.rotateOnAxis(_xAxis,angle);}},{key:\"rotateY\",value:function rotateY(angle){return this.rotateOnAxis(_yAxis,angle);}},{key:\"rotateZ\",value:function rotateZ(angle){return this.rotateOnAxis(_zAxis,angle);}},{key:\"translateOnAxis\",value:function translateOnAxis(axis,distance){// translate object by distance along axis in object space\n// axis is assumed to be normalized\n_v1$4.copy(axis).applyQuaternion(this.quaternion);this.position.add(_v1$4.multiplyScalar(distance));return this;}},{key:\"translateX\",value:function translateX(distance){return this.translateOnAxis(_xAxis,distance);}},{key:\"translateY\",value:function translateY(distance){return this.translateOnAxis(_yAxis,distance);}},{key:\"translateZ\",value:function translateZ(distance){return this.translateOnAxis(_zAxis,distance);}},{key:\"localToWorld\",value:function localToWorld(vector){return vector.applyMatrix4(this.matrixWorld);}},{key:\"worldToLocal\",value:function worldToLocal(vector){return vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());}},{key:\"lookAt\",value:function lookAt(x,y,z){// This method does not support objects having non-uniformly-scaled parent(s)\nif(x.isVector3){_target.copy(x);}else{_target.set(x,y,z);}var parent=this.parent;this.updateWorldMatrix(true,false);_position$3.setFromMatrixPosition(this.matrixWorld);if(this.isCamera||this.isLight){_m1$1.lookAt(_position$3,_target,this.up);}else{_m1$1.lookAt(_target,_position$3,this.up);}this.quaternion.setFromRotationMatrix(_m1$1);if(parent){_m1$1.extractRotation(parent.matrixWorld);_q1.setFromRotationMatrix(_m1$1);this.quaternion.premultiply(_q1.invert());}}},{key:\"add\",value:function add(object){if(arguments.length>1){for(var _i16=0;_i16<arguments.length;_i16++){this.add(arguments[_i16]);}return this;}if(object===this){console.error('THREE.Object3D.add: object can\\'t be added as a child of itself.',object);return this;}if(object&&object.isObject3D){if(object.parent!==null){object.parent.remove(object);}object.parent=this;this.children.push(object);object.dispatchEvent(_addedEvent);}else{console.error('THREE.Object3D.add: object not an instance of THREE.Object3D.',object);}return this;}},{key:\"remove\",value:function remove(object){if(arguments.length>1){for(var _i17=0;_i17<arguments.length;_i17++){this.remove(arguments[_i17]);}return this;}var index=this.children.indexOf(object);if(index!==-1){object.parent=null;this.children.splice(index,1);object.dispatchEvent(_removedEvent);}return this;}},{key:\"removeFromParent\",value:function removeFromParent(){var parent=this.parent;if(parent!==null){parent.remove(this);}return this;}},{key:\"clear\",value:function clear(){for(var _i18=0;_i18<this.children.length;_i18++){var object=this.children[_i18];object.parent=null;object.dispatchEvent(_removedEvent);}this.children.length=0;return this;}},{key:\"attach\",value:function attach(object){// adds object as a child of this, while maintaining the object's world transform\nthis.updateWorldMatrix(true,false);_m1$1.copy(this.matrixWorld).invert();if(object.parent!==null){object.parent.updateWorldMatrix(true,false);_m1$1.multiply(object.parent.matrixWorld);}object.applyMatrix4(_m1$1);this.add(object);object.updateWorldMatrix(false,true);return this;}},{key:\"getObjectById\",value:function getObjectById(id){return this.getObjectByProperty('id',id);}},{key:\"getObjectByName\",value:function getObjectByName(name){return this.getObjectByProperty('name',name);}},{key:\"getObjectByProperty\",value:function getObjectByProperty(name,value){if(this[name]===value)return this;for(var _i19=0,l=this.children.length;_i19<l;_i19++){var child=this.children[_i19];var object=child.getObjectByProperty(name,value);if(object!==undefined){return object;}}return undefined;}},{key:\"getWorldPosition\",value:function getWorldPosition(target){this.updateWorldMatrix(true,false);return target.setFromMatrixPosition(this.matrixWorld);}},{key:\"getWorldQuaternion\",value:function getWorldQuaternion(target){this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,target,_scale$2);return target;}},{key:\"getWorldScale\",value:function getWorldScale(target){this.updateWorldMatrix(true,false);this.matrixWorld.decompose(_position$3,_quaternion$2,target);return target;}},{key:\"getWorldDirection\",value:function getWorldDirection(target){this.updateWorldMatrix(true,false);var e=this.matrixWorld.elements;return target.set(e[8],e[9],e[10]).normalize();}},{key:\"raycast\",value:function raycast(){}},{key:\"traverse\",value:function traverse(callback){callback(this);var children=this.children;for(var _i20=0,l=children.length;_i20<l;_i20++){children[_i20].traverse(callback);}}},{key:\"traverseVisible\",value:function traverseVisible(callback){if(this.visible===false)return;callback(this);var children=this.children;for(var _i21=0,l=children.length;_i21<l;_i21++){children[_i21].traverseVisible(callback);}}},{key:\"traverseAncestors\",value:function traverseAncestors(callback){var parent=this.parent;if(parent!==null){callback(parent);parent.traverseAncestors(callback);}}},{key:\"updateMatrix\",value:function updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale);this.matrixWorldNeedsUpdate=true;}},{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){if(this.matrixAutoUpdate)this.updateMatrix();if(this.matrixWorldNeedsUpdate||force){if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}this.matrixWorldNeedsUpdate=false;force=true;}// update children\nvar children=this.children;for(var _i22=0,l=children.length;_i22<l;_i22++){children[_i22].updateMatrixWorld(force);}}},{key:\"updateWorldMatrix\",value:function updateWorldMatrix(updateParents,updateChildren){var parent=this.parent;if(updateParents===true&&parent!==null){parent.updateWorldMatrix(true,false);}if(this.matrixAutoUpdate)this.updateMatrix();if(this.parent===null){this.matrixWorld.copy(this.matrix);}else{this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix);}// update children\nif(updateChildren===true){var children=this.children;for(var _i23=0,l=children.length;_i23<l;_i23++){children[_i23].updateWorldMatrix(false,true);}}}},{key:\"toJSON\",value:function toJSON(meta){// meta is a string when called from JSON.stringify\nvar isRootObject=meta===undefined||typeof meta==='string';var output={};// meta is a hash used to collect geometries, materials.\n// not providing it implies that this is the root object\n// being serialized.\nif(isRootObject){// initialize meta obj\nmeta={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}};output.metadata={version:4.5,type:'Object',generator:'Object3D.toJSON'};}// standard Object3D serialization\nvar object={};object.uuid=this.uuid;object.type=this.type;if(this.name!=='')object.name=this.name;if(this.castShadow===true)object.castShadow=true;if(this.receiveShadow===true)object.receiveShadow=true;if(this.visible===false)object.visible=false;if(this.frustumCulled===false)object.frustumCulled=false;if(this.renderOrder!==0)object.renderOrder=this.renderOrder;if(JSON.stringify(this.userData)!=='{}')object.userData=this.userData;object.layers=this.layers.mask;object.matrix=this.matrix.toArray();if(this.matrixAutoUpdate===false)object.matrixAutoUpdate=false;// object specific properties\nif(this.isInstancedMesh){object.type='InstancedMesh';object.count=this.count;object.instanceMatrix=this.instanceMatrix.toJSON();if(this.instanceColor!==null)object.instanceColor=this.instanceColor.toJSON();}//\nfunction serialize(library,element){if(library[element.uuid]===undefined){library[element.uuid]=element.toJSON(meta);}return element.uuid;}if(this.isScene){if(this.background){if(this.background.isColor){object.background=this.background.toJSON();}else if(this.background.isTexture){object.background=this.background.toJSON(meta).uuid;}}if(this.environment&&this.environment.isTexture){object.environment=this.environment.toJSON(meta).uuid;}}else if(this.isMesh||this.isLine||this.isPoints){object.geometry=serialize(meta.geometries,this.geometry);var parameters=this.geometry.parameters;if(parameters!==undefined&&parameters.shapes!==undefined){var shapes=parameters.shapes;if(Array.isArray(shapes)){for(var _i24=0,l=shapes.length;_i24<l;_i24++){var shape=shapes[_i24];serialize(meta.shapes,shape);}}else{serialize(meta.shapes,shapes);}}}if(this.isSkinnedMesh){object.bindMode=this.bindMode;object.bindMatrix=this.bindMatrix.toArray();if(this.skeleton!==undefined){serialize(meta.skeletons,this.skeleton);object.skeleton=this.skeleton.uuid;}}if(this.material!==undefined){if(Array.isArray(this.material)){var uuids=[];for(var _i25=0,_l=this.material.length;_i25<_l;_i25++){uuids.push(serialize(meta.materials,this.material[_i25]));}object.material=uuids;}else{object.material=serialize(meta.materials,this.material);}}//\nif(this.children.length>0){object.children=[];for(var _i26=0;_i26<this.children.length;_i26++){object.children.push(this.children[_i26].toJSON(meta).object);}}//\nif(this.animations.length>0){object.animations=[];for(var _i27=0;_i27<this.animations.length;_i27++){var animation=this.animations[_i27];object.animations.push(serialize(meta.animations,animation));}}if(isRootObject){var geometries=extractFromCache(meta.geometries);var materials=extractFromCache(meta.materials);var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);var _shapes=extractFromCache(meta.shapes);var skeletons=extractFromCache(meta.skeletons);var animations=extractFromCache(meta.animations);if(geometries.length>0)output.geometries=geometries;if(materials.length>0)output.materials=materials;if(textures.length>0)output.textures=textures;if(images.length>0)output.images=images;if(_shapes.length>0)output.shapes=_shapes;if(skeletons.length>0)output.skeletons=skeletons;if(animations.length>0)output.animations=animations;}output.object=object;return output;// extract data from the cache hash\n// remove metadata on each item\n// and return as array\nfunction extractFromCache(cache){var values=[];for(var key in cache){var data=cache[key];delete data.metadata;values.push(data);}return values;}}},{key:\"clone\",value:function clone(recursive){return new this.constructor().copy(this,recursive);}},{key:\"copy\",value:function copy(source){var recursive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;this.name=source.name;this.up.copy(source.up);this.position.copy(source.position);this.rotation.order=source.rotation.order;this.quaternion.copy(source.quaternion);this.scale.copy(source.scale);this.matrix.copy(source.matrix);this.matrixWorld.copy(source.matrixWorld);this.matrixAutoUpdate=source.matrixAutoUpdate;this.matrixWorldNeedsUpdate=source.matrixWorldNeedsUpdate;this.layers.mask=source.layers.mask;this.visible=source.visible;this.castShadow=source.castShadow;this.receiveShadow=source.receiveShadow;this.frustumCulled=source.frustumCulled;this.renderOrder=source.renderOrder;this.userData=JSON.parse(JSON.stringify(source.userData));if(recursive===true){for(var _i28=0;_i28<source.children.length;_i28++){var child=source.children[_i28];this.add(child.clone());}}return this;}}]);return Object3D;}(EventDispatcher);Object3D.DefaultUp=new Vector3(0,1,0);Object3D.DefaultMatrixAutoUpdate=true;Object3D.prototype.isObject3D=true;var _v0$1=/*@__PURE__*/new Vector3();var _v1$3=/*@__PURE__*/new Vector3();var _v2$2=/*@__PURE__*/new Vector3();var _v3$1=/*@__PURE__*/new Vector3();var _vab=/*@__PURE__*/new Vector3();var _vac=/*@__PURE__*/new Vector3();var _vbc=/*@__PURE__*/new Vector3();var _vap=/*@__PURE__*/new Vector3();var _vbp=/*@__PURE__*/new Vector3();var _vcp=/*@__PURE__*/new Vector3();var Triangle=/*#__PURE__*/function(){function Triangle(){var a=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var b=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var c=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Vector3();_classCallCheck(this,Triangle);this.a=a;this.b=b;this.c=c;}_createClass(Triangle,[{key:\"set\",value:function set(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this;}},{key:\"setFromPointsAndIndices\",value:function setFromPointsAndIndices(points,i0,i1,i2){this.a.copy(points[i0]);this.b.copy(points[i1]);this.c.copy(points[i2]);return this;}},{key:\"setFromAttributeAndIndices\",value:function setFromAttributeAndIndices(attribute,i0,i1,i2){this.a.fromBufferAttribute(attribute,i0);this.b.fromBufferAttribute(attribute,i1);this.c.fromBufferAttribute(attribute,i2);return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(triangle){this.a.copy(triangle.a);this.b.copy(triangle.b);this.c.copy(triangle.c);return this;}},{key:\"getArea\",value:function getArea(){_v0$1.subVectors(this.c,this.b);_v1$3.subVectors(this.a,this.b);return _v0$1.cross(_v1$3).length()*0.5;}},{key:\"getMidpoint\",value:function getMidpoint(target){return target.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3);}},{key:\"getNormal\",value:function getNormal(target){return Triangle.getNormal(this.a,this.b,this.c,target);}},{key:\"getPlane\",value:function getPlane(target){return target.setFromCoplanarPoints(this.a,this.b,this.c);}},{key:\"getBarycoord\",value:function getBarycoord(point,target){return Triangle.getBarycoord(point,this.a,this.b,this.c,target);}},{key:\"getUV\",value:function getUV(point,uv1,uv2,uv3,target){return Triangle.getUV(point,this.a,this.b,this.c,uv1,uv2,uv3,target);}},{key:\"containsPoint\",value:function containsPoint(point){return Triangle.containsPoint(point,this.a,this.b,this.c);}},{key:\"isFrontFacing\",value:function isFrontFacing(direction){return Triangle.isFrontFacing(this.a,this.b,this.c,direction);}},{key:\"intersectsBox\",value:function intersectsBox(box){return box.intersectsTriangle(this);}},{key:\"closestPointToPoint\",value:function closestPointToPoint(p,target){var a=this.a,b=this.b,c=this.c;var v,w;// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n// basically, we're distinguishing which of the voronoi regions of the triangle\n// the point lies in with the minimum amount of redundant computation.\n_vab.subVectors(b,a);_vac.subVectors(c,a);_vap.subVectors(p,a);var d1=_vab.dot(_vap);var d2=_vac.dot(_vap);if(d1<=0&&d2<=0){// vertex region of A; barycentric coords (1, 0, 0)\nreturn target.copy(a);}_vbp.subVectors(p,b);var d3=_vab.dot(_vbp);var d4=_vac.dot(_vbp);if(d3>=0&&d4<=d3){// vertex region of B; barycentric coords (0, 1, 0)\nreturn target.copy(b);}var vc=d1*d4-d3*d2;if(vc<=0&&d1>=0&&d3<=0){v=d1/(d1-d3);// edge region of AB; barycentric coords (1-v, v, 0)\nreturn target.copy(a).addScaledVector(_vab,v);}_vcp.subVectors(p,c);var d5=_vab.dot(_vcp);var d6=_vac.dot(_vcp);if(d6>=0&&d5<=d6){// vertex region of C; barycentric coords (0, 0, 1)\nreturn target.copy(c);}var vb=d5*d2-d1*d6;if(vb<=0&&d2>=0&&d6<=0){w=d2/(d2-d6);// edge region of AC; barycentric coords (1-w, 0, w)\nreturn target.copy(a).addScaledVector(_vac,w);}var va=d3*d6-d5*d4;if(va<=0&&d4-d3>=0&&d5-d6>=0){_vbc.subVectors(c,b);w=(d4-d3)/(d4-d3+(d5-d6));// edge region of BC; barycentric coords (0, 1-w, w)\nreturn target.copy(b).addScaledVector(_vbc,w);// edge region of BC\n}// face region\nvar denom=1/(va+vb+vc);// u = va * denom\nv=vb*denom;w=vc*denom;return target.copy(a).addScaledVector(_vab,v).addScaledVector(_vac,w);}},{key:\"equals\",value:function equals(triangle){return triangle.a.equals(this.a)&&triangle.b.equals(this.b)&&triangle.c.equals(this.c);}}],[{key:\"getNormal\",value:function getNormal(a,b,c,target){target.subVectors(c,b);_v0$1.subVectors(a,b);target.cross(_v0$1);var targetLengthSq=target.lengthSq();if(targetLengthSq>0){return target.multiplyScalar(1/Math.sqrt(targetLengthSq));}return target.set(0,0,0);}// static/instance method to calculate barycentric coordinates\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n},{key:\"getBarycoord\",value:function getBarycoord(point,a,b,c,target){_v0$1.subVectors(c,a);_v1$3.subVectors(b,a);_v2$2.subVectors(point,a);var dot00=_v0$1.dot(_v0$1);var dot01=_v0$1.dot(_v1$3);var dot02=_v0$1.dot(_v2$2);var dot11=_v1$3.dot(_v1$3);var dot12=_v1$3.dot(_v2$2);var denom=dot00*dot11-dot01*dot01;// collinear or singular triangle\nif(denom===0){// arbitrary location outside of triangle?\n// not sure if this is the best idea, maybe should be returning undefined\nreturn target.set(-2,-1,-1);}var invDenom=1/denom;var u=(dot11*dot02-dot01*dot12)*invDenom;var v=(dot00*dot12-dot01*dot02)*invDenom;// barycentric coordinates must always sum to 1\nreturn target.set(1-u-v,v,u);}},{key:\"containsPoint\",value:function containsPoint(point,a,b,c){this.getBarycoord(point,a,b,c,_v3$1);return _v3$1.x>=0&&_v3$1.y>=0&&_v3$1.x+_v3$1.y<=1;}},{key:\"getUV\",value:function getUV(point,p1,p2,p3,uv1,uv2,uv3,target){this.getBarycoord(point,p1,p2,p3,_v3$1);target.set(0,0);target.addScaledVector(uv1,_v3$1.x);target.addScaledVector(uv2,_v3$1.y);target.addScaledVector(uv3,_v3$1.z);return target;}},{key:\"isFrontFacing\",value:function isFrontFacing(a,b,c,direction){_v0$1.subVectors(c,b);_v1$3.subVectors(a,b);// strictly front facing\nreturn _v0$1.cross(_v1$3).dot(direction)<0?true:false;}}]);return Triangle;}();var materialId=0;var Material=/*#__PURE__*/function(_EventDispatcher4){_inherits(Material,_EventDispatcher4);var _super6=_createSuper(Material);function Material(){var _this7;_classCallCheck(this,Material);_this7=_super6.call(this);Object.defineProperty(_assertThisInitialized(_this7),'id',{value:materialId++});_this7.uuid=generateUUID();_this7.name='';_this7.type='Material';_this7.fog=true;_this7.blending=NormalBlending;_this7.side=FrontSide;_this7.vertexColors=false;_this7.opacity=1;_this7.format=RGBAFormat;_this7.transparent=false;_this7.blendSrc=SrcAlphaFactor;_this7.blendDst=OneMinusSrcAlphaFactor;_this7.blendEquation=AddEquation;_this7.blendSrcAlpha=null;_this7.blendDstAlpha=null;_this7.blendEquationAlpha=null;_this7.depthFunc=LessEqualDepth;_this7.depthTest=true;_this7.depthWrite=true;_this7.stencilWriteMask=0xff;_this7.stencilFunc=AlwaysStencilFunc;_this7.stencilRef=0;_this7.stencilFuncMask=0xff;_this7.stencilFail=KeepStencilOp;_this7.stencilZFail=KeepStencilOp;_this7.stencilZPass=KeepStencilOp;_this7.stencilWrite=false;_this7.clippingPlanes=null;_this7.clipIntersection=false;_this7.clipShadows=false;_this7.shadowSide=null;_this7.colorWrite=true;_this7.precision=null;// override the renderer's default precision for this material\n_this7.polygonOffset=false;_this7.polygonOffsetFactor=0;_this7.polygonOffsetUnits=0;_this7.dithering=false;_this7.alphaToCoverage=false;_this7.premultipliedAlpha=false;_this7.visible=true;_this7.toneMapped=true;_this7.userData={};_this7.version=0;_this7._alphaTest=0;return _this7;}_createClass(Material,[{key:\"alphaTest\",get:function get(){return this._alphaTest;},set:function set(value){if(this._alphaTest>0!==value>0){this.version++;}this._alphaTest=value;}},{key:\"onBuild\",value:function/* shaderobject, renderer */onBuild(){}},{key:\"onBeforeRender\",value:function/* renderer, scene, camera, geometry, object, group */onBeforeRender(){}},{key:\"onBeforeCompile\",value:function/* shaderobject, renderer */onBeforeCompile(){}},{key:\"customProgramCacheKey\",value:function customProgramCacheKey(){return this.onBeforeCompile.toString();}},{key:\"setValues\",value:function setValues(values){if(values===undefined)return;for(var key in values){var newValue=values[key];if(newValue===undefined){console.warn('THREE.Material: \\''+key+'\\' parameter is undefined.');continue;}// for backward compatability if shading is set in the constructor\nif(key==='shading'){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=newValue===FlatShading?true:false;continue;}var currentValue=this[key];if(currentValue===undefined){console.warn('THREE.'+this.type+': \\''+key+'\\' is not a property of this material.');continue;}if(currentValue&&currentValue.isColor){currentValue.set(newValue);}else if(currentValue&&currentValue.isVector3&&newValue&&newValue.isVector3){currentValue.copy(newValue);}else{this[key]=newValue;}}}},{key:\"toJSON\",value:function toJSON(meta){var isRoot=meta===undefined||typeof meta==='string';if(isRoot){meta={textures:{},images:{}};}var data={metadata:{version:4.5,type:'Material',generator:'Material.toJSON'}};// standard Material serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(this.color&&this.color.isColor)data.color=this.color.getHex();if(this.roughness!==undefined)data.roughness=this.roughness;if(this.metalness!==undefined)data.metalness=this.metalness;if(this.sheen!==undefined)data.sheen=this.sheen;if(this.sheenTint&&this.sheenTint.isColor)data.sheenTint=this.sheenTint.getHex();if(this.sheenRoughness!==undefined)data.sheenRoughness=this.sheenRoughness;if(this.emissive&&this.emissive.isColor)data.emissive=this.emissive.getHex();if(this.emissiveIntensity&&this.emissiveIntensity!==1)data.emissiveIntensity=this.emissiveIntensity;if(this.specular&&this.specular.isColor)data.specular=this.specular.getHex();if(this.specularIntensity!==undefined)data.specularIntensity=this.specularIntensity;if(this.specularTint&&this.specularTint.isColor)data.specularTint=this.specularTint.getHex();if(this.shininess!==undefined)data.shininess=this.shininess;if(this.clearcoat!==undefined)data.clearcoat=this.clearcoat;if(this.clearcoatRoughness!==undefined)data.clearcoatRoughness=this.clearcoatRoughness;if(this.clearcoatMap&&this.clearcoatMap.isTexture){data.clearcoatMap=this.clearcoatMap.toJSON(meta).uuid;}if(this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture){data.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(meta).uuid;}if(this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture){data.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(meta).uuid;data.clearcoatNormalScale=this.clearcoatNormalScale.toArray();}if(this.map&&this.map.isTexture)data.map=this.map.toJSON(meta).uuid;if(this.matcap&&this.matcap.isTexture)data.matcap=this.matcap.toJSON(meta).uuid;if(this.alphaMap&&this.alphaMap.isTexture)data.alphaMap=this.alphaMap.toJSON(meta).uuid;if(this.lightMap&&this.lightMap.isTexture){data.lightMap=this.lightMap.toJSON(meta).uuid;data.lightMapIntensity=this.lightMapIntensity;}if(this.aoMap&&this.aoMap.isTexture){data.aoMap=this.aoMap.toJSON(meta).uuid;data.aoMapIntensity=this.aoMapIntensity;}if(this.bumpMap&&this.bumpMap.isTexture){data.bumpMap=this.bumpMap.toJSON(meta).uuid;data.bumpScale=this.bumpScale;}if(this.normalMap&&this.normalMap.isTexture){data.normalMap=this.normalMap.toJSON(meta).uuid;data.normalMapType=this.normalMapType;data.normalScale=this.normalScale.toArray();}if(this.displacementMap&&this.displacementMap.isTexture){data.displacementMap=this.displacementMap.toJSON(meta).uuid;data.displacementScale=this.displacementScale;data.displacementBias=this.displacementBias;}if(this.roughnessMap&&this.roughnessMap.isTexture)data.roughnessMap=this.roughnessMap.toJSON(meta).uuid;if(this.metalnessMap&&this.metalnessMap.isTexture)data.metalnessMap=this.metalnessMap.toJSON(meta).uuid;if(this.emissiveMap&&this.emissiveMap.isTexture)data.emissiveMap=this.emissiveMap.toJSON(meta).uuid;if(this.specularMap&&this.specularMap.isTexture)data.specularMap=this.specularMap.toJSON(meta).uuid;if(this.specularIntensityMap&&this.specularIntensityMap.isTexture)data.specularIntensityMap=this.specularIntensityMap.toJSON(meta).uuid;if(this.specularTintMap&&this.specularTintMap.isTexture)data.specularTintMap=this.specularTintMap.toJSON(meta).uuid;if(this.envMap&&this.envMap.isTexture){data.envMap=this.envMap.toJSON(meta).uuid;if(this.combine!==undefined)data.combine=this.combine;}if(this.envMapIntensity!==undefined)data.envMapIntensity=this.envMapIntensity;if(this.reflectivity!==undefined)data.reflectivity=this.reflectivity;if(this.refractionRatio!==undefined)data.refractionRatio=this.refractionRatio;if(this.gradientMap&&this.gradientMap.isTexture){data.gradientMap=this.gradientMap.toJSON(meta).uuid;}if(this.transmission!==undefined)data.transmission=this.transmission;if(this.transmissionMap&&this.transmissionMap.isTexture)data.transmissionMap=this.transmissionMap.toJSON(meta).uuid;if(this.thickness!==undefined)data.thickness=this.thickness;if(this.thicknessMap&&this.thicknessMap.isTexture)data.thicknessMap=this.thicknessMap.toJSON(meta).uuid;if(this.attenuationDistance!==undefined)data.attenuationDistance=this.attenuationDistance;if(this.attenuationTint!==undefined)data.attenuationTint=this.attenuationTint.getHex();if(this.size!==undefined)data.size=this.size;if(this.shadowSide!==null)data.shadowSide=this.shadowSide;if(this.sizeAttenuation!==undefined)data.sizeAttenuation=this.sizeAttenuation;if(this.blending!==NormalBlending)data.blending=this.blending;if(this.side!==FrontSide)data.side=this.side;if(this.vertexColors)data.vertexColors=true;if(this.opacity<1)data.opacity=this.opacity;if(this.format!==RGBAFormat)data.format=this.format;if(this.transparent===true)data.transparent=this.transparent;data.depthFunc=this.depthFunc;data.depthTest=this.depthTest;data.depthWrite=this.depthWrite;data.colorWrite=this.colorWrite;data.stencilWrite=this.stencilWrite;data.stencilWriteMask=this.stencilWriteMask;data.stencilFunc=this.stencilFunc;data.stencilRef=this.stencilRef;data.stencilFuncMask=this.stencilFuncMask;data.stencilFail=this.stencilFail;data.stencilZFail=this.stencilZFail;data.stencilZPass=this.stencilZPass;// rotation (SpriteMaterial)\nif(this.rotation&&this.rotation!==0)data.rotation=this.rotation;if(this.polygonOffset===true)data.polygonOffset=true;if(this.polygonOffsetFactor!==0)data.polygonOffsetFactor=this.polygonOffsetFactor;if(this.polygonOffsetUnits!==0)data.polygonOffsetUnits=this.polygonOffsetUnits;if(this.linewidth&&this.linewidth!==1)data.linewidth=this.linewidth;if(this.dashSize!==undefined)data.dashSize=this.dashSize;if(this.gapSize!==undefined)data.gapSize=this.gapSize;if(this.scale!==undefined)data.scale=this.scale;if(this.dithering===true)data.dithering=true;if(this.alphaTest>0)data.alphaTest=this.alphaTest;if(this.alphaToCoverage===true)data.alphaToCoverage=this.alphaToCoverage;if(this.premultipliedAlpha===true)data.premultipliedAlpha=this.premultipliedAlpha;if(this.wireframe===true)data.wireframe=this.wireframe;if(this.wireframeLinewidth>1)data.wireframeLinewidth=this.wireframeLinewidth;if(this.wireframeLinecap!=='round')data.wireframeLinecap=this.wireframeLinecap;if(this.wireframeLinejoin!=='round')data.wireframeLinejoin=this.wireframeLinejoin;if(this.flatShading===true)data.flatShading=this.flatShading;if(this.visible===false)data.visible=false;if(this.toneMapped===false)data.toneMapped=false;if(JSON.stringify(this.userData)!=='{}')data.userData=this.userData;// TODO: Copied from Object3D.toJSON\nfunction extractFromCache(cache){var values=[];for(var key in cache){var _data=cache[key];delete _data.metadata;values.push(_data);}return values;}if(isRoot){var textures=extractFromCache(meta.textures);var images=extractFromCache(meta.images);if(textures.length>0)data.textures=textures;if(images.length>0)data.images=images;}return data;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(source){this.name=source.name;this.fog=source.fog;this.blending=source.blending;this.side=source.side;this.vertexColors=source.vertexColors;this.opacity=source.opacity;this.format=source.format;this.transparent=source.transparent;this.blendSrc=source.blendSrc;this.blendDst=source.blendDst;this.blendEquation=source.blendEquation;this.blendSrcAlpha=source.blendSrcAlpha;this.blendDstAlpha=source.blendDstAlpha;this.blendEquationAlpha=source.blendEquationAlpha;this.depthFunc=source.depthFunc;this.depthTest=source.depthTest;this.depthWrite=source.depthWrite;this.stencilWriteMask=source.stencilWriteMask;this.stencilFunc=source.stencilFunc;this.stencilRef=source.stencilRef;this.stencilFuncMask=source.stencilFuncMask;this.stencilFail=source.stencilFail;this.stencilZFail=source.stencilZFail;this.stencilZPass=source.stencilZPass;this.stencilWrite=source.stencilWrite;var srcPlanes=source.clippingPlanes;var dstPlanes=null;if(srcPlanes!==null){var n=srcPlanes.length;dstPlanes=new Array(n);for(var _i29=0;_i29!==n;++_i29){dstPlanes[_i29]=srcPlanes[_i29].clone();}}this.clippingPlanes=dstPlanes;this.clipIntersection=source.clipIntersection;this.clipShadows=source.clipShadows;this.shadowSide=source.shadowSide;this.colorWrite=source.colorWrite;this.precision=source.precision;this.polygonOffset=source.polygonOffset;this.polygonOffsetFactor=source.polygonOffsetFactor;this.polygonOffsetUnits=source.polygonOffsetUnits;this.dithering=source.dithering;this.alphaTest=source.alphaTest;this.alphaToCoverage=source.alphaToCoverage;this.premultipliedAlpha=source.premultipliedAlpha;this.visible=source.visible;this.toneMapped=source.toneMapped;this.userData=JSON.parse(JSON.stringify(source.userData));return this;}},{key:\"dispose\",value:function dispose(){this.dispatchEvent({type:'dispose'});}},{key:\"needsUpdate\",set:function set(value){if(value===true)this.version++;}}]);return Material;}(EventDispatcher);Material.prototype.isMaterial=true;var _colorKeywords={'aliceblue':0xF0F8FF,'antiquewhite':0xFAEBD7,'aqua':0x00FFFF,'aquamarine':0x7FFFD4,'azure':0xF0FFFF,'beige':0xF5F5DC,'bisque':0xFFE4C4,'black':0x000000,'blanchedalmond':0xFFEBCD,'blue':0x0000FF,'blueviolet':0x8A2BE2,'brown':0xA52A2A,'burlywood':0xDEB887,'cadetblue':0x5F9EA0,'chartreuse':0x7FFF00,'chocolate':0xD2691E,'coral':0xFF7F50,'cornflowerblue':0x6495ED,'cornsilk':0xFFF8DC,'crimson':0xDC143C,'cyan':0x00FFFF,'darkblue':0x00008B,'darkcyan':0x008B8B,'darkgoldenrod':0xB8860B,'darkgray':0xA9A9A9,'darkgreen':0x006400,'darkgrey':0xA9A9A9,'darkkhaki':0xBDB76B,'darkmagenta':0x8B008B,'darkolivegreen':0x556B2F,'darkorange':0xFF8C00,'darkorchid':0x9932CC,'darkred':0x8B0000,'darksalmon':0xE9967A,'darkseagreen':0x8FBC8F,'darkslateblue':0x483D8B,'darkslategray':0x2F4F4F,'darkslategrey':0x2F4F4F,'darkturquoise':0x00CED1,'darkviolet':0x9400D3,'deeppink':0xFF1493,'deepskyblue':0x00BFFF,'dimgray':0x696969,'dimgrey':0x696969,'dodgerblue':0x1E90FF,'firebrick':0xB22222,'floralwhite':0xFFFAF0,'forestgreen':0x228B22,'fuchsia':0xFF00FF,'gainsboro':0xDCDCDC,'ghostwhite':0xF8F8FF,'gold':0xFFD700,'goldenrod':0xDAA520,'gray':0x808080,'green':0x008000,'greenyellow':0xADFF2F,'grey':0x808080,'honeydew':0xF0FFF0,'hotpink':0xFF69B4,'indianred':0xCD5C5C,'indigo':0x4B0082,'ivory':0xFFFFF0,'khaki':0xF0E68C,'lavender':0xE6E6FA,'lavenderblush':0xFFF0F5,'lawngreen':0x7CFC00,'lemonchiffon':0xFFFACD,'lightblue':0xADD8E6,'lightcoral':0xF08080,'lightcyan':0xE0FFFF,'lightgoldenrodyellow':0xFAFAD2,'lightgray':0xD3D3D3,'lightgreen':0x90EE90,'lightgrey':0xD3D3D3,'lightpink':0xFFB6C1,'lightsalmon':0xFFA07A,'lightseagreen':0x20B2AA,'lightskyblue':0x87CEFA,'lightslategray':0x778899,'lightslategrey':0x778899,'lightsteelblue':0xB0C4DE,'lightyellow':0xFFFFE0,'lime':0x00FF00,'limegreen':0x32CD32,'linen':0xFAF0E6,'magenta':0xFF00FF,'maroon':0x800000,'mediumaquamarine':0x66CDAA,'mediumblue':0x0000CD,'mediumorchid':0xBA55D3,'mediumpurple':0x9370DB,'mediumseagreen':0x3CB371,'mediumslateblue':0x7B68EE,'mediumspringgreen':0x00FA9A,'mediumturquoise':0x48D1CC,'mediumvioletred':0xC71585,'midnightblue':0x191970,'mintcream':0xF5FFFA,'mistyrose':0xFFE4E1,'moccasin':0xFFE4B5,'navajowhite':0xFFDEAD,'navy':0x000080,'oldlace':0xFDF5E6,'olive':0x808000,'olivedrab':0x6B8E23,'orange':0xFFA500,'orangered':0xFF4500,'orchid':0xDA70D6,'palegoldenrod':0xEEE8AA,'palegreen':0x98FB98,'paleturquoise':0xAFEEEE,'palevioletred':0xDB7093,'papayawhip':0xFFEFD5,'peachpuff':0xFFDAB9,'peru':0xCD853F,'pink':0xFFC0CB,'plum':0xDDA0DD,'powderblue':0xB0E0E6,'purple':0x800080,'rebeccapurple':0x663399,'red':0xFF0000,'rosybrown':0xBC8F8F,'royalblue':0x4169E1,'saddlebrown':0x8B4513,'salmon':0xFA8072,'sandybrown':0xF4A460,'seagreen':0x2E8B57,'seashell':0xFFF5EE,'sienna':0xA0522D,'silver':0xC0C0C0,'skyblue':0x87CEEB,'slateblue':0x6A5ACD,'slategray':0x708090,'slategrey':0x708090,'snow':0xFFFAFA,'springgreen':0x00FF7F,'steelblue':0x4682B4,'tan':0xD2B48C,'teal':0x008080,'thistle':0xD8BFD8,'tomato':0xFF6347,'turquoise':0x40E0D0,'violet':0xEE82EE,'wheat':0xF5DEB3,'white':0xFFFFFF,'whitesmoke':0xF5F5F5,'yellow':0xFFFF00,'yellowgreen':0x9ACD32};var _hslA={h:0,s:0,l:0};var _hslB={h:0,s:0,l:0};function hue2rgb(p,q,t){if(t<0)t+=1;if(t>1)t-=1;if(t<1/6)return p+(q-p)*6*t;if(t<1/2)return q;if(t<2/3)return p+(q-p)*6*(2/3-t);return p;}function SRGBToLinear(c){return c<0.04045?c*0.0773993808:Math.pow(c*0.9478672986+0.0521327014,2.4);}function LinearToSRGB(c){return c<0.0031308?c*12.92:1.055*Math.pow(c,0.41666)-0.055;}var Color=/*#__PURE__*/function(){function Color(r,g,b){_classCallCheck(this,Color);if(g===undefined&&b===undefined){// r is THREE.Color, hex or string\nreturn this.set(r);}return this.setRGB(r,g,b);}_createClass(Color,[{key:\"set\",value:function set(value){if(value&&value.isColor){this.copy(value);}else if(typeof value==='number'){this.setHex(value);}else if(typeof value==='string'){this.setStyle(value);}return this;}},{key:\"setScalar\",value:function setScalar(scalar){this.r=scalar;this.g=scalar;this.b=scalar;return this;}},{key:\"setHex\",value:function setHex(hex){hex=Math.floor(hex);this.r=(hex>>16&255)/255;this.g=(hex>>8&255)/255;this.b=(hex&255)/255;return this;}},{key:\"setRGB\",value:function setRGB(r,g,b){this.r=r;this.g=g;this.b=b;return this;}},{key:\"setHSL\",value:function setHSL(h,s,l){// h,s,l ranges are in 0.0 - 1.0\nh=euclideanModulo(h,1);s=clamp(s,0,1);l=clamp(l,0,1);if(s===0){this.r=this.g=this.b=l;}else{var p=l<=0.5?l*(1+s):l+s-l*s;var q=2*l-p;this.r=hue2rgb(q,p,h+1/3);this.g=hue2rgb(q,p,h);this.b=hue2rgb(q,p,h-1/3);}return this;}},{key:\"setStyle\",value:function setStyle(style){function handleAlpha(string){if(string===undefined)return;if(parseFloat(string)<1){console.warn('THREE.Color: Alpha component of '+style+' will be ignored.');}}var m;if(m=/^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)){// rgb / hsl\nvar color;var name=m[1];var components=m[2];switch(name){case'rgb':case'rgba':if(color=/^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(255,0,0) rgba(255,0,0,0.5)\nthis.r=Math.min(255,parseInt(color[1],10))/255;this.g=Math.min(255,parseInt(color[2],10))/255;this.b=Math.min(255,parseInt(color[3],10))/255;handleAlpha(color[4]);return this;}if(color=/^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\nthis.r=Math.min(100,parseInt(color[1],10))/100;this.g=Math.min(100,parseInt(color[2],10))/100;this.b=Math.min(100,parseInt(color[3],10))/100;handleAlpha(color[4]);return this;}break;case'hsl':case'hsla':if(color=/^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)){// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\nvar h=parseFloat(color[1])/360;var s=parseInt(color[2],10)/100;var l=parseInt(color[3],10)/100;handleAlpha(color[4]);return this.setHSL(h,s,l);}break;}}else if(m=/^\\#([A-Fa-f\\d]+)$/.exec(style)){// hex color\nvar hex=m[1];var size=hex.length;if(size===3){// #ff0\nthis.r=parseInt(hex.charAt(0)+hex.charAt(0),16)/255;this.g=parseInt(hex.charAt(1)+hex.charAt(1),16)/255;this.b=parseInt(hex.charAt(2)+hex.charAt(2),16)/255;return this;}else if(size===6){// #ff0000\nthis.r=parseInt(hex.charAt(0)+hex.charAt(1),16)/255;this.g=parseInt(hex.charAt(2)+hex.charAt(3),16)/255;this.b=parseInt(hex.charAt(4)+hex.charAt(5),16)/255;return this;}}if(style&&style.length>0){return this.setColorName(style);}return this;}},{key:\"setColorName\",value:function setColorName(style){// color keywords\nvar hex=_colorKeywords[style.toLowerCase()];if(hex!==undefined){// red\nthis.setHex(hex);}else{// unknown color\nconsole.warn('THREE.Color: Unknown color '+style);}return this;}},{key:\"clone\",value:function clone(){return new this.constructor(this.r,this.g,this.b);}},{key:\"copy\",value:function copy(color){this.r=color.r;this.g=color.g;this.b=color.b;return this;}},{key:\"copyGammaToLinear\",value:function copyGammaToLinear(color){var gammaFactor=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2.0;this.r=Math.pow(color.r,gammaFactor);this.g=Math.pow(color.g,gammaFactor);this.b=Math.pow(color.b,gammaFactor);return this;}},{key:\"copyLinearToGamma\",value:function copyLinearToGamma(color){var gammaFactor=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2.0;var safeInverse=gammaFactor>0?1.0/gammaFactor:1.0;this.r=Math.pow(color.r,safeInverse);this.g=Math.pow(color.g,safeInverse);this.b=Math.pow(color.b,safeInverse);return this;}},{key:\"convertGammaToLinear\",value:function convertGammaToLinear(gammaFactor){this.copyGammaToLinear(this,gammaFactor);return this;}},{key:\"convertLinearToGamma\",value:function convertLinearToGamma(gammaFactor){this.copyLinearToGamma(this,gammaFactor);return this;}},{key:\"copySRGBToLinear\",value:function copySRGBToLinear(color){this.r=SRGBToLinear(color.r);this.g=SRGBToLinear(color.g);this.b=SRGBToLinear(color.b);return this;}},{key:\"copyLinearToSRGB\",value:function copyLinearToSRGB(color){this.r=LinearToSRGB(color.r);this.g=LinearToSRGB(color.g);this.b=LinearToSRGB(color.b);return this;}},{key:\"convertSRGBToLinear\",value:function convertSRGBToLinear(){this.copySRGBToLinear(this);return this;}},{key:\"convertLinearToSRGB\",value:function convertLinearToSRGB(){this.copyLinearToSRGB(this);return this;}},{key:\"getHex\",value:function getHex(){return this.r*255<<16^this.g*255<<8^this.b*255<<0;}},{key:\"getHexString\",value:function getHexString(){return('000000'+this.getHex().toString(16)).slice(-6);}},{key:\"getHSL\",value:function getHSL(target){// h,s,l ranges are in 0.0 - 1.0\nvar r=this.r,g=this.g,b=this.b;var max=Math.max(r,g,b);var min=Math.min(r,g,b);var hue,saturation;var lightness=(min+max)/2.0;if(min===max){hue=0;saturation=0;}else{var delta=max-min;saturation=lightness<=0.5?delta/(max+min):delta/(2-max-min);switch(max){case r:hue=(g-b)/delta+(g<b?6:0);break;case g:hue=(b-r)/delta+2;break;case b:hue=(r-g)/delta+4;break;}hue/=6;}target.h=hue;target.s=saturation;target.l=lightness;return target;}},{key:\"getStyle\",value:function getStyle(){return'rgb('+(this.r*255|0)+','+(this.g*255|0)+','+(this.b*255|0)+')';}},{key:\"offsetHSL\",value:function offsetHSL(h,s,l){this.getHSL(_hslA);_hslA.h+=h;_hslA.s+=s;_hslA.l+=l;this.setHSL(_hslA.h,_hslA.s,_hslA.l);return this;}},{key:\"add\",value:function add(color){this.r+=color.r;this.g+=color.g;this.b+=color.b;return this;}},{key:\"addColors\",value:function addColors(color1,color2){this.r=color1.r+color2.r;this.g=color1.g+color2.g;this.b=color1.b+color2.b;return this;}},{key:\"addScalar\",value:function addScalar(s){this.r+=s;this.g+=s;this.b+=s;return this;}},{key:\"sub\",value:function sub(color){this.r=Math.max(0,this.r-color.r);this.g=Math.max(0,this.g-color.g);this.b=Math.max(0,this.b-color.b);return this;}},{key:\"multiply\",value:function multiply(color){this.r*=color.r;this.g*=color.g;this.b*=color.b;return this;}},{key:\"multiplyScalar\",value:function multiplyScalar(s){this.r*=s;this.g*=s;this.b*=s;return this;}},{key:\"lerp\",value:function lerp(color,alpha){this.r+=(color.r-this.r)*alpha;this.g+=(color.g-this.g)*alpha;this.b+=(color.b-this.b)*alpha;return this;}},{key:\"lerpColors\",value:function lerpColors(color1,color2,alpha){this.r=color1.r+(color2.r-color1.r)*alpha;this.g=color1.g+(color2.g-color1.g)*alpha;this.b=color1.b+(color2.b-color1.b)*alpha;return this;}},{key:\"lerpHSL\",value:function lerpHSL(color,alpha){this.getHSL(_hslA);color.getHSL(_hslB);var h=lerp(_hslA.h,_hslB.h,alpha);var s=lerp(_hslA.s,_hslB.s,alpha);var l=lerp(_hslA.l,_hslB.l,alpha);this.setHSL(h,s,l);return this;}},{key:\"equals\",value:function equals(c){return c.r===this.r&&c.g===this.g&&c.b===this.b;}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.r=array[offset];this.g=array[offset+1];this.b=array[offset+2];return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;array[offset]=this.r;array[offset+1]=this.g;array[offset+2]=this.b;return array;}},{key:\"fromBufferAttribute\",value:function fromBufferAttribute(attribute,index){this.r=attribute.getX(index);this.g=attribute.getY(index);this.b=attribute.getZ(index);if(attribute.normalized===true){// assuming Uint8Array\nthis.r/=255;this.g/=255;this.b/=255;}return this;}},{key:\"toJSON\",value:function toJSON(){return this.getHex();}}]);return Color;}();Color.NAMES=_colorKeywords;Color.prototype.isColor=true;Color.prototype.r=1;Color.prototype.g=1;Color.prototype.b=1;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n * }\r\n */var MeshBasicMaterial=/*#__PURE__*/function(_Material){_inherits(MeshBasicMaterial,_Material);var _super7=_createSuper(MeshBasicMaterial);function MeshBasicMaterial(parameters){var _this8;_classCallCheck(this,MeshBasicMaterial);_this8=_super7.call(this);_this8.type='MeshBasicMaterial';_this8.color=new Color(0xffffff);// emissive\n_this8.map=null;_this8.lightMap=null;_this8.lightMapIntensity=1.0;_this8.aoMap=null;_this8.aoMapIntensity=1.0;_this8.specularMap=null;_this8.alphaMap=null;_this8.envMap=null;_this8.combine=MultiplyOperation;_this8.reflectivity=1;_this8.refractionRatio=0.98;_this8.wireframe=false;_this8.wireframeLinewidth=1;_this8.wireframeLinecap='round';_this8.wireframeLinejoin='round';_this8.setValues(parameters);return _this8;}_createClass(MeshBasicMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshBasicMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;return this;}}]);return MeshBasicMaterial;}(Material);MeshBasicMaterial.prototype.isMeshBasicMaterial=true;var _vector$9=/*@__PURE__*/new Vector3();var _vector2$1=/*@__PURE__*/new Vector2();var BufferAttribute=/*#__PURE__*/function(){function BufferAttribute(array,itemSize,normalized){_classCallCheck(this,BufferAttribute);if(Array.isArray(array)){throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');}this.name='';this.array=array;this.itemSize=itemSize;this.count=array!==undefined?array.length/itemSize:0;this.normalized=normalized===true;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;}_createClass(BufferAttribute,[{key:\"onUploadCallback\",value:function onUploadCallback(){}},{key:\"needsUpdate\",set:function set(value){if(value===true)this.version++;}},{key:\"setUsage\",value:function setUsage(value){this.usage=value;return this;}},{key:\"copy\",value:function copy(source){this.name=source.name;this.array=new source.array.constructor(source.array);this.itemSize=source.itemSize;this.count=source.count;this.normalized=source.normalized;this.usage=source.usage;return this;}},{key:\"copyAt\",value:function copyAt(index1,attribute,index2){index1*=this.itemSize;index2*=attribute.itemSize;for(var _i30=0,l=this.itemSize;_i30<l;_i30++){this.array[index1+_i30]=attribute.array[index2+_i30];}return this;}},{key:\"copyArray\",value:function copyArray(array){this.array.set(array);return this;}},{key:\"copyColorsArray\",value:function copyColorsArray(colors){var array=this.array;var offset=0;for(var _i31=0,l=colors.length;_i31<l;_i31++){var color=colors[_i31];if(color===undefined){console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined',_i31);color=new Color();}array[offset++]=color.r;array[offset++]=color.g;array[offset++]=color.b;}return this;}},{key:\"copyVector2sArray\",value:function copyVector2sArray(vectors){var array=this.array;var offset=0;for(var _i32=0,l=vectors.length;_i32<l;_i32++){var vector=vectors[_i32];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined',_i32);vector=new Vector2();}array[offset++]=vector.x;array[offset++]=vector.y;}return this;}},{key:\"copyVector3sArray\",value:function copyVector3sArray(vectors){var array=this.array;var offset=0;for(var _i33=0,l=vectors.length;_i33<l;_i33++){var vector=vectors[_i33];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined',_i33);vector=new Vector3();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;}return this;}},{key:\"copyVector4sArray\",value:function copyVector4sArray(vectors){var array=this.array;var offset=0;for(var _i34=0,l=vectors.length;_i34<l;_i34++){var vector=vectors[_i34];if(vector===undefined){console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined',_i34);vector=new Vector4();}array[offset++]=vector.x;array[offset++]=vector.y;array[offset++]=vector.z;array[offset++]=vector.w;}return this;}},{key:\"applyMatrix3\",value:function applyMatrix3(m){if(this.itemSize===2){for(var _i35=0,l=this.count;_i35<l;_i35++){_vector2$1.fromBufferAttribute(this,_i35);_vector2$1.applyMatrix3(m);this.setXY(_i35,_vector2$1.x,_vector2$1.y);}}else if(this.itemSize===3){for(var _i36=0,_l2=this.count;_i36<_l2;_i36++){_vector$9.fromBufferAttribute(this,_i36);_vector$9.applyMatrix3(m);this.setXYZ(_i36,_vector$9.x,_vector$9.y,_vector$9.z);}}return this;}},{key:\"applyMatrix4\",value:function applyMatrix4(m){for(var _i37=0,l=this.count;_i37<l;_i37++){_vector$9.x=this.getX(_i37);_vector$9.y=this.getY(_i37);_vector$9.z=this.getZ(_i37);_vector$9.applyMatrix4(m);this.setXYZ(_i37,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}},{key:\"applyNormalMatrix\",value:function applyNormalMatrix(m){for(var _i38=0,l=this.count;_i38<l;_i38++){_vector$9.x=this.getX(_i38);_vector$9.y=this.getY(_i38);_vector$9.z=this.getZ(_i38);_vector$9.applyNormalMatrix(m);this.setXYZ(_i38,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}},{key:\"transformDirection\",value:function transformDirection(m){for(var _i39=0,l=this.count;_i39<l;_i39++){_vector$9.x=this.getX(_i39);_vector$9.y=this.getY(_i39);_vector$9.z=this.getZ(_i39);_vector$9.transformDirection(m);this.setXYZ(_i39,_vector$9.x,_vector$9.y,_vector$9.z);}return this;}},{key:\"set\",value:function set(value){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.array.set(value,offset);return this;}},{key:\"getX\",value:function getX(index){return this.array[index*this.itemSize];}},{key:\"setX\",value:function setX(index,x){this.array[index*this.itemSize]=x;return this;}},{key:\"getY\",value:function getY(index){return this.array[index*this.itemSize+1];}},{key:\"setY\",value:function setY(index,y){this.array[index*this.itemSize+1]=y;return this;}},{key:\"getZ\",value:function getZ(index){return this.array[index*this.itemSize+2];}},{key:\"setZ\",value:function setZ(index,z){this.array[index*this.itemSize+2]=z;return this;}},{key:\"getW\",value:function getW(index){return this.array[index*this.itemSize+3];}},{key:\"setW\",value:function setW(index,w){this.array[index*this.itemSize+3]=w;return this;}},{key:\"setXY\",value:function setXY(index,x,y){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;return this;}},{key:\"setXYZ\",value:function setXYZ(index,x,y,z){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;return this;}},{key:\"setXYZW\",value:function setXYZW(index,x,y,z,w){index*=this.itemSize;this.array[index+0]=x;this.array[index+1]=y;this.array[index+2]=z;this.array[index+3]=w;return this;}},{key:\"onUpload\",value:function onUpload(callback){this.onUploadCallback=callback;return this;}},{key:\"clone\",value:function clone(){return new this.constructor(this.array,this.itemSize).copy(this);}},{key:\"toJSON\",value:function toJSON(){var data={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};if(this.name!=='')data.name=this.name;if(this.usage!==StaticDrawUsage)data.usage=this.usage;if(this.updateRange.offset!==0||this.updateRange.count!==-1)data.updateRange=this.updateRange;return data;}}]);return BufferAttribute;}();BufferAttribute.prototype.isBufferAttribute=true;//\nvar Int8BufferAttribute=/*#__PURE__*/function(_BufferAttribute){_inherits(Int8BufferAttribute,_BufferAttribute);var _super8=_createSuper(Int8BufferAttribute);function Int8BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Int8BufferAttribute);return _super8.call(this,new Int8Array(array),itemSize,normalized);}return _createClass(Int8BufferAttribute);}(BufferAttribute);var Uint8BufferAttribute=/*#__PURE__*/function(_BufferAttribute2){_inherits(Uint8BufferAttribute,_BufferAttribute2);var _super9=_createSuper(Uint8BufferAttribute);function Uint8BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Uint8BufferAttribute);return _super9.call(this,new Uint8Array(array),itemSize,normalized);}return _createClass(Uint8BufferAttribute);}(BufferAttribute);var Uint8ClampedBufferAttribute=/*#__PURE__*/function(_BufferAttribute3){_inherits(Uint8ClampedBufferAttribute,_BufferAttribute3);var _super10=_createSuper(Uint8ClampedBufferAttribute);function Uint8ClampedBufferAttribute(array,itemSize,normalized){_classCallCheck(this,Uint8ClampedBufferAttribute);return _super10.call(this,new Uint8ClampedArray(array),itemSize,normalized);}return _createClass(Uint8ClampedBufferAttribute);}(BufferAttribute);var Int16BufferAttribute=/*#__PURE__*/function(_BufferAttribute4){_inherits(Int16BufferAttribute,_BufferAttribute4);var _super11=_createSuper(Int16BufferAttribute);function Int16BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Int16BufferAttribute);return _super11.call(this,new Int16Array(array),itemSize,normalized);}return _createClass(Int16BufferAttribute);}(BufferAttribute);var Uint16BufferAttribute=/*#__PURE__*/function(_BufferAttribute5){_inherits(Uint16BufferAttribute,_BufferAttribute5);var _super12=_createSuper(Uint16BufferAttribute);function Uint16BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Uint16BufferAttribute);return _super12.call(this,new Uint16Array(array),itemSize,normalized);}return _createClass(Uint16BufferAttribute);}(BufferAttribute);var Int32BufferAttribute=/*#__PURE__*/function(_BufferAttribute6){_inherits(Int32BufferAttribute,_BufferAttribute6);var _super13=_createSuper(Int32BufferAttribute);function Int32BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Int32BufferAttribute);return _super13.call(this,new Int32Array(array),itemSize,normalized);}return _createClass(Int32BufferAttribute);}(BufferAttribute);var Uint32BufferAttribute=/*#__PURE__*/function(_BufferAttribute7){_inherits(Uint32BufferAttribute,_BufferAttribute7);var _super14=_createSuper(Uint32BufferAttribute);function Uint32BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Uint32BufferAttribute);return _super14.call(this,new Uint32Array(array),itemSize,normalized);}return _createClass(Uint32BufferAttribute);}(BufferAttribute);var Float16BufferAttribute=/*#__PURE__*/function(_BufferAttribute8){_inherits(Float16BufferAttribute,_BufferAttribute8);var _super15=_createSuper(Float16BufferAttribute);function Float16BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Float16BufferAttribute);return _super15.call(this,new Uint16Array(array),itemSize,normalized);}return _createClass(Float16BufferAttribute);}(BufferAttribute);Float16BufferAttribute.prototype.isFloat16BufferAttribute=true;var Float32BufferAttribute=/*#__PURE__*/function(_BufferAttribute9){_inherits(Float32BufferAttribute,_BufferAttribute9);var _super16=_createSuper(Float32BufferAttribute);function Float32BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Float32BufferAttribute);return _super16.call(this,new Float32Array(array),itemSize,normalized);}return _createClass(Float32BufferAttribute);}(BufferAttribute);var Float64BufferAttribute=/*#__PURE__*/function(_BufferAttribute10){_inherits(Float64BufferAttribute,_BufferAttribute10);var _super17=_createSuper(Float64BufferAttribute);function Float64BufferAttribute(array,itemSize,normalized){_classCallCheck(this,Float64BufferAttribute);return _super17.call(this,new Float64Array(array),itemSize,normalized);}return _createClass(Float64BufferAttribute);}(BufferAttribute);var _id=0;var _m1=/*@__PURE__*/new Matrix4();var _obj=/*@__PURE__*/new Object3D();var _offset=/*@__PURE__*/new Vector3();var _box$1=/*@__PURE__*/new Box3();var _boxMorphTargets=/*@__PURE__*/new Box3();var _vector$8=/*@__PURE__*/new Vector3();var BufferGeometry=/*#__PURE__*/function(_EventDispatcher5){_inherits(BufferGeometry,_EventDispatcher5);var _super18=_createSuper(BufferGeometry);function BufferGeometry(){var _this9;_classCallCheck(this,BufferGeometry);_this9=_super18.call(this);Object.defineProperty(_assertThisInitialized(_this9),'id',{value:_id++});_this9.uuid=generateUUID();_this9.name='';_this9.type='BufferGeometry';_this9.index=null;_this9.attributes={};_this9.morphAttributes={};_this9.morphTargetsRelative=false;_this9.groups=[];_this9.boundingBox=null;_this9.boundingSphere=null;_this9.drawRange={start:0,count:Infinity};_this9.userData={};return _this9;}_createClass(BufferGeometry,[{key:\"getIndex\",value:function getIndex(){return this.index;}},{key:\"setIndex\",value:function setIndex(index){if(Array.isArray(index)){this.index=new(arrayMax(index)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(index,1);}else{this.index=index;}return this;}},{key:\"getAttribute\",value:function getAttribute(name){return this.attributes[name];}},{key:\"setAttribute\",value:function setAttribute(name,attribute){this.attributes[name]=attribute;return this;}},{key:\"deleteAttribute\",value:function deleteAttribute(name){delete this.attributes[name];return this;}},{key:\"hasAttribute\",value:function hasAttribute(name){return this.attributes[name]!==undefined;}},{key:\"addGroup\",value:function addGroup(start,count){var materialIndex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;this.groups.push({start:start,count:count,materialIndex:materialIndex});}},{key:\"clearGroups\",value:function clearGroups(){this.groups=[];}},{key:\"setDrawRange\",value:function setDrawRange(start,count){this.drawRange.start=start;this.drawRange.count=count;}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix){var position=this.attributes.position;if(position!==undefined){position.applyMatrix4(matrix);position.needsUpdate=true;}var normal=this.attributes.normal;if(normal!==undefined){var normalMatrix=new Matrix3().getNormalMatrix(matrix);normal.applyNormalMatrix(normalMatrix);normal.needsUpdate=true;}var tangent=this.attributes.tangent;if(tangent!==undefined){tangent.transformDirection(matrix);tangent.needsUpdate=true;}if(this.boundingBox!==null){this.computeBoundingBox();}if(this.boundingSphere!==null){this.computeBoundingSphere();}return this;}},{key:\"applyQuaternion\",value:function applyQuaternion(q){_m1.makeRotationFromQuaternion(q);this.applyMatrix4(_m1);return this;}},{key:\"rotateX\",value:function rotateX(angle){// rotate geometry around world x-axis\n_m1.makeRotationX(angle);this.applyMatrix4(_m1);return this;}},{key:\"rotateY\",value:function rotateY(angle){// rotate geometry around world y-axis\n_m1.makeRotationY(angle);this.applyMatrix4(_m1);return this;}},{key:\"rotateZ\",value:function rotateZ(angle){// rotate geometry around world z-axis\n_m1.makeRotationZ(angle);this.applyMatrix4(_m1);return this;}},{key:\"translate\",value:function translate(x,y,z){// translate geometry\n_m1.makeTranslation(x,y,z);this.applyMatrix4(_m1);return this;}},{key:\"scale\",value:function scale(x,y,z){// scale geometry\n_m1.makeScale(x,y,z);this.applyMatrix4(_m1);return this;}},{key:\"lookAt\",value:function lookAt(vector){_obj.lookAt(vector);_obj.updateMatrix();this.applyMatrix4(_obj.matrix);return this;}},{key:\"center\",value:function center(){this.computeBoundingBox();this.boundingBox.getCenter(_offset).negate();this.translate(_offset.x,_offset.y,_offset.z);return this;}},{key:\"setFromPoints\",value:function setFromPoints(points){var position=[];for(var _i40=0,l=points.length;_i40<l;_i40++){var point=points[_i40];position.push(point.x,point.y,point.z||0);}this.setAttribute('position',new Float32BufferAttribute(position,3));return this;}},{key:\"computeBoundingBox\",value:function computeBoundingBox(){if(this.boundingBox===null){this.boundingBox=new Box3();}var position=this.attributes.position;var morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingBox.set(new Vector3(-Infinity,-Infinity,-Infinity),new Vector3(+Infinity,+Infinity,+Infinity));return;}if(position!==undefined){this.boundingBox.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(var _i41=0,il=morphAttributesPosition.length;_i41<il;_i41++){var morphAttribute=morphAttributesPosition[_i41];_box$1.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(this.boundingBox.min,_box$1.min);this.boundingBox.expandByPoint(_vector$8);_vector$8.addVectors(this.boundingBox.max,_box$1.max);this.boundingBox.expandByPoint(_vector$8);}else{this.boundingBox.expandByPoint(_box$1.min);this.boundingBox.expandByPoint(_box$1.max);}}}}else{this.boundingBox.makeEmpty();}if(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z)){console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.',this);}}},{key:\"computeBoundingSphere\",value:function computeBoundingSphere(){if(this.boundingSphere===null){this.boundingSphere=new Sphere();}var position=this.attributes.position;var morphAttributesPosition=this.morphAttributes.position;if(position&&position.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".',this);this.boundingSphere.set(new Vector3(),Infinity);return;}if(position){// first, find the center of the bounding sphere\nvar center=this.boundingSphere.center;_box$1.setFromBufferAttribute(position);// process morph attributes if present\nif(morphAttributesPosition){for(var _i42=0,il=morphAttributesPosition.length;_i42<il;_i42++){var morphAttribute=morphAttributesPosition[_i42];_boxMorphTargets.setFromBufferAttribute(morphAttribute);if(this.morphTargetsRelative){_vector$8.addVectors(_box$1.min,_boxMorphTargets.min);_box$1.expandByPoint(_vector$8);_vector$8.addVectors(_box$1.max,_boxMorphTargets.max);_box$1.expandByPoint(_vector$8);}else{_box$1.expandByPoint(_boxMorphTargets.min);_box$1.expandByPoint(_boxMorphTargets.max);}}}_box$1.getCenter(center);// second, try to find a boundingSphere with a radius smaller than the\n// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\nvar maxRadiusSq=0;for(var _i43=0,_il=position.count;_i43<_il;_i43++){_vector$8.fromBufferAttribute(position,_i43);maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}// process morph attributes if present\nif(morphAttributesPosition){for(var _i44=0,_il2=morphAttributesPosition.length;_i44<_il2;_i44++){var _morphAttribute=morphAttributesPosition[_i44];var morphTargetsRelative=this.morphTargetsRelative;for(var j=0,jl=_morphAttribute.count;j<jl;j++){_vector$8.fromBufferAttribute(_morphAttribute,j);if(morphTargetsRelative){_offset.fromBufferAttribute(position,j);_vector$8.add(_offset);}maxRadiusSq=Math.max(maxRadiusSq,center.distanceToSquared(_vector$8));}}}this.boundingSphere.radius=Math.sqrt(maxRadiusSq);if(isNaN(this.boundingSphere.radius)){console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.',this);}}}},{key:\"computeTangents\",value:function computeTangents(){var index=this.index;var attributes=this.attributes;// based on http://www.terathon.com/code/tangent.html\n// (per vertex tangents)\nif(index===null||attributes.position===undefined||attributes.normal===undefined||attributes.uv===undefined){console.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');return;}var indices=index.array;var positions=attributes.position.array;var normals=attributes.normal.array;var uvs=attributes.uv.array;var nVertices=positions.length/3;if(attributes.tangent===undefined){this.setAttribute('tangent',new BufferAttribute(new Float32Array(4*nVertices),4));}var tangents=attributes.tangent.array;var tan1=[],tan2=[];for(var _i45=0;_i45<nVertices;_i45++){tan1[_i45]=new Vector3();tan2[_i45]=new Vector3();}var vA=new Vector3(),vB=new Vector3(),vC=new Vector3(),uvA=new Vector2(),uvB=new Vector2(),uvC=new Vector2(),sdir=new Vector3(),tdir=new Vector3();function handleTriangle(a,b,c){vA.fromArray(positions,a*3);vB.fromArray(positions,b*3);vC.fromArray(positions,c*3);uvA.fromArray(uvs,a*2);uvB.fromArray(uvs,b*2);uvC.fromArray(uvs,c*2);vB.sub(vA);vC.sub(vA);uvB.sub(uvA);uvC.sub(uvA);var r=1.0/(uvB.x*uvC.y-uvC.x*uvB.y);// silently ignore degenerate uv triangles having coincident or colinear vertices\nif(!isFinite(r))return;sdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC,-uvB.y).multiplyScalar(r);tdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB,-uvC.x).multiplyScalar(r);tan1[a].add(sdir);tan1[b].add(sdir);tan1[c].add(sdir);tan2[a].add(tdir);tan2[b].add(tdir);tan2[c].add(tdir);}var groups=this.groups;if(groups.length===0){groups=[{start:0,count:indices.length}];}for(var _i46=0,il=groups.length;_i46<il;++_i46){var group=groups[_i46];var start=group.start;var count=group.count;for(var j=start,jl=start+count;j<jl;j+=3){handleTriangle(indices[j+0],indices[j+1],indices[j+2]);}}var tmp=new Vector3(),tmp2=new Vector3();var n=new Vector3(),n2=new Vector3();function handleVertex(v){n.fromArray(normals,v*3);n2.copy(n);var t=tan1[v];// Gram-Schmidt orthogonalize\ntmp.copy(t);tmp.sub(n.multiplyScalar(n.dot(t))).normalize();// Calculate handedness\ntmp2.crossVectors(n2,t);var test=tmp2.dot(tan2[v]);var w=test<0.0?-1.0:1.0;tangents[v*4]=tmp.x;tangents[v*4+1]=tmp.y;tangents[v*4+2]=tmp.z;tangents[v*4+3]=w;}for(var _i47=0,_il3=groups.length;_i47<_il3;++_i47){var _group=groups[_i47];var _start2=_group.start;var _count=_group.count;for(var _j=_start2,_jl=_start2+_count;_j<_jl;_j+=3){handleVertex(indices[_j+0]);handleVertex(indices[_j+1]);handleVertex(indices[_j+2]);}}}},{key:\"computeVertexNormals\",value:function computeVertexNormals(){var index=this.index;var positionAttribute=this.getAttribute('position');if(positionAttribute!==undefined){var normalAttribute=this.getAttribute('normal');if(normalAttribute===undefined){normalAttribute=new BufferAttribute(new Float32Array(positionAttribute.count*3),3);this.setAttribute('normal',normalAttribute);}else{// reset existing normals to zero\nfor(var _i48=0,il=normalAttribute.count;_i48<il;_i48++){normalAttribute.setXYZ(_i48,0,0,0);}}var pA=new Vector3(),pB=new Vector3(),pC=new Vector3();var nA=new Vector3(),nB=new Vector3(),nC=new Vector3();var cb=new Vector3(),ab=new Vector3();// indexed elements\nif(index){for(var _i49=0,_il4=index.count;_i49<_il4;_i49+=3){var vA=index.getX(_i49+0);var vB=index.getX(_i49+1);var vC=index.getX(_i49+2);pA.fromBufferAttribute(positionAttribute,vA);pB.fromBufferAttribute(positionAttribute,vB);pC.fromBufferAttribute(positionAttribute,vC);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);nA.fromBufferAttribute(normalAttribute,vA);nB.fromBufferAttribute(normalAttribute,vB);nC.fromBufferAttribute(normalAttribute,vC);nA.add(cb);nB.add(cb);nC.add(cb);normalAttribute.setXYZ(vA,nA.x,nA.y,nA.z);normalAttribute.setXYZ(vB,nB.x,nB.y,nB.z);normalAttribute.setXYZ(vC,nC.x,nC.y,nC.z);}}else{// non-indexed elements (unconnected triangle soup)\nfor(var _i50=0,_il5=positionAttribute.count;_i50<_il5;_i50+=3){pA.fromBufferAttribute(positionAttribute,_i50+0);pB.fromBufferAttribute(positionAttribute,_i50+1);pC.fromBufferAttribute(positionAttribute,_i50+2);cb.subVectors(pC,pB);ab.subVectors(pA,pB);cb.cross(ab);normalAttribute.setXYZ(_i50+0,cb.x,cb.y,cb.z);normalAttribute.setXYZ(_i50+1,cb.x,cb.y,cb.z);normalAttribute.setXYZ(_i50+2,cb.x,cb.y,cb.z);}}this.normalizeNormals();normalAttribute.needsUpdate=true;}}},{key:\"merge\",value:function merge(geometry,offset){if(!(geometry&&geometry.isBufferGeometry)){console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.',geometry);return;}if(offset===undefined){offset=0;console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '+'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');}var attributes=this.attributes;for(var key in attributes){if(geometry.attributes[key]===undefined)continue;var attribute1=attributes[key];var attributeArray1=attribute1.array;var attribute2=geometry.attributes[key];var attributeArray2=attribute2.array;var attributeOffset=attribute2.itemSize*offset;var length=Math.min(attributeArray2.length,attributeArray1.length-attributeOffset);for(var _i51=0,j=attributeOffset;_i51<length;_i51++,j++){attributeArray1[j]=attributeArray2[_i51];}}return this;}},{key:\"normalizeNormals\",value:function normalizeNormals(){var normals=this.attributes.normal;for(var _i52=0,il=normals.count;_i52<il;_i52++){_vector$8.fromBufferAttribute(normals,_i52);_vector$8.normalize();normals.setXYZ(_i52,_vector$8.x,_vector$8.y,_vector$8.z);}}},{key:\"toNonIndexed\",value:function toNonIndexed(){function convertBufferAttribute(attribute,indices){var array=attribute.array;var itemSize=attribute.itemSize;var normalized=attribute.normalized;var array2=new array.constructor(indices.length*itemSize);var index=0,index2=0;for(var _i53=0,l=indices.length;_i53<l;_i53++){if(attribute.isInterleavedBufferAttribute){index=indices[_i53]*attribute.data.stride+attribute.offset;}else{index=indices[_i53]*itemSize;}for(var j=0;j<itemSize;j++){array2[index2++]=array[index++];}}return new BufferAttribute(array2,itemSize,normalized);}//\nif(this.index===null){console.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');return this;}var geometry2=new BufferGeometry();var indices=this.index.array;var attributes=this.attributes;// attributes\nfor(var name in attributes){var attribute=attributes[name];var newAttribute=convertBufferAttribute(attribute,indices);geometry2.setAttribute(name,newAttribute);}// morph attributes\nvar morphAttributes=this.morphAttributes;for(var _name in morphAttributes){var morphArray=[];var morphAttribute=morphAttributes[_name];// morphAttribute: array of Float32BufferAttributes\nfor(var _i54=0,il=morphAttribute.length;_i54<il;_i54++){var _attribute=morphAttribute[_i54];var _newAttribute=convertBufferAttribute(_attribute,indices);morphArray.push(_newAttribute);}geometry2.morphAttributes[_name]=morphArray;}geometry2.morphTargetsRelative=this.morphTargetsRelative;// groups\nvar groups=this.groups;for(var _i55=0,l=groups.length;_i55<l;_i55++){var group=groups[_i55];geometry2.addGroup(group.start,group.count,group.materialIndex);}return geometry2;}},{key:\"toJSON\",value:function toJSON(){var data={metadata:{version:4.5,type:'BufferGeometry',generator:'BufferGeometry.toJSON'}};// standard BufferGeometry serialization\ndata.uuid=this.uuid;data.type=this.type;if(this.name!=='')data.name=this.name;if(Object.keys(this.userData).length>0)data.userData=this.userData;if(this.parameters!==undefined){var parameters=this.parameters;for(var key in parameters){if(parameters[key]!==undefined)data[key]=parameters[key];}return data;}// for simplicity the code assumes attributes are not shared across geometries, see #15811\ndata.data={attributes:{}};var index=this.index;if(index!==null){data.data.index={type:index.array.constructor.name,array:Array.prototype.slice.call(index.array)};}var attributes=this.attributes;for(var _key in attributes){var attribute=attributes[_key];data.data.attributes[_key]=attribute.toJSON(data.data);}var morphAttributes={};var hasMorphAttributes=false;for(var _key2 in this.morphAttributes){var attributeArray=this.morphAttributes[_key2];var array=[];for(var _i56=0,il=attributeArray.length;_i56<il;_i56++){var _attribute2=attributeArray[_i56];array.push(_attribute2.toJSON(data.data));}if(array.length>0){morphAttributes[_key2]=array;hasMorphAttributes=true;}}if(hasMorphAttributes){data.data.morphAttributes=morphAttributes;data.data.morphTargetsRelative=this.morphTargetsRelative;}var groups=this.groups;if(groups.length>0){data.data.groups=JSON.parse(JSON.stringify(groups));}var boundingSphere=this.boundingSphere;if(boundingSphere!==null){data.data.boundingSphere={center:boundingSphere.center.toArray(),radius:boundingSphere.radius};}return data;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(source){// reset\nthis.index=null;this.attributes={};this.morphAttributes={};this.groups=[];this.boundingBox=null;this.boundingSphere=null;// used for storing cloned, shared data\nvar data={};// name\nthis.name=source.name;// index\nvar index=source.index;if(index!==null){this.setIndex(index.clone(data));}// attributes\nvar attributes=source.attributes;for(var name in attributes){var attribute=attributes[name];this.setAttribute(name,attribute.clone(data));}// morph attributes\nvar morphAttributes=source.morphAttributes;for(var _name2 in morphAttributes){var array=[];var morphAttribute=morphAttributes[_name2];// morphAttribute: array of Float32BufferAttributes\nfor(var _i57=0,l=morphAttribute.length;_i57<l;_i57++){array.push(morphAttribute[_i57].clone(data));}this.morphAttributes[_name2]=array;}this.morphTargetsRelative=source.morphTargetsRelative;// groups\nvar groups=source.groups;for(var _i58=0,_l3=groups.length;_i58<_l3;_i58++){var group=groups[_i58];this.addGroup(group.start,group.count,group.materialIndex);}// bounding box\nvar boundingBox=source.boundingBox;if(boundingBox!==null){this.boundingBox=boundingBox.clone();}// bounding sphere\nvar boundingSphere=source.boundingSphere;if(boundingSphere!==null){this.boundingSphere=boundingSphere.clone();}// draw range\nthis.drawRange.start=source.drawRange.start;this.drawRange.count=source.drawRange.count;// user data\nthis.userData=source.userData;// geometry generator parameters\nif(source.parameters!==undefined)this.parameters=Object.assign({},source.parameters);return this;}},{key:\"dispose\",value:function dispose(){this.dispatchEvent({type:'dispose'});}}]);return BufferGeometry;}(EventDispatcher);BufferGeometry.prototype.isBufferGeometry=true;var _inverseMatrix$2=/*@__PURE__*/new Matrix4();var _ray$2=/*@__PURE__*/new Ray();var _sphere$3=/*@__PURE__*/new Sphere();var _vA$1=/*@__PURE__*/new Vector3();var _vB$1=/*@__PURE__*/new Vector3();var _vC$1=/*@__PURE__*/new Vector3();var _tempA=/*@__PURE__*/new Vector3();var _tempB=/*@__PURE__*/new Vector3();var _tempC=/*@__PURE__*/new Vector3();var _morphA=/*@__PURE__*/new Vector3();var _morphB=/*@__PURE__*/new Vector3();var _morphC=/*@__PURE__*/new Vector3();var _uvA$1=/*@__PURE__*/new Vector2();var _uvB$1=/*@__PURE__*/new Vector2();var _uvC$1=/*@__PURE__*/new Vector2();var _intersectionPoint=/*@__PURE__*/new Vector3();var _intersectionPointWorld=/*@__PURE__*/new Vector3();var Mesh=/*#__PURE__*/function(_Object3D){_inherits(Mesh,_Object3D);var _super19=_createSuper(Mesh);function Mesh(){var _this10;var geometry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new BufferGeometry();var material=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new MeshBasicMaterial();_classCallCheck(this,Mesh);_this10=_super19.call(this);_this10.type='Mesh';_this10.geometry=geometry;_this10.material=material;_this10.updateMorphTargets();return _this10;}_createClass(Mesh,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Mesh.prototype),\"copy\",this).call(this,source);if(source.morphTargetInfluences!==undefined){this.morphTargetInfluences=source.morphTargetInfluences.slice();}if(source.morphTargetDictionary!==undefined){this.morphTargetDictionary=Object.assign({},source.morphTargetDictionary);}this.material=source.material;this.geometry=source.geometry;return this;}},{key:\"updateMorphTargets\",value:function updateMorphTargets(){var geometry=this.geometry;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var m=0,ml=morphAttribute.length;m<ml;m++){var name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}},{key:\"raycast\",value:function raycast(raycaster,intersects){var geometry=this.geometry;var material=this.material;var matrixWorld=this.matrixWorld;if(material===undefined)return;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$3.copy(geometry.boundingSphere);_sphere$3.applyMatrix4(matrixWorld);if(raycaster.ray.intersectsSphere(_sphere$3)===false)return;//\n_inverseMatrix$2.copy(matrixWorld).invert();_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);// Check boundingBox before continuing\nif(geometry.boundingBox!==null){if(_ray$2.intersectsBox(geometry.boundingBox)===false)return;}var intersection;if(geometry.isBufferGeometry){var index=geometry.index;var position=geometry.attributes.position;var morphPosition=geometry.morphAttributes.position;var morphTargetsRelative=geometry.morphTargetsRelative;var uv=geometry.attributes.uv;var uv2=geometry.attributes.uv2;var groups=geometry.groups;var drawRange=geometry.drawRange;if(index!==null){// indexed buffer geometry\nif(Array.isArray(material)){for(var _i59=0,il=groups.length;_i59<il;_i59++){var group=groups[_i59];var groupMaterial=material[group.materialIndex];var start=Math.max(group.start,drawRange.start);var end=Math.min(index.count,Math.min(group.start+group.count,drawRange.start+drawRange.count));for(var j=start,jl=end;j<jl;j+=3){var a=index.getX(j);var b=index.getX(j+1);var c=index.getX(j+2);intersection=checkBufferGeometryIntersection(this,groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c);if(intersection){intersection.faceIndex=Math.floor(j/3);// triangle number in indexed buffer semantics\nintersection.face.materialIndex=group.materialIndex;intersects.push(intersection);}}}}else{var _start3=Math.max(0,drawRange.start);var _end2=Math.min(index.count,drawRange.start+drawRange.count);for(var _i60=_start3,_il6=_end2;_i60<_il6;_i60+=3){var _a=index.getX(_i60);var _b=index.getX(_i60+1);var _c=index.getX(_i60+2);intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,_a,_b,_c);if(intersection){intersection.faceIndex=Math.floor(_i60/3);// triangle number in indexed buffer semantics\nintersects.push(intersection);}}}}else if(position!==undefined){// non-indexed buffer geometry\nif(Array.isArray(material)){for(var _i61=0,_il7=groups.length;_i61<_il7;_i61++){var _group2=groups[_i61];var _groupMaterial=material[_group2.materialIndex];var _start4=Math.max(_group2.start,drawRange.start);var _end3=Math.min(position.count,Math.min(_group2.start+_group2.count,drawRange.start+drawRange.count));for(var _j2=_start4,_jl2=_end3;_j2<_jl2;_j2+=3){var _a2=_j2;var _b2=_j2+1;var _c2=_j2+2;intersection=checkBufferGeometryIntersection(this,_groupMaterial,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,_a2,_b2,_c2);if(intersection){intersection.faceIndex=Math.floor(_j2/3);// triangle number in non-indexed buffer semantics\nintersection.face.materialIndex=_group2.materialIndex;intersects.push(intersection);}}}}else{var _start5=Math.max(0,drawRange.start);var _end4=Math.min(position.count,drawRange.start+drawRange.count);for(var _i62=_start5,_il8=_end4;_i62<_il8;_i62+=3){var _a3=_i62;var _b3=_i62+1;var _c3=_i62+2;intersection=checkBufferGeometryIntersection(this,material,raycaster,_ray$2,position,morphPosition,morphTargetsRelative,uv,uv2,_a3,_b3,_c3);if(intersection){intersection.faceIndex=Math.floor(_i62/3);// triangle number in non-indexed buffer semantics\nintersects.push(intersection);}}}}}else if(geometry.isGeometry){console.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}}]);return Mesh;}(Object3D);Mesh.prototype.isMesh=true;function checkIntersection(object,material,raycaster,ray,pA,pB,pC,point){var intersect;if(material.side===BackSide){intersect=ray.intersectTriangle(pC,pB,pA,true,point);}else{intersect=ray.intersectTriangle(pA,pB,pC,material.side!==DoubleSide,point);}if(intersect===null)return null;_intersectionPointWorld.copy(point);_intersectionPointWorld.applyMatrix4(object.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_intersectionPointWorld);if(distance<raycaster.near||distance>raycaster.far)return null;return{distance:distance,point:_intersectionPointWorld.clone(),object:object};}function checkBufferGeometryIntersection(object,material,raycaster,ray,position,morphPosition,morphTargetsRelative,uv,uv2,a,b,c){_vA$1.fromBufferAttribute(position,a);_vB$1.fromBufferAttribute(position,b);_vC$1.fromBufferAttribute(position,c);var morphInfluences=object.morphTargetInfluences;if(morphPosition&&morphInfluences){_morphA.set(0,0,0);_morphB.set(0,0,0);_morphC.set(0,0,0);for(var _i63=0,il=morphPosition.length;_i63<il;_i63++){var influence=morphInfluences[_i63];var morphAttribute=morphPosition[_i63];if(influence===0)continue;_tempA.fromBufferAttribute(morphAttribute,a);_tempB.fromBufferAttribute(morphAttribute,b);_tempC.fromBufferAttribute(morphAttribute,c);if(morphTargetsRelative){_morphA.addScaledVector(_tempA,influence);_morphB.addScaledVector(_tempB,influence);_morphC.addScaledVector(_tempC,influence);}else{_morphA.addScaledVector(_tempA.sub(_vA$1),influence);_morphB.addScaledVector(_tempB.sub(_vB$1),influence);_morphC.addScaledVector(_tempC.sub(_vC$1),influence);}}_vA$1.add(_morphA);_vB$1.add(_morphB);_vC$1.add(_morphC);}if(object.isSkinnedMesh){object.boneTransform(a,_vA$1);object.boneTransform(b,_vB$1);object.boneTransform(c,_vC$1);}var intersection=checkIntersection(object,material,raycaster,ray,_vA$1,_vB$1,_vC$1,_intersectionPoint);if(intersection){if(uv){_uvA$1.fromBufferAttribute(uv,a);_uvB$1.fromBufferAttribute(uv,b);_uvC$1.fromBufferAttribute(uv,c);intersection.uv=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}if(uv2){_uvA$1.fromBufferAttribute(uv2,a);_uvB$1.fromBufferAttribute(uv2,b);_uvC$1.fromBufferAttribute(uv2,c);intersection.uv2=Triangle.getUV(_intersectionPoint,_vA$1,_vB$1,_vC$1,_uvA$1,_uvB$1,_uvC$1,new Vector2());}var face={a:a,b:b,c:c,normal:new Vector3(),materialIndex:0};Triangle.getNormal(_vA$1,_vB$1,_vC$1,face.normal);intersection.face=face;}return intersection;}var BoxGeometry=/*#__PURE__*/function(_BufferGeometry){_inherits(BoxGeometry,_BufferGeometry);var _super20=_createSuper(BoxGeometry);function BoxGeometry(){var _this11;var width=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var depth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var widthSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var heightSegments=arguments.length>4&&arguments[4]!==undefined?arguments[4]:1;var depthSegments=arguments.length>5&&arguments[5]!==undefined?arguments[5]:1;_classCallCheck(this,BoxGeometry);_this11=_super20.call(this);_this11.type='BoxGeometry';_this11.parameters={width:width,height:height,depth:depth,widthSegments:widthSegments,heightSegments:heightSegments,depthSegments:depthSegments};var scope=_assertThisInitialized(_this11);// segments\nwidthSegments=Math.floor(widthSegments);heightSegments=Math.floor(heightSegments);depthSegments=Math.floor(depthSegments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar numberOfVertices=0;var groupStart=0;// build each side of the box geometry\nbuildPlane('z','y','x',-1,-1,depth,height,width,depthSegments,heightSegments,0);// px\nbuildPlane('z','y','x',1,-1,depth,height,-width,depthSegments,heightSegments,1);// nx\nbuildPlane('x','z','y',1,1,width,depth,height,widthSegments,depthSegments,2);// py\nbuildPlane('x','z','y',1,-1,width,depth,-height,widthSegments,depthSegments,3);// ny\nbuildPlane('x','y','z',1,-1,width,height,depth,widthSegments,heightSegments,4);// pz\nbuildPlane('x','y','z',-1,-1,width,height,-depth,widthSegments,heightSegments,5);// nz\n// build geometry\n_this11.setIndex(indices);_this11.setAttribute('position',new Float32BufferAttribute(vertices,3));_this11.setAttribute('normal',new Float32BufferAttribute(normals,3));_this11.setAttribute('uv',new Float32BufferAttribute(uvs,2));function buildPlane(u,v,w,udir,vdir,width,height,depth,gridX,gridY,materialIndex){var segmentWidth=width/gridX;var segmentHeight=height/gridY;var widthHalf=width/2;var heightHalf=height/2;var depthHalf=depth/2;var gridX1=gridX+1;var gridY1=gridY+1;var vertexCounter=0;var groupCount=0;var vector=new Vector3();// generate vertices, normals and uvs\nfor(var iy=0;iy<gridY1;iy++){var y=iy*segmentHeight-heightHalf;for(var ix=0;ix<gridX1;ix++){var x=ix*segmentWidth-widthHalf;// set values to correct vector component\nvector[u]=x*udir;vector[v]=y*vdir;vector[w]=depthHalf;// now apply vector to vertex buffer\nvertices.push(vector.x,vector.y,vector.z);// set values to correct vector component\nvector[u]=0;vector[v]=0;vector[w]=depth>0?1:-1;// now apply vector to normal buffer\nnormals.push(vector.x,vector.y,vector.z);// uvs\nuvs.push(ix/gridX);uvs.push(1-iy/gridY);// counters\nvertexCounter+=1;}}// indices\n// 1. you need three indices to draw a single face\n// 2. a single segment consists of two faces\n// 3. so we need to generate six (2*3) indices per segment\nfor(var _iy=0;_iy<gridY;_iy++){for(var _ix=0;_ix<gridX;_ix++){var a=numberOfVertices+_ix+gridX1*_iy;var b=numberOfVertices+_ix+gridX1*(_iy+1);var c=numberOfVertices+(_ix+1)+gridX1*(_iy+1);var d=numberOfVertices+(_ix+1)+gridX1*_iy;// faces\nindices.push(a,b,d);indices.push(b,c,d);// increase counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,materialIndex);// calculate new start value for groups\ngroupStart+=groupCount;// update total number of vertices\nnumberOfVertices+=vertexCounter;}return _this11;}_createClass(BoxGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new BoxGeometry(data.width,data.height,data.depth,data.widthSegments,data.heightSegments,data.depthSegments);}}]);return BoxGeometry;}(BufferGeometry);/**\r\n * Uniform Utilities\r\n */function cloneUniforms(src){var dst={};for(var u in src){dst[u]={};for(var p in src[u]){var property=src[u][p];if(property&&(property.isColor||property.isMatrix3||property.isMatrix4||property.isVector2||property.isVector3||property.isVector4||property.isTexture||property.isQuaternion)){dst[u][p]=property.clone();}else if(Array.isArray(property)){dst[u][p]=property.slice();}else{dst[u][p]=property;}}}return dst;}function mergeUniforms(uniforms){var merged={};for(var u=0;u<uniforms.length;u++){var _tmp=cloneUniforms(uniforms[u]);for(var p in _tmp){merged[p]=_tmp[p];}}return merged;}// Legacy\nvar UniformsUtils={clone:cloneUniforms,merge:mergeUniforms};var default_vertex=\"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";var default_fragment=\"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";/**\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>\r\n * }\r\n */var ShaderMaterial=/*#__PURE__*/function(_Material2){_inherits(ShaderMaterial,_Material2);var _super21=_createSuper(ShaderMaterial);function ShaderMaterial(parameters){var _this12;_classCallCheck(this,ShaderMaterial);_this12=_super21.call(this);_this12.type='ShaderMaterial';_this12.defines={};_this12.uniforms={};_this12.vertexShader=default_vertex;_this12.fragmentShader=default_fragment;_this12.linewidth=1;_this12.wireframe=false;_this12.wireframeLinewidth=1;_this12.fog=false;// set to use scene fog\n_this12.lights=false;// set to use scene lights\n_this12.clipping=false;// set to use user-defined clipping planes\n_this12.extensions={derivatives:false,// set to use derivatives\nfragDepth:false,// set to use fragment depth values\ndrawBuffers:false,// set to use draw buffers\nshaderTextureLOD:false// set to use shader texture LOD\n};// When rendered geometry doesn't include these attributes but the material does,\n// use these default values in WebGL. This avoids errors when buffer data is missing.\n_this12.defaultAttributeValues={'color':[1,1,1],'uv':[0,0],'uv2':[0,0]};_this12.index0AttributeName=undefined;_this12.uniformsNeedUpdate=false;_this12.glslVersion=null;if(parameters!==undefined){if(parameters.attributes!==undefined){console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');}_this12.setValues(parameters);}return _this12;}_createClass(ShaderMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(ShaderMaterial.prototype),\"copy\",this).call(this,source);this.fragmentShader=source.fragmentShader;this.vertexShader=source.vertexShader;this.uniforms=cloneUniforms(source.uniforms);this.defines=Object.assign({},source.defines);this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.lights=source.lights;this.clipping=source.clipping;this.extensions=Object.assign({},source.extensions);this.glslVersion=source.glslVersion;return this;}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(ShaderMaterial.prototype),\"toJSON\",this).call(this,meta);data.glslVersion=this.glslVersion;data.uniforms={};for(var name in this.uniforms){var uniform=this.uniforms[name];var _value=uniform.value;if(_value&&_value.isTexture){data.uniforms[name]={type:'t',value:_value.toJSON(meta).uuid};}else if(_value&&_value.isColor){data.uniforms[name]={type:'c',value:_value.getHex()};}else if(_value&&_value.isVector2){data.uniforms[name]={type:'v2',value:_value.toArray()};}else if(_value&&_value.isVector3){data.uniforms[name]={type:'v3',value:_value.toArray()};}else if(_value&&_value.isVector4){data.uniforms[name]={type:'v4',value:_value.toArray()};}else if(_value&&_value.isMatrix3){data.uniforms[name]={type:'m3',value:_value.toArray()};}else if(_value&&_value.isMatrix4){data.uniforms[name]={type:'m4',value:_value.toArray()};}else{data.uniforms[name]={value:_value};// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n}}if(Object.keys(this.defines).length>0)data.defines=this.defines;data.vertexShader=this.vertexShader;data.fragmentShader=this.fragmentShader;var extensions={};for(var key in this.extensions){if(this.extensions[key]===true)extensions[key]=true;}if(Object.keys(extensions).length>0)data.extensions=extensions;return data;}}]);return ShaderMaterial;}(Material);ShaderMaterial.prototype.isShaderMaterial=true;var Camera=/*#__PURE__*/function(_Object3D2){_inherits(Camera,_Object3D2);var _super22=_createSuper(Camera);function Camera(){var _this13;_classCallCheck(this,Camera);_this13=_super22.call(this);_this13.type='Camera';_this13.matrixWorldInverse=new Matrix4();_this13.projectionMatrix=new Matrix4();_this13.projectionMatrixInverse=new Matrix4();return _this13;}_createClass(Camera,[{key:\"copy\",value:function copy(source,recursive){_get(_getPrototypeOf(Camera.prototype),\"copy\",this).call(this,source,recursive);this.matrixWorldInverse.copy(source.matrixWorldInverse);this.projectionMatrix.copy(source.projectionMatrix);this.projectionMatrixInverse.copy(source.projectionMatrixInverse);return this;}},{key:\"getWorldDirection\",value:function getWorldDirection(target){this.updateWorldMatrix(true,false);var e=this.matrixWorld.elements;return target.set(-e[8],-e[9],-e[10]).normalize();}},{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){_get(_getPrototypeOf(Camera.prototype),\"updateMatrixWorld\",this).call(this,force);this.matrixWorldInverse.copy(this.matrixWorld).invert();}},{key:\"updateWorldMatrix\",value:function updateWorldMatrix(updateParents,updateChildren){_get(_getPrototypeOf(Camera.prototype),\"updateWorldMatrix\",this).call(this,updateParents,updateChildren);this.matrixWorldInverse.copy(this.matrixWorld).invert();}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Camera;}(Object3D);Camera.prototype.isCamera=true;var PerspectiveCamera=/*#__PURE__*/function(_Camera){_inherits(PerspectiveCamera,_Camera);var _super23=_createSuper(PerspectiveCamera);function PerspectiveCamera(){var _this14;var fov=arguments.length>0&&arguments[0]!==undefined?arguments[0]:50;var aspect=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var near=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.1;var far=arguments.length>3&&arguments[3]!==undefined?arguments[3]:2000;_classCallCheck(this,PerspectiveCamera);_this14=_super23.call(this);_this14.type='PerspectiveCamera';_this14.fov=fov;_this14.zoom=1;_this14.near=near;_this14.far=far;_this14.focus=10;_this14.aspect=aspect;_this14.view=null;_this14.filmGauge=35;// width of the film (default in millimeters)\n_this14.filmOffset=0;// horizontal film offset (same unit as gauge)\n_this14.updateProjectionMatrix();return _this14;}_createClass(PerspectiveCamera,[{key:\"copy\",value:function copy(source,recursive){_get(_getPrototypeOf(PerspectiveCamera.prototype),\"copy\",this).call(this,source,recursive);this.fov=source.fov;this.zoom=source.zoom;this.near=source.near;this.far=source.far;this.focus=source.focus;this.aspect=source.aspect;this.view=source.view===null?null:Object.assign({},source.view);this.filmGauge=source.filmGauge;this.filmOffset=source.filmOffset;return this;}/**\r\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * Values for focal length and film gauge must have the same unit.\r\n\t */},{key:\"setFocalLength\",value:function setFocalLength(focalLength){/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */var vExtentSlope=0.5*this.getFilmHeight()/focalLength;this.fov=RAD2DEG*2*Math.atan(vExtentSlope);this.updateProjectionMatrix();}/**\r\n\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t */},{key:\"getFocalLength\",value:function getFocalLength(){var vExtentSlope=Math.tan(DEG2RAD*0.5*this.fov);return 0.5*this.getFilmHeight()/vExtentSlope;}},{key:\"getEffectiveFOV\",value:function getEffectiveFOV(){return RAD2DEG*2*Math.atan(Math.tan(DEG2RAD*0.5*this.fov)/this.zoom);}},{key:\"getFilmWidth\",value:function getFilmWidth(){// film not completely covered in portrait format (aspect < 1)\nreturn this.filmGauge*Math.min(this.aspect,1);}},{key:\"getFilmHeight\",value:function getFilmHeight(){// film not completely covered in landscape format (aspect > 1)\nreturn this.filmGauge/Math.max(this.aspect,1);}/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   const w = 1920;\r\n\t *   const h = 1080;\r\n\t *   const fullWidth = w * 3;\r\n\t *   const fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */},{key:\"setViewOffset\",value:function setViewOffset(fullWidth,fullHeight,x,y,width,height){this.aspect=fullWidth/fullHeight;if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}},{key:\"clearViewOffset\",value:function clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}},{key:\"updateProjectionMatrix\",value:function updateProjectionMatrix(){var near=this.near;var top=near*Math.tan(DEG2RAD*0.5*this.fov)/this.zoom;var height=2*top;var width=this.aspect*height;var left=-0.5*width;var view=this.view;if(this.view!==null&&this.view.enabled){var fullWidth=view.fullWidth,fullHeight=view.fullHeight;left+=view.offsetX*width/fullWidth;top-=view.offsetY*height/fullHeight;width*=view.width/fullWidth;height*=view.height/fullHeight;}var skew=this.filmOffset;if(skew!==0)left+=near*skew/this.getFilmWidth();this.projectionMatrix.makePerspective(left,left+width,top,top-height,near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(PerspectiveCamera.prototype),\"toJSON\",this).call(this,meta);data.object.fov=this.fov;data.object.zoom=this.zoom;data.object.near=this.near;data.object.far=this.far;data.object.focus=this.focus;data.object.aspect=this.aspect;if(this.view!==null)data.object.view=Object.assign({},this.view);data.object.filmGauge=this.filmGauge;data.object.filmOffset=this.filmOffset;return data;}}]);return PerspectiveCamera;}(Camera);PerspectiveCamera.prototype.isPerspectiveCamera=true;var fov=90,aspect=1;var CubeCamera=/*#__PURE__*/function(_Object3D3){_inherits(CubeCamera,_Object3D3);var _super24=_createSuper(CubeCamera);function CubeCamera(near,far,renderTarget){var _this15;_classCallCheck(this,CubeCamera);_this15=_super24.call(this);_this15.type='CubeCamera';if(renderTarget.isWebGLCubeRenderTarget!==true){console.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');return _possibleConstructorReturn(_this15);}_this15.renderTarget=renderTarget;var cameraPX=new PerspectiveCamera(fov,aspect,near,far);cameraPX.layers=_this15.layers;cameraPX.up.set(0,-1,0);cameraPX.lookAt(new Vector3(1,0,0));_this15.add(cameraPX);var cameraNX=new PerspectiveCamera(fov,aspect,near,far);cameraNX.layers=_this15.layers;cameraNX.up.set(0,-1,0);cameraNX.lookAt(new Vector3(-1,0,0));_this15.add(cameraNX);var cameraPY=new PerspectiveCamera(fov,aspect,near,far);cameraPY.layers=_this15.layers;cameraPY.up.set(0,0,1);cameraPY.lookAt(new Vector3(0,1,0));_this15.add(cameraPY);var cameraNY=new PerspectiveCamera(fov,aspect,near,far);cameraNY.layers=_this15.layers;cameraNY.up.set(0,0,-1);cameraNY.lookAt(new Vector3(0,-1,0));_this15.add(cameraNY);var cameraPZ=new PerspectiveCamera(fov,aspect,near,far);cameraPZ.layers=_this15.layers;cameraPZ.up.set(0,-1,0);cameraPZ.lookAt(new Vector3(0,0,1));_this15.add(cameraPZ);var cameraNZ=new PerspectiveCamera(fov,aspect,near,far);cameraNZ.layers=_this15.layers;cameraNZ.up.set(0,-1,0);cameraNZ.lookAt(new Vector3(0,0,-1));_this15.add(cameraNZ);return _this15;}_createClass(CubeCamera,[{key:\"update\",value:function update(renderer,scene){if(this.parent===null)this.updateMatrixWorld();var renderTarget=this.renderTarget;var _this$children=_slicedToArray(this.children,6),cameraPX=_this$children[0],cameraNX=_this$children[1],cameraPY=_this$children[2],cameraNY=_this$children[3],cameraPZ=_this$children[4],cameraNZ=_this$children[5];var currentXrEnabled=renderer.xr.enabled;var currentRenderTarget=renderer.getRenderTarget();renderer.xr.enabled=false;var generateMipmaps=renderTarget.texture.generateMipmaps;renderTarget.texture.generateMipmaps=false;renderer.setRenderTarget(renderTarget,0);renderer.render(scene,cameraPX);renderer.setRenderTarget(renderTarget,1);renderer.render(scene,cameraNX);renderer.setRenderTarget(renderTarget,2);renderer.render(scene,cameraPY);renderer.setRenderTarget(renderTarget,3);renderer.render(scene,cameraNY);renderer.setRenderTarget(renderTarget,4);renderer.render(scene,cameraPZ);renderTarget.texture.generateMipmaps=generateMipmaps;renderer.setRenderTarget(renderTarget,5);renderer.render(scene,cameraNZ);renderer.setRenderTarget(currentRenderTarget);renderer.xr.enabled=currentXrEnabled;}}]);return CubeCamera;}(Object3D);var CubeTexture=/*#__PURE__*/function(_Texture){_inherits(CubeTexture,_Texture);var _super25=_createSuper(CubeTexture);function CubeTexture(images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding){var _this16;_classCallCheck(this,CubeTexture);images=images!==undefined?images:[];mapping=mapping!==undefined?mapping:CubeReflectionMapping;_this16=_super25.call(this,images,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);_this16.flipY=false;return _this16;}_createClass(CubeTexture,[{key:\"images\",get:function get(){return this.image;},set:function set(value){this.image=value;}}]);return CubeTexture;}(Texture);CubeTexture.prototype.isCubeTexture=true;var WebGLCubeRenderTarget=/*#__PURE__*/function(_WebGLRenderTarget3){_inherits(WebGLCubeRenderTarget,_WebGLRenderTarget3);var _super26=_createSuper(WebGLCubeRenderTarget);function WebGLCubeRenderTarget(size,options,dummy){var _this17;_classCallCheck(this,WebGLCubeRenderTarget);if(Number.isInteger(options)){console.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');options=dummy;}_this17=_super26.call(this,size,size,options);options=options||{};// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n_this17.texture=new CubeTexture(undefined,options.mapping,options.wrapS,options.wrapT,options.magFilter,options.minFilter,options.format,options.type,options.anisotropy,options.encoding);_this17.texture.isRenderTargetTexture=true;_this17.texture.generateMipmaps=options.generateMipmaps!==undefined?options.generateMipmaps:false;_this17.texture.minFilter=options.minFilter!==undefined?options.minFilter:LinearFilter;_this17.texture._needsFlipEnvMap=false;return _this17;}_createClass(WebGLCubeRenderTarget,[{key:\"fromEquirectangularTexture\",value:function fromEquirectangularTexture(renderer,texture){this.texture.type=texture.type;this.texture.format=RGBAFormat;// see #18859\nthis.texture.encoding=texture.encoding;this.texture.generateMipmaps=texture.generateMipmaps;this.texture.minFilter=texture.minFilter;this.texture.magFilter=texture.magFilter;var shader={uniforms:{tEquirect:{value:null}},vertexShader:/* glsl */\"\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\n\\t\\t\\t\\t\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\n\\t\\t\\t\\t\\t#include <begin_vertex>\\n\\t\\t\\t\\t\\t#include <project_vertex>\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\",fragmentShader:/* glsl */\"\\n\\n\\t\\t\\t\\tuniform sampler2D tEquirect;\\n\\n\\t\\t\\t\\tvarying vec3 vWorldDirection;\\n\\n\\t\\t\\t\\t#include <common>\\n\\n\\t\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\t\\tvec3 direction = normalize( vWorldDirection );\\n\\n\\t\\t\\t\\t\\tvec2 sampleUV = equirectUv( direction );\\n\\n\\t\\t\\t\\t\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\n\\t\\t\\t\\t}\\n\\t\\t\\t\"};var geometry=new BoxGeometry(5,5,5);var material=new ShaderMaterial({name:'CubemapFromEquirect',uniforms:cloneUniforms(shader.uniforms),vertexShader:shader.vertexShader,fragmentShader:shader.fragmentShader,side:BackSide,blending:NoBlending});material.uniforms.tEquirect.value=texture;var mesh=new Mesh(geometry,material);var currentMinFilter=texture.minFilter;// Avoid blurred poles\nif(texture.minFilter===LinearMipmapLinearFilter)texture.minFilter=LinearFilter;var camera=new CubeCamera(1,10,this);camera.update(renderer,mesh);texture.minFilter=currentMinFilter;mesh.geometry.dispose();mesh.material.dispose();return this;}},{key:\"clear\",value:function clear(renderer,color,depth,stencil){var currentRenderTarget=renderer.getRenderTarget();for(var _i64=0;_i64<6;_i64++){renderer.setRenderTarget(this,_i64);renderer.clear(color,depth,stencil);}renderer.setRenderTarget(currentRenderTarget);}}]);return WebGLCubeRenderTarget;}(WebGLRenderTarget);WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget=true;var _vector1=/*@__PURE__*/new Vector3();var _vector2=/*@__PURE__*/new Vector3();var _normalMatrix=/*@__PURE__*/new Matrix3();var Plane=/*#__PURE__*/function(){function Plane(){var normal=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3(1,0,0);var constant=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,Plane);// normal is assumed to be normalized\nthis.normal=normal;this.constant=constant;}_createClass(Plane,[{key:\"set\",value:function set(normal,constant){this.normal.copy(normal);this.constant=constant;return this;}},{key:\"setComponents\",value:function setComponents(x,y,z,w){this.normal.set(x,y,z);this.constant=w;return this;}},{key:\"setFromNormalAndCoplanarPoint\",value:function setFromNormalAndCoplanarPoint(normal,point){this.normal.copy(normal);this.constant=-point.dot(this.normal);return this;}},{key:\"setFromCoplanarPoints\",value:function setFromCoplanarPoints(a,b,c){var normal=_vector1.subVectors(c,b).cross(_vector2.subVectors(a,b)).normalize();// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\nthis.setFromNormalAndCoplanarPoint(normal,a);return this;}},{key:\"copy\",value:function copy(plane){this.normal.copy(plane.normal);this.constant=plane.constant;return this;}},{key:\"normalize\",value:function normalize(){// Note: will lead to a divide by zero if the plane is invalid.\nvar inverseNormalLength=1.0/this.normal.length();this.normal.multiplyScalar(inverseNormalLength);this.constant*=inverseNormalLength;return this;}},{key:\"negate\",value:function negate(){this.constant*=-1;this.normal.negate();return this;}},{key:\"distanceToPoint\",value:function distanceToPoint(point){return this.normal.dot(point)+this.constant;}},{key:\"distanceToSphere\",value:function distanceToSphere(sphere){return this.distanceToPoint(sphere.center)-sphere.radius;}},{key:\"projectPoint\",value:function projectPoint(point,target){return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);}},{key:\"intersectLine\",value:function intersectLine(line,target){var direction=line.delta(_vector1);var denominator=this.normal.dot(direction);if(denominator===0){// line is coplanar, return origin\nif(this.distanceToPoint(line.start)===0){return target.copy(line.start);}// Unsure if this is the correct method to handle this case.\nreturn null;}var t=-(line.start.dot(this.normal)+this.constant)/denominator;if(t<0||t>1){return null;}return target.copy(direction).multiplyScalar(t).add(line.start);}},{key:\"intersectsLine\",value:function intersectsLine(line){// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\nvar startSign=this.distanceToPoint(line.start);var endSign=this.distanceToPoint(line.end);return startSign<0&&endSign>0||endSign<0&&startSign>0;}},{key:\"intersectsBox\",value:function intersectsBox(box){return box.intersectsPlane(this);}},{key:\"intersectsSphere\",value:function intersectsSphere(sphere){return sphere.intersectsPlane(this);}},{key:\"coplanarPoint\",value:function coplanarPoint(target){return target.copy(this.normal).multiplyScalar(-this.constant);}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix,optionalNormalMatrix){var normalMatrix=optionalNormalMatrix||_normalMatrix.getNormalMatrix(matrix);var referencePoint=this.coplanarPoint(_vector1).applyMatrix4(matrix);var normal=this.normal.applyMatrix3(normalMatrix).normalize();this.constant=-referencePoint.dot(normal);return this;}},{key:\"translate\",value:function translate(offset){this.constant-=offset.dot(this.normal);return this;}},{key:\"equals\",value:function equals(plane){return plane.normal.equals(this.normal)&&plane.constant===this.constant;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Plane;}();Plane.prototype.isPlane=true;var _sphere$2=/*@__PURE__*/new Sphere();var _vector$7=/*@__PURE__*/new Vector3();var Frustum=/*#__PURE__*/function(){function Frustum(){var p0=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Plane();var p1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Plane();var p2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Plane();var p3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:new Plane();var p4=arguments.length>4&&arguments[4]!==undefined?arguments[4]:new Plane();var p5=arguments.length>5&&arguments[5]!==undefined?arguments[5]:new Plane();_classCallCheck(this,Frustum);this.planes=[p0,p1,p2,p3,p4,p5];}_createClass(Frustum,[{key:\"set\",value:function set(p0,p1,p2,p3,p4,p5){var planes=this.planes;planes[0].copy(p0);planes[1].copy(p1);planes[2].copy(p2);planes[3].copy(p3);planes[4].copy(p4);planes[5].copy(p5);return this;}},{key:\"copy\",value:function copy(frustum){var planes=this.planes;for(var _i65=0;_i65<6;_i65++){planes[_i65].copy(frustum.planes[_i65]);}return this;}},{key:\"setFromProjectionMatrix\",value:function setFromProjectionMatrix(m){var planes=this.planes;var me=m.elements;var me0=me[0],me1=me[1],me2=me[2],me3=me[3];var me4=me[4],me5=me[5],me6=me[6],me7=me[7];var me8=me[8],me9=me[9],me10=me[10],me11=me[11];var me12=me[12],me13=me[13],me14=me[14],me15=me[15];planes[0].setComponents(me3-me0,me7-me4,me11-me8,me15-me12).normalize();planes[1].setComponents(me3+me0,me7+me4,me11+me8,me15+me12).normalize();planes[2].setComponents(me3+me1,me7+me5,me11+me9,me15+me13).normalize();planes[3].setComponents(me3-me1,me7-me5,me11-me9,me15-me13).normalize();planes[4].setComponents(me3-me2,me7-me6,me11-me10,me15-me14).normalize();planes[5].setComponents(me3+me2,me7+me6,me11+me10,me15+me14).normalize();return this;}},{key:\"intersectsObject\",value:function intersectsObject(object){var geometry=object.geometry;if(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);return this.intersectsSphere(_sphere$2);}},{key:\"intersectsSprite\",value:function intersectsSprite(sprite){_sphere$2.center.set(0,0,0);_sphere$2.radius=0.7071067811865476;_sphere$2.applyMatrix4(sprite.matrixWorld);return this.intersectsSphere(_sphere$2);}},{key:\"intersectsSphere\",value:function intersectsSphere(sphere){var planes=this.planes;var center=sphere.center;var negRadius=-sphere.radius;for(var _i66=0;_i66<6;_i66++){var distance=planes[_i66].distanceToPoint(center);if(distance<negRadius){return false;}}return true;}},{key:\"intersectsBox\",value:function intersectsBox(box){var planes=this.planes;for(var _i67=0;_i67<6;_i67++){var plane=planes[_i67];// corner at max distance\n_vector$7.x=plane.normal.x>0?box.max.x:box.min.x;_vector$7.y=plane.normal.y>0?box.max.y:box.min.y;_vector$7.z=plane.normal.z>0?box.max.z:box.min.z;if(plane.distanceToPoint(_vector$7)<0){return false;}}return true;}},{key:\"containsPoint\",value:function containsPoint(point){var planes=this.planes;for(var _i68=0;_i68<6;_i68++){if(planes[_i68].distanceToPoint(point)<0){return false;}}return true;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Frustum;}();function WebGLAnimation(){var context=null;var isAnimating=false;var animationLoop=null;var requestId=null;function onAnimationFrame(time,frame){animationLoop(time,frame);requestId=context.requestAnimationFrame(onAnimationFrame);}return{start:function start(){if(isAnimating===true)return;if(animationLoop===null)return;requestId=context.requestAnimationFrame(onAnimationFrame);isAnimating=true;},stop:function stop(){context.cancelAnimationFrame(requestId);isAnimating=false;},setAnimationLoop:function setAnimationLoop(callback){animationLoop=callback;},setContext:function setContext(value){context=value;}};}function WebGLAttributes(gl,capabilities){var isWebGL2=capabilities.isWebGL2;var buffers=new WeakMap();function createBuffer(attribute,bufferType){var array=attribute.array;var usage=attribute.usage;var buffer=gl.createBuffer();gl.bindBuffer(bufferType,buffer);gl.bufferData(bufferType,array,usage);attribute.onUploadCallback();var type=5126;if(array instanceof Float32Array){type=5126;}else if(array instanceof Float64Array){console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');}else if(array instanceof Uint16Array){if(attribute.isFloat16BufferAttribute){if(isWebGL2){type=5131;}else{console.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');}}else{type=5123;}}else if(array instanceof Int16Array){type=5122;}else if(array instanceof Uint32Array){type=5125;}else if(array instanceof Int32Array){type=5124;}else if(array instanceof Int8Array){type=5120;}else if(array instanceof Uint8Array){type=5121;}else if(array instanceof Uint8ClampedArray){type=5121;}return{buffer:buffer,type:type,bytesPerElement:array.BYTES_PER_ELEMENT,version:attribute.version};}function updateBuffer(buffer,attribute,bufferType){var array=attribute.array;var updateRange=attribute.updateRange;gl.bindBuffer(bufferType,buffer);if(updateRange.count===-1){// Not using update ranges\ngl.bufferSubData(bufferType,0,array);}else{if(isWebGL2){gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array,updateRange.offset,updateRange.count);}else{gl.bufferSubData(bufferType,updateRange.offset*array.BYTES_PER_ELEMENT,array.subarray(updateRange.offset,updateRange.offset+updateRange.count));}updateRange.count=-1;// reset range\n}}//\nfunction get(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;return buffers.get(attribute);}function remove(attribute){if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data){gl.deleteBuffer(data.buffer);buffers[\"delete\"](attribute);}}function update(attribute,bufferType){if(attribute.isGLBufferAttribute){var cached=buffers.get(attribute);if(!cached||cached.version<attribute.version){buffers.set(attribute,{buffer:attribute.buffer,type:attribute.type,bytesPerElement:attribute.elementSize,version:attribute.version});}return;}if(attribute.isInterleavedBufferAttribute)attribute=attribute.data;var data=buffers.get(attribute);if(data===undefined){buffers.set(attribute,createBuffer(attribute,bufferType));}else if(data.version<attribute.version){updateBuffer(data.buffer,attribute,bufferType);data.version=attribute.version;}}return{get:get,remove:remove,update:update};}var PlaneGeometry=/*#__PURE__*/function(_BufferGeometry2){_inherits(PlaneGeometry,_BufferGeometry2);var _super27=_createSuper(PlaneGeometry);function PlaneGeometry(){var _this18;var width=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var widthSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var heightSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,PlaneGeometry);_this18=_super27.call(this);_this18.type='PlaneGeometry';_this18.parameters={width:width,height:height,widthSegments:widthSegments,heightSegments:heightSegments};var width_half=width/2;var height_half=height/2;var gridX=Math.floor(widthSegments);var gridY=Math.floor(heightSegments);var gridX1=gridX+1;var gridY1=gridY+1;var segment_width=width/gridX;var segment_height=height/gridY;//\nvar indices=[];var vertices=[];var normals=[];var uvs=[];for(var iy=0;iy<gridY1;iy++){var y=iy*segment_height-height_half;for(var ix=0;ix<gridX1;ix++){var x=ix*segment_width-width_half;vertices.push(x,-y,0);normals.push(0,0,1);uvs.push(ix/gridX);uvs.push(1-iy/gridY);}}for(var _iy2=0;_iy2<gridY;_iy2++){for(var _ix2=0;_ix2<gridX;_ix2++){var a=_ix2+gridX1*_iy2;var b=_ix2+gridX1*(_iy2+1);var c=_ix2+1+gridX1*(_iy2+1);var d=_ix2+1+gridX1*_iy2;indices.push(a,b,d);indices.push(b,c,d);}}_this18.setIndex(indices);_this18.setAttribute('position',new Float32BufferAttribute(vertices,3));_this18.setAttribute('normal',new Float32BufferAttribute(normals,3));_this18.setAttribute('uv',new Float32BufferAttribute(uvs,2));return _this18;}_createClass(PlaneGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new PlaneGeometry(data.width,data.height,data.widthSegments,data.heightSegments);}}]);return PlaneGeometry;}(BufferGeometry);var alphamap_fragment=\"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";var alphamap_pars_fragment=\"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var alphatest_fragment=\"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";var alphatest_pars_fragment=\"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";var aomap_fragment=\"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";var aomap_pars_fragment=\"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";var begin_vertex=\"vec3 transformed = vec3( position );\";var beginnormal_vertex=\"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";var bsdfs=\"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenTint * ( D * V );\\n}\\n#endif\";var bumpmap_pars_fragment=\"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";var clipping_planes_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";var clipping_planes_pars_fragment=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";var clipping_planes_pars_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";var clipping_planes_vertex=\"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";var color_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";var color_pars_fragment=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_pars_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";var color_vertex=\"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";var common=\"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";var cube_uv_reflection_fragment=\"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";var defaultnormal_vertex=\"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";var displacementmap_pars_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";var displacementmap_vertex=\"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";var emissivemap_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";var emissivemap_pars_fragment=\"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";var encodings_fragment=\"gl_FragColor = linearToOutputTexel( gl_FragColor );\";var encodings_pars_fragment=\"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";var envmap_fragment=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";var envmap_common_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";var envmap_pars_fragment=\"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";var envmap_pars_vertex=\"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";var envmap_vertex=\"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var fog_vertex=\"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";var fog_pars_vertex=\"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";var fog_fragment=\"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";var fog_pars_fragment=\"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";var gradientmap_pars_fragment=\"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";var lightmap_fragment=\"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tlightMapIrradiance *= PI;\\n\\t#endif\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";var lightmap_pars_fragment=\"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";var lights_lambert_vertex=\"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";var lights_pars_begin=\"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#else\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";var envmap_physical_pars_fragment=\"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#if defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 reflectVec;\\n\\t\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\t\\treflectVec = reflect( - viewDir, normal );\\n\\t\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treflectVec = refract( - viewDir, normal, refractionRatio );\\n\\t\\t\\t#endif\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";var lights_toon_fragment=\"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";var lights_toon_pars_fragment=\"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_phong_fragment=\"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";var lights_phong_pars_fragment=\"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";var lights_physical_fragment=\"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\t#ifdef SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularTintFactor = specularTint;\\n\\t\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\t\\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularTintFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenTint = sheenTint;\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n#endif\";var lights_physical_pars_fragment=\"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenTint;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n};\\nvec3 clearcoatSpecular = vec3( 0.0 );\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";var lights_fragment_begin=\"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef USE_CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";var lights_fragment_maps=\"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometry.normal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";var lights_fragment_end=\"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";var logdepthbuf_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";var logdepthbuf_pars_fragment=\"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";var logdepthbuf_pars_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";var logdepthbuf_vertex=\"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";var map_fragment=\"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";var map_pars_fragment=\"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";var map_particle_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";var map_particle_pars_fragment=\"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";var metalnessmap_fragment=\"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";var metalnessmap_pars_fragment=\"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";var morphnormal_vertex=\"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";var morphtarget_pars_vertex=\"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform vec2 morphTargetsTextureSize;\\n\\t\\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\\n\\t\\t\\tfloat texelIndex = float( vertexIndex * stride + offset );\\n\\t\\t\\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\\n\\t\\t\\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\\n\\t\\t\\treturn texture( morphTargetsTexture, morphUV ).xyz;\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var morphtarget_vertex=\"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#else\\n\\t\\t\\t\\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";var normal_fragment_begin=\"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";var normal_fragment_maps=\"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";var normal_pars_fragment=\"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";var normal_pars_vertex=\"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";var normal_vertex=\"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";var normalmap_pars_fragment=\"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";var clearcoat_normal_fragment_begin=\"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";var clearcoat_normal_fragment_maps=\"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";var clearcoat_pars_fragment=\"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";var output_fragment=\"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= transmissionAlpha + 0.1;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";var packing=\"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";var premultiplied_alpha_fragment=\"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";var project_vertex=\"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";var dithering_fragment=\"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";var dithering_pars_fragment=\"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";var roughnessmap_fragment=\"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";var roughnessmap_pars_fragment=\"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";var shadowmap_pars_fragment=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";var shadowmap_pars_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";var shadowmap_vertex=\"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";var shadowmask_pars_fragment=\"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";var skinbase_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";var skinning_pars_vertex=\"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";var skinning_vertex=\"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";var skinnormal_vertex=\"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";var specularmap_fragment=\"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";var specularmap_pars_fragment=\"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";var tonemapping_fragment=\"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";var tonemapping_pars_fragment=\"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";var transmission_fragment=\"#ifdef USE_TRANSMISSION\\n\\tfloat transmissionAlpha = 1.0;\\n\\tfloat transmissionFactor = transmission;\\n\\tfloat thicknessFactor = thickness;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmission = getIBLVolumeRefraction(\\n\\t\\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationTint, attenuationDistance );\\n\\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\\n\\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\\n#endif\";var transmission_pars_fragment=\"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationTint;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( float roughness, float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\\n\\t\\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tif ( attenuationDistance == 0.0 ) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\\n\\t\\tvec3 attenuationColor, float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\\n\\t}\\n#endif\";var uv_pars_fragment=\"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";var uv_pars_vertex=\"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";var uv_vertex=\"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";var uv2_pars_fragment=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";var uv2_pars_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";var uv2_vertex=\"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";var worldpos_vertex=\"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";var vertex$g=\"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";var fragment$g=\"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var vertex$f=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";var fragment$f=\"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var vertex$e=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";var fragment$e=\"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";var vertex$d=\"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";var fragment$d=\"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";var vertex$c=\"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";var fragment$c=\"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";var vertex$b=\"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$b=\"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var vertex$a=\"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$a=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$9=\"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$9=\"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$8=\"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";var fragment$8=\"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$7=\"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";var fragment$7=\"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";var vertex$6=\"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$6=\"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$5=\"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";var fragment$5=\"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularTint;\\n\\t#ifdef USE_SPECULARINTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULARTINTMAP\\n\\t\\tuniform sampler2D specularTintMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenTint;\\n\\tuniform float sheenRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\\n\\t#endif\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$4=\"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$4=\"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";var vertex$3=\"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$3=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";var vertex$2=\"#include <common>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$2=\"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var vertex$1=\"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";var fragment$1=\"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <output_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";var ShaderChunk={alphamap_fragment:alphamap_fragment,alphamap_pars_fragment:alphamap_pars_fragment,alphatest_fragment:alphatest_fragment,alphatest_pars_fragment:alphatest_pars_fragment,aomap_fragment:aomap_fragment,aomap_pars_fragment:aomap_pars_fragment,begin_vertex:begin_vertex,beginnormal_vertex:beginnormal_vertex,bsdfs:bsdfs,bumpmap_pars_fragment:bumpmap_pars_fragment,clipping_planes_fragment:clipping_planes_fragment,clipping_planes_pars_fragment:clipping_planes_pars_fragment,clipping_planes_pars_vertex:clipping_planes_pars_vertex,clipping_planes_vertex:clipping_planes_vertex,color_fragment:color_fragment,color_pars_fragment:color_pars_fragment,color_pars_vertex:color_pars_vertex,color_vertex:color_vertex,common:common,cube_uv_reflection_fragment:cube_uv_reflection_fragment,defaultnormal_vertex:defaultnormal_vertex,displacementmap_pars_vertex:displacementmap_pars_vertex,displacementmap_vertex:displacementmap_vertex,emissivemap_fragment:emissivemap_fragment,emissivemap_pars_fragment:emissivemap_pars_fragment,encodings_fragment:encodings_fragment,encodings_pars_fragment:encodings_pars_fragment,envmap_fragment:envmap_fragment,envmap_common_pars_fragment:envmap_common_pars_fragment,envmap_pars_fragment:envmap_pars_fragment,envmap_pars_vertex:envmap_pars_vertex,envmap_physical_pars_fragment:envmap_physical_pars_fragment,envmap_vertex:envmap_vertex,fog_vertex:fog_vertex,fog_pars_vertex:fog_pars_vertex,fog_fragment:fog_fragment,fog_pars_fragment:fog_pars_fragment,gradientmap_pars_fragment:gradientmap_pars_fragment,lightmap_fragment:lightmap_fragment,lightmap_pars_fragment:lightmap_pars_fragment,lights_lambert_vertex:lights_lambert_vertex,lights_pars_begin:lights_pars_begin,lights_toon_fragment:lights_toon_fragment,lights_toon_pars_fragment:lights_toon_pars_fragment,lights_phong_fragment:lights_phong_fragment,lights_phong_pars_fragment:lights_phong_pars_fragment,lights_physical_fragment:lights_physical_fragment,lights_physical_pars_fragment:lights_physical_pars_fragment,lights_fragment_begin:lights_fragment_begin,lights_fragment_maps:lights_fragment_maps,lights_fragment_end:lights_fragment_end,logdepthbuf_fragment:logdepthbuf_fragment,logdepthbuf_pars_fragment:logdepthbuf_pars_fragment,logdepthbuf_pars_vertex:logdepthbuf_pars_vertex,logdepthbuf_vertex:logdepthbuf_vertex,map_fragment:map_fragment,map_pars_fragment:map_pars_fragment,map_particle_fragment:map_particle_fragment,map_particle_pars_fragment:map_particle_pars_fragment,metalnessmap_fragment:metalnessmap_fragment,metalnessmap_pars_fragment:metalnessmap_pars_fragment,morphnormal_vertex:morphnormal_vertex,morphtarget_pars_vertex:morphtarget_pars_vertex,morphtarget_vertex:morphtarget_vertex,normal_fragment_begin:normal_fragment_begin,normal_fragment_maps:normal_fragment_maps,normal_pars_fragment:normal_pars_fragment,normal_pars_vertex:normal_pars_vertex,normal_vertex:normal_vertex,normalmap_pars_fragment:normalmap_pars_fragment,clearcoat_normal_fragment_begin:clearcoat_normal_fragment_begin,clearcoat_normal_fragment_maps:clearcoat_normal_fragment_maps,clearcoat_pars_fragment:clearcoat_pars_fragment,output_fragment:output_fragment,packing:packing,premultiplied_alpha_fragment:premultiplied_alpha_fragment,project_vertex:project_vertex,dithering_fragment:dithering_fragment,dithering_pars_fragment:dithering_pars_fragment,roughnessmap_fragment:roughnessmap_fragment,roughnessmap_pars_fragment:roughnessmap_pars_fragment,shadowmap_pars_fragment:shadowmap_pars_fragment,shadowmap_pars_vertex:shadowmap_pars_vertex,shadowmap_vertex:shadowmap_vertex,shadowmask_pars_fragment:shadowmask_pars_fragment,skinbase_vertex:skinbase_vertex,skinning_pars_vertex:skinning_pars_vertex,skinning_vertex:skinning_vertex,skinnormal_vertex:skinnormal_vertex,specularmap_fragment:specularmap_fragment,specularmap_pars_fragment:specularmap_pars_fragment,tonemapping_fragment:tonemapping_fragment,tonemapping_pars_fragment:tonemapping_pars_fragment,transmission_fragment:transmission_fragment,transmission_pars_fragment:transmission_pars_fragment,uv_pars_fragment:uv_pars_fragment,uv_pars_vertex:uv_pars_vertex,uv_vertex:uv_vertex,uv2_pars_fragment:uv2_pars_fragment,uv2_pars_vertex:uv2_pars_vertex,uv2_vertex:uv2_vertex,worldpos_vertex:worldpos_vertex,background_vert:vertex$g,background_frag:fragment$g,cube_vert:vertex$f,cube_frag:fragment$f,depth_vert:vertex$e,depth_frag:fragment$e,distanceRGBA_vert:vertex$d,distanceRGBA_frag:fragment$d,equirect_vert:vertex$c,equirect_frag:fragment$c,linedashed_vert:vertex$b,linedashed_frag:fragment$b,meshbasic_vert:vertex$a,meshbasic_frag:fragment$a,meshlambert_vert:vertex$9,meshlambert_frag:fragment$9,meshmatcap_vert:vertex$8,meshmatcap_frag:fragment$8,meshnormal_vert:vertex$7,meshnormal_frag:fragment$7,meshphong_vert:vertex$6,meshphong_frag:fragment$6,meshphysical_vert:vertex$5,meshphysical_frag:fragment$5,meshtoon_vert:vertex$4,meshtoon_frag:fragment$4,points_vert:vertex$3,points_frag:fragment$3,shadow_vert:vertex$2,shadow_frag:fragment$2,sprite_vert:vertex$1,sprite_frag:fragment$1};/**\r\n * Uniforms library for shared webgl shaders\r\n */var UniformsLib={common:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},map:{value:null},uvTransform:{value:new Matrix3()},uv2Transform:{value:new Matrix3()},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1.0},// basic, lambert, phong\nior:{value:1.5},// standard, physical\nrefractionRatio:{value:0.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Vector2(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:0.00025},fogNear:{value:1},fogFar:{value:2000},fogColor:{value:new Color(0xffffff)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\nrectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},size:{value:1.0},scale:{value:1.0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3()}},sprite:{diffuse:{value:new Color(0xffffff)},opacity:{value:1.0},center:{value:new Vector2(0.5,0.5)},rotation:{value:0.0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Matrix3()}}};var ShaderLib={basic:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.fog]),vertexShader:ShaderChunk.meshbasic_vert,fragmentShader:ShaderChunk.meshbasic_frag},lambert:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshlambert_vert,fragmentShader:ShaderChunk.meshlambert_frag},phong:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.specularmap,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},specular:{value:new Color(0x111111)},shininess:{value:30}}]),vertexShader:ShaderChunk.meshphong_vert,fragmentShader:ShaderChunk.meshphong_frag},standard:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.envmap,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.roughnessmap,UniformsLib.metalnessmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)},roughness:{value:1.0},metalness:{value:0.0},envMapIntensity:{value:1}// temporary\n}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag},toon:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.aomap,UniformsLib.lightmap,UniformsLib.emissivemap,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.gradientmap,UniformsLib.fog,UniformsLib.lights,{emissive:{value:new Color(0x000000)}}]),vertexShader:ShaderChunk.meshtoon_vert,fragmentShader:ShaderChunk.meshtoon_frag},matcap:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,UniformsLib.fog,{matcap:{value:null}}]),vertexShader:ShaderChunk.meshmatcap_vert,fragmentShader:ShaderChunk.meshmatcap_frag},points:{uniforms:mergeUniforms([UniformsLib.points,UniformsLib.fog]),vertexShader:ShaderChunk.points_vert,fragmentShader:ShaderChunk.points_frag},dashed:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ShaderChunk.linedashed_vert,fragmentShader:ShaderChunk.linedashed_frag},depth:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap]),vertexShader:ShaderChunk.depth_vert,fragmentShader:ShaderChunk.depth_frag},normal:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.bumpmap,UniformsLib.normalmap,UniformsLib.displacementmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.meshnormal_vert,fragmentShader:ShaderChunk.meshnormal_frag},sprite:{uniforms:mergeUniforms([UniformsLib.sprite,UniformsLib.fog]),vertexShader:ShaderChunk.sprite_vert,fragmentShader:ShaderChunk.sprite_frag},background:{uniforms:{uvTransform:{value:new Matrix3()},t2D:{value:null}},vertexShader:ShaderChunk.background_vert,fragmentShader:ShaderChunk.background_frag},/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */cube:{uniforms:mergeUniforms([UniformsLib.envmap,{opacity:{value:1.0}}]),vertexShader:ShaderChunk.cube_vert,fragmentShader:ShaderChunk.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ShaderChunk.equirect_vert,fragmentShader:ShaderChunk.equirect_frag},distanceRGBA:{uniforms:mergeUniforms([UniformsLib.common,UniformsLib.displacementmap,{referencePosition:{value:new Vector3()},nearDistance:{value:1},farDistance:{value:1000}}]),vertexShader:ShaderChunk.distanceRGBA_vert,fragmentShader:ShaderChunk.distanceRGBA_frag},shadow:{uniforms:mergeUniforms([UniformsLib.lights,UniformsLib.fog,{color:{value:new Color(0x00000)},opacity:{value:1.0}}]),vertexShader:ShaderChunk.shadow_vert,fragmentShader:ShaderChunk.shadow_frag}};ShaderLib.physical={uniforms:mergeUniforms([ShaderLib.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Vector2(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new Color(0x000000)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Vector2()},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new Color(0x000000)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new Color(1,1,1)},specularTintMap:{value:null}}]),vertexShader:ShaderChunk.meshphysical_vert,fragmentShader:ShaderChunk.meshphysical_frag};function WebGLBackground(renderer,cubemaps,state,objects,premultipliedAlpha){var clearColor=new Color(0x000000);var clearAlpha=0;var planeMesh;var boxMesh;var currentBackground=null;var currentBackgroundVersion=0;var currentTonemapping=null;function render(renderList,scene){var forceClear=false;var background=scene.isScene===true?scene.background:null;if(background&&background.isTexture){background=cubemaps.get(background);}// Ignore background in AR\n// TODO: Reconsider this.\nvar xr=renderer.xr;var session=xr.getSession&&xr.getSession();if(session&&session.environmentBlendMode==='additive'){background=null;}if(background===null){setClear(clearColor,clearAlpha);}else if(background&&background.isColor){setClear(background,1);forceClear=true;}if(renderer.autoClear||forceClear){renderer.clear(renderer.autoClearColor,renderer.autoClearDepth,renderer.autoClearStencil);}if(background&&(background.isCubeTexture||background.mapping===CubeUVReflectionMapping)){if(boxMesh===undefined){boxMesh=new Mesh(new BoxGeometry(1,1,1),new ShaderMaterial({name:'BackgroundCubeMaterial',uniforms:cloneUniforms(ShaderLib.cube.uniforms),vertexShader:ShaderLib.cube.vertexShader,fragmentShader:ShaderLib.cube.fragmentShader,side:BackSide,depthTest:false,depthWrite:false,fog:false}));boxMesh.geometry.deleteAttribute('normal');boxMesh.geometry.deleteAttribute('uv');boxMesh.onBeforeRender=function(renderer,scene,camera){this.matrixWorld.copyPosition(camera.matrixWorld);};// enable code injection for non-built-in material\nObject.defineProperty(boxMesh.material,'envMap',{get:function get(){return this.uniforms.envMap.value;}});objects.update(boxMesh);}boxMesh.material.uniforms.envMap.value=background;boxMesh.material.uniforms.flipEnvMap.value=background.isCubeTexture&&background.isRenderTargetTexture===false?-1:1;if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){boxMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(boxMesh,boxMesh.geometry,boxMesh.material,0,0,null);}else if(background&&background.isTexture){if(planeMesh===undefined){planeMesh=new Mesh(new PlaneGeometry(2,2),new ShaderMaterial({name:'BackgroundMaterial',uniforms:cloneUniforms(ShaderLib.background.uniforms),vertexShader:ShaderLib.background.vertexShader,fragmentShader:ShaderLib.background.fragmentShader,side:FrontSide,depthTest:false,depthWrite:false,fog:false}));planeMesh.geometry.deleteAttribute('normal');// enable code injection for non-built-in material\nObject.defineProperty(planeMesh.material,'map',{get:function get(){return this.uniforms.t2D.value;}});objects.update(planeMesh);}planeMesh.material.uniforms.t2D.value=background;if(background.matrixAutoUpdate===true){background.updateMatrix();}planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);if(currentBackground!==background||currentBackgroundVersion!==background.version||currentTonemapping!==renderer.toneMapping){planeMesh.material.needsUpdate=true;currentBackground=background;currentBackgroundVersion=background.version;currentTonemapping=renderer.toneMapping;}// push to the pre-sorted opaque render list\nrenderList.unshift(planeMesh,planeMesh.geometry,planeMesh.material,0,0,null);}}function setClear(color,alpha){state.buffers.color.setClear(color.r,color.g,color.b,alpha,premultipliedAlpha);}return{getClearColor:function getClearColor(){return clearColor;},setClearColor:function setClearColor(color){var alpha=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;clearColor.set(color);clearAlpha=alpha;setClear(clearColor,clearAlpha);},getClearAlpha:function getClearAlpha(){return clearAlpha;},setClearAlpha:function setClearAlpha(alpha){clearAlpha=alpha;setClear(clearColor,clearAlpha);},render:render};}function WebGLBindingStates(gl,extensions,attributes,capabilities){var maxVertexAttributes=gl.getParameter(34921);var extension=capabilities.isWebGL2?null:extensions.get('OES_vertex_array_object');var vaoAvailable=capabilities.isWebGL2||extension!==null;var bindingStates={};var defaultState=createBindingState(null);var currentState=defaultState;function setup(object,material,program,geometry,index){var updateBuffers=false;if(vaoAvailable){var state=getBindingState(geometry,program,material);if(currentState!==state){currentState=state;bindVertexArrayObject(currentState.object);}updateBuffers=needsUpdate(geometry,index);if(updateBuffers)saveCache(geometry,index);}else{var wireframe=material.wireframe===true;if(currentState.geometry!==geometry.id||currentState.program!==program.id||currentState.wireframe!==wireframe){currentState.geometry=geometry.id;currentState.program=program.id;currentState.wireframe=wireframe;updateBuffers=true;}}if(object.isInstancedMesh===true){updateBuffers=true;}if(index!==null){attributes.update(index,34963);}if(updateBuffers){setupVertexAttributes(object,material,program,geometry);if(index!==null){gl.bindBuffer(34963,attributes.get(index).buffer);}}}function createVertexArrayObject(){if(capabilities.isWebGL2)return gl.createVertexArray();return extension.createVertexArrayOES();}function bindVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.bindVertexArray(vao);return extension.bindVertexArrayOES(vao);}function deleteVertexArrayObject(vao){if(capabilities.isWebGL2)return gl.deleteVertexArray(vao);return extension.deleteVertexArrayOES(vao);}function getBindingState(geometry,program,material){var wireframe=material.wireframe===true;var programMap=bindingStates[geometry.id];if(programMap===undefined){programMap={};bindingStates[geometry.id]=programMap;}var stateMap=programMap[program.id];if(stateMap===undefined){stateMap={};programMap[program.id]=stateMap;}var state=stateMap[wireframe];if(state===undefined){state=createBindingState(createVertexArrayObject());stateMap[wireframe]=state;}return state;}function createBindingState(vao){var newAttributes=[];var enabledAttributes=[];var attributeDivisors=[];for(var _i69=0;_i69<maxVertexAttributes;_i69++){newAttributes[_i69]=0;enabledAttributes[_i69]=0;attributeDivisors[_i69]=0;}return{// for backward compatibility on non-VAO support browser\ngeometry:null,program:null,wireframe:false,newAttributes:newAttributes,enabledAttributes:enabledAttributes,attributeDivisors:attributeDivisors,object:vao,attributes:{},index:null};}function needsUpdate(geometry,index){var cachedAttributes=currentState.attributes;var geometryAttributes=geometry.attributes;var attributesNum=0;for(var key in geometryAttributes){var cachedAttribute=cachedAttributes[key];var geometryAttribute=geometryAttributes[key];if(cachedAttribute===undefined)return true;if(cachedAttribute.attribute!==geometryAttribute)return true;if(cachedAttribute.data!==geometryAttribute.data)return true;attributesNum++;}if(currentState.attributesNum!==attributesNum)return true;if(currentState.index!==index)return true;return false;}function saveCache(geometry,index){var cache={};var attributes=geometry.attributes;var attributesNum=0;for(var key in attributes){var attribute=attributes[key];var data={};data.attribute=attribute;if(attribute.data){data.data=attribute.data;}cache[key]=data;attributesNum++;}currentState.attributes=cache;currentState.attributesNum=attributesNum;currentState.index=index;}function initAttributes(){var newAttributes=currentState.newAttributes;for(var _i70=0,il=newAttributes.length;_i70<il;_i70++){newAttributes[_i70]=0;}}function enableAttribute(attribute){enableAttributeAndDivisor(attribute,0);}function enableAttributeAndDivisor(attribute,meshPerAttribute){var newAttributes=currentState.newAttributes;var enabledAttributes=currentState.enabledAttributes;var attributeDivisors=currentState.attributeDivisors;newAttributes[attribute]=1;if(enabledAttributes[attribute]===0){gl.enableVertexAttribArray(attribute);enabledAttributes[attribute]=1;}if(attributeDivisors[attribute]!==meshPerAttribute){var _extension=capabilities.isWebGL2?gl:extensions.get('ANGLE_instanced_arrays');_extension[capabilities.isWebGL2?'vertexAttribDivisor':'vertexAttribDivisorANGLE'](attribute,meshPerAttribute);attributeDivisors[attribute]=meshPerAttribute;}}function disableUnusedAttributes(){var newAttributes=currentState.newAttributes;var enabledAttributes=currentState.enabledAttributes;for(var _i71=0,il=enabledAttributes.length;_i71<il;_i71++){if(enabledAttributes[_i71]!==newAttributes[_i71]){gl.disableVertexAttribArray(_i71);enabledAttributes[_i71]=0;}}}function vertexAttribPointer(index,size,type,normalized,stride,offset){if(capabilities.isWebGL2===true&&(type===5124||type===5125)){gl.vertexAttribIPointer(index,size,type,stride,offset);}else{gl.vertexAttribPointer(index,size,type,normalized,stride,offset);}}function setupVertexAttributes(object,material,program,geometry){if(capabilities.isWebGL2===false&&(object.isInstancedMesh||geometry.isInstancedBufferGeometry)){if(extensions.get('ANGLE_instanced_arrays')===null)return;}initAttributes();var geometryAttributes=geometry.attributes;var programAttributes=program.getAttributes();var materialDefaultAttributeValues=material.defaultAttributeValues;for(var name in programAttributes){var programAttribute=programAttributes[name];if(programAttribute.location>=0){var geometryAttribute=geometryAttributes[name];if(geometryAttribute===undefined){if(name==='instanceMatrix'&&object.instanceMatrix)geometryAttribute=object.instanceMatrix;if(name==='instanceColor'&&object.instanceColor)geometryAttribute=object.instanceColor;}if(geometryAttribute!==undefined){var normalized=geometryAttribute.normalized;var size=geometryAttribute.itemSize;var attribute=attributes.get(geometryAttribute);// TODO Attribute may not be available on context restore\nif(attribute===undefined)continue;var buffer=attribute.buffer;var type=attribute.type;var bytesPerElement=attribute.bytesPerElement;if(geometryAttribute.isInterleavedBufferAttribute){var data=geometryAttribute.data;var stride=data.stride;var offset=geometryAttribute.offset;if(data&&data.isInstancedInterleavedBuffer){for(var _i72=0;_i72<programAttribute.locationSize;_i72++){enableAttributeAndDivisor(programAttribute.location+_i72,data.meshPerAttribute);}if(object.isInstancedMesh!==true&&geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=data.meshPerAttribute*data.count;}}else{for(var _i73=0;_i73<programAttribute.locationSize;_i73++){enableAttribute(programAttribute.location+_i73);}}gl.bindBuffer(34962,buffer);for(var _i74=0;_i74<programAttribute.locationSize;_i74++){vertexAttribPointer(programAttribute.location+_i74,size/programAttribute.locationSize,type,normalized,stride*bytesPerElement,(offset+size/programAttribute.locationSize*_i74)*bytesPerElement);}}else{if(geometryAttribute.isInstancedBufferAttribute){for(var _i75=0;_i75<programAttribute.locationSize;_i75++){enableAttributeAndDivisor(programAttribute.location+_i75,geometryAttribute.meshPerAttribute);}if(object.isInstancedMesh!==true&&geometry._maxInstanceCount===undefined){geometry._maxInstanceCount=geometryAttribute.meshPerAttribute*geometryAttribute.count;}}else{for(var _i76=0;_i76<programAttribute.locationSize;_i76++){enableAttribute(programAttribute.location+_i76);}}gl.bindBuffer(34962,buffer);for(var _i77=0;_i77<programAttribute.locationSize;_i77++){vertexAttribPointer(programAttribute.location+_i77,size/programAttribute.locationSize,type,normalized,size*bytesPerElement,size/programAttribute.locationSize*_i77*bytesPerElement);}}}else if(materialDefaultAttributeValues!==undefined){var _value2=materialDefaultAttributeValues[name];if(_value2!==undefined){switch(_value2.length){case 2:gl.vertexAttrib2fv(programAttribute.location,_value2);break;case 3:gl.vertexAttrib3fv(programAttribute.location,_value2);break;case 4:gl.vertexAttrib4fv(programAttribute.location,_value2);break;default:gl.vertexAttrib1fv(programAttribute.location,_value2);}}}}}disableUnusedAttributes();}function dispose(){reset();for(var geometryId in bindingStates){var programMap=bindingStates[geometryId];for(var programId in programMap){var stateMap=programMap[programId];for(var wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometryId];}}function releaseStatesOfGeometry(geometry){if(bindingStates[geometry.id]===undefined)return;var programMap=bindingStates[geometry.id];for(var programId in programMap){var stateMap=programMap[programId];for(var wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[programId];}delete bindingStates[geometry.id];}function releaseStatesOfProgram(program){for(var geometryId in bindingStates){var programMap=bindingStates[geometryId];if(programMap[program.id]===undefined)continue;var stateMap=programMap[program.id];for(var wireframe in stateMap){deleteVertexArrayObject(stateMap[wireframe].object);delete stateMap[wireframe];}delete programMap[program.id];}}function reset(){resetDefaultState();if(currentState===defaultState)return;currentState=defaultState;bindVertexArrayObject(currentState.object);}// for backward-compatilibity\nfunction resetDefaultState(){defaultState.geometry=null;defaultState.program=null;defaultState.wireframe=false;}return{setup:setup,reset:reset,resetDefaultState:resetDefaultState,dispose:dispose,releaseStatesOfGeometry:releaseStatesOfGeometry,releaseStatesOfProgram:releaseStatesOfProgram,initAttributes:initAttributes,enableAttribute:enableAttribute,disableUnusedAttributes:disableUnusedAttributes};}function WebGLBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2;var mode;function setMode(value){mode=value;}function render(start,count){gl.drawArrays(mode,start,count);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;var extension,methodName;if(isWebGL2){extension=gl;methodName='drawArraysInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawArraysInstancedANGLE';if(extension===null){console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,start,count,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.render=render;this.renderInstances=renderInstances;}function WebGLCapabilities(gl,extensions,parameters){var maxAnisotropy;function getMaxAnisotropy(){if(maxAnisotropy!==undefined)return maxAnisotropy;if(extensions.has('EXT_texture_filter_anisotropic')===true){var extension=extensions.get('EXT_texture_filter_anisotropic');maxAnisotropy=gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);}else{maxAnisotropy=0;}return maxAnisotropy;}function getMaxPrecision(precision){if(precision==='highp'){if(gl.getShaderPrecisionFormat(35633,36338).precision>0&&gl.getShaderPrecisionFormat(35632,36338).precision>0){return'highp';}precision='mediump';}if(precision==='mediump'){if(gl.getShaderPrecisionFormat(35633,36337).precision>0&&gl.getShaderPrecisionFormat(35632,36337).precision>0){return'mediump';}}return'lowp';}/* eslint-disable no-undef */var isWebGL2=typeof WebGL2RenderingContext!=='undefined'&&gl instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!=='undefined'&&gl instanceof WebGL2ComputeRenderingContext;/* eslint-enable no-undef */var precision=parameters.precision!==undefined?parameters.precision:'highp';var maxPrecision=getMaxPrecision(precision);if(maxPrecision!==precision){console.warn('THREE.WebGLRenderer:',precision,'not supported, using',maxPrecision,'instead.');precision=maxPrecision;}var drawBuffers=isWebGL2||extensions.has('WEBGL_draw_buffers');var logarithmicDepthBuffer=parameters.logarithmicDepthBuffer===true;var maxTextures=gl.getParameter(34930);var maxVertexTextures=gl.getParameter(35660);var maxTextureSize=gl.getParameter(3379);var maxCubemapSize=gl.getParameter(34076);var maxAttributes=gl.getParameter(34921);var maxVertexUniforms=gl.getParameter(36347);var maxVaryings=gl.getParameter(36348);var maxFragmentUniforms=gl.getParameter(36349);var vertexTextures=maxVertexTextures>0;var floatFragmentTextures=isWebGL2||extensions.has('OES_texture_float');var floatVertexTextures=vertexTextures&&floatFragmentTextures;var maxSamples=isWebGL2?gl.getParameter(36183):0;return{isWebGL2:isWebGL2,drawBuffers:drawBuffers,getMaxAnisotropy:getMaxAnisotropy,getMaxPrecision:getMaxPrecision,precision:precision,logarithmicDepthBuffer:logarithmicDepthBuffer,maxTextures:maxTextures,maxVertexTextures:maxVertexTextures,maxTextureSize:maxTextureSize,maxCubemapSize:maxCubemapSize,maxAttributes:maxAttributes,maxVertexUniforms:maxVertexUniforms,maxVaryings:maxVaryings,maxFragmentUniforms:maxFragmentUniforms,vertexTextures:vertexTextures,floatFragmentTextures:floatFragmentTextures,floatVertexTextures:floatVertexTextures,maxSamples:maxSamples};}function WebGLClipping(properties){var scope=this;var globalState=null,numGlobalPlanes=0,localClippingEnabled=false,renderingShadows=false;var plane=new Plane(),viewNormalMatrix=new Matrix3(),uniform={value:null,needsUpdate:false};this.uniform=uniform;this.numPlanes=0;this.numIntersection=0;this.init=function(planes,enableLocalClipping,camera){var enabled=planes.length!==0||enableLocalClipping||// enable state of previous frame - the clipping code has to\n// run another frame in order to reset the state:\nnumGlobalPlanes!==0||localClippingEnabled;localClippingEnabled=enableLocalClipping;globalState=projectPlanes(planes,camera,0);numGlobalPlanes=planes.length;return enabled;};this.beginShadows=function(){renderingShadows=true;projectPlanes(null);};this.endShadows=function(){renderingShadows=false;resetGlobalState();};this.setState=function(material,camera,useCache){var planes=material.clippingPlanes,clipIntersection=material.clipIntersection,clipShadows=material.clipShadows;var materialProperties=properties.get(material);if(!localClippingEnabled||planes===null||planes.length===0||renderingShadows&&!clipShadows){// there's no local clipping\nif(renderingShadows){// there's no global clipping\nprojectPlanes(null);}else{resetGlobalState();}}else{var nGlobal=renderingShadows?0:numGlobalPlanes,lGlobal=nGlobal*4;var dstArray=materialProperties.clippingState||null;uniform.value=dstArray;// ensure unique state\ndstArray=projectPlanes(planes,camera,lGlobal,useCache);for(var _i78=0;_i78!==lGlobal;++_i78){dstArray[_i78]=globalState[_i78];}materialProperties.clippingState=dstArray;this.numIntersection=clipIntersection?this.numPlanes:0;this.numPlanes+=nGlobal;}};function resetGlobalState(){if(uniform.value!==globalState){uniform.value=globalState;uniform.needsUpdate=numGlobalPlanes>0;}scope.numPlanes=numGlobalPlanes;scope.numIntersection=0;}function projectPlanes(planes,camera,dstOffset,skipTransform){var nPlanes=planes!==null?planes.length:0;var dstArray=null;if(nPlanes!==0){dstArray=uniform.value;if(skipTransform!==true||dstArray===null){var flatSize=dstOffset+nPlanes*4,viewMatrix=camera.matrixWorldInverse;viewNormalMatrix.getNormalMatrix(viewMatrix);if(dstArray===null||dstArray.length<flatSize){dstArray=new Float32Array(flatSize);}for(var _i79=0,i4=dstOffset;_i79!==nPlanes;++_i79,i4+=4){plane.copy(planes[_i79]).applyMatrix4(viewMatrix,viewNormalMatrix);plane.normal.toArray(dstArray,i4);dstArray[i4+3]=plane.constant;}}uniform.value=dstArray;uniform.needsUpdate=true;}scope.numPlanes=nPlanes;scope.numIntersection=0;return dstArray;}}function WebGLCubeMaps(renderer){var cubemaps=new WeakMap();function mapTextureMapping(texture,mapping){if(mapping===EquirectangularReflectionMapping){texture.mapping=CubeReflectionMapping;}else if(mapping===EquirectangularRefractionMapping){texture.mapping=CubeRefractionMapping;}return texture;}function get(texture){if(texture&&texture.isTexture&&texture.isRenderTargetTexture===false){var mapping=texture.mapping;if(mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping){if(cubemaps.has(texture)){var cubemap=cubemaps.get(texture).texture;return mapTextureMapping(cubemap,texture.mapping);}else{var image=texture.image;if(image&&image.height>0){var currentRenderTarget=renderer.getRenderTarget();var renderTarget=new WebGLCubeRenderTarget(image.height/2);renderTarget.fromEquirectangularTexture(renderer,texture);cubemaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);texture.addEventListener('dispose',onTextureDispose);return mapTextureMapping(renderTarget.texture,texture.mapping);}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);var cubemap=cubemaps.get(texture);if(cubemap!==undefined){cubemaps[\"delete\"](texture);cubemap.dispose();}}function dispose(){cubemaps=new WeakMap();}return{get:get,dispose:dispose};}var OrthographicCamera=/*#__PURE__*/function(_Camera2){_inherits(OrthographicCamera,_Camera2);var _super28=_createSuper(OrthographicCamera);function OrthographicCamera(){var _this19;var left=arguments.length>0&&arguments[0]!==undefined?arguments[0]:-1;var right=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var top=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var bottom=arguments.length>3&&arguments[3]!==undefined?arguments[3]:-1;var near=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0.1;var far=arguments.length>5&&arguments[5]!==undefined?arguments[5]:2000;_classCallCheck(this,OrthographicCamera);_this19=_super28.call(this);_this19.type='OrthographicCamera';_this19.zoom=1;_this19.view=null;_this19.left=left;_this19.right=right;_this19.top=top;_this19.bottom=bottom;_this19.near=near;_this19.far=far;_this19.updateProjectionMatrix();return _this19;}_createClass(OrthographicCamera,[{key:\"copy\",value:function copy(source,recursive){_get(_getPrototypeOf(OrthographicCamera.prototype),\"copy\",this).call(this,source,recursive);this.left=source.left;this.right=source.right;this.top=source.top;this.bottom=source.bottom;this.near=source.near;this.far=source.far;this.zoom=source.zoom;this.view=source.view===null?null:Object.assign({},source.view);return this;}},{key:\"setViewOffset\",value:function setViewOffset(fullWidth,fullHeight,x,y,width,height){if(this.view===null){this.view={enabled:true,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1};}this.view.enabled=true;this.view.fullWidth=fullWidth;this.view.fullHeight=fullHeight;this.view.offsetX=x;this.view.offsetY=y;this.view.width=width;this.view.height=height;this.updateProjectionMatrix();}},{key:\"clearViewOffset\",value:function clearViewOffset(){if(this.view!==null){this.view.enabled=false;}this.updateProjectionMatrix();}},{key:\"updateProjectionMatrix\",value:function updateProjectionMatrix(){var dx=(this.right-this.left)/(2*this.zoom);var dy=(this.top-this.bottom)/(2*this.zoom);var cx=(this.right+this.left)/2;var cy=(this.top+this.bottom)/2;var left=cx-dx;var right=cx+dx;var top=cy+dy;var bottom=cy-dy;if(this.view!==null&&this.view.enabled){var scaleW=(this.right-this.left)/this.view.fullWidth/this.zoom;var scaleH=(this.top-this.bottom)/this.view.fullHeight/this.zoom;left+=scaleW*this.view.offsetX;right=left+scaleW*this.view.width;top-=scaleH*this.view.offsetY;bottom=top-scaleH*this.view.height;}this.projectionMatrix.makeOrthographic(left,right,top,bottom,this.near,this.far);this.projectionMatrixInverse.copy(this.projectionMatrix).invert();}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(OrthographicCamera.prototype),\"toJSON\",this).call(this,meta);data.object.zoom=this.zoom;data.object.left=this.left;data.object.right=this.right;data.object.top=this.top;data.object.bottom=this.bottom;data.object.near=this.near;data.object.far=this.far;if(this.view!==null)data.object.view=Object.assign({},this.view);return data;}}]);return OrthographicCamera;}(Camera);OrthographicCamera.prototype.isOrthographicCamera=true;var RawShaderMaterial=/*#__PURE__*/function(_ShaderMaterial){_inherits(RawShaderMaterial,_ShaderMaterial);var _super29=_createSuper(RawShaderMaterial);function RawShaderMaterial(parameters){var _this20;_classCallCheck(this,RawShaderMaterial);_this20=_super29.call(this,parameters);_this20.type='RawShaderMaterial';return _this20;}return _createClass(RawShaderMaterial);}(ShaderMaterial);RawShaderMaterial.prototype.isRawShaderMaterial=true;var LOD_MIN=4;var LOD_MAX=8;var SIZE_MAX=Math.pow(2,LOD_MAX);// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nvar EXTRA_LOD_SIGMA=[0.125,0.215,0.35,0.446,0.526,0.582];var TOTAL_LODS=LOD_MAX-LOD_MIN+1+EXTRA_LOD_SIGMA.length;// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nvar MAX_SAMPLES=20;var ENCODINGS=(_ENCODINGS={},_defineProperty(_ENCODINGS,LinearEncoding,0),_defineProperty(_ENCODINGS,sRGBEncoding,1),_defineProperty(_ENCODINGS,RGBEEncoding,2),_defineProperty(_ENCODINGS,RGBM7Encoding,3),_defineProperty(_ENCODINGS,RGBM16Encoding,4),_defineProperty(_ENCODINGS,RGBDEncoding,5),_defineProperty(_ENCODINGS,GammaEncoding,6),_ENCODINGS);var _flatCamera=/*@__PURE__*/new OrthographicCamera();var _createPlanes2=/*@__PURE__*/_createPlanes(),_lodPlanes=_createPlanes2._lodPlanes,_sizeLods=_createPlanes2._sizeLods,_sigmas=_createPlanes2._sigmas;var _clearColor=/*@__PURE__*/new Color();var _oldTarget=null;// Golden Ratio\nvar PHI=(1+Math.sqrt(5))/2;var INV_PHI=1/PHI;// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nvar _axisDirections=[/*@__PURE__*/new Vector3(1,1,1),/*@__PURE__*/new Vector3(-1,1,1),/*@__PURE__*/new Vector3(1,1,-1),/*@__PURE__*/new Vector3(-1,1,-1),/*@__PURE__*/new Vector3(0,PHI,INV_PHI),/*@__PURE__*/new Vector3(0,PHI,-INV_PHI),/*@__PURE__*/new Vector3(INV_PHI,0,PHI),/*@__PURE__*/new Vector3(-INV_PHI,0,PHI),/*@__PURE__*/new Vector3(PHI,INV_PHI,0),/*@__PURE__*/new Vector3(-PHI,INV_PHI,0)];/**\r\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\r\n * (PMREM) from a cubeMap environment texture. This allows different levels of\r\n * blur to be quickly accessed based on material roughness. It is packed into a\r\n * special CubeUV format that allows us to perform custom interpolation so that\r\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\r\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\r\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\r\n * higher roughness levels. In this way we maintain resolution to smoothly\r\n * interpolate diffuse lighting while limiting sampling computation.\r\n *\r\n * Paper: Fast, Accurate Image-Based Lighting\r\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\r\n*/var PMREMGenerator=/*#__PURE__*/function(){function PMREMGenerator(renderer){_classCallCheck(this,PMREMGenerator);this._renderer=renderer;this._pingPongRenderTarget=null;this._blurMaterial=_getBlurShader(MAX_SAMPLES);this._equirectShader=null;this._cubemapShader=null;this._compileMaterial(this._blurMaterial);}/**\r\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\r\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\r\n\t * in radians to be applied to the scene before PMREM generation. Optional near\r\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\r\n\t * is placed at the origin).\r\n\t */_createClass(PMREMGenerator,[{key:\"fromScene\",value:function fromScene(scene){var sigma=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var near=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0.1;var far=arguments.length>3&&arguments[3]!==undefined?arguments[3]:100;_oldTarget=this._renderer.getRenderTarget();var cubeUVRenderTarget=this._allocateTargets();this._sceneToCubeUV(scene,near,far,cubeUVRenderTarget);if(sigma>0){this._blur(cubeUVRenderTarget,0,0,sigma);}this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}/**\r\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\r\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t */},{key:\"fromEquirectangular\",value:function fromEquirectangular(equirectangular){return this._fromTexture(equirectangular);}/**\r\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\r\n\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\r\n\t * as this matches best with the 256 x 256 cubemap output.\r\n\t */},{key:\"fromCubemap\",value:function fromCubemap(cubemap){return this._fromTexture(cubemap);}/**\r\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */},{key:\"compileCubemapShader\",value:function compileCubemapShader(){if(this._cubemapShader===null){this._cubemapShader=_getCubemapShader();this._compileMaterial(this._cubemapShader);}}/**\r\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\r\n\t * your texture's network fetch for increased concurrency.\r\n\t */},{key:\"compileEquirectangularShader\",value:function compileEquirectangularShader(){if(this._equirectShader===null){this._equirectShader=_getEquirectShader();this._compileMaterial(this._equirectShader);}}/**\r\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\r\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\r\n\t * one of them will cause any others to also become unusable.\r\n\t */},{key:\"dispose\",value:function dispose(){this._blurMaterial.dispose();if(this._cubemapShader!==null)this._cubemapShader.dispose();if(this._equirectShader!==null)this._equirectShader.dispose();for(var _i80=0;_i80<_lodPlanes.length;_i80++){_lodPlanes[_i80].dispose();}}// private interface\n},{key:\"_cleanup\",value:function _cleanup(outputTarget){this._pingPongRenderTarget.dispose();this._renderer.setRenderTarget(_oldTarget);outputTarget.scissorTest=false;_setViewport(outputTarget,0,0,outputTarget.width,outputTarget.height);}},{key:\"_fromTexture\",value:function _fromTexture(texture){_oldTarget=this._renderer.getRenderTarget();var cubeUVRenderTarget=this._allocateTargets(texture);this._textureToCubeUV(texture,cubeUVRenderTarget);this._applyPMREM(cubeUVRenderTarget);this._cleanup(cubeUVRenderTarget);return cubeUVRenderTarget;}},{key:\"_allocateTargets\",value:function _allocateTargets(texture){// warning: null texture is valid\nvar params={magFilter:NearestFilter,minFilter:NearestFilter,generateMipmaps:false,type:UnsignedByteType,format:RGBEFormat,encoding:_isLDR(texture)?texture.encoding:RGBEEncoding,depthBuffer:false};var cubeUVRenderTarget=_createRenderTarget(params);cubeUVRenderTarget.depthBuffer=texture?false:true;this._pingPongRenderTarget=_createRenderTarget(params);return cubeUVRenderTarget;}},{key:\"_compileMaterial\",value:function _compileMaterial(material){var tmpMesh=new Mesh(_lodPlanes[0],material);this._renderer.compile(tmpMesh,_flatCamera);}},{key:\"_sceneToCubeUV\",value:function _sceneToCubeUV(scene,near,far,cubeUVRenderTarget){var fov=90;var aspect=1;var cubeCamera=new PerspectiveCamera(fov,aspect,near,far);var upSign=[1,-1,1,1,1,1];var forwardSign=[1,1,1,-1,-1,-1];var renderer=this._renderer;var originalAutoClear=renderer.autoClear;var outputEncoding=renderer.outputEncoding;var toneMapping=renderer.toneMapping;renderer.getClearColor(_clearColor);renderer.toneMapping=NoToneMapping;renderer.outputEncoding=LinearEncoding;renderer.autoClear=false;var backgroundMaterial=new MeshBasicMaterial({name:'PMREM.Background',side:BackSide,depthWrite:false,depthTest:false});var backgroundBox=new Mesh(new BoxGeometry(),backgroundMaterial);var useSolidColor=false;var background=scene.background;if(background){if(background.isColor){backgroundMaterial.color.copy(background);scene.background=null;useSolidColor=true;}}else{backgroundMaterial.color.copy(_clearColor);useSolidColor=true;}for(var _i81=0;_i81<6;_i81++){var col=_i81%3;if(col==0){cubeCamera.up.set(0,upSign[_i81],0);cubeCamera.lookAt(forwardSign[_i81],0,0);}else if(col==1){cubeCamera.up.set(0,0,upSign[_i81]);cubeCamera.lookAt(0,forwardSign[_i81],0);}else{cubeCamera.up.set(0,upSign[_i81],0);cubeCamera.lookAt(0,0,forwardSign[_i81]);}_setViewport(cubeUVRenderTarget,col*SIZE_MAX,_i81>2?SIZE_MAX:0,SIZE_MAX,SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);if(useSolidColor){renderer.render(backgroundBox,cubeCamera);}renderer.render(scene,cubeCamera);}backgroundBox.geometry.dispose();backgroundBox.material.dispose();renderer.toneMapping=toneMapping;renderer.outputEncoding=outputEncoding;renderer.autoClear=originalAutoClear;scene.background=background;}},{key:\"_setEncoding\",value:function _setEncoding(uniform,texture){if(this._renderer.capabilities.isWebGL2===true&&texture.format===RGBAFormat&&texture.type===UnsignedByteType&&texture.encoding===sRGBEncoding){uniform.value=ENCODINGS[LinearEncoding];}else{uniform.value=ENCODINGS[texture.encoding];}}},{key:\"_textureToCubeUV\",value:function _textureToCubeUV(texture,cubeUVRenderTarget){var renderer=this._renderer;if(texture.isCubeTexture){if(this._cubemapShader==null){this._cubemapShader=_getCubemapShader();}}else{if(this._equirectShader==null){this._equirectShader=_getEquirectShader();}}var material=texture.isCubeTexture?this._cubemapShader:this._equirectShader;var mesh=new Mesh(_lodPlanes[0],material);var uniforms=material.uniforms;uniforms['envMap'].value=texture;if(!texture.isCubeTexture){uniforms['texelSize'].value.set(1.0/texture.image.width,1.0/texture.image.height);}this._setEncoding(uniforms['inputEncoding'],texture);this._setEncoding(uniforms['outputEncoding'],cubeUVRenderTarget.texture);_setViewport(cubeUVRenderTarget,0,0,3*SIZE_MAX,2*SIZE_MAX);renderer.setRenderTarget(cubeUVRenderTarget);renderer.render(mesh,_flatCamera);}},{key:\"_applyPMREM\",value:function _applyPMREM(cubeUVRenderTarget){var renderer=this._renderer;var autoClear=renderer.autoClear;renderer.autoClear=false;for(var _i82=1;_i82<TOTAL_LODS;_i82++){var sigma=Math.sqrt(_sigmas[_i82]*_sigmas[_i82]-_sigmas[_i82-1]*_sigmas[_i82-1]);var poleAxis=_axisDirections[(_i82-1)%_axisDirections.length];this._blur(cubeUVRenderTarget,_i82-1,_i82,sigma,poleAxis);}renderer.autoClear=autoClear;}/**\r\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\r\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\r\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\r\n\t * the poles) to approximate the orthogonally-separable blur. It is least\r\n\t * accurate at the poles, but still does a decent job.\r\n\t */},{key:\"_blur\",value:function _blur(cubeUVRenderTarget,lodIn,lodOut,sigma,poleAxis){var pingPongRenderTarget=this._pingPongRenderTarget;this._halfBlur(cubeUVRenderTarget,pingPongRenderTarget,lodIn,lodOut,sigma,'latitudinal',poleAxis);this._halfBlur(pingPongRenderTarget,cubeUVRenderTarget,lodOut,lodOut,sigma,'longitudinal',poleAxis);}},{key:\"_halfBlur\",value:function _halfBlur(targetIn,targetOut,lodIn,lodOut,sigmaRadians,direction,poleAxis){var renderer=this._renderer;var blurMaterial=this._blurMaterial;if(direction!=='latitudinal'&&direction!=='longitudinal'){console.error('blur direction must be either latitudinal or longitudinal!');}// Number of standard deviations at which to cut off the discrete approximation.\nvar STANDARD_DEVIATIONS=3;var blurMesh=new Mesh(_lodPlanes[lodOut],blurMaterial);var blurUniforms=blurMaterial.uniforms;var pixels=_sizeLods[lodIn]-1;var radiansPerPixel=isFinite(sigmaRadians)?Math.PI/(2*pixels):2*Math.PI/(2*MAX_SAMPLES-1);var sigmaPixels=sigmaRadians/radiansPerPixel;var samples=isFinite(sigmaRadians)?1+Math.floor(STANDARD_DEVIATIONS*sigmaPixels):MAX_SAMPLES;if(samples>MAX_SAMPLES){console.warn(\"sigmaRadians, \".concat(sigmaRadians,\", is too large and will clip, as it requested \").concat(samples,\" samples when the maximum is set to \").concat(MAX_SAMPLES));}var weights=[];var sum=0;for(var _i83=0;_i83<MAX_SAMPLES;++_i83){var _x2=_i83/sigmaPixels;var weight=Math.exp(-_x2*_x2/2);weights.push(weight);if(_i83==0){sum+=weight;}else if(_i83<samples){sum+=2*weight;}}for(var _i84=0;_i84<weights.length;_i84++){weights[_i84]=weights[_i84]/sum;}blurUniforms['envMap'].value=targetIn.texture;blurUniforms['samples'].value=samples;blurUniforms['weights'].value=weights;blurUniforms['latitudinal'].value=direction==='latitudinal';if(poleAxis){blurUniforms['poleAxis'].value=poleAxis;}blurUniforms['dTheta'].value=radiansPerPixel;blurUniforms['mipInt'].value=LOD_MAX-lodIn;this._setEncoding(blurUniforms['inputEncoding'],targetIn.texture);this._setEncoding(blurUniforms['outputEncoding'],targetIn.texture);var outputSize=_sizeLods[lodOut];var x=3*Math.max(0,SIZE_MAX-2*outputSize);var y=(lodOut===0?0:2*SIZE_MAX)+2*outputSize*(lodOut>LOD_MAX-LOD_MIN?lodOut-LOD_MAX+LOD_MIN:0);_setViewport(targetOut,x,y,3*outputSize,2*outputSize);renderer.setRenderTarget(targetOut);renderer.render(blurMesh,_flatCamera);}}]);return PMREMGenerator;}();function _isLDR(texture){if(texture===undefined||texture.type!==UnsignedByteType)return false;return texture.encoding===LinearEncoding||texture.encoding===sRGBEncoding||texture.encoding===GammaEncoding;}function _createPlanes(){var _lodPlanes=[];var _sizeLods=[];var _sigmas=[];var lod=LOD_MAX;for(var _i85=0;_i85<TOTAL_LODS;_i85++){var sizeLod=Math.pow(2,lod);_sizeLods.push(sizeLod);var sigma=1.0/sizeLod;if(_i85>LOD_MAX-LOD_MIN){sigma=EXTRA_LOD_SIGMA[_i85-LOD_MAX+LOD_MIN-1];}else if(_i85==0){sigma=0;}_sigmas.push(sigma);var texelSize=1.0/(sizeLod-1);var min=-texelSize/2;var max=1+texelSize/2;var uv1=[min,min,max,min,max,max,min,min,max,max,min,max];var cubeFaces=6;var vertices=6;var positionSize=3;var uvSize=2;var faceIndexSize=1;var position=new Float32Array(positionSize*vertices*cubeFaces);var uv=new Float32Array(uvSize*vertices*cubeFaces);var faceIndex=new Float32Array(faceIndexSize*vertices*cubeFaces);for(var face=0;face<cubeFaces;face++){var x=face%3*2/3-1;var y=face>2?0:-1;var coordinates=[x,y,0,x+2/3,y,0,x+2/3,y+1,0,x,y,0,x+2/3,y+1,0,x,y+1,0];position.set(coordinates,positionSize*vertices*face);uv.set(uv1,uvSize*vertices*face);var fill=[face,face,face,face,face,face];faceIndex.set(fill,faceIndexSize*vertices*face);}var planes=new BufferGeometry();planes.setAttribute('position',new BufferAttribute(position,positionSize));planes.setAttribute('uv',new BufferAttribute(uv,uvSize));planes.setAttribute('faceIndex',new BufferAttribute(faceIndex,faceIndexSize));_lodPlanes.push(planes);if(lod>LOD_MIN){lod--;}}return{_lodPlanes:_lodPlanes,_sizeLods:_sizeLods,_sigmas:_sigmas};}function _createRenderTarget(params){var cubeUVRenderTarget=new WebGLRenderTarget(3*SIZE_MAX,3*SIZE_MAX,params);cubeUVRenderTarget.texture.mapping=CubeUVReflectionMapping;cubeUVRenderTarget.texture.name='PMREM.cubeUv';cubeUVRenderTarget.scissorTest=true;return cubeUVRenderTarget;}function _setViewport(target,x,y,width,height){target.viewport.set(x,y,width,height);target.scissor.set(x,y,width,height);}function _getBlurShader(maxSamples){var weights=new Float32Array(maxSamples);var poleAxis=new Vector3(0,1,0);var shaderMaterial=new RawShaderMaterial({name:'SphericalGaussianBlur',defines:{'n':maxSamples},uniforms:{'envMap':{value:null},'samples':{value:1},'weights':{value:weights},'latitudinal':{value:false},'dTheta':{value:0},'mipInt':{value:0},'poleAxis':{value:poleAxis},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform int samples;\\n\\t\\t\\tuniform float weights[ n ];\\n\\t\\t\\tuniform bool latitudinal;\\n\\t\\t\\tuniform float dTheta;\\n\\t\\t\\tuniform float mipInt;\\n\\t\\t\\tuniform vec3 poleAxis;\\n\\n\\t\\t\\t\".concat(_getEncodings(),\"\\n\\n\\t\\t\\t#define ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t#include <cube_uv_reflection_fragment>\\n\\n\\t\\t\\tvec3 getSample( float theta, vec3 axis ) {\\n\\n\\t\\t\\t\\tfloat cosTheta = cos( theta );\\n\\t\\t\\t\\t// Rodrigues' axis-angle rotation\\n\\t\\t\\t\\tvec3 sampleDirection = vOutputDirection * cosTheta\\n\\t\\t\\t\\t\\t+ cross( axis, vOutputDirection ) * sin( theta )\\n\\t\\t\\t\\t\\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\\n\\n\\t\\t\\t\\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\\n\\n\\t\\t\\t\\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\\n\\n\\t\\t\\t\\t\\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\taxis = normalize( axis );\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\\n\\n\\t\\t\\t\\tfor ( int i = 1; i < n; i++ ) {\\n\\n\\t\\t\\t\\t\\tif ( i >= samples ) {\\n\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tfloat theta = dTheta * float( i );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\\n\\t\\t\\t\\t\\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\\n\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getEquirectShader(){var texelSize=new Vector2(1,1);var shaderMaterial=new RawShaderMaterial({name:'EquirectangularToCubeUV',uniforms:{'envMap':{value:null},'texelSize':{value:texelSize},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform sampler2D envMap;\\n\\t\\t\\tuniform vec2 texelSize;\\n\\n\\t\\t\\t\".concat(_getEncodings(),\"\\n\\n\\t\\t\\t#include <common>\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\n\\t\\t\\t\\tvec3 outputDirection = normalize( vOutputDirection );\\n\\t\\t\\t\\tvec2 uv = equirectUv( outputDirection );\\n\\n\\t\\t\\t\\tvec2 f = fract( uv / texelSize - 0.5 );\\n\\t\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\t\\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x += texelSize.x;\\n\\t\\t\\t\\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.y += texelSize.y;\\n\\t\\t\\t\\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\t\\t\\t\\tuv.x -= texelSize.x;\\n\\t\\t\\t\\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\\n\\n\\t\\t\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\t\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\t\\t\\tgl_FragColor.rgb = mix( tm, bm, f.y );\\n\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCubemapShader(){var shaderMaterial=new RawShaderMaterial({name:'CubemapToCubeUV',uniforms:{'envMap':{value:null},'inputEncoding':{value:ENCODINGS[LinearEncoding]},'outputEncoding':{value:ENCODINGS[LinearEncoding]}},vertexShader:_getCommonVertexShader(),fragmentShader:/* glsl */\"\\n\\n\\t\\t\\tprecision mediump float;\\n\\t\\t\\tprecision mediump int;\\n\\n\\t\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t\\tuniform samplerCube envMap;\\n\\n\\t\\t\\t\".concat(_getEncodings(),\"\\n\\n\\t\\t\\tvoid main() {\\n\\n\\t\\t\\t\\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t\\t\\t\\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\\n\\t\\t\\t\\tgl_FragColor = linearToOutputTexel( gl_FragColor );\\n\\n\\t\\t\\t}\\n\\t\\t\"),blending:NoBlending,depthTest:false,depthWrite:false});return shaderMaterial;}function _getCommonVertexShader(){return(/* glsl */\"\\n\\n\\t\\tprecision mediump float;\\n\\t\\tprecision mediump int;\\n\\n\\t\\tattribute vec3 position;\\n\\t\\tattribute vec2 uv;\\n\\t\\tattribute float faceIndex;\\n\\n\\t\\tvarying vec3 vOutputDirection;\\n\\n\\t\\t// RH coordinate system; PMREM face-indexing convention\\n\\t\\tvec3 getDirection( vec2 uv, float face ) {\\n\\n\\t\\t\\tuv = 2.0 * uv - 1.0;\\n\\n\\t\\t\\tvec3 direction = vec3( uv, 1.0 );\\n\\n\\t\\t\\tif ( face == 0.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx; // ( 1, v, u ) pos x\\n\\n\\t\\t\\t} else if ( face == 1.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\\n\\n\\t\\t\\t} else if ( face == 2.0 ) {\\n\\n\\t\\t\\t\\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\\n\\n\\t\\t\\t} else if ( face == 3.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.zyx;\\n\\t\\t\\t\\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\\n\\n\\t\\t\\t} else if ( face == 4.0 ) {\\n\\n\\t\\t\\t\\tdirection = direction.xzy;\\n\\t\\t\\t\\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\\n\\n\\t\\t\\t} else if ( face == 5.0 ) {\\n\\n\\t\\t\\t\\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\\n\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn direction;\\n\\n\\t\\t}\\n\\n\\t\\tvoid main() {\\n\\n\\t\\t\\tvOutputDirection = getDirection( uv, faceIndex );\\n\\t\\t\\tgl_Position = vec4( position, 1.0 );\\n\\n\\t\\t}\\n\\t\");}function _getEncodings(){return(/* glsl */\"\\n\\n\\t\\tuniform int inputEncoding;\\n\\t\\tuniform int outputEncoding;\\n\\n\\t\\t#include <encodings_pars_fragment>\\n\\n\\t\\tvec4 inputTexelToLinear( vec4 value ) {\\n\\n\\t\\t\\tif ( inputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( inputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn sRGBToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn RGBEToLinear( value );\\n\\n\\t\\t\\t} else if ( inputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 7.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn RGBMToLinear( value, 16.0 );\\n\\n\\t\\t\\t} else if ( inputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn RGBDToLinear( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn GammaToLinear( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 linearToOutputTexel( vec4 value ) {\\n\\n\\t\\t\\tif ( outputEncoding == 0 ) {\\n\\n\\t\\t\\t\\treturn value;\\n\\n\\t\\t\\t} else if ( outputEncoding == 1 ) {\\n\\n\\t\\t\\t\\treturn LinearTosRGB( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 2 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBE( value );\\n\\n\\t\\t\\t} else if ( outputEncoding == 3 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 7.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 4 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBM( value, 16.0 );\\n\\n\\t\\t\\t} else if ( outputEncoding == 5 ) {\\n\\n\\t\\t\\t\\treturn LinearToRGBD( value, 256.0 );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\treturn LinearToGamma( value, 2.2 );\\n\\n\\t\\t\\t}\\n\\n\\t\\t}\\n\\n\\t\\tvec4 envMapTexelToLinear( vec4 color ) {\\n\\n\\t\\t\\treturn inputTexelToLinear( color );\\n\\n\\t\\t}\\n\\t\");}function WebGLCubeUVMaps(renderer){var cubeUVmaps=new WeakMap();var pmremGenerator=null;function get(texture){if(texture&&texture.isTexture&&texture.isRenderTargetTexture===false){var mapping=texture.mapping;var isEquirectMap=mapping===EquirectangularReflectionMapping||mapping===EquirectangularRefractionMapping;var isCubeMap=mapping===CubeReflectionMapping||mapping===CubeRefractionMapping;if(isEquirectMap||isCubeMap){// equirect/cube map to cubeUV conversion\nif(cubeUVmaps.has(texture)){return cubeUVmaps.get(texture).texture;}else{var image=texture.image;if(isEquirectMap&&image&&image.height>0||isCubeMap&&image&&isCubeTextureComplete(image)){var currentRenderTarget=renderer.getRenderTarget();if(pmremGenerator===null)pmremGenerator=new PMREMGenerator(renderer);var renderTarget=isEquirectMap?pmremGenerator.fromEquirectangular(texture):pmremGenerator.fromCubemap(texture);cubeUVmaps.set(texture,renderTarget);renderer.setRenderTarget(currentRenderTarget);texture.addEventListener('dispose',onTextureDispose);return renderTarget.texture;}else{// image not yet ready. try the conversion next frame\nreturn null;}}}}return texture;}function isCubeTextureComplete(image){var count=0;var length=6;for(var _i86=0;_i86<length;_i86++){if(image[_i86]!==undefined)count++;}return count===length;}function onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);var cubemapUV=cubeUVmaps.get(texture);if(cubemapUV!==undefined){cubeUVmaps[\"delete\"](texture);cubemapUV.dispose();}}function dispose(){cubeUVmaps=new WeakMap();if(pmremGenerator!==null){pmremGenerator.dispose();pmremGenerator=null;}}return{get:get,dispose:dispose};}function WebGLExtensions(gl){var extensions={};function getExtension(name){if(extensions[name]!==undefined){return extensions[name];}var extension;switch(name){case'WEBGL_depth_texture':extension=gl.getExtension('WEBGL_depth_texture')||gl.getExtension('MOZ_WEBGL_depth_texture')||gl.getExtension('WEBKIT_WEBGL_depth_texture');break;case'EXT_texture_filter_anisotropic':extension=gl.getExtension('EXT_texture_filter_anisotropic')||gl.getExtension('MOZ_EXT_texture_filter_anisotropic')||gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');break;case'WEBGL_compressed_texture_s3tc':extension=gl.getExtension('WEBGL_compressed_texture_s3tc')||gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');break;case'WEBGL_compressed_texture_pvrtc':extension=gl.getExtension('WEBGL_compressed_texture_pvrtc')||gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');break;default:extension=gl.getExtension(name);}extensions[name]=extension;return extension;}return{has:function has(name){return getExtension(name)!==null;},init:function init(capabilities){if(capabilities.isWebGL2){getExtension('EXT_color_buffer_float');}else{getExtension('WEBGL_depth_texture');getExtension('OES_texture_float');getExtension('OES_texture_half_float');getExtension('OES_texture_half_float_linear');getExtension('OES_standard_derivatives');getExtension('OES_element_index_uint');getExtension('OES_vertex_array_object');getExtension('ANGLE_instanced_arrays');}getExtension('OES_texture_float_linear');getExtension('EXT_color_buffer_half_float');getExtension('EXT_multisampled_render_to_texture');},get:function get(name){var extension=getExtension(name);if(extension===null){console.warn('THREE.WebGLRenderer: '+name+' extension not supported.');}return extension;}};}function WebGLGeometries(gl,attributes,info,bindingStates){var geometries={};var wireframeAttributes=new WeakMap();function onGeometryDispose(event){var geometry=event.target;if(geometry.index!==null){attributes.remove(geometry.index);}for(var name in geometry.attributes){attributes.remove(geometry.attributes[name]);}geometry.removeEventListener('dispose',onGeometryDispose);delete geometries[geometry.id];var attribute=wireframeAttributes.get(geometry);if(attribute){attributes.remove(attribute);wireframeAttributes[\"delete\"](geometry);}bindingStates.releaseStatesOfGeometry(geometry);if(geometry.isInstancedBufferGeometry===true){delete geometry._maxInstanceCount;}//\ninfo.memory.geometries--;}function get(object,geometry){if(geometries[geometry.id]===true)return geometry;geometry.addEventListener('dispose',onGeometryDispose);geometries[geometry.id]=true;info.memory.geometries++;return geometry;}function update(geometry){var geometryAttributes=geometry.attributes;// Updating index buffer in VAO now. See WebGLBindingStates.\nfor(var name in geometryAttributes){attributes.update(geometryAttributes[name],34962);}// morph targets\nvar morphAttributes=geometry.morphAttributes;for(var _name3 in morphAttributes){var array=morphAttributes[_name3];for(var _i87=0,l=array.length;_i87<l;_i87++){attributes.update(array[_i87],34962);}}}function updateWireframeAttribute(geometry){var indices=[];var geometryIndex=geometry.index;var geometryPosition=geometry.attributes.position;var version=0;if(geometryIndex!==null){var array=geometryIndex.array;version=geometryIndex.version;for(var _i88=0,l=array.length;_i88<l;_i88+=3){var a=array[_i88+0];var b=array[_i88+1];var c=array[_i88+2];indices.push(a,b,b,c,c,a);}}else{var _array=geometryPosition.array;version=geometryPosition.version;for(var _i89=0,_l4=_array.length/3-1;_i89<_l4;_i89+=3){var _a4=_i89+0;var _b4=_i89+1;var _c4=_i89+2;indices.push(_a4,_b4,_b4,_c4,_c4,_a4);}}var attribute=new(arrayMax(indices)>65535?Uint32BufferAttribute:Uint16BufferAttribute)(indices,1);attribute.version=version;// Updating index buffer in VAO now. See WebGLBindingStates\n//\nvar previousAttribute=wireframeAttributes.get(geometry);if(previousAttribute)attributes.remove(previousAttribute);//\nwireframeAttributes.set(geometry,attribute);}function getWireframeAttribute(geometry){var currentAttribute=wireframeAttributes.get(geometry);if(currentAttribute){var geometryIndex=geometry.index;if(geometryIndex!==null){// if the attribute is obsolete, create a new one\nif(currentAttribute.version<geometryIndex.version){updateWireframeAttribute(geometry);}}}else{updateWireframeAttribute(geometry);}return wireframeAttributes.get(geometry);}return{get:get,update:update,getWireframeAttribute:getWireframeAttribute};}function WebGLIndexedBufferRenderer(gl,extensions,info,capabilities){var isWebGL2=capabilities.isWebGL2;var mode;function setMode(value){mode=value;}var type,bytesPerElement;function setIndex(value){type=value.type;bytesPerElement=value.bytesPerElement;}function render(start,count){gl.drawElements(mode,count,type,start*bytesPerElement);info.update(count,mode,1);}function renderInstances(start,count,primcount){if(primcount===0)return;var extension,methodName;if(isWebGL2){extension=gl;methodName='drawElementsInstanced';}else{extension=extensions.get('ANGLE_instanced_arrays');methodName='drawElementsInstancedANGLE';if(extension===null){console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');return;}}extension[methodName](mode,count,type,start*bytesPerElement,primcount);info.update(count,mode,primcount);}//\nthis.setMode=setMode;this.setIndex=setIndex;this.render=render;this.renderInstances=renderInstances;}function WebGLInfo(gl){var memory={geometries:0,textures:0};var render={frame:0,calls:0,triangles:0,points:0,lines:0};function update(count,mode,instanceCount){render.calls++;switch(mode){case 4:render.triangles+=instanceCount*(count/3);break;case 1:render.lines+=instanceCount*(count/2);break;case 3:render.lines+=instanceCount*(count-1);break;case 2:render.lines+=instanceCount*count;break;case 0:render.points+=instanceCount*count;break;default:console.error('THREE.WebGLInfo: Unknown draw mode:',mode);break;}}function reset(){render.frame++;render.calls=0;render.triangles=0;render.points=0;render.lines=0;}return{memory:memory,render:render,programs:null,autoReset:true,reset:reset,update:update};}var DataTexture2DArray=/*#__PURE__*/function(_Texture2){_inherits(DataTexture2DArray,_Texture2);var _super30=_createSuper(DataTexture2DArray);function DataTexture2DArray(){var _this21;var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var depth=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,DataTexture2DArray);_this21=_super30.call(this,null);_this21.image={data:data,width:width,height:height,depth:depth};_this21.magFilter=NearestFilter;_this21.minFilter=NearestFilter;_this21.wrapR=ClampToEdgeWrapping;_this21.generateMipmaps=false;_this21.flipY=false;_this21.unpackAlignment=1;_this21.needsUpdate=true;return _this21;}return _createClass(DataTexture2DArray);}(Texture);DataTexture2DArray.prototype.isDataTexture2DArray=true;function numericalSort(a,b){return a[0]-b[0];}function absNumericalSort(a,b){return Math.abs(b[1])-Math.abs(a[1]);}function denormalize(morph,attribute){var denominator=1;var array=attribute.isInterleavedBufferAttribute?attribute.data.array:attribute.array;if(array instanceof Int8Array)denominator=127;else if(array instanceof Int16Array)denominator=32767;else if(array instanceof Int32Array)denominator=2147483647;else console.error('THREE.WebGLMorphtargets: Unsupported morph attribute data type: ',array);morph.divideScalar(denominator);}function WebGLMorphtargets(gl,capabilities,textures){var influencesList={};var morphInfluences=new Float32Array(8);var morphTextures=new WeakMap();var morph=new Vector3();var workInfluences=[];for(var _i90=0;_i90<8;_i90++){workInfluences[_i90]=[_i90,0];}function update(object,geometry,material,program){var objectInfluences=object.morphTargetInfluences;if(capabilities.isWebGL2===true){// instead of using attributes, the WebGL 2 code path encodes morph targets\n// into an array of data textures. Each layer represents a single morph target.\nvar numberOfMorphTargets=geometry.morphAttributes.position.length;var entry=morphTextures.get(geometry);if(entry===undefined||entry.count!==numberOfMorphTargets){if(entry!==undefined)entry.texture.dispose();var hasMorphNormals=geometry.morphAttributes.normal!==undefined;var morphTargets=geometry.morphAttributes.position;var morphNormals=geometry.morphAttributes.normal||[];var numberOfVertices=geometry.attributes.position.count;var numberOfVertexData=hasMorphNormals===true?2:1;// (v,n) vs. (v)\nvar width=numberOfVertices*numberOfVertexData;var height=1;if(width>capabilities.maxTextureSize){height=Math.ceil(width/capabilities.maxTextureSize);width=capabilities.maxTextureSize;}var buffer=new Float32Array(width*height*4*numberOfMorphTargets);var texture=new DataTexture2DArray(buffer,width,height,numberOfMorphTargets);texture.format=RGBAFormat;// using RGBA since RGB might be emulated (and is thus slower)\ntexture.type=FloatType;// fill buffer\nvar vertexDataStride=numberOfVertexData*4;for(var _i91=0;_i91<numberOfMorphTargets;_i91++){var morphTarget=morphTargets[_i91];var morphNormal=morphNormals[_i91];var offset=width*height*4*_i91;for(var j=0;j<morphTarget.count;j++){morph.fromBufferAttribute(morphTarget,j);if(morphTarget.normalized===true)denormalize(morph,morphTarget);var stride=j*vertexDataStride;buffer[offset+stride+0]=morph.x;buffer[offset+stride+1]=morph.y;buffer[offset+stride+2]=morph.z;buffer[offset+stride+3]=0;if(hasMorphNormals===true){morph.fromBufferAttribute(morphNormal,j);if(morphNormal.normalized===true)denormalize(morph,morphNormal);buffer[offset+stride+4]=morph.x;buffer[offset+stride+5]=morph.y;buffer[offset+stride+6]=morph.z;buffer[offset+stride+7]=0;}}}entry={count:numberOfMorphTargets,texture:texture,size:new Vector2(width,height)};morphTextures.set(geometry,entry);}//\nvar morphInfluencesSum=0;for(var _i92=0;_i92<objectInfluences.length;_i92++){morphInfluencesSum+=objectInfluences[_i92];}var morphBaseInfluence=geometry.morphTargetsRelative?1:1-morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',objectInfluences);program.getUniforms().setValue(gl,'morphTargetsTexture',entry.texture,textures);program.getUniforms().setValue(gl,'morphTargetsTextureSize',entry.size);}else{// When object doesn't have morph target influences defined, we treat it as a 0-length array\n// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\nvar length=objectInfluences===undefined?0:objectInfluences.length;var influences=influencesList[geometry.id];if(influences===undefined||influences.length!==length){// initialise list\ninfluences=[];for(var _i93=0;_i93<length;_i93++){influences[_i93]=[_i93,0];}influencesList[geometry.id]=influences;}// Collect influences\nfor(var _i94=0;_i94<length;_i94++){var influence=influences[_i94];influence[0]=_i94;influence[1]=objectInfluences[_i94];}influences.sort(absNumericalSort);for(var _i95=0;_i95<8;_i95++){if(_i95<length&&influences[_i95][1]){workInfluences[_i95][0]=influences[_i95][0];workInfluences[_i95][1]=influences[_i95][1];}else{workInfluences[_i95][0]=Number.MAX_SAFE_INTEGER;workInfluences[_i95][1]=0;}}workInfluences.sort(numericalSort);var _morphTargets=geometry.morphAttributes.position;var _morphNormals=geometry.morphAttributes.normal;var _morphInfluencesSum=0;for(var _i96=0;_i96<8;_i96++){var _influence=workInfluences[_i96];var index=_influence[0];var _value3=_influence[1];if(index!==Number.MAX_SAFE_INTEGER&&_value3){if(_morphTargets&&geometry.getAttribute('morphTarget'+_i96)!==_morphTargets[index]){geometry.setAttribute('morphTarget'+_i96,_morphTargets[index]);}if(_morphNormals&&geometry.getAttribute('morphNormal'+_i96)!==_morphNormals[index]){geometry.setAttribute('morphNormal'+_i96,_morphNormals[index]);}morphInfluences[_i96]=_value3;_morphInfluencesSum+=_value3;}else{if(_morphTargets&&geometry.hasAttribute('morphTarget'+_i96)===true){geometry.deleteAttribute('morphTarget'+_i96);}if(_morphNormals&&geometry.hasAttribute('morphNormal'+_i96)===true){geometry.deleteAttribute('morphNormal'+_i96);}morphInfluences[_i96]=0;}}// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n// This allows us to switch between absolute morphs and relative morphs without changing shader code\n// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\nvar _morphBaseInfluence=geometry.morphTargetsRelative?1:1-_morphInfluencesSum;program.getUniforms().setValue(gl,'morphTargetBaseInfluence',_morphBaseInfluence);program.getUniforms().setValue(gl,'morphTargetInfluences',morphInfluences);}}return{update:update};}function WebGLObjects(gl,geometries,attributes,info){var updateMap=new WeakMap();function update(object){var frame=info.render.frame;var geometry=object.geometry;var buffergeometry=geometries.get(object,geometry);// Update once per frame\nif(updateMap.get(buffergeometry)!==frame){geometries.update(buffergeometry);updateMap.set(buffergeometry,frame);}if(object.isInstancedMesh){if(object.hasEventListener('dispose',onInstancedMeshDispose)===false){object.addEventListener('dispose',onInstancedMeshDispose);}attributes.update(object.instanceMatrix,34962);if(object.instanceColor!==null){attributes.update(object.instanceColor,34962);}}return buffergeometry;}function dispose(){updateMap=new WeakMap();}function onInstancedMeshDispose(event){var instancedMesh=event.target;instancedMesh.removeEventListener('dispose',onInstancedMeshDispose);attributes.remove(instancedMesh.instanceMatrix);if(instancedMesh.instanceColor!==null)attributes.remove(instancedMesh.instanceColor);}return{update:update,dispose:dispose};}var DataTexture3D=/*#__PURE__*/function(_Texture3){_inherits(DataTexture3D,_Texture3);var _super31=_createSuper(DataTexture3D);function DataTexture3D(){var _this22;var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var depth=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,DataTexture3D);// We're going to add .setXXX() methods for setting properties later.\n// Users can still set in DataTexture3D directly.\n//\n//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n// \ttexture.anisotropy = 16;\n//\n// See #14839\n_this22=_super31.call(this,null);_this22.image={data:data,width:width,height:height,depth:depth};_this22.magFilter=NearestFilter;_this22.minFilter=NearestFilter;_this22.wrapR=ClampToEdgeWrapping;_this22.generateMipmaps=false;_this22.flipY=false;_this22.unpackAlignment=1;_this22.needsUpdate=true;return _this22;}return _createClass(DataTexture3D);}(Texture);DataTexture3D.prototype.isDataTexture3D=true;/**\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [textures] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'textures' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (textures factorizations):\r\n *\r\n * .upload( gl, seq, values, textures )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n *\r\n * Methods of the top-level container (textures factorizations):\r\n *\r\n * .setValue( gl, name, value, textures )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n */var emptyTexture=new Texture();var emptyTexture2dArray=new DataTexture2DArray();var emptyTexture3d=new DataTexture3D();var emptyCubeTexture=new CubeTexture();// --- Utilities ---\n// Array Caches (provide typed arrays for temporary by size)\nvar arrayCacheF32=[];var arrayCacheI32=[];// Float32Array caches used for uploading Matrix uniforms\nvar mat4array=new Float32Array(16);var mat3array=new Float32Array(9);var mat2array=new Float32Array(4);// Flattening for arrays of vectors and matrices\nfunction flatten(array,nBlocks,blockSize){var firstElem=array[0];if(firstElem<=0||firstElem>0)return array;// unoptimized: ! isNaN( firstElem )\n// see http://jacksondunstan.com/articles/983\nvar n=nBlocks*blockSize;var r=arrayCacheF32[n];if(r===undefined){r=new Float32Array(n);arrayCacheF32[n]=r;}if(nBlocks!==0){firstElem.toArray(r,0);for(var _i97=1,offset=0;_i97!==nBlocks;++_i97){offset+=blockSize;array[_i97].toArray(r,offset);}}return r;}function arraysEqual(a,b){if(a.length!==b.length)return false;for(var _i98=0,l=a.length;_i98<l;_i98++){if(a[_i98]!==b[_i98])return false;}return true;}function copyArray(a,b){for(var _i99=0,l=b.length;_i99<l;_i99++){a[_i99]=b[_i99];}}// Texture unit allocation\nfunction allocTexUnits(textures,n){var r=arrayCacheI32[n];if(r===undefined){r=new Int32Array(n);arrayCacheI32[n]=r;}for(var _i100=0;_i100!==n;++_i100){r[_i100]=textures.allocateTextureUnit();}return r;}// --- Setters ---\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n// Single scalar\nfunction setValueV1f(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1f(this.addr,v);cache[0]=v;}// Single float vector (from flat array or THREE.VectorN)\nfunction setValueV2f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y){gl.uniform2f(this.addr,v.x,v.y);cache[0]=v.x;cache[1]=v.y;}}else{if(arraysEqual(cache,v))return;gl.uniform2fv(this.addr,v);copyArray(cache,v);}}function setValueV3f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z){gl.uniform3f(this.addr,v.x,v.y,v.z);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;}}else if(v.r!==undefined){if(cache[0]!==v.r||cache[1]!==v.g||cache[2]!==v.b){gl.uniform3f(this.addr,v.r,v.g,v.b);cache[0]=v.r;cache[1]=v.g;cache[2]=v.b;}}else{if(arraysEqual(cache,v))return;gl.uniform3fv(this.addr,v);copyArray(cache,v);}}function setValueV4f(gl,v){var cache=this.cache;if(v.x!==undefined){if(cache[0]!==v.x||cache[1]!==v.y||cache[2]!==v.z||cache[3]!==v.w){gl.uniform4f(this.addr,v.x,v.y,v.z,v.w);cache[0]=v.x;cache[1]=v.y;cache[2]=v.z;cache[3]=v.w;}}else{if(arraysEqual(cache,v))return;gl.uniform4fv(this.addr,v);copyArray(cache,v);}}// Single matrix (from flat array or THREE.MatrixN)\nfunction setValueM2(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix2fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat2array.set(elements);gl.uniformMatrix2fv(this.addr,false,mat2array);copyArray(cache,elements);}}function setValueM3(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix3fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat3array.set(elements);gl.uniformMatrix3fv(this.addr,false,mat3array);copyArray(cache,elements);}}function setValueM4(gl,v){var cache=this.cache;var elements=v.elements;if(elements===undefined){if(arraysEqual(cache,v))return;gl.uniformMatrix4fv(this.addr,false,v);copyArray(cache,v);}else{if(arraysEqual(cache,elements))return;mat4array.set(elements);gl.uniformMatrix4fv(this.addr,false,mat4array);copyArray(cache,elements);}}// Single integer / boolean\nfunction setValueV1i(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1i(this.addr,v);cache[0]=v;}// Single integer / boolean vector (from flat array)\nfunction setValueV2i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2iv(this.addr,v);copyArray(cache,v);}function setValueV3i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3iv(this.addr,v);copyArray(cache,v);}function setValueV4i(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4iv(this.addr,v);copyArray(cache,v);}// Single unsigned integer\nfunction setValueV1ui(gl,v){var cache=this.cache;if(cache[0]===v)return;gl.uniform1ui(this.addr,v);cache[0]=v;}// Single unsigned integer vector (from flat array)\nfunction setValueV2ui(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform2uiv(this.addr,v);copyArray(cache,v);}function setValueV3ui(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform3uiv(this.addr,v);copyArray(cache,v);}function setValueV4ui(gl,v){var cache=this.cache;if(arraysEqual(cache,v))return;gl.uniform4uiv(this.addr,v);copyArray(cache,v);}// Single texture (2D / Cube)\nfunction setValueT1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTexture2D(v||emptyTexture,unit);}function setValueT3D1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture3D(v||emptyTexture3d,unit);}function setValueT6(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.safeSetTextureCube(v||emptyCubeTexture,unit);}function setValueT2DArray1(gl,v,textures){var cache=this.cache;var unit=textures.allocateTextureUnit();if(cache[0]!==unit){gl.uniform1i(this.addr,unit);cache[0]=unit;}textures.setTexture2DArray(v||emptyTexture2dArray,unit);}// Helper to pick the right setter for the singular case\nfunction getSingularSetter(type){switch(type){case 0x1406:return setValueV1f;// FLOAT\ncase 0x8b50:return setValueV2f;// _VEC2\ncase 0x8b51:return setValueV3f;// _VEC3\ncase 0x8b52:return setValueV4f;// _VEC4\ncase 0x8b5a:return setValueM2;// _MAT2\ncase 0x8b5b:return setValueM3;// _MAT3\ncase 0x8b5c:return setValueM4;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1i;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2i;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3i;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4i;// _VEC4\ncase 0x1405:return setValueV1ui;// UINT\ncase 0x8dc6:return setValueV2ui;// _VEC2\ncase 0x8dc7:return setValueV3ui;// _VEC3\ncase 0x8dc8:return setValueV4ui;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1;case 0x8b5f:// SAMPLER_3D\ncase 0x8dcb:// INT_SAMPLER_3D\ncase 0x8dd3:// UNSIGNED_INT_SAMPLER_3D\nreturn setValueT3D1;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6;case 0x8dc1:// SAMPLER_2D_ARRAY\ncase 0x8dcf:// INT_SAMPLER_2D_ARRAY\ncase 0x8dd7:// UNSIGNED_INT_SAMPLER_2D_ARRAY\ncase 0x8dc4:// SAMPLER_2D_ARRAY_SHADOW\nreturn setValueT2DArray1;}}// Array of scalars\nfunction setValueV1fArray(gl,v){gl.uniform1fv(this.addr,v);}// Array of vectors (from flat array or array of THREE.VectorN)\nfunction setValueV2fArray(gl,v){var data=flatten(v,this.size,2);gl.uniform2fv(this.addr,data);}function setValueV3fArray(gl,v){var data=flatten(v,this.size,3);gl.uniform3fv(this.addr,data);}function setValueV4fArray(gl,v){var data=flatten(v,this.size,4);gl.uniform4fv(this.addr,data);}// Array of matrices (from flat array or array of THREE.MatrixN)\nfunction setValueM2Array(gl,v){var data=flatten(v,this.size,4);gl.uniformMatrix2fv(this.addr,false,data);}function setValueM3Array(gl,v){var data=flatten(v,this.size,9);gl.uniformMatrix3fv(this.addr,false,data);}function setValueM4Array(gl,v){var data=flatten(v,this.size,16);gl.uniformMatrix4fv(this.addr,false,data);}// Array of integer / boolean\nfunction setValueV1iArray(gl,v){gl.uniform1iv(this.addr,v);}// Array of integer / boolean vectors (from flat array)\nfunction setValueV2iArray(gl,v){gl.uniform2iv(this.addr,v);}function setValueV3iArray(gl,v){gl.uniform3iv(this.addr,v);}function setValueV4iArray(gl,v){gl.uniform4iv(this.addr,v);}// Array of unsigned integer\nfunction setValueV1uiArray(gl,v){gl.uniform1uiv(this.addr,v);}// Array of unsigned integer vectors (from flat array)\nfunction setValueV2uiArray(gl,v){gl.uniform2uiv(this.addr,v);}function setValueV3uiArray(gl,v){gl.uniform3uiv(this.addr,v);}function setValueV4uiArray(gl,v){gl.uniform4uiv(this.addr,v);}// Array of textures (2D / Cube)\nfunction setValueT1Array(gl,v,textures){var n=v.length;var units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(var _i101=0;_i101!==n;++_i101){textures.safeSetTexture2D(v[_i101]||emptyTexture,units[_i101]);}}function setValueT6Array(gl,v,textures){var n=v.length;var units=allocTexUnits(textures,n);gl.uniform1iv(this.addr,units);for(var _i102=0;_i102!==n;++_i102){textures.safeSetTextureCube(v[_i102]||emptyCubeTexture,units[_i102]);}}// Helper to pick the right setter for a pure (bottom-level) array\nfunction getPureArraySetter(type){switch(type){case 0x1406:return setValueV1fArray;// FLOAT\ncase 0x8b50:return setValueV2fArray;// _VEC2\ncase 0x8b51:return setValueV3fArray;// _VEC3\ncase 0x8b52:return setValueV4fArray;// _VEC4\ncase 0x8b5a:return setValueM2Array;// _MAT2\ncase 0x8b5b:return setValueM3Array;// _MAT3\ncase 0x8b5c:return setValueM4Array;// _MAT4\ncase 0x1404:case 0x8b56:return setValueV1iArray;// INT, BOOL\ncase 0x8b53:case 0x8b57:return setValueV2iArray;// _VEC2\ncase 0x8b54:case 0x8b58:return setValueV3iArray;// _VEC3\ncase 0x8b55:case 0x8b59:return setValueV4iArray;// _VEC4\ncase 0x1405:return setValueV1uiArray;// UINT\ncase 0x8dc6:return setValueV2uiArray;// _VEC2\ncase 0x8dc7:return setValueV3uiArray;// _VEC3\ncase 0x8dc8:return setValueV4uiArray;// _VEC4\ncase 0x8b5e:// SAMPLER_2D\ncase 0x8d66:// SAMPLER_EXTERNAL_OES\ncase 0x8dca:// INT_SAMPLER_2D\ncase 0x8dd2:// UNSIGNED_INT_SAMPLER_2D\ncase 0x8b62:// SAMPLER_2D_SHADOW\nreturn setValueT1Array;case 0x8b60:// SAMPLER_CUBE\ncase 0x8dcc:// INT_SAMPLER_CUBE\ncase 0x8dd4:// UNSIGNED_INT_SAMPLER_CUBE\ncase 0x8dc5:// SAMPLER_CUBE_SHADOW\nreturn setValueT6Array;}}// --- Uniform Classes ---\nfunction SingleUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.setValue=getSingularSetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}function PureArrayUniform(id,activeInfo,addr){this.id=id;this.addr=addr;this.cache=[];this.size=activeInfo.size;this.setValue=getPureArraySetter(activeInfo.type);// this.path = activeInfo.name; // DEBUG\n}PureArrayUniform.prototype.updateCache=function(data){var cache=this.cache;if(data instanceof Float32Array&&cache.length!==data.length){this.cache=new Float32Array(data.length);}copyArray(cache,data);};function StructuredUniform(id){this.id=id;this.seq=[];this.map={};}StructuredUniform.prototype.setValue=function(gl,value,textures){var seq=this.seq;for(var _i103=0,n=seq.length;_i103!==n;++_i103){var u=seq[_i103];u.setValue(gl,value[u.id],textures);}};// --- Top-level ---\n// Parser - builds up the property tree from the path strings\nvar RePathPart=/(\\w+)(\\])?(\\[|\\.)?/g;// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\nfunction addUniform(container,uniformObject){container.seq.push(uniformObject);container.map[uniformObject.id]=uniformObject;}function parseUniform(activeInfo,addr,container){var path=activeInfo.name,pathLength=path.length;// reset RegExp object, because of the early exit of a previous run\nRePathPart.lastIndex=0;while(true){var match=RePathPart.exec(path),matchEnd=RePathPart.lastIndex;var id=match[1];var idIsIndex=match[2]===']',subscript=match[3];if(idIsIndex)id=id|0;// convert to integer\nif(subscript===undefined||subscript==='['&&matchEnd+2===pathLength){// bare name or \"pure\" bottom-level array \"[0]\" suffix\naddUniform(container,subscript===undefined?new SingleUniform(id,activeInfo,addr):new PureArrayUniform(id,activeInfo,addr));break;}else{// step into inner node / create it in case it doesn't exist\nvar map=container.map;var next=map[id];if(next===undefined){next=new StructuredUniform(id);addUniform(container,next);}container=next;}}}// Root Container\nfunction WebGLUniforms(gl,program){this.seq=[];this.map={};var n=gl.getProgramParameter(program,35718);for(var _i104=0;_i104<n;++_i104){var info=gl.getActiveUniform(program,_i104),addr=gl.getUniformLocation(program,info.name);parseUniform(info,addr,this);}}WebGLUniforms.prototype.setValue=function(gl,name,value,textures){var u=this.map[name];if(u!==undefined)u.setValue(gl,value,textures);};WebGLUniforms.prototype.setOptional=function(gl,object,name){var v=object[name];if(v!==undefined)this.setValue(gl,name,v);};// Static interface\nWebGLUniforms.upload=function(gl,seq,values,textures){for(var _i105=0,n=seq.length;_i105!==n;++_i105){var u=seq[_i105],v=values[u.id];if(v.needsUpdate!==false){// note: always updating when .needsUpdate is undefined\nu.setValue(gl,v.value,textures);}}};WebGLUniforms.seqWithValue=function(seq,values){var r=[];for(var _i106=0,n=seq.length;_i106!==n;++_i106){var u=seq[_i106];if(u.id in values)r.push(u);}return r;};function WebGLShader(gl,type,string){var shader=gl.createShader(type);gl.shaderSource(shader,string);gl.compileShader(shader);return shader;}var programIdCount=0;function addLineNumbers(string){var lines=string.split('\\n');for(var _i107=0;_i107<lines.length;_i107++){lines[_i107]=_i107+1+': '+lines[_i107];}return lines.join('\\n');}function getEncodingComponents(encoding){switch(encoding){case LinearEncoding:return['Linear','( value )'];case sRGBEncoding:return['sRGB','( value )'];case RGBEEncoding:return['RGBE','( value )'];case RGBM7Encoding:return['RGBM','( value, 7.0 )'];case RGBM16Encoding:return['RGBM','( value, 16.0 )'];case RGBDEncoding:return['RGBD','( value, 256.0 )'];case GammaEncoding:return['Gamma','( value, float( GAMMA_FACTOR ) )'];case LogLuvEncoding:return['LogLuv','( value )'];default:console.warn('THREE.WebGLProgram: Unsupported encoding:',encoding);return['Linear','( value )'];}}function getShaderErrors(gl,shader,type){var status=gl.getShaderParameter(shader,35713);var errors=gl.getShaderInfoLog(shader).trim();if(status&&errors==='')return'';// --enable-privileged-webgl-extension\n// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\nreturn type.toUpperCase()+'\\n\\n'+errors+'\\n\\n'+addLineNumbers(gl.getShaderSource(shader));}function getTexelDecodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return '+components[0]+'ToLinear'+components[1]+'; }';}function getTexelEncodingFunction(functionName,encoding){var components=getEncodingComponents(encoding);return'vec4 '+functionName+'( vec4 value ) { return LinearTo'+components[0]+components[1]+'; }';}function getToneMappingFunction(functionName,toneMapping){var toneMappingName;switch(toneMapping){case LinearToneMapping:toneMappingName='Linear';break;case ReinhardToneMapping:toneMappingName='Reinhard';break;case CineonToneMapping:toneMappingName='OptimizedCineon';break;case ACESFilmicToneMapping:toneMappingName='ACESFilmic';break;case CustomToneMapping:toneMappingName='Custom';break;default:console.warn('THREE.WebGLProgram: Unsupported toneMapping:',toneMapping);toneMappingName='Linear';}return'vec3 '+functionName+'( vec3 color ) { return '+toneMappingName+'ToneMapping( color ); }';}function generateExtensions(parameters){var chunks=[parameters.extensionDerivatives||parameters.envMapCubeUV||parameters.bumpMap||parameters.tangentSpaceNormalMap||parameters.clearcoatNormalMap||parameters.flatShading||parameters.shaderID==='physical'?'#extension GL_OES_standard_derivatives : enable':'',(parameters.extensionFragDepth||parameters.logarithmicDepthBuffer)&&parameters.rendererExtensionFragDepth?'#extension GL_EXT_frag_depth : enable':'',parameters.extensionDrawBuffers&&parameters.rendererExtensionDrawBuffers?'#extension GL_EXT_draw_buffers : require':'',(parameters.extensionShaderTextureLOD||parameters.envMap||parameters.transmission)&&parameters.rendererExtensionShaderTextureLod?'#extension GL_EXT_shader_texture_lod : enable':''];return chunks.filter(filterEmptyLine).join('\\n');}function generateDefines(defines){var chunks=[];for(var name in defines){var _value4=defines[name];if(_value4===false)continue;chunks.push('#define '+name+' '+_value4);}return chunks.join('\\n');}function fetchAttributeLocations(gl,program){var attributes={};var n=gl.getProgramParameter(program,35721);for(var _i108=0;_i108<n;_i108++){var info=gl.getActiveAttrib(program,_i108);var name=info.name;var locationSize=1;if(info.type===35674)locationSize=2;if(info.type===35675)locationSize=3;if(info.type===35676)locationSize=4;// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\nattributes[name]={type:info.type,location:gl.getAttribLocation(program,name),locationSize:locationSize};}return attributes;}function filterEmptyLine(string){return string!=='';}function replaceLightNums(string,parameters){return string.replace(/NUM_DIR_LIGHTS/g,parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g,parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g,parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,parameters.numPointLightShadows);}function replaceClippingPlaneNums(string,parameters){return string.replace(/NUM_CLIPPING_PLANES/g,parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,parameters.numClippingPlanes-parameters.numClipIntersection);}// Resolve Includes\nvar includePattern=/^[ \\t]*#include +<([\\w\\d./]+)>/gm;function resolveIncludes(string){return string.replace(includePattern,includeReplacer);}function includeReplacer(match,include){var string=ShaderChunk[include];if(string===undefined){throw new Error('Can not resolve #include <'+include+'>');}return resolveIncludes(string);}// Unroll Loops\nvar deprecatedUnrollLoopPattern=/#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;var unrollLoopPattern=/#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;function unrollLoops(string){return string.replace(unrollLoopPattern,loopReplacer).replace(deprecatedUnrollLoopPattern,deprecatedLoopReplacer);}function deprecatedLoopReplacer(match,start,end,snippet){console.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');return loopReplacer(match,start,end,snippet);}function loopReplacer(match,start,end,snippet){var string='';for(var _i109=parseInt(start);_i109<parseInt(end);_i109++){string+=snippet.replace(/\\[\\s*i\\s*\\]/g,'[ '+_i109+' ]').replace(/UNROLLED_LOOP_INDEX/g,_i109);}return string;}//\nfunction generatePrecision(parameters){var precisionstring='precision '+parameters.precision+' float;\\nprecision '+parameters.precision+' int;';if(parameters.precision==='highp'){precisionstring+='\\n#define HIGH_PRECISION';}else if(parameters.precision==='mediump'){precisionstring+='\\n#define MEDIUM_PRECISION';}else if(parameters.precision==='lowp'){precisionstring+='\\n#define LOW_PRECISION';}return precisionstring;}function generateShadowMapTypeDefine(parameters){var shadowMapTypeDefine='SHADOWMAP_TYPE_BASIC';if(parameters.shadowMapType===PCFShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF';}else if(parameters.shadowMapType===PCFSoftShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_PCF_SOFT';}else if(parameters.shadowMapType===VSMShadowMap){shadowMapTypeDefine='SHADOWMAP_TYPE_VSM';}return shadowMapTypeDefine;}function generateEnvMapTypeDefine(parameters){var envMapTypeDefine='ENVMAP_TYPE_CUBE';if(parameters.envMap){switch(parameters.envMapMode){case CubeReflectionMapping:case CubeRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE';break;case CubeUVReflectionMapping:case CubeUVRefractionMapping:envMapTypeDefine='ENVMAP_TYPE_CUBE_UV';break;}}return envMapTypeDefine;}function generateEnvMapModeDefine(parameters){var envMapModeDefine='ENVMAP_MODE_REFLECTION';if(parameters.envMap){switch(parameters.envMapMode){case CubeRefractionMapping:case CubeUVRefractionMapping:envMapModeDefine='ENVMAP_MODE_REFRACTION';break;}}return envMapModeDefine;}function generateEnvMapBlendingDefine(parameters){var envMapBlendingDefine='ENVMAP_BLENDING_NONE';if(parameters.envMap){switch(parameters.combine){case MultiplyOperation:envMapBlendingDefine='ENVMAP_BLENDING_MULTIPLY';break;case MixOperation:envMapBlendingDefine='ENVMAP_BLENDING_MIX';break;case AddOperation:envMapBlendingDefine='ENVMAP_BLENDING_ADD';break;}}return envMapBlendingDefine;}function WebGLProgram(renderer,cacheKey,parameters,bindingStates){// TODO Send this event to Three.js DevTools\n// console.log( 'WebGLProgram', cacheKey );\nvar gl=renderer.getContext();var defines=parameters.defines;var vertexShader=parameters.vertexShader;var fragmentShader=parameters.fragmentShader;var shadowMapTypeDefine=generateShadowMapTypeDefine(parameters);var envMapTypeDefine=generateEnvMapTypeDefine(parameters);var envMapModeDefine=generateEnvMapModeDefine(parameters);var envMapBlendingDefine=generateEnvMapBlendingDefine(parameters);var gammaFactorDefine=renderer.gammaFactor>0?renderer.gammaFactor:1.0;var customExtensions=parameters.isWebGL2?'':generateExtensions(parameters);var customDefines=generateDefines(defines);var program=gl.createProgram();var prefixVertex,prefixFragment;var versionString=parameters.glslVersion?'#version '+parameters.glslVersion+'\\n':'';if(parameters.isRawShaderMaterial){prefixVertex=[customDefines].filter(filterEmptyLine).join('\\n');if(prefixVertex.length>0){prefixVertex+='\\n';}prefixFragment=[customExtensions,customDefines].filter(filterEmptyLine).join('\\n');if(prefixFragment.length>0){prefixFragment+='\\n';}}else{prefixVertex=[generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,parameters.instancing?'#define USE_INSTANCING':'',parameters.instancingColor?'#define USE_INSTANCING_COLOR':'',parameters.supportsVertexTextures?'#define VERTEX_TEXTURES':'','#define GAMMA_FACTOR '+gammaFactorDefine,'#define MAX_BONES '+parameters.maxBones,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.displacementMap&&parameters.supportsVertexTextures?'#define USE_DISPLACEMENTMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.specularIntensityMap?'#define USE_SPECULARINTENSITYMAP':'',parameters.specularTintMap?'#define USE_SPECULARTINTMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.skinning?'#define USE_SKINNING':'',parameters.useVertexTexture?'#define BONE_TEXTURE':'',parameters.morphTargets?'#define USE_MORPHTARGETS':'',parameters.morphNormals&&parameters.flatShading===false?'#define USE_MORPHNORMALS':'',parameters.morphTargets&&parameters.isWebGL2?'#define MORPHTARGETS_TEXTURE':'',parameters.morphTargets&&parameters.isWebGL2?'#define MORPHTARGETS_COUNT '+parameters.morphTargetsCount:'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.sizeAttenuation?'#define USE_SIZEATTENUATION':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'','uniform mat4 modelMatrix;','uniform mat4 modelViewMatrix;','uniform mat4 projectionMatrix;','uniform mat4 viewMatrix;','uniform mat3 normalMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;','#ifdef USE_INSTANCING','\tattribute mat4 instanceMatrix;','#endif','#ifdef USE_INSTANCING_COLOR','\tattribute vec3 instanceColor;','#endif','attribute vec3 position;','attribute vec3 normal;','attribute vec2 uv;','#ifdef USE_TANGENT','\tattribute vec4 tangent;','#endif','#if defined( USE_COLOR_ALPHA )','\tattribute vec4 color;','#elif defined( USE_COLOR )','\tattribute vec3 color;','#endif','#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )','\tattribute vec3 morphTarget0;','\tattribute vec3 morphTarget1;','\tattribute vec3 morphTarget2;','\tattribute vec3 morphTarget3;','\t#ifdef USE_MORPHNORMALS','\t\tattribute vec3 morphNormal0;','\t\tattribute vec3 morphNormal1;','\t\tattribute vec3 morphNormal2;','\t\tattribute vec3 morphNormal3;','\t#else','\t\tattribute vec3 morphTarget4;','\t\tattribute vec3 morphTarget5;','\t\tattribute vec3 morphTarget6;','\t\tattribute vec3 morphTarget7;','\t#endif','#endif','#ifdef USE_SKINNING','\tattribute vec4 skinIndex;','\tattribute vec4 skinWeight;','#endif','\\n'].filter(filterEmptyLine).join('\\n');prefixFragment=[customExtensions,generatePrecision(parameters),'#define SHADER_NAME '+parameters.shaderName,customDefines,'#define GAMMA_FACTOR '+gammaFactorDefine,parameters.useFog&&parameters.fog?'#define USE_FOG':'',parameters.useFog&&parameters.fogExp2?'#define FOG_EXP2':'',parameters.map?'#define USE_MAP':'',parameters.matcap?'#define USE_MATCAP':'',parameters.envMap?'#define USE_ENVMAP':'',parameters.envMap?'#define '+envMapTypeDefine:'',parameters.envMap?'#define '+envMapModeDefine:'',parameters.envMap?'#define '+envMapBlendingDefine:'',parameters.lightMap?'#define USE_LIGHTMAP':'',parameters.aoMap?'#define USE_AOMAP':'',parameters.emissiveMap?'#define USE_EMISSIVEMAP':'',parameters.bumpMap?'#define USE_BUMPMAP':'',parameters.normalMap?'#define USE_NORMALMAP':'',parameters.normalMap&&parameters.objectSpaceNormalMap?'#define OBJECTSPACE_NORMALMAP':'',parameters.normalMap&&parameters.tangentSpaceNormalMap?'#define TANGENTSPACE_NORMALMAP':'',parameters.clearcoat?'#define USE_CLEARCOAT':'',parameters.clearcoatMap?'#define USE_CLEARCOATMAP':'',parameters.clearcoatRoughnessMap?'#define USE_CLEARCOAT_ROUGHNESSMAP':'',parameters.clearcoatNormalMap?'#define USE_CLEARCOAT_NORMALMAP':'',parameters.specularMap?'#define USE_SPECULARMAP':'',parameters.specularIntensityMap?'#define USE_SPECULARINTENSITYMAP':'',parameters.specularTintMap?'#define USE_SPECULARTINTMAP':'',parameters.roughnessMap?'#define USE_ROUGHNESSMAP':'',parameters.metalnessMap?'#define USE_METALNESSMAP':'',parameters.alphaMap?'#define USE_ALPHAMAP':'',parameters.alphaTest?'#define USE_ALPHATEST':'',parameters.sheen?'#define USE_SHEEN':'',parameters.transmission?'#define USE_TRANSMISSION':'',parameters.transmissionMap?'#define USE_TRANSMISSIONMAP':'',parameters.thicknessMap?'#define USE_THICKNESSMAP':'',parameters.vertexTangents?'#define USE_TANGENT':'',parameters.vertexColors||parameters.instancingColor?'#define USE_COLOR':'',parameters.vertexAlphas?'#define USE_COLOR_ALPHA':'',parameters.vertexUvs?'#define USE_UV':'',parameters.uvsVertexOnly?'#define UVS_VERTEX_ONLY':'',parameters.gradientMap?'#define USE_GRADIENTMAP':'',parameters.flatShading?'#define FLAT_SHADED':'',parameters.doubleSided?'#define DOUBLE_SIDED':'',parameters.flipSided?'#define FLIP_SIDED':'',parameters.shadowMapEnabled?'#define USE_SHADOWMAP':'',parameters.shadowMapEnabled?'#define '+shadowMapTypeDefine:'',parameters.premultipliedAlpha?'#define PREMULTIPLIED_ALPHA':'',parameters.physicallyCorrectLights?'#define PHYSICALLY_CORRECT_LIGHTS':'',parameters.logarithmicDepthBuffer?'#define USE_LOGDEPTHBUF':'',parameters.logarithmicDepthBuffer&&parameters.rendererExtensionFragDepth?'#define USE_LOGDEPTHBUF_EXT':'',(parameters.extensionShaderTextureLOD||parameters.envMap)&&parameters.rendererExtensionShaderTextureLod?'#define TEXTURE_LOD_EXT':'','uniform mat4 viewMatrix;','uniform vec3 cameraPosition;','uniform bool isOrthographic;',parameters.toneMapping!==NoToneMapping?'#define TONE_MAPPING':'',parameters.toneMapping!==NoToneMapping?ShaderChunk['tonemapping_pars_fragment']:'',// this code is required here because it is used by the toneMapping() function defined below\nparameters.toneMapping!==NoToneMapping?getToneMappingFunction('toneMapping',parameters.toneMapping):'',parameters.dithering?'#define DITHERING':'',parameters.format===RGBFormat?'#define OPAQUE':'',ShaderChunk['encodings_pars_fragment'],// this code is required here because it is used by the various encoding/decoding function defined below\nparameters.map?getTexelDecodingFunction('mapTexelToLinear',parameters.mapEncoding):'',parameters.matcap?getTexelDecodingFunction('matcapTexelToLinear',parameters.matcapEncoding):'',parameters.envMap?getTexelDecodingFunction('envMapTexelToLinear',parameters.envMapEncoding):'',parameters.emissiveMap?getTexelDecodingFunction('emissiveMapTexelToLinear',parameters.emissiveMapEncoding):'',parameters.specularTintMap?getTexelDecodingFunction('specularTintMapTexelToLinear',parameters.specularTintMapEncoding):'',parameters.lightMap?getTexelDecodingFunction('lightMapTexelToLinear',parameters.lightMapEncoding):'',getTexelEncodingFunction('linearToOutputTexel',parameters.outputEncoding),parameters.depthPacking?'#define DEPTH_PACKING '+parameters.depthPacking:'','\\n'].filter(filterEmptyLine).join('\\n');}vertexShader=resolveIncludes(vertexShader);vertexShader=replaceLightNums(vertexShader,parameters);vertexShader=replaceClippingPlaneNums(vertexShader,parameters);fragmentShader=resolveIncludes(fragmentShader);fragmentShader=replaceLightNums(fragmentShader,parameters);fragmentShader=replaceClippingPlaneNums(fragmentShader,parameters);vertexShader=unrollLoops(vertexShader);fragmentShader=unrollLoops(fragmentShader);if(parameters.isWebGL2&&parameters.isRawShaderMaterial!==true){// GLSL 3.0 conversion for built-in materials and ShaderMaterial\nversionString='#version 300 es\\n';prefixVertex=['precision mediump sampler2DArray;','#define attribute in','#define varying out','#define texture2D texture'].join('\\n')+'\\n'+prefixVertex;prefixFragment=['#define varying in',parameters.glslVersion===GLSL3?'':'out highp vec4 pc_fragColor;',parameters.glslVersion===GLSL3?'':'#define gl_FragColor pc_fragColor','#define gl_FragDepthEXT gl_FragDepth','#define texture2D texture','#define textureCube texture','#define texture2DProj textureProj','#define texture2DLodEXT textureLod','#define texture2DProjLodEXT textureProjLod','#define textureCubeLodEXT textureLod','#define texture2DGradEXT textureGrad','#define texture2DProjGradEXT textureProjGrad','#define textureCubeGradEXT textureGrad'].join('\\n')+'\\n'+prefixFragment;}var vertexGlsl=versionString+prefixVertex+vertexShader;var fragmentGlsl=versionString+prefixFragment+fragmentShader;// console.log( '*VERTEX*', vertexGlsl );\n// console.log( '*FRAGMENT*', fragmentGlsl );\nvar glVertexShader=WebGLShader(gl,35633,vertexGlsl);var glFragmentShader=WebGLShader(gl,35632,fragmentGlsl);gl.attachShader(program,glVertexShader);gl.attachShader(program,glFragmentShader);// Force a particular attribute to index 0.\nif(parameters.index0AttributeName!==undefined){gl.bindAttribLocation(program,0,parameters.index0AttributeName);}else if(parameters.morphTargets===true){// programs with morphTargets displace position out of attribute 0\ngl.bindAttribLocation(program,0,'position');}gl.linkProgram(program);// check for link errors\nif(renderer.debug.checkShaderErrors){var programLog=gl.getProgramInfoLog(program).trim();var vertexLog=gl.getShaderInfoLog(glVertexShader).trim();var fragmentLog=gl.getShaderInfoLog(glFragmentShader).trim();var runnable=true;var haveDiagnostics=true;if(gl.getProgramParameter(program,35714)===false){runnable=false;var vertexErrors=getShaderErrors(gl,glVertexShader,'vertex');var fragmentErrors=getShaderErrors(gl,glFragmentShader,'fragment');console.error('THREE.WebGLProgram: Shader Error '+gl.getError()+' - '+'VALIDATE_STATUS '+gl.getProgramParameter(program,35715)+'\\n\\n'+'Program Info Log: '+programLog+'\\n'+vertexErrors+'\\n'+fragmentErrors);}else if(programLog!==''){console.warn('THREE.WebGLProgram: Program Info Log:',programLog);}else if(vertexLog===''||fragmentLog===''){haveDiagnostics=false;}if(haveDiagnostics){this.diagnostics={runnable:runnable,programLog:programLog,vertexShader:{log:vertexLog,prefix:prefixVertex},fragmentShader:{log:fragmentLog,prefix:prefixFragment}};}}// Clean up\n// Crashes in iOS9 and iOS10. #18402\n// gl.detachShader( program, glVertexShader );\n// gl.detachShader( program, glFragmentShader );\ngl.deleteShader(glVertexShader);gl.deleteShader(glFragmentShader);// set up caching for uniform locations\nvar cachedUniforms;this.getUniforms=function(){if(cachedUniforms===undefined){cachedUniforms=new WebGLUniforms(gl,program);}return cachedUniforms;};// set up caching for attribute locations\nvar cachedAttributes;this.getAttributes=function(){if(cachedAttributes===undefined){cachedAttributes=fetchAttributeLocations(gl,program);}return cachedAttributes;};// free resource\nthis.destroy=function(){bindingStates.releaseStatesOfProgram(this);gl.deleteProgram(program);this.program=undefined;};//\nthis.name=parameters.shaderName;this.id=programIdCount++;this.cacheKey=cacheKey;this.usedTimes=1;this.program=program;this.vertexShader=glVertexShader;this.fragmentShader=glFragmentShader;return this;}function WebGLPrograms(renderer,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping){var programs=[];var isWebGL2=capabilities.isWebGL2;var logarithmicDepthBuffer=capabilities.logarithmicDepthBuffer;var floatVertexTextures=capabilities.floatVertexTextures;var maxVertexUniforms=capabilities.maxVertexUniforms;var vertexTextures=capabilities.vertexTextures;var precision=capabilities.precision;var shaderIDs={MeshDepthMaterial:'depth',MeshDistanceMaterial:'distanceRGBA',MeshNormalMaterial:'normal',MeshBasicMaterial:'basic',MeshLambertMaterial:'lambert',MeshPhongMaterial:'phong',MeshToonMaterial:'toon',MeshStandardMaterial:'physical',MeshPhysicalMaterial:'physical',MeshMatcapMaterial:'matcap',LineBasicMaterial:'basic',LineDashedMaterial:'dashed',PointsMaterial:'points',ShadowMaterial:'shadow',SpriteMaterial:'sprite'};var parameterNames=['precision','isWebGL2','supportsVertexTextures','outputEncoding','instancing','instancingColor','map','mapEncoding','matcap','matcapEncoding','envMap','envMapMode','envMapEncoding','envMapCubeUV','lightMap','lightMapEncoding','aoMap','emissiveMap','emissiveMapEncoding','bumpMap','normalMap','objectSpaceNormalMap','tangentSpaceNormalMap','clearcoat','clearcoatMap','clearcoatRoughnessMap','clearcoatNormalMap','displacementMap','specularMap','specularIntensityMap','specularTintMap','specularTintMapEncoding','roughnessMap','metalnessMap','gradientMap','alphaMap','alphaTest','combine','vertexColors','vertexAlphas','vertexTangents','vertexUvs','uvsVertexOnly','fog','useFog','fogExp2','flatShading','sizeAttenuation','logarithmicDepthBuffer','skinning','maxBones','useVertexTexture','morphTargets','morphNormals','morphTargetsCount','premultipliedAlpha','numDirLights','numPointLights','numSpotLights','numHemiLights','numRectAreaLights','numDirLightShadows','numPointLightShadows','numSpotLightShadows','shadowMapEnabled','shadowMapType','toneMapping','physicallyCorrectLights','doubleSided','flipSided','numClippingPlanes','numClipIntersection','depthPacking','dithering','format','sheen','transmission','transmissionMap','thicknessMap'];function getMaxBones(object){var skeleton=object.skeleton;var bones=skeleton.bones;if(floatVertexTextures){return 1024;}else{// default for when object is not specified\n// ( for example when prebuilding shader to be used with multiple objects )\n//\n//  - leave some extra space for other uniforms\n//  - limit here is ANGLE's 254 max uniform vectors\n//    (up to 54 should be safe)\nvar nVertexUniforms=maxVertexUniforms;var nVertexMatrices=Math.floor((nVertexUniforms-20)/4);var maxBones=Math.min(nVertexMatrices,bones.length);if(maxBones<bones.length){console.warn('THREE.WebGLRenderer: Skeleton has '+bones.length+' bones. This GPU supports '+maxBones+'.');return 0;}return maxBones;}}function getTextureEncodingFromMap(map){var encoding;if(map&&map.isTexture){encoding=map.encoding;}else if(map&&map.isWebGLRenderTarget){console.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');encoding=map.texture.encoding;}else{encoding=LinearEncoding;}if(isWebGL2&&map&&map.isTexture&&map.format===RGBAFormat&&map.type===UnsignedByteType&&map.encoding===sRGBEncoding){encoding=LinearEncoding;// disable inline decode for sRGB textures in WebGL 2\n}return encoding;}function getParameters(material,lights,shadows,scene,object){var fog=scene.fog;var environment=material.isMeshStandardMaterial?scene.environment:null;var envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||environment);var shaderID=shaderIDs[material.type];// heuristics to create shader parameters according to lights in the scene\n// (not to blow over maxLights budget)\nvar maxBones=object.isSkinnedMesh?getMaxBones(object):0;if(material.precision!==null){precision=capabilities.getMaxPrecision(material.precision);if(precision!==material.precision){console.warn('THREE.WebGLProgram.getParameters:',material.precision,'not supported, using',precision,'instead.');}}var vertexShader,fragmentShader;if(shaderID){var shader=ShaderLib[shaderID];vertexShader=shader.vertexShader;fragmentShader=shader.fragmentShader;}else{vertexShader=material.vertexShader;fragmentShader=material.fragmentShader;}var currentRenderTarget=renderer.getRenderTarget();var useAlphaTest=material.alphaTest>0;var useClearcoat=material.clearcoat>0;var parameters={isWebGL2:isWebGL2,shaderID:shaderID,shaderName:material.type,vertexShader:vertexShader,fragmentShader:fragmentShader,defines:material.defines,isRawShaderMaterial:material.isRawShaderMaterial===true,glslVersion:material.glslVersion,precision:precision,instancing:object.isInstancedMesh===true,instancingColor:object.isInstancedMesh===true&&object.instanceColor!==null,supportsVertexTextures:vertexTextures,outputEncoding:currentRenderTarget!==null?getTextureEncodingFromMap(currentRenderTarget.texture):renderer.outputEncoding,map:!!material.map,mapEncoding:getTextureEncodingFromMap(material.map),matcap:!!material.matcap,matcapEncoding:getTextureEncodingFromMap(material.matcap),envMap:!!envMap,envMapMode:envMap&&envMap.mapping,envMapEncoding:getTextureEncodingFromMap(envMap),envMapCubeUV:!!envMap&&(envMap.mapping===CubeUVReflectionMapping||envMap.mapping===CubeUVRefractionMapping),lightMap:!!material.lightMap,lightMapEncoding:getTextureEncodingFromMap(material.lightMap),aoMap:!!material.aoMap,emissiveMap:!!material.emissiveMap,emissiveMapEncoding:getTextureEncodingFromMap(material.emissiveMap),bumpMap:!!material.bumpMap,normalMap:!!material.normalMap,objectSpaceNormalMap:material.normalMapType===ObjectSpaceNormalMap,tangentSpaceNormalMap:material.normalMapType===TangentSpaceNormalMap,clearcoat:useClearcoat,clearcoatMap:useClearcoat&&!!material.clearcoatMap,clearcoatRoughnessMap:useClearcoat&&!!material.clearcoatRoughnessMap,clearcoatNormalMap:useClearcoat&&!!material.clearcoatNormalMap,displacementMap:!!material.displacementMap,roughnessMap:!!material.roughnessMap,metalnessMap:!!material.metalnessMap,specularMap:!!material.specularMap,specularIntensityMap:!!material.specularIntensityMap,specularTintMap:!!material.specularTintMap,specularTintMapEncoding:getTextureEncodingFromMap(material.specularTintMap),alphaMap:!!material.alphaMap,alphaTest:useAlphaTest,gradientMap:!!material.gradientMap,sheen:material.sheen>0,transmission:material.transmission>0,transmissionMap:!!material.transmissionMap,thicknessMap:!!material.thicknessMap,combine:material.combine,vertexTangents:!!material.normalMap&&!!object.geometry&&!!object.geometry.attributes.tangent,vertexColors:material.vertexColors,vertexAlphas:material.vertexColors===true&&!!object.geometry&&!!object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4,vertexUvs:!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatMap||!!material.clearcoatRoughnessMap||!!material.clearcoatNormalMap||!!material.displacementMap||!!material.transmissionMap||!!material.thicknessMap||!!material.specularIntensityMap||!!material.specularTintMap,uvsVertexOnly:!(!!material.map||!!material.bumpMap||!!material.normalMap||!!material.specularMap||!!material.alphaMap||!!material.emissiveMap||!!material.roughnessMap||!!material.metalnessMap||!!material.clearcoatNormalMap||material.transmission>0||!!material.transmissionMap||!!material.thicknessMap||!!material.specularIntensityMap||!!material.specularTintMap)&&!!material.displacementMap,fog:!!fog,useFog:material.fog,fogExp2:fog&&fog.isFogExp2,flatShading:!!material.flatShading,sizeAttenuation:material.sizeAttenuation,logarithmicDepthBuffer:logarithmicDepthBuffer,skinning:object.isSkinnedMesh===true&&maxBones>0,maxBones:maxBones,useVertexTexture:floatVertexTextures,morphTargets:!!object.geometry&&!!object.geometry.morphAttributes.position,morphNormals:!!object.geometry&&!!object.geometry.morphAttributes.normal,morphTargetsCount:!!object.geometry&&!!object.geometry.morphAttributes.position?object.geometry.morphAttributes.position.length:0,numDirLights:lights.directional.length,numPointLights:lights.point.length,numSpotLights:lights.spot.length,numRectAreaLights:lights.rectArea.length,numHemiLights:lights.hemi.length,numDirLightShadows:lights.directionalShadowMap.length,numPointLightShadows:lights.pointShadowMap.length,numSpotLightShadows:lights.spotShadowMap.length,numClippingPlanes:clipping.numPlanes,numClipIntersection:clipping.numIntersection,format:material.format,dithering:material.dithering,shadowMapEnabled:renderer.shadowMap.enabled&&shadows.length>0,shadowMapType:renderer.shadowMap.type,toneMapping:material.toneMapped?renderer.toneMapping:NoToneMapping,physicallyCorrectLights:renderer.physicallyCorrectLights,premultipliedAlpha:material.premultipliedAlpha,doubleSided:material.side===DoubleSide,flipSided:material.side===BackSide,depthPacking:material.depthPacking!==undefined?material.depthPacking:false,index0AttributeName:material.index0AttributeName,extensionDerivatives:material.extensions&&material.extensions.derivatives,extensionFragDepth:material.extensions&&material.extensions.fragDepth,extensionDrawBuffers:material.extensions&&material.extensions.drawBuffers,extensionShaderTextureLOD:material.extensions&&material.extensions.shaderTextureLOD,rendererExtensionFragDepth:isWebGL2||extensions.has('EXT_frag_depth'),rendererExtensionDrawBuffers:isWebGL2||extensions.has('WEBGL_draw_buffers'),rendererExtensionShaderTextureLod:isWebGL2||extensions.has('EXT_shader_texture_lod'),customProgramCacheKey:material.customProgramCacheKey()};return parameters;}function getProgramCacheKey(parameters){var array=[];if(parameters.shaderID){array.push(parameters.shaderID);}else{array.push(parameters.fragmentShader);array.push(parameters.vertexShader);}if(parameters.defines!==undefined){for(var name in parameters.defines){array.push(name);array.push(parameters.defines[name]);}}if(parameters.isRawShaderMaterial===false){for(var _i110=0;_i110<parameterNames.length;_i110++){array.push(parameters[parameterNames[_i110]]);}array.push(renderer.outputEncoding);array.push(renderer.gammaFactor);}array.push(parameters.customProgramCacheKey);return array.join();}function getUniforms(material){var shaderID=shaderIDs[material.type];var uniforms;if(shaderID){var shader=ShaderLib[shaderID];uniforms=UniformsUtils.clone(shader.uniforms);}else{uniforms=material.uniforms;}return uniforms;}function acquireProgram(parameters,cacheKey){var program;// Check if code has been already compiled\nfor(var p=0,pl=programs.length;p<pl;p++){var preexistingProgram=programs[p];if(preexistingProgram.cacheKey===cacheKey){program=preexistingProgram;++program.usedTimes;break;}}if(program===undefined){program=new WebGLProgram(renderer,cacheKey,parameters,bindingStates);programs.push(program);}return program;}function releaseProgram(program){if(--program.usedTimes===0){// Remove from unordered set\nvar _i111=programs.indexOf(program);programs[_i111]=programs[programs.length-1];programs.pop();// Free WebGL resources\nprogram.destroy();}}return{getParameters:getParameters,getProgramCacheKey:getProgramCacheKey,getUniforms:getUniforms,acquireProgram:acquireProgram,releaseProgram:releaseProgram,// Exposed for resource monitoring & error feedback via renderer.info:\nprograms:programs};}function WebGLProperties(){var properties=new WeakMap();function get(object){var map=properties.get(object);if(map===undefined){map={};properties.set(object,map);}return map;}function remove(object){properties[\"delete\"](object);}function update(object,key,value){properties.get(object)[key]=value;}function dispose(){properties=new WeakMap();}return{get:get,remove:remove,update:update,dispose:dispose};}function painterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.program!==b.program){return a.program.id-b.program.id;}else if(a.material.id!==b.material.id){return a.material.id-b.material.id;}else if(a.z!==b.z){return a.z-b.z;}else{return a.id-b.id;}}function reversePainterSortStable(a,b){if(a.groupOrder!==b.groupOrder){return a.groupOrder-b.groupOrder;}else if(a.renderOrder!==b.renderOrder){return a.renderOrder-b.renderOrder;}else if(a.z!==b.z){return b.z-a.z;}else{return a.id-b.id;}}function WebGLRenderList(properties){var renderItems=[];var renderItemsIndex=0;var opaque=[];var transmissive=[];var transparent=[];var defaultProgram={id:-1};function init(){renderItemsIndex=0;opaque.length=0;transmissive.length=0;transparent.length=0;}function getNextRenderItem(object,geometry,material,groupOrder,z,group){var renderItem=renderItems[renderItemsIndex];var materialProperties=properties.get(material);if(renderItem===undefined){renderItem={id:object.id,object:object,geometry:geometry,material:material,program:materialProperties.program||defaultProgram,groupOrder:groupOrder,renderOrder:object.renderOrder,z:z,group:group};renderItems[renderItemsIndex]=renderItem;}else{renderItem.id=object.id;renderItem.object=object;renderItem.geometry=geometry;renderItem.material=material;renderItem.program=materialProperties.program||defaultProgram;renderItem.groupOrder=groupOrder;renderItem.renderOrder=object.renderOrder;renderItem.z=z;renderItem.group=group;}renderItemsIndex++;return renderItem;}function push(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.push(renderItem);}else if(material.transparent===true){transparent.push(renderItem);}else{opaque.push(renderItem);}}function unshift(object,geometry,material,groupOrder,z,group){var renderItem=getNextRenderItem(object,geometry,material,groupOrder,z,group);if(material.transmission>0.0){transmissive.unshift(renderItem);}else if(material.transparent===true){transparent.unshift(renderItem);}else{opaque.unshift(renderItem);}}function sort(customOpaqueSort,customTransparentSort){if(opaque.length>1)opaque.sort(customOpaqueSort||painterSortStable);if(transmissive.length>1)transmissive.sort(customTransparentSort||reversePainterSortStable);if(transparent.length>1)transparent.sort(customTransparentSort||reversePainterSortStable);}function finish(){// Clear references from inactive renderItems in the list\nfor(var _i112=renderItemsIndex,il=renderItems.length;_i112<il;_i112++){var renderItem=renderItems[_i112];if(renderItem.id===null)break;renderItem.id=null;renderItem.object=null;renderItem.geometry=null;renderItem.material=null;renderItem.program=null;renderItem.group=null;}}return{opaque:opaque,transmissive:transmissive,transparent:transparent,init:init,push:push,unshift:unshift,finish:finish,sort:sort};}function WebGLRenderLists(properties){var lists=new WeakMap();function get(scene,renderCallDepth){var list;if(lists.has(scene)===false){list=new WebGLRenderList(properties);lists.set(scene,[list]);}else{if(renderCallDepth>=lists.get(scene).length){list=new WebGLRenderList(properties);lists.get(scene).push(list);}else{list=lists.get(scene)[renderCallDepth];}}return list;}function dispose(){lists=new WeakMap();}return{get:get,dispose:dispose};}function UniformsCache(){var lights={};return{get:function get(light){if(lights[light.id]!==undefined){return lights[light.id];}var uniforms;switch(light.type){case'DirectionalLight':uniforms={direction:new Vector3(),color:new Color()};break;case'SpotLight':uniforms={position:new Vector3(),direction:new Vector3(),color:new Color(),distance:0,coneCos:0,penumbraCos:0,decay:0};break;case'PointLight':uniforms={position:new Vector3(),color:new Color(),distance:0,decay:0};break;case'HemisphereLight':uniforms={direction:new Vector3(),skyColor:new Color(),groundColor:new Color()};break;case'RectAreaLight':uniforms={color:new Color(),position:new Vector3(),halfWidth:new Vector3(),halfHeight:new Vector3()};break;}lights[light.id]=uniforms;return uniforms;}};}function ShadowUniformsCache(){var lights={};return{get:function get(light){if(lights[light.id]!==undefined){return lights[light.id];}var uniforms;switch(light.type){case'DirectionalLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'SpotLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2()};break;case'PointLight':uniforms={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Vector2(),shadowCameraNear:1,shadowCameraFar:1000};break;// TODO (abelnation): set RectAreaLight shadow uniforms\n}lights[light.id]=uniforms;return uniforms;}};}var nextVersion=0;function shadowCastingLightsFirst(lightA,lightB){return(lightB.castShadow?1:0)-(lightA.castShadow?1:0);}function WebGLLights(extensions,capabilities){var cache=new UniformsCache();var shadowCache=ShadowUniformsCache();var state={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(var _i113=0;_i113<9;_i113++){state.probe.push(new Vector3());}var vector3=new Vector3();var matrix4=new Matrix4();var matrix42=new Matrix4();function setup(lights,physicallyCorrectLights){var r=0,g=0,b=0;for(var _i114=0;_i114<9;_i114++){state.probe[_i114].set(0,0,0);}var directionalLength=0;var pointLength=0;var spotLength=0;var rectAreaLength=0;var hemiLength=0;var numDirectionalShadows=0;var numPointShadows=0;var numSpotShadows=0;lights.sort(shadowCastingLightsFirst);// artist-friendly light intensity scaling factor\nvar scaleFactor=physicallyCorrectLights!==true?Math.PI:1;for(var _i115=0,l=lights.length;_i115<l;_i115++){var light=lights[_i115];var color=light.color;var intensity=light.intensity;var distance=light.distance;var shadowMap=light.shadow&&light.shadow.map?light.shadow.map.texture:null;if(light.isAmbientLight){r+=color.r*intensity*scaleFactor;g+=color.g*intensity*scaleFactor;b+=color.b*intensity*scaleFactor;}else if(light.isLightProbe){for(var j=0;j<9;j++){state.probe[j].addScaledVector(light.sh.coefficients[j],intensity);}}else if(light.isDirectionalLight){var uniforms=cache.get(light);uniforms.color.copy(light.color).multiplyScalar(light.intensity*scaleFactor);if(light.castShadow){var shadow=light.shadow;var shadowUniforms=shadowCache.get(light);shadowUniforms.shadowBias=shadow.bias;shadowUniforms.shadowNormalBias=shadow.normalBias;shadowUniforms.shadowRadius=shadow.radius;shadowUniforms.shadowMapSize=shadow.mapSize;state.directionalShadow[directionalLength]=shadowUniforms;state.directionalShadowMap[directionalLength]=shadowMap;state.directionalShadowMatrix[directionalLength]=light.shadow.matrix;numDirectionalShadows++;}state.directional[directionalLength]=uniforms;directionalLength++;}else if(light.isSpotLight){var _uniforms=cache.get(light);_uniforms.position.setFromMatrixPosition(light.matrixWorld);_uniforms.color.copy(color).multiplyScalar(intensity*scaleFactor);_uniforms.distance=distance;_uniforms.coneCos=Math.cos(light.angle);_uniforms.penumbraCos=Math.cos(light.angle*(1-light.penumbra));_uniforms.decay=light.decay;if(light.castShadow){var _shadow=light.shadow;var _shadowUniforms=shadowCache.get(light);_shadowUniforms.shadowBias=_shadow.bias;_shadowUniforms.shadowNormalBias=_shadow.normalBias;_shadowUniforms.shadowRadius=_shadow.radius;_shadowUniforms.shadowMapSize=_shadow.mapSize;state.spotShadow[spotLength]=_shadowUniforms;state.spotShadowMap[spotLength]=shadowMap;state.spotShadowMatrix[spotLength]=light.shadow.matrix;numSpotShadows++;}state.spot[spotLength]=_uniforms;spotLength++;}else if(light.isRectAreaLight){var _uniforms2=cache.get(light);// (a) intensity is the total visible light emitted\n//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n// (b) intensity is the brightness of the light\n_uniforms2.color.copy(color).multiplyScalar(intensity);_uniforms2.halfWidth.set(light.width*0.5,0.0,0.0);_uniforms2.halfHeight.set(0.0,light.height*0.5,0.0);state.rectArea[rectAreaLength]=_uniforms2;rectAreaLength++;}else if(light.isPointLight){var _uniforms3=cache.get(light);_uniforms3.color.copy(light.color).multiplyScalar(light.intensity*scaleFactor);_uniforms3.distance=light.distance;_uniforms3.decay=light.decay;if(light.castShadow){var _shadow2=light.shadow;var _shadowUniforms2=shadowCache.get(light);_shadowUniforms2.shadowBias=_shadow2.bias;_shadowUniforms2.shadowNormalBias=_shadow2.normalBias;_shadowUniforms2.shadowRadius=_shadow2.radius;_shadowUniforms2.shadowMapSize=_shadow2.mapSize;_shadowUniforms2.shadowCameraNear=_shadow2.camera.near;_shadowUniforms2.shadowCameraFar=_shadow2.camera.far;state.pointShadow[pointLength]=_shadowUniforms2;state.pointShadowMap[pointLength]=shadowMap;state.pointShadowMatrix[pointLength]=light.shadow.matrix;numPointShadows++;}state.point[pointLength]=_uniforms3;pointLength++;}else if(light.isHemisphereLight){var _uniforms4=cache.get(light);_uniforms4.skyColor.copy(light.color).multiplyScalar(intensity*scaleFactor);_uniforms4.groundColor.copy(light.groundColor).multiplyScalar(intensity*scaleFactor);state.hemi[hemiLength]=_uniforms4;hemiLength++;}}if(rectAreaLength>0){if(capabilities.isWebGL2){// WebGL 2\nstate.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else{// WebGL 1\nif(extensions.has('OES_texture_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_FLOAT_1;state.rectAreaLTC2=UniformsLib.LTC_FLOAT_2;}else if(extensions.has('OES_texture_half_float_linear')===true){state.rectAreaLTC1=UniformsLib.LTC_HALF_1;state.rectAreaLTC2=UniformsLib.LTC_HALF_2;}else{console.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');}}}state.ambient[0]=r;state.ambient[1]=g;state.ambient[2]=b;var hash=state.hash;if(hash.directionalLength!==directionalLength||hash.pointLength!==pointLength||hash.spotLength!==spotLength||hash.rectAreaLength!==rectAreaLength||hash.hemiLength!==hemiLength||hash.numDirectionalShadows!==numDirectionalShadows||hash.numPointShadows!==numPointShadows||hash.numSpotShadows!==numSpotShadows){state.directional.length=directionalLength;state.spot.length=spotLength;state.rectArea.length=rectAreaLength;state.point.length=pointLength;state.hemi.length=hemiLength;state.directionalShadow.length=numDirectionalShadows;state.directionalShadowMap.length=numDirectionalShadows;state.pointShadow.length=numPointShadows;state.pointShadowMap.length=numPointShadows;state.spotShadow.length=numSpotShadows;state.spotShadowMap.length=numSpotShadows;state.directionalShadowMatrix.length=numDirectionalShadows;state.pointShadowMatrix.length=numPointShadows;state.spotShadowMatrix.length=numSpotShadows;hash.directionalLength=directionalLength;hash.pointLength=pointLength;hash.spotLength=spotLength;hash.rectAreaLength=rectAreaLength;hash.hemiLength=hemiLength;hash.numDirectionalShadows=numDirectionalShadows;hash.numPointShadows=numPointShadows;hash.numSpotShadows=numSpotShadows;state.version=nextVersion++;}}function setupView(lights,camera){var directionalLength=0;var pointLength=0;var spotLength=0;var rectAreaLength=0;var hemiLength=0;var viewMatrix=camera.matrixWorldInverse;for(var _i116=0,l=lights.length;_i116<l;_i116++){var light=lights[_i116];if(light.isDirectionalLight){var uniforms=state.directional[directionalLength];uniforms.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);uniforms.direction.sub(vector3);uniforms.direction.transformDirection(viewMatrix);directionalLength++;}else if(light.isSpotLight){var _uniforms5=state.spot[spotLength];_uniforms5.position.setFromMatrixPosition(light.matrixWorld);_uniforms5.position.applyMatrix4(viewMatrix);_uniforms5.direction.setFromMatrixPosition(light.matrixWorld);vector3.setFromMatrixPosition(light.target.matrixWorld);_uniforms5.direction.sub(vector3);_uniforms5.direction.transformDirection(viewMatrix);spotLength++;}else if(light.isRectAreaLight){var _uniforms6=state.rectArea[rectAreaLength];_uniforms6.position.setFromMatrixPosition(light.matrixWorld);_uniforms6.position.applyMatrix4(viewMatrix);// extract local rotation of light to derive width/height half vectors\nmatrix42.identity();matrix4.copy(light.matrixWorld);matrix4.premultiply(viewMatrix);matrix42.extractRotation(matrix4);_uniforms6.halfWidth.set(light.width*0.5,0.0,0.0);_uniforms6.halfHeight.set(0.0,light.height*0.5,0.0);_uniforms6.halfWidth.applyMatrix4(matrix42);_uniforms6.halfHeight.applyMatrix4(matrix42);rectAreaLength++;}else if(light.isPointLight){var _uniforms7=state.point[pointLength];_uniforms7.position.setFromMatrixPosition(light.matrixWorld);_uniforms7.position.applyMatrix4(viewMatrix);pointLength++;}else if(light.isHemisphereLight){var _uniforms8=state.hemi[hemiLength];_uniforms8.direction.setFromMatrixPosition(light.matrixWorld);_uniforms8.direction.transformDirection(viewMatrix);_uniforms8.direction.normalize();hemiLength++;}}}return{setup:setup,setupView:setupView,state:state};}function WebGLRenderState(extensions,capabilities){var lights=new WebGLLights(extensions,capabilities);var lightsArray=[];var shadowsArray=[];function init(){lightsArray.length=0;shadowsArray.length=0;}function pushLight(light){lightsArray.push(light);}function pushShadow(shadowLight){shadowsArray.push(shadowLight);}function setupLights(physicallyCorrectLights){lights.setup(lightsArray,physicallyCorrectLights);}function setupLightsView(camera){lights.setupView(lightsArray,camera);}var state={lightsArray:lightsArray,shadowsArray:shadowsArray,lights:lights};return{init:init,state:state,setupLights:setupLights,setupLightsView:setupLightsView,pushLight:pushLight,pushShadow:pushShadow};}function WebGLRenderStates(extensions,capabilities){var renderStates=new WeakMap();function get(scene){var renderCallDepth=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var renderState;if(renderStates.has(scene)===false){renderState=new WebGLRenderState(extensions,capabilities);renderStates.set(scene,[renderState]);}else{if(renderCallDepth>=renderStates.get(scene).length){renderState=new WebGLRenderState(extensions,capabilities);renderStates.get(scene).push(renderState);}else{renderState=renderStates.get(scene)[renderCallDepth];}}return renderState;}function dispose(){renderStates=new WeakMap();}return{get:get,dispose:dispose};}/**\r\n * parameters = {\r\n *\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */var MeshDepthMaterial=/*#__PURE__*/function(_Material3){_inherits(MeshDepthMaterial,_Material3);var _super32=_createSuper(MeshDepthMaterial);function MeshDepthMaterial(parameters){var _this23;_classCallCheck(this,MeshDepthMaterial);_this23=_super32.call(this);_this23.type='MeshDepthMaterial';_this23.depthPacking=BasicDepthPacking;_this23.map=null;_this23.alphaMap=null;_this23.displacementMap=null;_this23.displacementScale=1;_this23.displacementBias=0;_this23.wireframe=false;_this23.wireframeLinewidth=1;_this23.fog=false;_this23.setValues(parameters);return _this23;}_createClass(MeshDepthMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshDepthMaterial.prototype),\"copy\",this).call(this,source);this.depthPacking=source.depthPacking;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;return this;}}]);return MeshDepthMaterial;}(Material);MeshDepthMaterial.prototype.isMeshDepthMaterial=true;/**\r\n * parameters = {\r\n *\r\n *  referencePosition: <float>,\r\n *  nearDistance: <float>,\r\n *  farDistance: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>\r\n *\r\n * }\r\n */var MeshDistanceMaterial=/*#__PURE__*/function(_Material4){_inherits(MeshDistanceMaterial,_Material4);var _super33=_createSuper(MeshDistanceMaterial);function MeshDistanceMaterial(parameters){var _this24;_classCallCheck(this,MeshDistanceMaterial);_this24=_super33.call(this);_this24.type='MeshDistanceMaterial';_this24.referencePosition=new Vector3();_this24.nearDistance=1;_this24.farDistance=1000;_this24.map=null;_this24.alphaMap=null;_this24.displacementMap=null;_this24.displacementScale=1;_this24.displacementBias=0;_this24.fog=false;_this24.setValues(parameters);return _this24;}_createClass(MeshDistanceMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshDistanceMaterial.prototype),\"copy\",this).call(this,source);this.referencePosition.copy(source.referencePosition);this.nearDistance=source.nearDistance;this.farDistance=source.farDistance;this.map=source.map;this.alphaMap=source.alphaMap;this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;return this;}}]);return MeshDistanceMaterial;}(Material);MeshDistanceMaterial.prototype.isMeshDistanceMaterial=true;var vertex=\"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";var fragment=\"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\nuniform float samples;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";function WebGLShadowMap(_renderer,_objects,_capabilities){var _frustum=new Frustum();var _shadowMapSize=new Vector2(),_viewportSize=new Vector2(),_viewport=new Vector4(),_depthMaterial=new MeshDepthMaterial({depthPacking:RGBADepthPacking}),_distanceMaterial=new MeshDistanceMaterial(),_materialCache={},_maxTextureSize=_capabilities.maxTextureSize;var shadowSide={0:BackSide,1:FrontSide,2:DoubleSide};var shadowMaterialVertical=new ShaderMaterial({uniforms:{shadow_pass:{value:null},resolution:{value:new Vector2()},radius:{value:4.0},samples:{value:8.0}},vertexShader:vertex,fragmentShader:fragment});var shadowMaterialHorizontal=shadowMaterialVertical.clone();shadowMaterialHorizontal.defines.HORIZONTAL_PASS=1;var fullScreenTri=new BufferGeometry();fullScreenTri.setAttribute('position',new BufferAttribute(new Float32Array([-1,-1,0.5,3,-1,0.5,-1,3,0.5]),3));var fullScreenMesh=new Mesh(fullScreenTri,shadowMaterialVertical);var scope=this;this.enabled=false;this.autoUpdate=true;this.needsUpdate=false;this.type=PCFShadowMap;this.render=function(lights,scene,camera){if(scope.enabled===false)return;if(scope.autoUpdate===false&&scope.needsUpdate===false)return;if(lights.length===0)return;var currentRenderTarget=_renderer.getRenderTarget();var activeCubeFace=_renderer.getActiveCubeFace();var activeMipmapLevel=_renderer.getActiveMipmapLevel();var _state=_renderer.state;// Set GL state for depth map.\n_state.setBlending(NoBlending);_state.buffers.color.setClear(1,1,1,1);_state.buffers.depth.setTest(true);_state.setScissorTest(false);// render depth map\nfor(var _i117=0,il=lights.length;_i117<il;_i117++){var light=lights[_i117];var shadow=light.shadow;if(shadow===undefined){console.warn('THREE.WebGLShadowMap:',light,'has no shadow.');continue;}if(shadow.autoUpdate===false&&shadow.needsUpdate===false)continue;_shadowMapSize.copy(shadow.mapSize);var shadowFrameExtents=shadow.getFrameExtents();_shadowMapSize.multiply(shadowFrameExtents);_viewportSize.copy(shadow.mapSize);if(_shadowMapSize.x>_maxTextureSize||_shadowMapSize.y>_maxTextureSize){if(_shadowMapSize.x>_maxTextureSize){_viewportSize.x=Math.floor(_maxTextureSize/shadowFrameExtents.x);_shadowMapSize.x=_viewportSize.x*shadowFrameExtents.x;shadow.mapSize.x=_viewportSize.x;}if(_shadowMapSize.y>_maxTextureSize){_viewportSize.y=Math.floor(_maxTextureSize/shadowFrameExtents.y);_shadowMapSize.y=_viewportSize.y*shadowFrameExtents.y;shadow.mapSize.y=_viewportSize.y;}}if(shadow.map===null&&!shadow.isPointLightShadow&&this.type===VSMShadowMap){var pars={minFilter:LinearFilter,magFilter:LinearFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.mapPass=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,pars);shadow.camera.updateProjectionMatrix();}if(shadow.map===null){var _pars={minFilter:NearestFilter,magFilter:NearestFilter,format:RGBAFormat};shadow.map=new WebGLRenderTarget(_shadowMapSize.x,_shadowMapSize.y,_pars);shadow.map.texture.name=light.name+'.shadowMap';shadow.camera.updateProjectionMatrix();}_renderer.setRenderTarget(shadow.map);_renderer.clear();var viewportCount=shadow.getViewportCount();for(var vp=0;vp<viewportCount;vp++){var viewport=shadow.getViewport(vp);_viewport.set(_viewportSize.x*viewport.x,_viewportSize.y*viewport.y,_viewportSize.x*viewport.z,_viewportSize.y*viewport.w);_state.viewport(_viewport);shadow.updateMatrices(light,vp);_frustum=shadow.getFrustum();renderObject(scene,camera,shadow.camera,light,this.type);}// do blur pass for VSM\nif(!shadow.isPointLightShadow&&this.type===VSMShadowMap){VSMPass(shadow,camera);}shadow.needsUpdate=false;}scope.needsUpdate=false;_renderer.setRenderTarget(currentRenderTarget,activeCubeFace,activeMipmapLevel);};function VSMPass(shadow,camera){var geometry=_objects.update(fullScreenMesh);// vertical pass\nshadowMaterialVertical.uniforms.shadow_pass.value=shadow.map.texture;shadowMaterialVertical.uniforms.resolution.value=shadow.mapSize;shadowMaterialVertical.uniforms.radius.value=shadow.radius;shadowMaterialVertical.uniforms.samples.value=shadow.blurSamples;_renderer.setRenderTarget(shadow.mapPass);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialVertical,fullScreenMesh,null);// horizontal pass\nshadowMaterialHorizontal.uniforms.shadow_pass.value=shadow.mapPass.texture;shadowMaterialHorizontal.uniforms.resolution.value=shadow.mapSize;shadowMaterialHorizontal.uniforms.radius.value=shadow.radius;shadowMaterialHorizontal.uniforms.samples.value=shadow.blurSamples;_renderer.setRenderTarget(shadow.map);_renderer.clear();_renderer.renderBufferDirect(camera,null,geometry,shadowMaterialHorizontal,fullScreenMesh,null);}function getDepthMaterial(object,geometry,material,light,shadowCameraNear,shadowCameraFar,type){var result=null;var customMaterial=light.isPointLight===true?object.customDistanceMaterial:object.customDepthMaterial;if(customMaterial!==undefined){result=customMaterial;}else{result=light.isPointLight===true?_distanceMaterial:_depthMaterial;}if(_renderer.localClippingEnabled&&material.clipShadows===true&&material.clippingPlanes.length!==0||material.displacementMap&&material.displacementScale!==0||material.alphaMap&&material.alphaTest>0){// in this case we need a unique material instance reflecting the\n// appropriate state\nvar keyA=result.uuid,keyB=material.uuid;var materialsForVariant=_materialCache[keyA];if(materialsForVariant===undefined){materialsForVariant={};_materialCache[keyA]=materialsForVariant;}var cachedMaterial=materialsForVariant[keyB];if(cachedMaterial===undefined){cachedMaterial=result.clone();materialsForVariant[keyB]=cachedMaterial;}result=cachedMaterial;}result.visible=material.visible;result.wireframe=material.wireframe;if(type===VSMShadowMap){result.side=material.shadowSide!==null?material.shadowSide:material.side;}else{result.side=material.shadowSide!==null?material.shadowSide:shadowSide[material.side];}result.alphaMap=material.alphaMap;result.alphaTest=material.alphaTest;result.clipShadows=material.clipShadows;result.clippingPlanes=material.clippingPlanes;result.clipIntersection=material.clipIntersection;result.displacementMap=material.displacementMap;result.displacementScale=material.displacementScale;result.displacementBias=material.displacementBias;result.wireframeLinewidth=material.wireframeLinewidth;result.linewidth=material.linewidth;if(light.isPointLight===true&&result.isMeshDistanceMaterial===true){result.referencePosition.setFromMatrixPosition(light.matrixWorld);result.nearDistance=shadowCameraNear;result.farDistance=shadowCameraFar;}return result;}function renderObject(object,camera,shadowCamera,light,type){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible&&(object.isMesh||object.isLine||object.isPoints)){if((object.castShadow||object.receiveShadow&&type===VSMShadowMap)&&(!object.frustumCulled||_frustum.intersectsObject(object))){object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse,object.matrixWorld);var geometry=_objects.update(object);var material=object.material;if(Array.isArray(material)){var groups=geometry.groups;for(var k=0,kl=groups.length;k<kl;k++){var group=groups[k];var groupMaterial=material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){var depthMaterial=getDepthMaterial(object,geometry,groupMaterial,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,depthMaterial,object,group);}}}else if(material.visible){var _depthMaterial2=getDepthMaterial(object,geometry,material,light,shadowCamera.near,shadowCamera.far,type);_renderer.renderBufferDirect(shadowCamera,null,geometry,_depthMaterial2,object,null);}}}var children=object.children;for(var _i118=0,l=children.length;_i118<l;_i118++){renderObject(children[_i118],camera,shadowCamera,light,type);}}}function WebGLState(gl,extensions,capabilities){var _equationToGL,_factorToGL;var isWebGL2=capabilities.isWebGL2;function ColorBuffer(){var locked=false;var color=new Vector4();var currentColorMask=null;var currentColorClear=new Vector4(0,0,0,0);return{setMask:function setMask(colorMask){if(currentColorMask!==colorMask&&!locked){gl.colorMask(colorMask,colorMask,colorMask,colorMask);currentColorMask=colorMask;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(r,g,b,a,premultipliedAlpha){if(premultipliedAlpha===true){r*=a;g*=a;b*=a;}color.set(r,g,b,a);if(currentColorClear.equals(color)===false){gl.clearColor(r,g,b,a);currentColorClear.copy(color);}},reset:function reset(){locked=false;currentColorMask=null;currentColorClear.set(-1,0,0,0);// set to invalid state\n}};}function DepthBuffer(){var locked=false;var currentDepthMask=null;var currentDepthFunc=null;var currentDepthClear=null;return{setTest:function setTest(depthTest){if(depthTest){enable(2929);}else{disable(2929);}},setMask:function setMask(depthMask){if(currentDepthMask!==depthMask&&!locked){gl.depthMask(depthMask);currentDepthMask=depthMask;}},setFunc:function setFunc(depthFunc){if(currentDepthFunc!==depthFunc){if(depthFunc){switch(depthFunc){case NeverDepth:gl.depthFunc(512);break;case AlwaysDepth:gl.depthFunc(519);break;case LessDepth:gl.depthFunc(513);break;case LessEqualDepth:gl.depthFunc(515);break;case EqualDepth:gl.depthFunc(514);break;case GreaterEqualDepth:gl.depthFunc(518);break;case GreaterDepth:gl.depthFunc(516);break;case NotEqualDepth:gl.depthFunc(517);break;default:gl.depthFunc(515);}}else{gl.depthFunc(515);}currentDepthFunc=depthFunc;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(depth){if(currentDepthClear!==depth){gl.clearDepth(depth);currentDepthClear=depth;}},reset:function reset(){locked=false;currentDepthMask=null;currentDepthFunc=null;currentDepthClear=null;}};}function StencilBuffer(){var locked=false;var currentStencilMask=null;var currentStencilFunc=null;var currentStencilRef=null;var currentStencilFuncMask=null;var currentStencilFail=null;var currentStencilZFail=null;var currentStencilZPass=null;var currentStencilClear=null;return{setTest:function setTest(stencilTest){if(!locked){if(stencilTest){enable(2960);}else{disable(2960);}}},setMask:function setMask(stencilMask){if(currentStencilMask!==stencilMask&&!locked){gl.stencilMask(stencilMask);currentStencilMask=stencilMask;}},setFunc:function setFunc(stencilFunc,stencilRef,stencilMask){if(currentStencilFunc!==stencilFunc||currentStencilRef!==stencilRef||currentStencilFuncMask!==stencilMask){gl.stencilFunc(stencilFunc,stencilRef,stencilMask);currentStencilFunc=stencilFunc;currentStencilRef=stencilRef;currentStencilFuncMask=stencilMask;}},setOp:function setOp(stencilFail,stencilZFail,stencilZPass){if(currentStencilFail!==stencilFail||currentStencilZFail!==stencilZFail||currentStencilZPass!==stencilZPass){gl.stencilOp(stencilFail,stencilZFail,stencilZPass);currentStencilFail=stencilFail;currentStencilZFail=stencilZFail;currentStencilZPass=stencilZPass;}},setLocked:function setLocked(lock){locked=lock;},setClear:function setClear(stencil){if(currentStencilClear!==stencil){gl.clearStencil(stencil);currentStencilClear=stencil;}},reset:function reset(){locked=false;currentStencilMask=null;currentStencilFunc=null;currentStencilRef=null;currentStencilFuncMask=null;currentStencilFail=null;currentStencilZFail=null;currentStencilZPass=null;currentStencilClear=null;}};}//\nvar colorBuffer=new ColorBuffer();var depthBuffer=new DepthBuffer();var stencilBuffer=new StencilBuffer();var enabledCapabilities={};var xrFramebuffer=null;var currentBoundFramebuffers={};var currentProgram=null;var currentBlendingEnabled=false;var currentBlending=null;var currentBlendEquation=null;var currentBlendSrc=null;var currentBlendDst=null;var currentBlendEquationAlpha=null;var currentBlendSrcAlpha=null;var currentBlendDstAlpha=null;var currentPremultipledAlpha=false;var currentFlipSided=null;var currentCullFace=null;var currentLineWidth=null;var currentPolygonOffsetFactor=null;var currentPolygonOffsetUnits=null;var maxTextures=gl.getParameter(35661);var lineWidthAvailable=false;var version=0;var glVersion=gl.getParameter(7938);if(glVersion.indexOf('WebGL')!==-1){version=parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=1.0;}else if(glVersion.indexOf('OpenGL ES')!==-1){version=parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);lineWidthAvailable=version>=2.0;}var currentTextureSlot=null;var currentBoundTextures={};var scissorParam=gl.getParameter(3088);var viewportParam=gl.getParameter(2978);var currentScissor=new Vector4().fromArray(scissorParam);var currentViewport=new Vector4().fromArray(viewportParam);function createTexture(type,target,count){var data=new Uint8Array(4);// 4 is required to match default unpack alignment of 4.\nvar texture=gl.createTexture();gl.bindTexture(type,texture);gl.texParameteri(type,10241,9728);gl.texParameteri(type,10240,9728);for(var _i119=0;_i119<count;_i119++){gl.texImage2D(target+_i119,0,6408,1,1,0,6408,5121,data);}return texture;}var emptyTextures={};emptyTextures[3553]=createTexture(3553,3553,1);emptyTextures[34067]=createTexture(34067,34069,6);// init\ncolorBuffer.setClear(0,0,0,1);depthBuffer.setClear(1);stencilBuffer.setClear(0);enable(2929);depthBuffer.setFunc(LessEqualDepth);setFlipSided(false);setCullFace(CullFaceBack);enable(2884);setBlending(NoBlending);//\nfunction enable(id){if(enabledCapabilities[id]!==true){gl.enable(id);enabledCapabilities[id]=true;}}function disable(id){if(enabledCapabilities[id]!==false){gl.disable(id);enabledCapabilities[id]=false;}}function bindXRFramebuffer(framebuffer){if(framebuffer!==xrFramebuffer){gl.bindFramebuffer(36160,framebuffer);xrFramebuffer=framebuffer;}}function bindFramebuffer(target,framebuffer){if(framebuffer===null&&xrFramebuffer!==null)framebuffer=xrFramebuffer;// use active XR framebuffer if available\nif(currentBoundFramebuffers[target]!==framebuffer){gl.bindFramebuffer(target,framebuffer);currentBoundFramebuffers[target]=framebuffer;if(isWebGL2){// 36009 is equivalent to 36160\nif(target===36009){currentBoundFramebuffers[36160]=framebuffer;}if(target===36160){currentBoundFramebuffers[36009]=framebuffer;}}return true;}return false;}function useProgram(program){if(currentProgram!==program){gl.useProgram(program);currentProgram=program;return true;}return false;}var equationToGL=(_equationToGL={},_defineProperty(_equationToGL,AddEquation,32774),_defineProperty(_equationToGL,SubtractEquation,32778),_defineProperty(_equationToGL,ReverseSubtractEquation,32779),_equationToGL);if(isWebGL2){equationToGL[MinEquation]=32775;equationToGL[MaxEquation]=32776;}else{var extension=extensions.get('EXT_blend_minmax');if(extension!==null){equationToGL[MinEquation]=extension.MIN_EXT;equationToGL[MaxEquation]=extension.MAX_EXT;}}var factorToGL=(_factorToGL={},_defineProperty(_factorToGL,ZeroFactor,0),_defineProperty(_factorToGL,OneFactor,1),_defineProperty(_factorToGL,SrcColorFactor,768),_defineProperty(_factorToGL,SrcAlphaFactor,770),_defineProperty(_factorToGL,SrcAlphaSaturateFactor,776),_defineProperty(_factorToGL,DstColorFactor,774),_defineProperty(_factorToGL,DstAlphaFactor,772),_defineProperty(_factorToGL,OneMinusSrcColorFactor,769),_defineProperty(_factorToGL,OneMinusSrcAlphaFactor,771),_defineProperty(_factorToGL,OneMinusDstColorFactor,775),_defineProperty(_factorToGL,OneMinusDstAlphaFactor,773),_factorToGL);function setBlending(blending,blendEquation,blendSrc,blendDst,blendEquationAlpha,blendSrcAlpha,blendDstAlpha,premultipliedAlpha){if(blending===NoBlending){if(currentBlendingEnabled===true){disable(3042);currentBlendingEnabled=false;}return;}if(currentBlendingEnabled===false){enable(3042);currentBlendingEnabled=true;}if(blending!==CustomBlending){if(blending!==currentBlending||premultipliedAlpha!==currentPremultipledAlpha){if(currentBlendEquation!==AddEquation||currentBlendEquationAlpha!==AddEquation){gl.blendEquation(32774);currentBlendEquation=AddEquation;currentBlendEquationAlpha=AddEquation;}if(premultipliedAlpha){switch(blending){case NormalBlending:gl.blendFuncSeparate(1,771,1,771);break;case AdditiveBlending:gl.blendFunc(1,1);break;case SubtractiveBlending:gl.blendFuncSeparate(0,0,769,771);break;case MultiplyBlending:gl.blendFuncSeparate(0,768,0,770);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}else{switch(blending){case NormalBlending:gl.blendFuncSeparate(770,771,1,771);break;case AdditiveBlending:gl.blendFunc(770,1);break;case SubtractiveBlending:gl.blendFunc(0,769);break;case MultiplyBlending:gl.blendFunc(0,768);break;default:console.error('THREE.WebGLState: Invalid blending: ',blending);break;}}currentBlendSrc=null;currentBlendDst=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentBlending=blending;currentPremultipledAlpha=premultipliedAlpha;}return;}// custom blending\nblendEquationAlpha=blendEquationAlpha||blendEquation;blendSrcAlpha=blendSrcAlpha||blendSrc;blendDstAlpha=blendDstAlpha||blendDst;if(blendEquation!==currentBlendEquation||blendEquationAlpha!==currentBlendEquationAlpha){gl.blendEquationSeparate(equationToGL[blendEquation],equationToGL[blendEquationAlpha]);currentBlendEquation=blendEquation;currentBlendEquationAlpha=blendEquationAlpha;}if(blendSrc!==currentBlendSrc||blendDst!==currentBlendDst||blendSrcAlpha!==currentBlendSrcAlpha||blendDstAlpha!==currentBlendDstAlpha){gl.blendFuncSeparate(factorToGL[blendSrc],factorToGL[blendDst],factorToGL[blendSrcAlpha],factorToGL[blendDstAlpha]);currentBlendSrc=blendSrc;currentBlendDst=blendDst;currentBlendSrcAlpha=blendSrcAlpha;currentBlendDstAlpha=blendDstAlpha;}currentBlending=blending;currentPremultipledAlpha=null;}function setMaterial(material,frontFaceCW){material.side===DoubleSide?disable(2884):enable(2884);var flipSided=material.side===BackSide;if(frontFaceCW)flipSided=!flipSided;setFlipSided(flipSided);material.blending===NormalBlending&&material.transparent===false?setBlending(NoBlending):setBlending(material.blending,material.blendEquation,material.blendSrc,material.blendDst,material.blendEquationAlpha,material.blendSrcAlpha,material.blendDstAlpha,material.premultipliedAlpha);depthBuffer.setFunc(material.depthFunc);depthBuffer.setTest(material.depthTest);depthBuffer.setMask(material.depthWrite);colorBuffer.setMask(material.colorWrite);var stencilWrite=material.stencilWrite;stencilBuffer.setTest(stencilWrite);if(stencilWrite){stencilBuffer.setMask(material.stencilWriteMask);stencilBuffer.setFunc(material.stencilFunc,material.stencilRef,material.stencilFuncMask);stencilBuffer.setOp(material.stencilFail,material.stencilZFail,material.stencilZPass);}setPolygonOffset(material.polygonOffset,material.polygonOffsetFactor,material.polygonOffsetUnits);material.alphaToCoverage===true?enable(32926):disable(32926);}//\nfunction setFlipSided(flipSided){if(currentFlipSided!==flipSided){if(flipSided){gl.frontFace(2304);}else{gl.frontFace(2305);}currentFlipSided=flipSided;}}function setCullFace(cullFace){if(cullFace!==CullFaceNone){enable(2884);if(cullFace!==currentCullFace){if(cullFace===CullFaceBack){gl.cullFace(1029);}else if(cullFace===CullFaceFront){gl.cullFace(1028);}else{gl.cullFace(1032);}}}else{disable(2884);}currentCullFace=cullFace;}function setLineWidth(width){if(width!==currentLineWidth){if(lineWidthAvailable)gl.lineWidth(width);currentLineWidth=width;}}function setPolygonOffset(polygonOffset,factor,units){if(polygonOffset){enable(32823);if(currentPolygonOffsetFactor!==factor||currentPolygonOffsetUnits!==units){gl.polygonOffset(factor,units);currentPolygonOffsetFactor=factor;currentPolygonOffsetUnits=units;}}else{disable(32823);}}function setScissorTest(scissorTest){if(scissorTest){enable(3089);}else{disable(3089);}}// texture\nfunction activeTexture(webglSlot){if(webglSlot===undefined)webglSlot=33984+maxTextures-1;if(currentTextureSlot!==webglSlot){gl.activeTexture(webglSlot);currentTextureSlot=webglSlot;}}function bindTexture(webglType,webglTexture){if(currentTextureSlot===null){activeTexture();}var boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture===undefined){boundTexture={type:undefined,texture:undefined};currentBoundTextures[currentTextureSlot]=boundTexture;}if(boundTexture.type!==webglType||boundTexture.texture!==webglTexture){gl.bindTexture(webglType,webglTexture||emptyTextures[webglType]);boundTexture.type=webglType;boundTexture.texture=webglTexture;}}function unbindTexture(){var boundTexture=currentBoundTextures[currentTextureSlot];if(boundTexture!==undefined&&boundTexture.type!==undefined){gl.bindTexture(boundTexture.type,null);boundTexture.type=undefined;boundTexture.texture=undefined;}}function compressedTexImage2D(){try{gl.compressedTexImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage2D(){try{gl.texImage2D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}function texImage3D(){try{gl.texImage3D.apply(gl,arguments);}catch(error){console.error('THREE.WebGLState:',error);}}//\nfunction scissor(scissor){if(currentScissor.equals(scissor)===false){gl.scissor(scissor.x,scissor.y,scissor.z,scissor.w);currentScissor.copy(scissor);}}function viewport(viewport){if(currentViewport.equals(viewport)===false){gl.viewport(viewport.x,viewport.y,viewport.z,viewport.w);currentViewport.copy(viewport);}}//\nfunction reset(){// reset state\ngl.disable(3042);gl.disable(2884);gl.disable(2929);gl.disable(32823);gl.disable(3089);gl.disable(2960);gl.disable(32926);gl.blendEquation(32774);gl.blendFunc(1,0);gl.blendFuncSeparate(1,0,1,0);gl.colorMask(true,true,true,true);gl.clearColor(0,0,0,0);gl.depthMask(true);gl.depthFunc(513);gl.clearDepth(1);gl.stencilMask(0xffffffff);gl.stencilFunc(519,0,0xffffffff);gl.stencilOp(7680,7680,7680);gl.clearStencil(0);gl.cullFace(1029);gl.frontFace(2305);gl.polygonOffset(0,0);gl.activeTexture(33984);gl.bindFramebuffer(36160,null);if(isWebGL2===true){gl.bindFramebuffer(36009,null);gl.bindFramebuffer(36008,null);}gl.useProgram(null);gl.lineWidth(1);gl.scissor(0,0,gl.canvas.width,gl.canvas.height);gl.viewport(0,0,gl.canvas.width,gl.canvas.height);// reset internals\nenabledCapabilities={};currentTextureSlot=null;currentBoundTextures={};xrFramebuffer=null;currentBoundFramebuffers={};currentProgram=null;currentBlendingEnabled=false;currentBlending=null;currentBlendEquation=null;currentBlendSrc=null;currentBlendDst=null;currentBlendEquationAlpha=null;currentBlendSrcAlpha=null;currentBlendDstAlpha=null;currentPremultipledAlpha=false;currentFlipSided=null;currentCullFace=null;currentLineWidth=null;currentPolygonOffsetFactor=null;currentPolygonOffsetUnits=null;currentScissor.set(0,0,gl.canvas.width,gl.canvas.height);currentViewport.set(0,0,gl.canvas.width,gl.canvas.height);colorBuffer.reset();depthBuffer.reset();stencilBuffer.reset();}return{buffers:{color:colorBuffer,depth:depthBuffer,stencil:stencilBuffer},enable:enable,disable:disable,bindFramebuffer:bindFramebuffer,bindXRFramebuffer:bindXRFramebuffer,useProgram:useProgram,setBlending:setBlending,setMaterial:setMaterial,setFlipSided:setFlipSided,setCullFace:setCullFace,setLineWidth:setLineWidth,setPolygonOffset:setPolygonOffset,setScissorTest:setScissorTest,activeTexture:activeTexture,bindTexture:bindTexture,unbindTexture:unbindTexture,compressedTexImage2D:compressedTexImage2D,texImage2D:texImage2D,texImage3D:texImage3D,scissor:scissor,viewport:viewport,reset:reset};}function WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info){var _wrappingToGL,_filterToGL;var isWebGL2=capabilities.isWebGL2;var maxTextures=capabilities.maxTextures;var maxCubemapSize=capabilities.maxCubemapSize;var maxTextureSize=capabilities.maxTextureSize;var maxSamples=capabilities.maxSamples;var _videoTextures=new WeakMap();var _canvas;// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\nvar useOffscreenCanvas=false;try{useOffscreenCanvas=typeof OffscreenCanvas!=='undefined'&&new OffscreenCanvas(1,1).getContext('2d')!==null;}catch(err){// Ignore any errors\n}function createCanvas(width,height){// Use OffscreenCanvas when available. Specially needed in web workers\nreturn useOffscreenCanvas?new OffscreenCanvas(width,height):createElementNS('canvas');}function resizeImage(image,needsPowerOfTwo,needsNewCanvas,maxSize){var scale=1;// handle case if texture exceeds max size\nif(image.width>maxSize||image.height>maxSize){scale=maxSize/Math.max(image.width,image.height);}// only perform resize if necessary\nif(scale<1||needsPowerOfTwo===true){// only perform resize for certain image types\nif(typeof HTMLImageElement!=='undefined'&&image instanceof HTMLImageElement||typeof HTMLCanvasElement!=='undefined'&&image instanceof HTMLCanvasElement||typeof ImageBitmap!=='undefined'&&image instanceof ImageBitmap){var floor=needsPowerOfTwo?floorPowerOfTwo:Math.floor;var width=floor(scale*image.width);var height=floor(scale*image.height);if(_canvas===undefined)_canvas=createCanvas(width,height);// cube textures can't reuse the same canvas\nvar canvas=needsNewCanvas?createCanvas(width,height):_canvas;canvas.width=width;canvas.height=height;var context=canvas.getContext('2d');context.drawImage(image,0,0,width,height);console.warn('THREE.WebGLRenderer: Texture has been resized from ('+image.width+'x'+image.height+') to ('+width+'x'+height+').');return canvas;}else{if('data'in image){console.warn('THREE.WebGLRenderer: Image in DataTexture is too big ('+image.width+'x'+image.height+').');}return image;}}return image;}function isPowerOfTwo$1(image){return isPowerOfTwo(image.width)&&isPowerOfTwo(image.height);}function textureNeedsPowerOfTwo(texture){if(isWebGL2)return false;return texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping||texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function textureNeedsGenerateMipmaps(texture,supportsMips){return texture.generateMipmaps&&supportsMips&&texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter;}function generateMipmap(target,texture,width,height){var depth=arguments.length>4&&arguments[4]!==undefined?arguments[4]:1;_gl.generateMipmap(target);var textureProperties=properties.get(texture);textureProperties.__maxMipLevel=Math.log2(Math.max(width,height,depth));}function getInternalFormat(internalFormatName,glFormat,glType,encoding){if(isWebGL2===false)return glFormat;if(internalFormatName!==null){if(_gl[internalFormatName]!==undefined)return _gl[internalFormatName];console.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\''+internalFormatName+'\\'');}var internalFormat=glFormat;if(glFormat===6403){if(glType===5126)internalFormat=33326;if(glType===5131)internalFormat=33325;if(glType===5121)internalFormat=33321;}if(glFormat===6407){if(glType===5126)internalFormat=34837;if(glType===5131)internalFormat=34843;if(glType===5121)internalFormat=32849;}if(glFormat===6408){if(glType===5126)internalFormat=34836;if(glType===5131)internalFormat=34842;if(glType===5121)internalFormat=encoding===sRGBEncoding?35907:32856;}if(internalFormat===33325||internalFormat===33326||internalFormat===34842||internalFormat===34836){extensions.get('EXT_color_buffer_float');}return internalFormat;}// Fallback filters for non-power-of-2 textures\nfunction filterFallback(f){if(f===NearestFilter||f===NearestMipmapNearestFilter||f===NearestMipmapLinearFilter){return 9728;}return 9729;}//\nfunction onTextureDispose(event){var texture=event.target;texture.removeEventListener('dispose',onTextureDispose);deallocateTexture(texture);if(texture.isVideoTexture){_videoTextures[\"delete\"](texture);}info.memory.textures--;}function onRenderTargetDispose(event){var renderTarget=event.target;renderTarget.removeEventListener('dispose',onRenderTargetDispose);deallocateRenderTarget(renderTarget);}//\nfunction deallocateTexture(texture){var textureProperties=properties.get(texture);if(textureProperties.__webglInit===undefined)return;_gl.deleteTexture(textureProperties.__webglTexture);properties.remove(texture);}function deallocateRenderTarget(renderTarget){var texture=renderTarget.texture;var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(texture);if(!renderTarget)return;if(textureProperties.__webglTexture!==undefined){_gl.deleteTexture(textureProperties.__webglTexture);info.memory.textures--;}if(renderTarget.depthTexture){renderTarget.depthTexture.dispose();}if(renderTarget.isWebGLCubeRenderTarget){for(var _i120=0;_i120<6;_i120++){_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[_i120]);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[_i120]);}}else{_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);if(renderTargetProperties.__webglDepthbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);if(renderTargetProperties.__webglMultisampledFramebuffer)_gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);if(renderTargetProperties.__webglColorRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);if(renderTargetProperties.__webglDepthRenderbuffer)_gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);}if(renderTarget.isWebGLMultipleRenderTargets){for(var _i121=0,il=texture.length;_i121<il;_i121++){var attachmentProperties=properties.get(texture[_i121]);if(attachmentProperties.__webglTexture){_gl.deleteTexture(attachmentProperties.__webglTexture);info.memory.textures--;}properties.remove(texture[_i121]);}}properties.remove(texture);properties.remove(renderTarget);}//\nvar textureUnits=0;function resetTextureUnits(){textureUnits=0;}function allocateTextureUnit(){var textureUnit=textureUnits;if(textureUnit>=maxTextures){console.warn('THREE.WebGLTextures: Trying to use '+textureUnit+' texture units while this GPU supports only '+maxTextures);}textureUnits+=1;return textureUnit;}//\nfunction setTexture2D(texture,slot){var textureProperties=properties.get(texture);if(texture.isVideoTexture)updateVideoTexture(texture);if(texture.version>0&&textureProperties.__version!==texture.version){var image=texture.image;if(image===undefined){console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');}else if(image.complete===false){console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');}else{uploadTexture(textureProperties,texture,slot);return;}}state.activeTexture(33984+slot);state.bindTexture(3553,textureProperties.__webglTexture);}function setTexture2DArray(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(35866,textureProperties.__webglTexture);}function setTexture3D(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(32879,textureProperties.__webglTexture);}function setTextureCube(texture,slot){var textureProperties=properties.get(texture);if(texture.version>0&&textureProperties.__version!==texture.version){uploadCubeTexture(textureProperties,texture,slot);return;}state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);}var wrappingToGL=(_wrappingToGL={},_defineProperty(_wrappingToGL,RepeatWrapping,10497),_defineProperty(_wrappingToGL,ClampToEdgeWrapping,33071),_defineProperty(_wrappingToGL,MirroredRepeatWrapping,33648),_wrappingToGL);var filterToGL=(_filterToGL={},_defineProperty(_filterToGL,NearestFilter,9728),_defineProperty(_filterToGL,NearestMipmapNearestFilter,9984),_defineProperty(_filterToGL,NearestMipmapLinearFilter,9986),_defineProperty(_filterToGL,LinearFilter,9729),_defineProperty(_filterToGL,LinearMipmapNearestFilter,9985),_defineProperty(_filterToGL,LinearMipmapLinearFilter,9987),_filterToGL);function setTextureParameters(textureType,texture,supportsMips){if(supportsMips){_gl.texParameteri(textureType,10242,wrappingToGL[texture.wrapS]);_gl.texParameteri(textureType,10243,wrappingToGL[texture.wrapT]);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,wrappingToGL[texture.wrapR]);}_gl.texParameteri(textureType,10240,filterToGL[texture.magFilter]);_gl.texParameteri(textureType,10241,filterToGL[texture.minFilter]);}else{_gl.texParameteri(textureType,10242,33071);_gl.texParameteri(textureType,10243,33071);if(textureType===32879||textureType===35866){_gl.texParameteri(textureType,32882,33071);}if(texture.wrapS!==ClampToEdgeWrapping||texture.wrapT!==ClampToEdgeWrapping){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');}_gl.texParameteri(textureType,10240,filterFallback(texture.magFilter));_gl.texParameteri(textureType,10241,filterFallback(texture.minFilter));if(texture.minFilter!==NearestFilter&&texture.minFilter!==LinearFilter){console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');}}if(extensions.has('EXT_texture_filter_anisotropic')===true){var extension=extensions.get('EXT_texture_filter_anisotropic');if(texture.type===FloatType&&extensions.has('OES_texture_float_linear')===false)return;// verify extension for WebGL 1 and WebGL 2\nif(isWebGL2===false&&texture.type===HalfFloatType&&extensions.has('OES_texture_half_float_linear')===false)return;// verify extension for WebGL 1 only\nif(texture.anisotropy>1||properties.get(texture).__currentAnisotropy){_gl.texParameterf(textureType,extension.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(texture.anisotropy,capabilities.getMaxAnisotropy()));properties.get(texture).__currentAnisotropy=texture.anisotropy;}}}function initTexture(textureProperties,texture){if(textureProperties.__webglInit===undefined){textureProperties.__webglInit=true;texture.addEventListener('dispose',onTextureDispose);textureProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}function uploadTexture(textureProperties,texture,slot){var textureType=3553;if(texture.isDataTexture2DArray)textureType=35866;if(texture.isDataTexture3D)textureType=32879;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(textureType,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);var needsPowerOfTwo=textureNeedsPowerOfTwo(texture)&&isPowerOfTwo$1(texture.image)===false;var image=resizeImage(texture.image,needsPowerOfTwo,false,maxTextureSize);var supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format);var glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.encoding);setTextureParameters(textureType,texture,supportsMips);var mipmap;var mipmaps=texture.mipmaps;if(texture.isDepthTexture){// populate depth texture with dummy data\nglInternalFormat=6402;if(isWebGL2){if(texture.type===FloatType){glInternalFormat=36012;}else if(texture.type===UnsignedIntType){glInternalFormat=33190;}else if(texture.type===UnsignedInt248Type){glInternalFormat=35056;}else{glInternalFormat=33189;// WebGL2 requires sized internalformat for glTexImage2D\n}}else{if(texture.type===FloatType){console.error('WebGLRenderer: Floating point depth texture requires WebGL2.');}}// validation checks for WebGL 1\nif(texture.format===DepthFormat&&glInternalFormat===6402){// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedShortType&&texture.type!==UnsignedIntType){console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');texture.type=UnsignedShortType;glType=utils.convert(texture.type);}}if(texture.format===DepthStencilFormat&&glInternalFormat===6402){// Depth stencil textures need the DEPTH_STENCIL internal format\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nglInternalFormat=34041;// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\nif(texture.type!==UnsignedInt248Type){console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');texture.type=UnsignedInt248Type;glType=utils.convert(texture.type);}}//\nstate.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,null);}else if(texture.isDataTexture){// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(var _i122=0,il=mipmaps.length;_i122<il;_i122++){mipmap=mipmaps[_i122];state.texImage2D(3553,_i122,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,image.width,image.height,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}}else if(texture.isCompressedTexture){for(var _i123=0,_il9=mipmaps.length;_i123<_il9;_i123++){mipmap=mipmaps[_i123];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(3553,_i123,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');}}else{state.texImage2D(3553,_i123,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}textureProperties.__maxMipLevel=mipmaps.length-1;}else if(texture.isDataTexture2DArray){state.texImage3D(35866,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else if(texture.isDataTexture3D){state.texImage3D(32879,0,glInternalFormat,image.width,image.height,image.depth,0,glFormat,glType,image.data);textureProperties.__maxMipLevel=0;}else{// regular Texture (image, video, canvas)\n// use manually created mipmaps if available\n// if there are no manual mipmaps\n// set 0 level mipmap and then use GL to generate other mipmap levels\nif(mipmaps.length>0&&supportsMips){for(var _i124=0,_il10=mipmaps.length;_i124<_il10;_i124++){mipmap=mipmaps[_i124];state.texImage2D(3553,_i124,glInternalFormat,glFormat,glType,mipmap);}texture.generateMipmaps=false;textureProperties.__maxMipLevel=mipmaps.length-1;}else{state.texImage2D(3553,0,glInternalFormat,glFormat,glType,image);textureProperties.__maxMipLevel=0;}}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(textureType,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}function uploadCubeTexture(textureProperties,texture,slot){if(texture.image.length!==6)return;initTexture(textureProperties,texture);state.activeTexture(33984+slot);state.bindTexture(34067,textureProperties.__webglTexture);_gl.pixelStorei(37440,texture.flipY);_gl.pixelStorei(37441,texture.premultiplyAlpha);_gl.pixelStorei(3317,texture.unpackAlignment);_gl.pixelStorei(37443,0);var isCompressed=texture&&(texture.isCompressedTexture||texture.image[0].isCompressedTexture);var isDataTexture=texture.image[0]&&texture.image[0].isDataTexture;var cubeImage=[];for(var _i125=0;_i125<6;_i125++){if(!isCompressed&&!isDataTexture){cubeImage[_i125]=resizeImage(texture.image[_i125],false,true,maxCubemapSize);}else{cubeImage[_i125]=isDataTexture?texture.image[_i125].image:texture.image[_i125];}}var image=cubeImage[0],supportsMips=isPowerOfTwo$1(image)||isWebGL2,glFormat=utils.convert(texture.format),glType=utils.convert(texture.type),glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.encoding);setTextureParameters(34067,texture,supportsMips);var mipmaps;if(isCompressed){for(var _i126=0;_i126<6;_i126++){mipmaps=cubeImage[_i126].mipmaps;for(var j=0;j<mipmaps.length;j++){var mipmap=mipmaps[j];if(texture.format!==RGBAFormat&&texture.format!==RGBFormat){if(glFormat!==null){state.compressedTexImage2D(34069+_i126,j,glInternalFormat,mipmap.width,mipmap.height,0,mipmap.data);}else{console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');}}else{state.texImage2D(34069+_i126,j,glInternalFormat,mipmap.width,mipmap.height,0,glFormat,glType,mipmap.data);}}}textureProperties.__maxMipLevel=mipmaps.length-1;}else{mipmaps=texture.mipmaps;for(var _i127=0;_i127<6;_i127++){if(isDataTexture){state.texImage2D(34069+_i127,0,glInternalFormat,cubeImage[_i127].width,cubeImage[_i127].height,0,glFormat,glType,cubeImage[_i127].data);for(var _j3=0;_j3<mipmaps.length;_j3++){var _mipmap=mipmaps[_j3];var mipmapImage=_mipmap.image[_i127].image;state.texImage2D(34069+_i127,_j3+1,glInternalFormat,mipmapImage.width,mipmapImage.height,0,glFormat,glType,mipmapImage.data);}}else{state.texImage2D(34069+_i127,0,glInternalFormat,glFormat,glType,cubeImage[_i127]);for(var _j4=0;_j4<mipmaps.length;_j4++){var _mipmap2=mipmaps[_j4];state.texImage2D(34069+_i127,_j4+1,glInternalFormat,glFormat,glType,_mipmap2.image[_i127]);}}}textureProperties.__maxMipLevel=mipmaps.length;}if(textureNeedsGenerateMipmaps(texture,supportsMips)){// We assume images for cube map have the same size.\ngenerateMipmap(34067,texture,image.width,image.height);}textureProperties.__version=texture.version;if(texture.onUpdate)texture.onUpdate(texture);}// Render targets\n// Setup storage for target texture and bind it to correct framebuffer\nfunction setupFrameBufferTexture(framebuffer,renderTarget,texture,attachment,textureTarget){var glFormat=utils.convert(texture.format);var glType=utils.convert(texture.type);var glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.encoding);if(textureTarget===32879||textureTarget===35866){state.texImage3D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,renderTarget.depth,0,glFormat,glType,null);}else{state.texImage2D(textureTarget,0,glInternalFormat,renderTarget.width,renderTarget.height,0,glFormat,glType,null);}state.bindFramebuffer(36160,framebuffer);_gl.framebufferTexture2D(36160,attachment,textureTarget,properties.get(texture).__webglTexture,0);state.bindFramebuffer(36160,null);}// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\nfunction setupRenderBufferStorage(renderbuffer,renderTarget,isMultisample){_gl.bindRenderbuffer(36161,renderbuffer);if(renderTarget.depthBuffer&&!renderTarget.stencilBuffer){var glInternalFormat=33189;if(isMultisample){var depthTexture=renderTarget.depthTexture;if(depthTexture&&depthTexture.isDepthTexture){if(depthTexture.type===FloatType){glInternalFormat=36012;}else if(depthTexture.type===UnsignedIntType){glInternalFormat=33190;}}var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,glInternalFormat,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,36096,36161,renderbuffer);}else if(renderTarget.depthBuffer&&renderTarget.stencilBuffer){if(isMultisample){var _samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,_samples,35056,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,34041,renderTarget.width,renderTarget.height);}_gl.framebufferRenderbuffer(36160,33306,36161,renderbuffer);}else{// Use the first texture for MRT so far\nvar texture=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture[0]:renderTarget.texture;var glFormat=utils.convert(texture.format);var glType=utils.convert(texture.type);var _glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.encoding);if(isMultisample){var _samples2=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,_samples2,_glInternalFormat,renderTarget.width,renderTarget.height);}else{_gl.renderbufferStorage(36161,_glInternalFormat,renderTarget.width,renderTarget.height);}}_gl.bindRenderbuffer(36161,null);}// Setup resources for a Depth Texture for a FBO (needs an extension)\nfunction setupDepthTexture(framebuffer,renderTarget){var isCube=renderTarget&&renderTarget.isWebGLCubeRenderTarget;if(isCube)throw new Error('Depth Texture with cube render targets is not supported');state.bindFramebuffer(36160,framebuffer);if(!(renderTarget.depthTexture&&renderTarget.depthTexture.isDepthTexture)){throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');}// upload an empty depth texture with framebuffer size\nif(!properties.get(renderTarget.depthTexture).__webglTexture||renderTarget.depthTexture.image.width!==renderTarget.width||renderTarget.depthTexture.image.height!==renderTarget.height){renderTarget.depthTexture.image.width=renderTarget.width;renderTarget.depthTexture.image.height=renderTarget.height;renderTarget.depthTexture.needsUpdate=true;}setTexture2D(renderTarget.depthTexture,0);var webglDepthTexture=properties.get(renderTarget.depthTexture).__webglTexture;if(renderTarget.depthTexture.format===DepthFormat){_gl.framebufferTexture2D(36160,36096,3553,webglDepthTexture,0);}else if(renderTarget.depthTexture.format===DepthStencilFormat){_gl.framebufferTexture2D(36160,33306,3553,webglDepthTexture,0);}else{throw new Error('Unknown depthTexture format');}}// Setup GL resources for a non-texture depth buffer\nfunction setupDepthRenderbuffer(renderTarget){var renderTargetProperties=properties.get(renderTarget);var isCube=renderTarget.isWebGLCubeRenderTarget===true;if(renderTarget.depthTexture){if(isCube)throw new Error('target.depthTexture not supported in Cube render targets');setupDepthTexture(renderTargetProperties.__webglFramebuffer,renderTarget);}else{if(isCube){renderTargetProperties.__webglDepthbuffer=[];for(var _i128=0;_i128<6;_i128++){state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer[_i128]);renderTargetProperties.__webglDepthbuffer[_i128]=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[_i128],renderTarget,false);}}else{state.bindFramebuffer(36160,renderTargetProperties.__webglFramebuffer);renderTargetProperties.__webglDepthbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer,renderTarget,false);}}state.bindFramebuffer(36160,null);}// Set up GL resources for the render target\nfunction setupRenderTarget(renderTarget){var texture=renderTarget.texture;var renderTargetProperties=properties.get(renderTarget);var textureProperties=properties.get(texture);renderTarget.addEventListener('dispose',onRenderTargetDispose);if(renderTarget.isWebGLMultipleRenderTargets!==true){textureProperties.__webglTexture=_gl.createTexture();textureProperties.__version=texture.version;info.memory.textures++;}var isCube=renderTarget.isWebGLCubeRenderTarget===true;var isMultipleRenderTargets=renderTarget.isWebGLMultipleRenderTargets===true;var isMultisample=renderTarget.isWebGLMultisampleRenderTarget===true;var isRenderTarget3D=texture.isDataTexture3D||texture.isDataTexture2DArray;var supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;// Handles WebGL2 RGBFormat fallback - #18858\nif(isWebGL2&&texture.format===RGBFormat&&(texture.type===FloatType||texture.type===HalfFloatType)){texture.format=RGBAFormat;console.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');}// Setup framebuffer\nif(isCube){renderTargetProperties.__webglFramebuffer=[];for(var _i129=0;_i129<6;_i129++){renderTargetProperties.__webglFramebuffer[_i129]=_gl.createFramebuffer();}}else{renderTargetProperties.__webglFramebuffer=_gl.createFramebuffer();if(isMultipleRenderTargets){if(capabilities.drawBuffers){var textures=renderTarget.texture;for(var _i130=0,il=textures.length;_i130<il;_i130++){var attachmentProperties=properties.get(textures[_i130]);if(attachmentProperties.__webglTexture===undefined){attachmentProperties.__webglTexture=_gl.createTexture();info.memory.textures++;}}}else{console.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');}}else if(isMultisample){if(isWebGL2){renderTargetProperties.__webglMultisampledFramebuffer=_gl.createFramebuffer();renderTargetProperties.__webglColorRenderbuffer=_gl.createRenderbuffer();_gl.bindRenderbuffer(36161,renderTargetProperties.__webglColorRenderbuffer);var glFormat=utils.convert(texture.format);var glType=utils.convert(texture.type);var glInternalFormat=getInternalFormat(texture.internalFormat,glFormat,glType,texture.encoding);var samples=getRenderTargetSamples(renderTarget);_gl.renderbufferStorageMultisample(36161,samples,glInternalFormat,renderTarget.width,renderTarget.height);state.bindFramebuffer(36160,renderTargetProperties.__webglMultisampledFramebuffer);_gl.framebufferRenderbuffer(36160,36064,36161,renderTargetProperties.__webglColorRenderbuffer);_gl.bindRenderbuffer(36161,null);if(renderTarget.depthBuffer){renderTargetProperties.__webglDepthRenderbuffer=_gl.createRenderbuffer();setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer,renderTarget,true);}state.bindFramebuffer(36160,null);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}// Setup color buffer\nif(isCube){state.bindTexture(34067,textureProperties.__webglTexture);setTextureParameters(34067,texture,supportsMips);for(var _i131=0;_i131<6;_i131++){setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[_i131],renderTarget,texture,36064,34069+_i131);}if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(34067,texture,renderTarget.width,renderTarget.height);}state.unbindTexture();}else if(isMultipleRenderTargets){var _textures=renderTarget.texture;for(var _i132=0,_il11=_textures.length;_i132<_il11;_i132++){var attachment=_textures[_i132];var _attachmentProperties=properties.get(attachment);state.bindTexture(3553,_attachmentProperties.__webglTexture);setTextureParameters(3553,attachment,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,attachment,36064+_i132,3553);if(textureNeedsGenerateMipmaps(attachment,supportsMips)){generateMipmap(3553,attachment,renderTarget.width,renderTarget.height);}}state.unbindTexture();}else{var glTextureType=3553;if(isRenderTarget3D){// Render targets containing layers, i.e: Texture 3D and 2d arrays\nif(isWebGL2){var isTexture3D=texture.isDataTexture3D;glTextureType=isTexture3D?32879:35866;}else{console.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');}}state.bindTexture(glTextureType,textureProperties.__webglTexture);setTextureParameters(glTextureType,texture,supportsMips);setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer,renderTarget,texture,36064,glTextureType);if(textureNeedsGenerateMipmaps(texture,supportsMips)){generateMipmap(glTextureType,texture,renderTarget.width,renderTarget.height,renderTarget.depth);}state.unbindTexture();}// Setup depth and stencil buffers\nif(renderTarget.depthBuffer){setupDepthRenderbuffer(renderTarget);}}function updateRenderTargetMipmap(renderTarget){var supportsMips=isPowerOfTwo$1(renderTarget)||isWebGL2;var textures=renderTarget.isWebGLMultipleRenderTargets===true?renderTarget.texture:[renderTarget.texture];for(var _i133=0,il=textures.length;_i133<il;_i133++){var texture=textures[_i133];if(textureNeedsGenerateMipmaps(texture,supportsMips)){var target=renderTarget.isWebGLCubeRenderTarget?34067:3553;var webglTexture=properties.get(texture).__webglTexture;state.bindTexture(target,webglTexture);generateMipmap(target,texture,renderTarget.width,renderTarget.height);state.unbindTexture();}}}function updateMultisampleRenderTarget(renderTarget){if(renderTarget.isWebGLMultisampleRenderTarget){if(isWebGL2){var width=renderTarget.width;var height=renderTarget.height;var mask=16384;if(renderTarget.depthBuffer)mask|=256;if(renderTarget.stencilBuffer)mask|=1024;var renderTargetProperties=properties.get(renderTarget);state.bindFramebuffer(36008,renderTargetProperties.__webglMultisampledFramebuffer);state.bindFramebuffer(36009,renderTargetProperties.__webglFramebuffer);_gl.blitFramebuffer(0,0,width,height,0,0,width,height,mask,9728);state.bindFramebuffer(36008,null);state.bindFramebuffer(36009,renderTargetProperties.__webglMultisampledFramebuffer);}else{console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');}}}function getRenderTargetSamples(renderTarget){return isWebGL2&&renderTarget.isWebGLMultisampleRenderTarget?Math.min(maxSamples,renderTarget.samples):0;}function updateVideoTexture(texture){var frame=info.render.frame;// Check the last frame we updated the VideoTexture\nif(_videoTextures.get(texture)!==frame){_videoTextures.set(texture,frame);texture.update();}}// backwards compatibility\nvar warnedTexture2D=false;var warnedTextureCube=false;function safeSetTexture2D(texture,slot){if(texture&&texture.isWebGLRenderTarget){if(warnedTexture2D===false){console.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');warnedTexture2D=true;}texture=texture.texture;}setTexture2D(texture,slot);}function safeSetTextureCube(texture,slot){if(texture&&texture.isWebGLCubeRenderTarget){if(warnedTextureCube===false){console.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');warnedTextureCube=true;}texture=texture.texture;}setTextureCube(texture,slot);}//\nthis.allocateTextureUnit=allocateTextureUnit;this.resetTextureUnits=resetTextureUnits;this.setTexture2D=setTexture2D;this.setTexture2DArray=setTexture2DArray;this.setTexture3D=setTexture3D;this.setTextureCube=setTextureCube;this.setupRenderTarget=setupRenderTarget;this.updateRenderTargetMipmap=updateRenderTargetMipmap;this.updateMultisampleRenderTarget=updateMultisampleRenderTarget;this.safeSetTexture2D=safeSetTexture2D;this.safeSetTextureCube=safeSetTextureCube;}function WebGLUtils(gl,extensions,capabilities){var isWebGL2=capabilities.isWebGL2;function convert(p){var extension;if(p===UnsignedByteType)return 5121;if(p===UnsignedShort4444Type)return 32819;if(p===UnsignedShort5551Type)return 32820;if(p===UnsignedShort565Type)return 33635;if(p===ByteType)return 5120;if(p===ShortType)return 5122;if(p===UnsignedShortType)return 5123;if(p===IntType)return 5124;if(p===UnsignedIntType)return 5125;if(p===FloatType)return 5126;if(p===HalfFloatType){if(isWebGL2)return 5131;extension=extensions.get('OES_texture_half_float');if(extension!==null){return extension.HALF_FLOAT_OES;}else{return null;}}if(p===AlphaFormat)return 6406;if(p===RGBFormat)return 6407;if(p===RGBAFormat)return 6408;if(p===LuminanceFormat)return 6409;if(p===LuminanceAlphaFormat)return 6410;if(p===DepthFormat)return 6402;if(p===DepthStencilFormat)return 34041;if(p===RedFormat)return 6403;// WebGL2 formats.\nif(p===RedIntegerFormat)return 36244;if(p===RGFormat)return 33319;if(p===RGIntegerFormat)return 33320;if(p===RGBIntegerFormat)return 36248;if(p===RGBAIntegerFormat)return 36249;if(p===RGB_S3TC_DXT1_Format||p===RGBA_S3TC_DXT1_Format||p===RGBA_S3TC_DXT3_Format||p===RGBA_S3TC_DXT5_Format){extension=extensions.get('WEBGL_compressed_texture_s3tc');if(extension!==null){if(p===RGB_S3TC_DXT1_Format)return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT1_Format)return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(p===RGBA_S3TC_DXT3_Format)return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(p===RGBA_S3TC_DXT5_Format)return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;}else{return null;}}if(p===RGB_PVRTC_4BPPV1_Format||p===RGB_PVRTC_2BPPV1_Format||p===RGBA_PVRTC_4BPPV1_Format||p===RGBA_PVRTC_2BPPV1_Format){extension=extensions.get('WEBGL_compressed_texture_pvrtc');if(extension!==null){if(p===RGB_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(p===RGB_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(p===RGBA_PVRTC_4BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(p===RGBA_PVRTC_2BPPV1_Format)return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;}else{return null;}}if(p===RGB_ETC1_Format){extension=extensions.get('WEBGL_compressed_texture_etc1');if(extension!==null){return extension.COMPRESSED_RGB_ETC1_WEBGL;}else{return null;}}if(p===RGB_ETC2_Format||p===RGBA_ETC2_EAC_Format){extension=extensions.get('WEBGL_compressed_texture_etc');if(extension!==null){if(p===RGB_ETC2_Format)return extension.COMPRESSED_RGB8_ETC2;if(p===RGBA_ETC2_EAC_Format)return extension.COMPRESSED_RGBA8_ETC2_EAC;}}if(p===RGBA_ASTC_4x4_Format||p===RGBA_ASTC_5x4_Format||p===RGBA_ASTC_5x5_Format||p===RGBA_ASTC_6x5_Format||p===RGBA_ASTC_6x6_Format||p===RGBA_ASTC_8x5_Format||p===RGBA_ASTC_8x6_Format||p===RGBA_ASTC_8x8_Format||p===RGBA_ASTC_10x5_Format||p===RGBA_ASTC_10x6_Format||p===RGBA_ASTC_10x8_Format||p===RGBA_ASTC_10x10_Format||p===RGBA_ASTC_12x10_Format||p===RGBA_ASTC_12x12_Format||p===SRGB8_ALPHA8_ASTC_4x4_Format||p===SRGB8_ALPHA8_ASTC_5x4_Format||p===SRGB8_ALPHA8_ASTC_5x5_Format||p===SRGB8_ALPHA8_ASTC_6x5_Format||p===SRGB8_ALPHA8_ASTC_6x6_Format||p===SRGB8_ALPHA8_ASTC_8x5_Format||p===SRGB8_ALPHA8_ASTC_8x6_Format||p===SRGB8_ALPHA8_ASTC_8x8_Format||p===SRGB8_ALPHA8_ASTC_10x5_Format||p===SRGB8_ALPHA8_ASTC_10x6_Format||p===SRGB8_ALPHA8_ASTC_10x8_Format||p===SRGB8_ALPHA8_ASTC_10x10_Format||p===SRGB8_ALPHA8_ASTC_12x10_Format||p===SRGB8_ALPHA8_ASTC_12x12_Format){extension=extensions.get('WEBGL_compressed_texture_astc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===RGBA_BPTC_Format){extension=extensions.get('EXT_texture_compression_bptc');if(extension!==null){// TODO Complete?\nreturn p;}else{return null;}}if(p===UnsignedInt248Type){if(isWebGL2)return 34042;extension=extensions.get('WEBGL_depth_texture');if(extension!==null){return extension.UNSIGNED_INT_24_8_WEBGL;}else{return null;}}}return{convert:convert};}var ArrayCamera=/*#__PURE__*/function(_PerspectiveCamera){_inherits(ArrayCamera,_PerspectiveCamera);var _super34=_createSuper(ArrayCamera);function ArrayCamera(){var _this25;var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,ArrayCamera);_this25=_super34.call(this);_this25.cameras=array;return _this25;}return _createClass(ArrayCamera);}(PerspectiveCamera);ArrayCamera.prototype.isArrayCamera=true;var Group=/*#__PURE__*/function(_Object3D4){_inherits(Group,_Object3D4);var _super35=_createSuper(Group);function Group(){var _this26;_classCallCheck(this,Group);_this26=_super35.call(this);_this26.type='Group';return _this26;}return _createClass(Group);}(Object3D);Group.prototype.isGroup=true;var _moveEvent={type:'move'};var WebXRController=/*#__PURE__*/function(){function WebXRController(){_classCallCheck(this,WebXRController);this._targetRay=null;this._grip=null;this._hand=null;}_createClass(WebXRController,[{key:\"getHandSpace\",value:function getHandSpace(){if(this._hand===null){this._hand=new Group();this._hand.matrixAutoUpdate=false;this._hand.visible=false;this._hand.joints={};this._hand.inputState={pinching:false};}return this._hand;}},{key:\"getTargetRaySpace\",value:function getTargetRaySpace(){if(this._targetRay===null){this._targetRay=new Group();this._targetRay.matrixAutoUpdate=false;this._targetRay.visible=false;this._targetRay.hasLinearVelocity=false;this._targetRay.linearVelocity=new Vector3();this._targetRay.hasAngularVelocity=false;this._targetRay.angularVelocity=new Vector3();}return this._targetRay;}},{key:\"getGripSpace\",value:function getGripSpace(){if(this._grip===null){this._grip=new Group();this._grip.matrixAutoUpdate=false;this._grip.visible=false;this._grip.hasLinearVelocity=false;this._grip.linearVelocity=new Vector3();this._grip.hasAngularVelocity=false;this._grip.angularVelocity=new Vector3();}return this._grip;}},{key:\"dispatchEvent\",value:function dispatchEvent(event){if(this._targetRay!==null){this._targetRay.dispatchEvent(event);}if(this._grip!==null){this._grip.dispatchEvent(event);}if(this._hand!==null){this._hand.dispatchEvent(event);}return this;}},{key:\"disconnect\",value:function disconnect(inputSource){this.dispatchEvent({type:'disconnected',data:inputSource});if(this._targetRay!==null){this._targetRay.visible=false;}if(this._grip!==null){this._grip.visible=false;}if(this._hand!==null){this._hand.visible=false;}return this;}},{key:\"update\",value:function update(inputSource,frame,referenceSpace){var inputPose=null;var gripPose=null;var handPose=null;var targetRay=this._targetRay;var grip=this._grip;var hand=this._hand;if(inputSource&&frame.session.visibilityState!=='visible-blurred'){if(targetRay!==null){inputPose=frame.getPose(inputSource.targetRaySpace,referenceSpace);if(inputPose!==null){targetRay.matrix.fromArray(inputPose.transform.matrix);targetRay.matrix.decompose(targetRay.position,targetRay.rotation,targetRay.scale);if(inputPose.linearVelocity){targetRay.hasLinearVelocity=true;targetRay.linearVelocity.copy(inputPose.linearVelocity);}else{targetRay.hasLinearVelocity=false;}if(inputPose.angularVelocity){targetRay.hasAngularVelocity=true;targetRay.angularVelocity.copy(inputPose.angularVelocity);}else{targetRay.hasAngularVelocity=false;}this.dispatchEvent(_moveEvent);}}if(hand&&inputSource.hand){handPose=true;var _iterator=_createForOfIteratorHelper(inputSource.hand.values()),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var inputjoint=_step.value;// Update the joints groups with the XRJoint poses\nvar jointPose=frame.getJointPose(inputjoint,referenceSpace);if(hand.joints[inputjoint.jointName]===undefined){// The transform of this joint will be updated with the joint pose on each frame\nvar _joint=new Group();_joint.matrixAutoUpdate=false;_joint.visible=false;hand.joints[inputjoint.jointName]=_joint;// ??\nhand.add(_joint);}var joint=hand.joints[inputjoint.jointName];if(jointPose!==null){joint.matrix.fromArray(jointPose.transform.matrix);joint.matrix.decompose(joint.position,joint.rotation,joint.scale);joint.jointRadius=jointPose.radius;}joint.visible=jointPose!==null;}// Custom events\n// Check pinchz\n}catch(err){_iterator.e(err);}finally{_iterator.f();}var indexTip=hand.joints['index-finger-tip'];var thumbTip=hand.joints['thumb-tip'];var distance=indexTip.position.distanceTo(thumbTip.position);var distanceToPinch=0.02;var threshold=0.005;if(hand.inputState.pinching&&distance>distanceToPinch+threshold){hand.inputState.pinching=false;this.dispatchEvent({type:'pinchend',handedness:inputSource.handedness,target:this});}else if(!hand.inputState.pinching&&distance<=distanceToPinch-threshold){hand.inputState.pinching=true;this.dispatchEvent({type:'pinchstart',handedness:inputSource.handedness,target:this});}}else{if(grip!==null&&inputSource.gripSpace){gripPose=frame.getPose(inputSource.gripSpace,referenceSpace);if(gripPose!==null){grip.matrix.fromArray(gripPose.transform.matrix);grip.matrix.decompose(grip.position,grip.rotation,grip.scale);if(gripPose.linearVelocity){grip.hasLinearVelocity=true;grip.linearVelocity.copy(gripPose.linearVelocity);}else{grip.hasLinearVelocity=false;}if(gripPose.angularVelocity){grip.hasAngularVelocity=true;grip.angularVelocity.copy(gripPose.angularVelocity);}else{grip.hasAngularVelocity=false;}}}}}if(targetRay!==null){targetRay.visible=inputPose!==null;}if(grip!==null){grip.visible=gripPose!==null;}if(hand!==null){hand.visible=handPose!==null;}return this;}}]);return WebXRController;}();var WebXRManager=/*#__PURE__*/function(_EventDispatcher6){_inherits(WebXRManager,_EventDispatcher6);var _super36=_createSuper(WebXRManager);function WebXRManager(renderer,gl){var _this27;_classCallCheck(this,WebXRManager);_this27=_super36.call(this);var scope=_assertThisInitialized(_this27);var state=renderer.state;var session=null;var framebufferScaleFactor=1.0;var referenceSpace=null;var referenceSpaceType='local-floor';var pose=null;var glBinding=null;var glFramebuffer=null;var glProjLayer=null;var glBaseLayer=null;var isMultisample=false;var glMultisampledFramebuffer=null;var glColorRenderbuffer=null;var glDepthRenderbuffer=null;var xrFrame=null;var depthStyle=null;var clearStyle=null;var msaartcSupported=renderer.extensions.has('EXT_multisampled_render_to_texture');var msaaExt=null;var controllers=[];var inputSourcesMap=new Map();//\nvar cameraL=new PerspectiveCamera();cameraL.layers.enable(1);cameraL.viewport=new Vector4();var cameraR=new PerspectiveCamera();cameraR.layers.enable(2);cameraR.viewport=new Vector4();var cameras=[cameraL,cameraR];var cameraVR=new ArrayCamera();cameraVR.layers.enable(1);cameraVR.layers.enable(2);var _currentDepthNear=null;var _currentDepthFar=null;//\n_this27.cameraAutoUpdate=true;_this27.enabled=false;_this27.isPresenting=false;_this27.getController=function(index){var controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getTargetRaySpace();};_this27.getControllerGrip=function(index){var controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getGripSpace();};_this27.getHand=function(index){var controller=controllers[index];if(controller===undefined){controller=new WebXRController();controllers[index]=controller;}return controller.getHandSpace();};//\nfunction onSessionEvent(event){var controller=inputSourcesMap.get(event.inputSource);if(controller){controller.dispatchEvent({type:event.type,data:event.inputSource});}}function onSessionEnd(){inputSourcesMap.forEach(function(controller,inputSource){controller.disconnect(inputSource);});inputSourcesMap.clear();_currentDepthNear=null;_currentDepthFar=null;// restore framebuffer/rendering state\nstate.bindXRFramebuffer(null);renderer.setRenderTarget(renderer.getRenderTarget());if(glFramebuffer)gl.deleteFramebuffer(glFramebuffer);if(glMultisampledFramebuffer)gl.deleteFramebuffer(glMultisampledFramebuffer);if(glColorRenderbuffer)gl.deleteRenderbuffer(glColorRenderbuffer);if(glDepthRenderbuffer)gl.deleteRenderbuffer(glDepthRenderbuffer);glFramebuffer=null;glMultisampledFramebuffer=null;glColorRenderbuffer=null;glDepthRenderbuffer=null;glBaseLayer=null;glProjLayer=null;glBinding=null;session=null;//\nanimation.stop();scope.isPresenting=false;scope.dispatchEvent({type:'sessionend'});}_this27.setFramebufferScaleFactor=function(value){framebufferScaleFactor=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');}};_this27.setReferenceSpaceType=function(value){referenceSpaceType=value;if(scope.isPresenting===true){console.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');}};_this27.getReferenceSpace=function(){return referenceSpace;};_this27.getBaseLayer=function(){return glProjLayer!==null?glProjLayer:glBaseLayer;};_this27.getBinding=function(){return glBinding;};_this27.getFrame=function(){return xrFrame;};_this27.getSession=function(){return session;};_this27.setSession=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(value){var attributes,layerInit,_layerInit,depthFormat,projectionlayerInit;return regeneratorRuntime.wrap(function _callee$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:session=value;if(!(session!==null)){_context5.next=22;break;}session.addEventListener('select',onSessionEvent);session.addEventListener('selectstart',onSessionEvent);session.addEventListener('selectend',onSessionEvent);session.addEventListener('squeeze',onSessionEvent);session.addEventListener('squeezestart',onSessionEvent);session.addEventListener('squeezeend',onSessionEvent);session.addEventListener('end',onSessionEnd);session.addEventListener('inputsourceschange',onInputSourcesChange);attributes=gl.getContextAttributes();if(!(attributes.xrCompatible!==true)){_context5.next=14;break;}_context5.next=14;return gl.makeXRCompatible();case 14:if(session.renderState.layers===undefined){layerInit={antialias:attributes.antialias,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};glBaseLayer=new XRWebGLLayer(session,gl,layerInit);session.updateRenderState({baseLayer:glBaseLayer});}else if(gl instanceof WebGLRenderingContext){// Use old style webgl layer because we can't use MSAA\n// WebGL2 support.\n_layerInit={antialias:true,alpha:attributes.alpha,depth:attributes.depth,stencil:attributes.stencil,framebufferScaleFactor:framebufferScaleFactor};glBaseLayer=new XRWebGLLayer(session,gl,_layerInit);session.updateRenderState({layers:[glBaseLayer]});}else{isMultisample=attributes.antialias;depthFormat=null;if(attributes.depth){clearStyle=256;if(attributes.stencil)clearStyle|=1024;depthStyle=attributes.stencil?33306:36096;depthFormat=attributes.stencil?35056:33190;}projectionlayerInit={colorFormat:attributes.alpha?32856:32849,depthFormat:depthFormat,scaleFactor:framebufferScaleFactor};glBinding=new XRWebGLBinding(session,gl);glProjLayer=glBinding.createProjectionLayer(projectionlayerInit);glFramebuffer=gl.createFramebuffer();session.updateRenderState({layers:[glProjLayer]});if(isMultisample&&msaartcSupported){msaaExt=renderer.extensions.get('EXT_multisampled_render_to_texture');}else if(isMultisample){glMultisampledFramebuffer=gl.createFramebuffer();glColorRenderbuffer=gl.createRenderbuffer();gl.bindRenderbuffer(36161,glColorRenderbuffer);gl.renderbufferStorageMultisample(36161,4,32856,glProjLayer.textureWidth,glProjLayer.textureHeight);state.bindFramebuffer(36160,glMultisampledFramebuffer);gl.framebufferRenderbuffer(36160,36064,36161,glColorRenderbuffer);gl.bindRenderbuffer(36161,null);if(depthFormat!==null){glDepthRenderbuffer=gl.createRenderbuffer();gl.bindRenderbuffer(36161,glDepthRenderbuffer);gl.renderbufferStorageMultisample(36161,4,depthFormat,glProjLayer.textureWidth,glProjLayer.textureHeight);gl.framebufferRenderbuffer(36160,depthStyle,36161,glDepthRenderbuffer);gl.bindRenderbuffer(36161,null);}state.bindFramebuffer(36160,null);}}_context5.next=17;return session.requestReferenceSpace(referenceSpaceType);case 17:referenceSpace=_context5.sent;animation.setContext(session);animation.start();scope.isPresenting=true;scope.dispatchEvent({type:'sessionstart'});case 22:case\"end\":return _context5.stop();}}},_callee);}));return function(_x3){return _ref.apply(this,arguments);};}();function onInputSourcesChange(event){var inputSources=session.inputSources;// Assign inputSources to available controllers\nfor(var _i134=0;_i134<controllers.length;_i134++){inputSourcesMap.set(inputSources[_i134],controllers[_i134]);}// Notify disconnected\nfor(var _i135=0;_i135<event.removed.length;_i135++){var inputSource=event.removed[_i135];var controller=inputSourcesMap.get(inputSource);if(controller){controller.dispatchEvent({type:'disconnected',data:inputSource});inputSourcesMap[\"delete\"](inputSource);}}// Notify connected\nfor(var _i136=0;_i136<event.added.length;_i136++){var _inputSource=event.added[_i136];var _controller=inputSourcesMap.get(_inputSource);if(_controller){_controller.dispatchEvent({type:'connected',data:_inputSource});}}}//\nvar cameraLPos=new Vector3();var cameraRPos=new Vector3();/**\r\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\r\n\t\t * the cameras' projection and world matrices have already been set.\r\n\t\t * And that near and far planes are identical for both cameras.\r\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\r\n\t\t */function setProjectionFromUnion(camera,cameraL,cameraR){cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);var ipd=cameraLPos.distanceTo(cameraRPos);var projL=cameraL.projectionMatrix.elements;var projR=cameraR.projectionMatrix.elements;// VR systems will have identical far and near planes, and\n// most likely identical top and bottom frustum extents.\n// Use the left camera for these values.\nvar near=projL[14]/(projL[10]-1);var far=projL[14]/(projL[10]+1);var topFov=(projL[9]+1)/projL[5];var bottomFov=(projL[9]-1)/projL[5];var leftFov=(projL[8]-1)/projL[0];var rightFov=(projR[8]+1)/projR[0];var left=near*leftFov;var right=near*rightFov;// Calculate the new camera's position offset from the\n// left camera. xOffset should be roughly half `ipd`.\nvar zOffset=ipd/(-leftFov+rightFov);var xOffset=zOffset*-leftFov;// TODO: Better way to apply this offset?\ncameraL.matrixWorld.decompose(camera.position,camera.quaternion,camera.scale);camera.translateX(xOffset);camera.translateZ(zOffset);camera.matrixWorld.compose(camera.position,camera.quaternion,camera.scale);camera.matrixWorldInverse.copy(camera.matrixWorld).invert();// Find the union of the frustum values of the cameras and scale\n// the values so that the near plane's position does not change in world space,\n// although must now be relative to the new union camera.\nvar near2=near+zOffset;var far2=far+zOffset;var left2=left-xOffset;var right2=right+(ipd-xOffset);var top2=topFov*far/far2*near2;var bottom2=bottomFov*far/far2*near2;camera.projectionMatrix.makePerspective(left2,right2,top2,bottom2,near2,far2);}function updateCamera(camera,parent){if(parent===null){camera.matrixWorld.copy(camera.matrix);}else{camera.matrixWorld.multiplyMatrices(parent.matrixWorld,camera.matrix);}camera.matrixWorldInverse.copy(camera.matrixWorld).invert();}_this27.updateCamera=function(camera){if(session===null)return;cameraVR.near=cameraR.near=cameraL.near=camera.near;cameraVR.far=cameraR.far=cameraL.far=camera.far;if(_currentDepthNear!==cameraVR.near||_currentDepthFar!==cameraVR.far){// Note that the new renderState won't apply until the next frame. See #18320\nsession.updateRenderState({depthNear:cameraVR.near,depthFar:cameraVR.far});_currentDepthNear=cameraVR.near;_currentDepthFar=cameraVR.far;}var parent=camera.parent;var cameras=cameraVR.cameras;updateCamera(cameraVR,parent);for(var _i137=0;_i137<cameras.length;_i137++){updateCamera(cameras[_i137],parent);}cameraVR.matrixWorld.decompose(cameraVR.position,cameraVR.quaternion,cameraVR.scale);// update user camera and its children\ncamera.position.copy(cameraVR.position);camera.quaternion.copy(cameraVR.quaternion);camera.scale.copy(cameraVR.scale);camera.matrix.copy(cameraVR.matrix);camera.matrixWorld.copy(cameraVR.matrixWorld);var children=camera.children;for(var _i138=0,l=children.length;_i138<l;_i138++){children[_i138].updateMatrixWorld(true);}// update projection matrix for proper view frustum culling\nif(cameras.length===2){setProjectionFromUnion(cameraVR,cameraL,cameraR);}else{// assume single camera setup (AR)\ncameraVR.projectionMatrix.copy(cameraL.projectionMatrix);}};_this27.getCamera=function(){return cameraVR;};_this27.getFoveation=function(){if(glProjLayer!==null){return glProjLayer.fixedFoveation;}if(glBaseLayer!==null){return glBaseLayer.fixedFoveation;}return undefined;};_this27.setFoveation=function(foveation){// 0 = no foveation = full resolution\n// 1 = maximum foveation = the edges render at lower resolution\nif(glProjLayer!==null){glProjLayer.fixedFoveation=foveation;}if(glBaseLayer!==null&&glBaseLayer.fixedFoveation!==undefined){glBaseLayer.fixedFoveation=foveation;}};// Animation Loop\nvar onAnimationFrameCallback=null;function onAnimationFrame(time,frame){pose=frame.getViewerPose(referenceSpace);xrFrame=frame;if(pose!==null){var views=pose.views;if(glBaseLayer!==null){state.bindXRFramebuffer(glBaseLayer.framebuffer);}var cameraVRNeedsUpdate=false;// check if it's necessary to rebuild cameraVR's camera list\nif(views.length!==cameraVR.cameras.length){cameraVR.cameras.length=0;cameraVRNeedsUpdate=true;}for(var _i139=0;_i139<views.length;_i139++){var view=views[_i139];var viewport=null;if(glBaseLayer!==null){viewport=glBaseLayer.getViewport(view);}else{var glSubImage=glBinding.getViewSubImage(glProjLayer,view);state.bindXRFramebuffer(glFramebuffer);if(isMultisample&&msaartcSupported){if(glSubImage.depthStencilTexture!==undefined){msaaExt.framebufferTexture2DMultisampleEXT(36160,depthStyle,3553,glSubImage.depthStencilTexture,0,4);}msaaExt.framebufferTexture2DMultisampleEXT(36160,36064,3553,glSubImage.colorTexture,0,4);}else{if(glSubImage.depthStencilTexture!==undefined){gl.framebufferTexture2D(36160,depthStyle,3553,glSubImage.depthStencilTexture,0);}gl.framebufferTexture2D(36160,36064,3553,glSubImage.colorTexture,0);}viewport=glSubImage.viewport;}var camera=cameras[_i139];camera.matrix.fromArray(view.transform.matrix);camera.projectionMatrix.fromArray(view.projectionMatrix);camera.viewport.set(viewport.x,viewport.y,viewport.width,viewport.height);if(_i139===0){cameraVR.matrix.copy(camera.matrix);}if(cameraVRNeedsUpdate===true){cameraVR.cameras.push(camera);}}if(isMultisample&&!msaartcSupported){state.bindXRFramebuffer(glMultisampledFramebuffer);if(clearStyle!==null)gl.clear(clearStyle);}}//\nvar inputSources=session.inputSources;for(var _i140=0;_i140<controllers.length;_i140++){var controller=controllers[_i140];var inputSource=inputSources[_i140];controller.update(inputSource,frame,referenceSpace);}if(onAnimationFrameCallback)onAnimationFrameCallback(time,frame);if(isMultisample&&!msaartcSupported){var width=glProjLayer.textureWidth;var height=glProjLayer.textureHeight;state.bindFramebuffer(36008,glMultisampledFramebuffer);state.bindFramebuffer(36009,glFramebuffer);// Invalidate the depth here to avoid flush of the depth data to main memory.\ngl.invalidateFramebuffer(36008,[depthStyle]);gl.invalidateFramebuffer(36009,[depthStyle]);gl.blitFramebuffer(0,0,width,height,0,0,width,height,16384,9728);// Invalidate the MSAA buffer because it's not needed anymore.\ngl.invalidateFramebuffer(36008,[36064]);state.bindFramebuffer(36008,null);state.bindFramebuffer(36009,null);state.bindFramebuffer(36160,glMultisampledFramebuffer);}xrFrame=null;}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);_this27.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;};_this27.dispose=function(){};return _this27;}return _createClass(WebXRManager);}(EventDispatcher);function WebGLMaterials(properties){function refreshFogUniforms(uniforms,fog){uniforms.fogColor.value.copy(fog.color);if(fog.isFog){uniforms.fogNear.value=fog.near;uniforms.fogFar.value=fog.far;}else if(fog.isFogExp2){uniforms.fogDensity.value=fog.density;}}function refreshMaterialUniforms(uniforms,material,pixelRatio,height,transmissionRenderTarget){if(material.isMeshBasicMaterial){refreshUniformsCommon(uniforms,material);}else if(material.isMeshLambertMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsLambert(uniforms,material);}else if(material.isMeshToonMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsToon(uniforms,material);}else if(material.isMeshPhongMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsPhong(uniforms,material);}else if(material.isMeshStandardMaterial){refreshUniformsCommon(uniforms,material);if(material.isMeshPhysicalMaterial){refreshUniformsPhysical(uniforms,material,transmissionRenderTarget);}else{refreshUniformsStandard(uniforms,material);}}else if(material.isMeshMatcapMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsMatcap(uniforms,material);}else if(material.isMeshDepthMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDepth(uniforms,material);}else if(material.isMeshDistanceMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsDistance(uniforms,material);}else if(material.isMeshNormalMaterial){refreshUniformsCommon(uniforms,material);refreshUniformsNormal(uniforms,material);}else if(material.isLineBasicMaterial){refreshUniformsLine(uniforms,material);if(material.isLineDashedMaterial){refreshUniformsDash(uniforms,material);}}else if(material.isPointsMaterial){refreshUniformsPoints(uniforms,material,pixelRatio,height);}else if(material.isSpriteMaterial){refreshUniformsSprites(uniforms,material);}else if(material.isShadowMaterial){uniforms.color.value.copy(material.color);uniforms.opacity.value=material.opacity;}else if(material.isShaderMaterial){material.uniformsNeedUpdate=false;// #15581\n}}function refreshUniformsCommon(uniforms,material){uniforms.opacity.value=material.opacity;if(material.color){uniforms.diffuse.value.copy(material.color);}if(material.emissive){uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);}if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.specularMap){uniforms.specularMap.value=material.specularMap;}if(material.alphaTest>0){uniforms.alphaTest.value=material.alphaTest;}var envMap=properties.get(material).envMap;if(envMap){uniforms.envMap.value=envMap;uniforms.flipEnvMap.value=envMap.isCubeTexture&&envMap.isRenderTargetTexture===false?-1:1;uniforms.reflectivity.value=material.reflectivity;uniforms.ior.value=material.ior;uniforms.refractionRatio.value=material.refractionRatio;var maxMipLevel=properties.get(envMap).__maxMipLevel;if(maxMipLevel!==undefined){uniforms.maxMipLevel.value=maxMipLevel;}}if(material.lightMap){uniforms.lightMap.value=material.lightMap;uniforms.lightMapIntensity.value=material.lightMapIntensity;}if(material.aoMap){uniforms.aoMap.value=material.aoMap;uniforms.aoMapIntensity.value=material.aoMapIntensity;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. specular map\n// 3. displacementMap map\n// 4. normal map\n// 5. bump map\n// 6. roughnessMap map\n// 7. metalnessMap map\n// 8. alphaMap map\n// 9. emissiveMap map\n// 10. clearcoat map\n// 11. clearcoat normal map\n// 12. clearcoat roughnessMap map\n// 13. specular intensity map\n// 14. specular tint map\n// 15. transmission map\n// 16. thickness map\nvar uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.specularMap){uvScaleMap=material.specularMap;}else if(material.displacementMap){uvScaleMap=material.displacementMap;}else if(material.normalMap){uvScaleMap=material.normalMap;}else if(material.bumpMap){uvScaleMap=material.bumpMap;}else if(material.roughnessMap){uvScaleMap=material.roughnessMap;}else if(material.metalnessMap){uvScaleMap=material.metalnessMap;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}else if(material.emissiveMap){uvScaleMap=material.emissiveMap;}else if(material.clearcoatMap){uvScaleMap=material.clearcoatMap;}else if(material.clearcoatNormalMap){uvScaleMap=material.clearcoatNormalMap;}else if(material.clearcoatRoughnessMap){uvScaleMap=material.clearcoatRoughnessMap;}else if(material.specularIntensityMap){uvScaleMap=material.specularIntensityMap;}else if(material.specularTintMap){uvScaleMap=material.specularTintMap;}else if(material.transmissionMap){uvScaleMap=material.transmissionMap;}else if(material.thicknessMap){uvScaleMap=material.thicknessMap;}if(uvScaleMap!==undefined){// backwards compatibility\nif(uvScaleMap.isWebGLRenderTarget){uvScaleMap=uvScaleMap.texture;}if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}// uv repeat and offset setting priorities for uv2\n// 1. ao map\n// 2. light map\nvar uv2ScaleMap;if(material.aoMap){uv2ScaleMap=material.aoMap;}else if(material.lightMap){uv2ScaleMap=material.lightMap;}if(uv2ScaleMap!==undefined){// backwards compatibility\nif(uv2ScaleMap.isWebGLRenderTarget){uv2ScaleMap=uv2ScaleMap.texture;}if(uv2ScaleMap.matrixAutoUpdate===true){uv2ScaleMap.updateMatrix();}uniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);}}function refreshUniformsLine(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;}function refreshUniformsDash(uniforms,material){uniforms.dashSize.value=material.dashSize;uniforms.totalSize.value=material.dashSize+material.gapSize;uniforms.scale.value=material.scale;}function refreshUniformsPoints(uniforms,material,pixelRatio,height){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.size.value=material.size*pixelRatio;uniforms.scale.value=height*0.5;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.alphaTest>0){uniforms.alphaTest.value=material.alphaTest;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nvar uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsSprites(uniforms,material){uniforms.diffuse.value.copy(material.color);uniforms.opacity.value=material.opacity;uniforms.rotation.value=material.rotation;if(material.map){uniforms.map.value=material.map;}if(material.alphaMap){uniforms.alphaMap.value=material.alphaMap;}if(material.alphaTest>0){uniforms.alphaTest.value=material.alphaTest;}// uv repeat and offset setting priorities\n// 1. color map\n// 2. alpha map\nvar uvScaleMap;if(material.map){uvScaleMap=material.map;}else if(material.alphaMap){uvScaleMap=material.alphaMap;}if(uvScaleMap!==undefined){if(uvScaleMap.matrixAutoUpdate===true){uvScaleMap.updateMatrix();}uniforms.uvTransform.value.copy(uvScaleMap.matrix);}}function refreshUniformsLambert(uniforms,material){if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}}function refreshUniformsPhong(uniforms,material){uniforms.specular.value.copy(material.specular);uniforms.shininess.value=Math.max(material.shininess,1e-4);// to prevent pow( 0.0, 0.0 )\nif(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsToon(uniforms,material){if(material.gradientMap){uniforms.gradientMap.value=material.gradientMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsStandard(uniforms,material){uniforms.roughness.value=material.roughness;uniforms.metalness.value=material.metalness;if(material.roughnessMap){uniforms.roughnessMap.value=material.roughnessMap;}if(material.metalnessMap){uniforms.metalnessMap.value=material.metalnessMap;}if(material.emissiveMap){uniforms.emissiveMap.value=material.emissiveMap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}var envMap=properties.get(material).envMap;if(envMap){//uniforms.envMap.value = material.envMap; // part of uniforms common\nuniforms.envMapIntensity.value=material.envMapIntensity;}}function refreshUniformsPhysical(uniforms,material,transmissionRenderTarget){refreshUniformsStandard(uniforms,material);uniforms.ior.value=material.ior;// also part of uniforms common\nif(material.sheen>0){uniforms.sheenTint.value.copy(material.sheenTint).multiplyScalar(material.sheen);uniforms.sheenRoughness.value=material.sheenRoughness;}if(material.clearcoat>0){uniforms.clearcoat.value=material.clearcoat;uniforms.clearcoatRoughness.value=material.clearcoatRoughness;if(material.clearcoatMap){uniforms.clearcoatMap.value=material.clearcoatMap;}if(material.clearcoatRoughnessMap){uniforms.clearcoatRoughnessMap.value=material.clearcoatRoughnessMap;}if(material.clearcoatNormalMap){uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);uniforms.clearcoatNormalMap.value=material.clearcoatNormalMap;if(material.side===BackSide){uniforms.clearcoatNormalScale.value.negate();}}}if(material.transmission>0){uniforms.transmission.value=material.transmission;uniforms.transmissionSamplerMap.value=transmissionRenderTarget.texture;uniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width,transmissionRenderTarget.height);if(material.transmissionMap){uniforms.transmissionMap.value=material.transmissionMap;}uniforms.thickness.value=material.thickness;if(material.thicknessMap){uniforms.thicknessMap.value=material.thicknessMap;}uniforms.attenuationDistance.value=material.attenuationDistance;uniforms.attenuationTint.value.copy(material.attenuationTint);}uniforms.specularIntensity.value=material.specularIntensity;uniforms.specularTint.value.copy(material.specularTint);if(material.specularIntensityMap){uniforms.specularIntensityMap.value=material.specularIntensityMap;}if(material.specularTintMap){uniforms.specularTintMap.value=material.specularTintMap;}}function refreshUniformsMatcap(uniforms,material){if(material.matcap){uniforms.matcap.value=material.matcap;}if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDepth(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}function refreshUniformsDistance(uniforms,material){if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}uniforms.referencePosition.value.copy(material.referencePosition);uniforms.nearDistance.value=material.nearDistance;uniforms.farDistance.value=material.farDistance;}function refreshUniformsNormal(uniforms,material){if(material.bumpMap){uniforms.bumpMap.value=material.bumpMap;uniforms.bumpScale.value=material.bumpScale;if(material.side===BackSide)uniforms.bumpScale.value*=-1;}if(material.normalMap){uniforms.normalMap.value=material.normalMap;uniforms.normalScale.value.copy(material.normalScale);if(material.side===BackSide)uniforms.normalScale.value.negate();}if(material.displacementMap){uniforms.displacementMap.value=material.displacementMap;uniforms.displacementScale.value=material.displacementScale;uniforms.displacementBias.value=material.displacementBias;}}return{refreshFogUniforms:refreshFogUniforms,refreshMaterialUniforms:refreshMaterialUniforms};}function createCanvasElement(){var canvas=createElementNS('canvas');canvas.style.display='block';return canvas;}function WebGLRenderer(){var parameters=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var _canvas=parameters.canvas!==undefined?parameters.canvas:createCanvasElement(),_context=parameters.context!==undefined?parameters.context:null,_alpha=parameters.alpha!==undefined?parameters.alpha:false,_depth=parameters.depth!==undefined?parameters.depth:true,_stencil=parameters.stencil!==undefined?parameters.stencil:true,_antialias=parameters.antialias!==undefined?parameters.antialias:false,_premultipliedAlpha=parameters.premultipliedAlpha!==undefined?parameters.premultipliedAlpha:true,_preserveDrawingBuffer=parameters.preserveDrawingBuffer!==undefined?parameters.preserveDrawingBuffer:false,_powerPreference=parameters.powerPreference!==undefined?parameters.powerPreference:'default',_failIfMajorPerformanceCaveat=parameters.failIfMajorPerformanceCaveat!==undefined?parameters.failIfMajorPerformanceCaveat:false;var currentRenderList=null;var currentRenderState=null;// render() can be called from within a callback triggered by another render.\n// We track this so that the nested render call gets its list and state isolated from the parent render call.\nvar renderListStack=[];var renderStateStack=[];// public properties\nthis.domElement=_canvas;// Debug configuration container\nthis.debug={/**\r\n\t\t * Enables error checking and reporting when shader programs are being compiled\r\n\t\t * @type {boolean}\r\n\t\t */checkShaderErrors:true};// clearing\nthis.autoClear=true;this.autoClearColor=true;this.autoClearDepth=true;this.autoClearStencil=true;// scene graph\nthis.sortObjects=true;// user-defined clipping\nthis.clippingPlanes=[];this.localClippingEnabled=false;// physically based shading\nthis.gammaFactor=2.0;// for backwards compatibility\nthis.outputEncoding=LinearEncoding;// physical lights\nthis.physicallyCorrectLights=false;// tone mapping\nthis.toneMapping=NoToneMapping;this.toneMappingExposure=1.0;// internal properties\nvar _this=this;var _isContextLost=false;// internal state cache\nvar _currentActiveCubeFace=0;var _currentActiveMipmapLevel=0;var _currentRenderTarget=null;var _currentMaterialId=-1;var _currentCamera=null;var _currentViewport=new Vector4();var _currentScissor=new Vector4();var _currentScissorTest=null;//\nvar _width=_canvas.width;var _height=_canvas.height;var _pixelRatio=1;var _opaqueSort=null;var _transparentSort=null;var _viewport=new Vector4(0,0,_width,_height);var _scissor=new Vector4(0,0,_width,_height);var _scissorTest=false;//\nvar _currentDrawBuffers=[];// frustum\nvar _frustum=new Frustum();// clipping\nvar _clippingEnabled=false;var _localClippingEnabled=false;// transmission\nvar _transmissionRenderTarget=null;// camera matrices cache\nvar _projScreenMatrix=new Matrix4();var _vector3=new Vector3();var _emptyScene={background:null,fog:null,environment:null,overrideMaterial:null,isScene:true};function getTargetPixelRatio(){return _currentRenderTarget===null?_pixelRatio:1;}// initialize\nvar _gl=_context;function getContext(contextNames,contextAttributes){for(var _i141=0;_i141<contextNames.length;_i141++){var contextName=contextNames[_i141];var context=_canvas.getContext(contextName,contextAttributes);if(context!==null)return context;}return null;}try{var contextAttributes={alpha:_alpha,depth:_depth,stencil:_stencil,antialias:_antialias,premultipliedAlpha:_premultipliedAlpha,preserveDrawingBuffer:_preserveDrawingBuffer,powerPreference:_powerPreference,failIfMajorPerformanceCaveat:_failIfMajorPerformanceCaveat};// event listeners must be registered before WebGL context is created, see #12753\n_canvas.addEventListener('webglcontextlost',onContextLost,false);_canvas.addEventListener('webglcontextrestored',onContextRestore,false);if(_gl===null){var contextNames=['webgl2','webgl','experimental-webgl'];if(_this.isWebGL1Renderer===true){contextNames.shift();}_gl=getContext(contextNames,contextAttributes);if(_gl===null){if(getContext(contextNames)){throw new Error('Error creating WebGL context with your selected attributes.');}else{throw new Error('Error creating WebGL context.');}}}// Some experimental-webgl implementations do not have getShaderPrecisionFormat\nif(_gl.getShaderPrecisionFormat===undefined){_gl.getShaderPrecisionFormat=function(){return{'rangeMin':1,'rangeMax':1,'precision':1};};}}catch(error){console.error('THREE.WebGLRenderer: '+error.message);throw error;}var extensions,capabilities,state,info;var properties,textures,cubemaps,cubeuvmaps,attributes,geometries,objects;var programCache,materials,renderLists,renderStates,clipping,shadowMap;var background,morphtargets,bufferRenderer,indexedBufferRenderer;var utils,bindingStates;function initGLContext(){extensions=new WebGLExtensions(_gl);capabilities=new WebGLCapabilities(_gl,extensions,parameters);extensions.init(capabilities);utils=new WebGLUtils(_gl,extensions,capabilities);state=new WebGLState(_gl,extensions,capabilities);_currentDrawBuffers[0]=1029;info=new WebGLInfo(_gl);properties=new WebGLProperties();textures=new WebGLTextures(_gl,extensions,state,properties,capabilities,utils,info);cubemaps=new WebGLCubeMaps(_this);cubeuvmaps=new WebGLCubeUVMaps(_this);attributes=new WebGLAttributes(_gl,capabilities);bindingStates=new WebGLBindingStates(_gl,extensions,attributes,capabilities);geometries=new WebGLGeometries(_gl,attributes,info,bindingStates);objects=new WebGLObjects(_gl,geometries,attributes,info);morphtargets=new WebGLMorphtargets(_gl,capabilities,textures);clipping=new WebGLClipping(properties);programCache=new WebGLPrograms(_this,cubemaps,cubeuvmaps,extensions,capabilities,bindingStates,clipping);materials=new WebGLMaterials(properties);renderLists=new WebGLRenderLists(properties);renderStates=new WebGLRenderStates(extensions,capabilities);background=new WebGLBackground(_this,cubemaps,state,objects,_premultipliedAlpha);shadowMap=new WebGLShadowMap(_this,objects,capabilities);bufferRenderer=new WebGLBufferRenderer(_gl,extensions,info,capabilities);indexedBufferRenderer=new WebGLIndexedBufferRenderer(_gl,extensions,info,capabilities);info.programs=programCache.programs;_this.capabilities=capabilities;_this.extensions=extensions;_this.properties=properties;_this.renderLists=renderLists;_this.shadowMap=shadowMap;_this.state=state;_this.info=info;}initGLContext();// xr\nvar xr=new WebXRManager(_this,_gl);this.xr=xr;// API\nthis.getContext=function(){return _gl;};this.getContextAttributes=function(){return _gl.getContextAttributes();};this.forceContextLoss=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.loseContext();};this.forceContextRestore=function(){var extension=extensions.get('WEBGL_lose_context');if(extension)extension.restoreContext();};this.getPixelRatio=function(){return _pixelRatio;};this.setPixelRatio=function(value){if(value===undefined)return;_pixelRatio=value;this.setSize(_width,_height,false);};this.getSize=function(target){return target.set(_width,_height);};this.setSize=function(width,height,updateStyle){if(xr.isPresenting){console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');return;}_width=width;_height=height;_canvas.width=Math.floor(width*_pixelRatio);_canvas.height=Math.floor(height*_pixelRatio);if(updateStyle!==false){_canvas.style.width=width+'px';_canvas.style.height=height+'px';}this.setViewport(0,0,width,height);};this.getDrawingBufferSize=function(target){return target.set(_width*_pixelRatio,_height*_pixelRatio).floor();};this.setDrawingBufferSize=function(width,height,pixelRatio){_width=width;_height=height;_pixelRatio=pixelRatio;_canvas.width=Math.floor(width*pixelRatio);_canvas.height=Math.floor(height*pixelRatio);this.setViewport(0,0,width,height);};this.getCurrentViewport=function(target){return target.copy(_currentViewport);};this.getViewport=function(target){return target.copy(_viewport);};this.setViewport=function(x,y,width,height){if(x.isVector4){_viewport.set(x.x,x.y,x.z,x.w);}else{_viewport.set(x,y,width,height);}state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());};this.getScissor=function(target){return target.copy(_scissor);};this.setScissor=function(x,y,width,height){if(x.isVector4){_scissor.set(x.x,x.y,x.z,x.w);}else{_scissor.set(x,y,width,height);}state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());};this.getScissorTest=function(){return _scissorTest;};this.setScissorTest=function(_boolean){state.setScissorTest(_scissorTest=_boolean);};this.setOpaqueSort=function(method){_opaqueSort=method;};this.setTransparentSort=function(method){_transparentSort=method;};// Clearing\nthis.getClearColor=function(target){return target.copy(background.getClearColor());};this.setClearColor=function(){background.setClearColor.apply(background,arguments);};this.getClearAlpha=function(){return background.getClearAlpha();};this.setClearAlpha=function(){background.setClearAlpha.apply(background,arguments);};this.clear=function(color,depth,stencil){var bits=0;if(color===undefined||color)bits|=16384;if(depth===undefined||depth)bits|=256;if(stencil===undefined||stencil)bits|=1024;_gl.clear(bits);};this.clearColor=function(){this.clear(true,false,false);};this.clearDepth=function(){this.clear(false,true,false);};this.clearStencil=function(){this.clear(false,false,true);};//\nthis.dispose=function(){_canvas.removeEventListener('webglcontextlost',onContextLost,false);_canvas.removeEventListener('webglcontextrestored',onContextRestore,false);renderLists.dispose();renderStates.dispose();properties.dispose();cubemaps.dispose();cubeuvmaps.dispose();objects.dispose();bindingStates.dispose();xr.dispose();xr.removeEventListener('sessionstart',onXRSessionStart);xr.removeEventListener('sessionend',onXRSessionEnd);if(_transmissionRenderTarget){_transmissionRenderTarget.dispose();_transmissionRenderTarget=null;}animation.stop();};// Events\nfunction onContextLost(event){event.preventDefault();console.log('THREE.WebGLRenderer: Context Lost.');_isContextLost=true;}function/* event */onContextRestore(){console.log('THREE.WebGLRenderer: Context Restored.');_isContextLost=false;var infoAutoReset=info.autoReset;var shadowMapEnabled=shadowMap.enabled;var shadowMapAutoUpdate=shadowMap.autoUpdate;var shadowMapNeedsUpdate=shadowMap.needsUpdate;var shadowMapType=shadowMap.type;initGLContext();info.autoReset=infoAutoReset;shadowMap.enabled=shadowMapEnabled;shadowMap.autoUpdate=shadowMapAutoUpdate;shadowMap.needsUpdate=shadowMapNeedsUpdate;shadowMap.type=shadowMapType;}function onMaterialDispose(event){var material=event.target;material.removeEventListener('dispose',onMaterialDispose);deallocateMaterial(material);}// Buffer deallocation\nfunction deallocateMaterial(material){releaseMaterialProgramReferences(material);properties.remove(material);}function releaseMaterialProgramReferences(material){var programs=properties.get(material).programs;if(programs!==undefined){programs.forEach(function(program){programCache.releaseProgram(program);});}}// Buffer rendering\nfunction renderObjectImmediate(object,program){object.render(function(object){_this.renderBufferImmediate(object,program);});}this.renderBufferImmediate=function(object,program){bindingStates.initAttributes();var buffers=properties.get(object);if(object.hasPositions&&!buffers.position)buffers.position=_gl.createBuffer();if(object.hasNormals&&!buffers.normal)buffers.normal=_gl.createBuffer();if(object.hasUvs&&!buffers.uv)buffers.uv=_gl.createBuffer();if(object.hasColors&&!buffers.color)buffers.color=_gl.createBuffer();var programAttributes=program.getAttributes();if(object.hasPositions){_gl.bindBuffer(34962,buffers.position);_gl.bufferData(34962,object.positionArray,35048);bindingStates.enableAttribute(programAttributes.position.location);_gl.vertexAttribPointer(programAttributes.position.location,3,5126,false,0,0);}if(object.hasNormals){_gl.bindBuffer(34962,buffers.normal);_gl.bufferData(34962,object.normalArray,35048);bindingStates.enableAttribute(programAttributes.normal.location);_gl.vertexAttribPointer(programAttributes.normal.location,3,5126,false,0,0);}if(object.hasUvs){_gl.bindBuffer(34962,buffers.uv);_gl.bufferData(34962,object.uvArray,35048);bindingStates.enableAttribute(programAttributes.uv.location);_gl.vertexAttribPointer(programAttributes.uv.location,2,5126,false,0,0);}if(object.hasColors){_gl.bindBuffer(34962,buffers.color);_gl.bufferData(34962,object.colorArray,35048);bindingStates.enableAttribute(programAttributes.color.location);_gl.vertexAttribPointer(programAttributes.color.location,3,5126,false,0,0);}bindingStates.disableUnusedAttributes();_gl.drawArrays(4,0,object.count);object.count=0;};this.renderBufferDirect=function(camera,scene,geometry,material,object,group){if(scene===null)scene=_emptyScene;// renderBufferDirect second parameter used to be fog (could be null)\nvar frontFaceCW=object.isMesh&&object.matrixWorld.determinant()<0;var program=setProgram(camera,scene,material,object);state.setMaterial(material,frontFaceCW);//\nvar index=geometry.index;var position=geometry.attributes.position;//\nif(index===null){if(position===undefined||position.count===0)return;}else if(index.count===0){return;}//\nvar rangeFactor=1;if(material.wireframe===true){index=geometries.getWireframeAttribute(geometry);rangeFactor=2;}if(geometry.morphAttributes.position!==undefined||geometry.morphAttributes.normal!==undefined){morphtargets.update(object,geometry,material,program);}bindingStates.setup(object,material,program,geometry,index);var attribute;var renderer=bufferRenderer;if(index!==null){attribute=attributes.get(index);renderer=indexedBufferRenderer;renderer.setIndex(attribute);}//\nvar dataCount=index!==null?index.count:position.count;var rangeStart=geometry.drawRange.start*rangeFactor;var rangeCount=geometry.drawRange.count*rangeFactor;var groupStart=group!==null?group.start*rangeFactor:0;var groupCount=group!==null?group.count*rangeFactor:Infinity;var drawStart=Math.max(rangeStart,groupStart);var drawEnd=Math.min(dataCount,rangeStart+rangeCount,groupStart+groupCount)-1;var drawCount=Math.max(0,drawEnd-drawStart+1);if(drawCount===0)return;//\nif(object.isMesh){if(material.wireframe===true){state.setLineWidth(material.wireframeLinewidth*getTargetPixelRatio());renderer.setMode(1);}else{renderer.setMode(4);}}else if(object.isLine){var lineWidth=material.linewidth;if(lineWidth===undefined)lineWidth=1;// Not using Line*Material\nstate.setLineWidth(lineWidth*getTargetPixelRatio());if(object.isLineSegments){renderer.setMode(1);}else if(object.isLineLoop){renderer.setMode(2);}else{renderer.setMode(3);}}else if(object.isPoints){renderer.setMode(0);}else if(object.isSprite){renderer.setMode(4);}if(object.isInstancedMesh){renderer.renderInstances(drawStart,drawCount,object.count);}else if(geometry.isInstancedBufferGeometry){var instanceCount=Math.min(geometry.instanceCount,geometry._maxInstanceCount);renderer.renderInstances(drawStart,drawCount,instanceCount);}else{renderer.render(drawStart,drawCount);}};// Compile\nthis.compile=function(scene,camera){currentRenderState=renderStates.get(scene);currentRenderState.init();renderStateStack.push(currentRenderState);scene.traverseVisible(function(object){if(object.isLight&&object.layers.test(camera.layers)){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}});currentRenderState.setupLights(_this.physicallyCorrectLights);scene.traverse(function(object){var material=object.material;if(material){if(Array.isArray(material)){for(var _i142=0;_i142<material.length;_i142++){var material2=material[_i142];getProgram(material2,scene,object);}}else{getProgram(material,scene,object);}}});renderStateStack.pop();currentRenderState=null;};// Animation Loop\nvar onAnimationFrameCallback=null;function onAnimationFrame(time){if(onAnimationFrameCallback)onAnimationFrameCallback(time);}function onXRSessionStart(){animation.stop();}function onXRSessionEnd(){animation.start();}var animation=new WebGLAnimation();animation.setAnimationLoop(onAnimationFrame);if(typeof window!=='undefined')animation.setContext(window);this.setAnimationLoop=function(callback){onAnimationFrameCallback=callback;xr.setAnimationLoop(callback);callback===null?animation.stop():animation.start();};xr.addEventListener('sessionstart',onXRSessionStart);xr.addEventListener('sessionend',onXRSessionEnd);// Rendering\nthis.render=function(scene,camera){if(camera!==undefined&&camera.isCamera!==true){console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');return;}if(_isContextLost===true)return;// update scene graph\nif(scene.autoUpdate===true)scene.updateMatrixWorld();// update camera matrices and frustum\nif(camera.parent===null)camera.updateMatrixWorld();if(xr.enabled===true&&xr.isPresenting===true){if(xr.cameraAutoUpdate===true)xr.updateCamera(camera);camera=xr.getCamera();// use XR camera for rendering\n}//\nif(scene.isScene===true)scene.onBeforeRender(_this,scene,camera,_currentRenderTarget);currentRenderState=renderStates.get(scene,renderStateStack.length);currentRenderState.init();renderStateStack.push(currentRenderState);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);_frustum.setFromProjectionMatrix(_projScreenMatrix);_localClippingEnabled=this.localClippingEnabled;_clippingEnabled=clipping.init(this.clippingPlanes,_localClippingEnabled,camera);currentRenderList=renderLists.get(scene,renderListStack.length);currentRenderList.init();renderListStack.push(currentRenderList);projectObject(scene,camera,0,_this.sortObjects);currentRenderList.finish();if(_this.sortObjects===true){currentRenderList.sort(_opaqueSort,_transparentSort);}//\nif(_clippingEnabled===true)clipping.beginShadows();var shadowsArray=currentRenderState.state.shadowsArray;shadowMap.render(shadowsArray,scene,camera);if(_clippingEnabled===true)clipping.endShadows();//\nif(this.info.autoReset===true)this.info.reset();//\nbackground.render(currentRenderList,scene);// render scene\ncurrentRenderState.setupLights(_this.physicallyCorrectLights);if(camera.isArrayCamera){var cameras=camera.cameras;for(var _i143=0,l=cameras.length;_i143<l;_i143++){var camera2=cameras[_i143];renderScene(currentRenderList,scene,camera2,camera2.viewport);}}else{renderScene(currentRenderList,scene,camera);}//\nif(_currentRenderTarget!==null){// resolve multisample renderbuffers to a single-sample texture if necessary\ntextures.updateMultisampleRenderTarget(_currentRenderTarget);// Generate mipmap if we're using any kind of mipmap filtering\ntextures.updateRenderTargetMipmap(_currentRenderTarget);}//\nif(scene.isScene===true)scene.onAfterRender(_this,scene,camera);// Ensure depth buffer writing is enabled so it can be cleared on next render\nstate.buffers.depth.setTest(true);state.buffers.depth.setMask(true);state.buffers.color.setMask(true);state.setPolygonOffset(false);// _gl.finish();\nbindingStates.resetDefaultState();_currentMaterialId=-1;_currentCamera=null;renderStateStack.pop();if(renderStateStack.length>0){currentRenderState=renderStateStack[renderStateStack.length-1];}else{currentRenderState=null;}renderListStack.pop();if(renderListStack.length>0){currentRenderList=renderListStack[renderListStack.length-1];}else{currentRenderList=null;}};function projectObject(object,camera,groupOrder,sortObjects){if(object.visible===false)return;var visible=object.layers.test(camera.layers);if(visible){if(object.isGroup){groupOrder=object.renderOrder;}else if(object.isLOD){if(object.autoUpdate===true)object.update(camera);}else if(object.isLight){currentRenderState.pushLight(object);if(object.castShadow){currentRenderState.pushShadow(object);}}else if(object.isSprite){if(!object.frustumCulled||_frustum.intersectsSprite(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var geometry=objects.update(object);var material=object.material;if(material.visible){currentRenderList.push(object,geometry,material,groupOrder,_vector3.z,null);}}}else if(object.isImmediateRenderObject){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}currentRenderList.push(object,null,object.material,groupOrder,_vector3.z,null);}else if(object.isMesh||object.isLine||object.isPoints){if(object.isSkinnedMesh){// update skeleton only once in a frame\nif(object.skeleton.frame!==info.render.frame){object.skeleton.update();object.skeleton.frame=info.render.frame;}}if(!object.frustumCulled||_frustum.intersectsObject(object)){if(sortObjects){_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);}var _geometry2=objects.update(object);var _material=object.material;if(Array.isArray(_material)){var groups=_geometry2.groups;for(var _i144=0,l=groups.length;_i144<l;_i144++){var group=groups[_i144];var groupMaterial=_material[group.materialIndex];if(groupMaterial&&groupMaterial.visible){currentRenderList.push(object,_geometry2,groupMaterial,groupOrder,_vector3.z,group);}}}else if(_material.visible){currentRenderList.push(object,_geometry2,_material,groupOrder,_vector3.z,null);}}}}var children=object.children;for(var _i145=0,_l5=children.length;_i145<_l5;_i145++){projectObject(children[_i145],camera,groupOrder,sortObjects);}}function renderScene(currentRenderList,scene,camera,viewport){var opaqueObjects=currentRenderList.opaque;var transmissiveObjects=currentRenderList.transmissive;var transparentObjects=currentRenderList.transparent;currentRenderState.setupLightsView(camera);if(transmissiveObjects.length>0)renderTransmissionPass(opaqueObjects,scene,camera);if(viewport)state.viewport(_currentViewport.copy(viewport));if(opaqueObjects.length>0)renderObjects(opaqueObjects,scene,camera);if(transmissiveObjects.length>0)renderObjects(transmissiveObjects,scene,camera);if(transparentObjects.length>0)renderObjects(transparentObjects,scene,camera);}function renderTransmissionPass(opaqueObjects,scene,camera){if(_transmissionRenderTarget===null){var needsAntialias=_antialias===true&&capabilities.isWebGL2===true;var renderTargetType=needsAntialias?WebGLMultisampleRenderTarget:WebGLRenderTarget;_transmissionRenderTarget=new renderTargetType(1024,1024,{generateMipmaps:true,type:utils.convert(HalfFloatType)!==null?HalfFloatType:UnsignedByteType,minFilter:LinearMipmapLinearFilter,magFilter:NearestFilter,wrapS:ClampToEdgeWrapping,wrapT:ClampToEdgeWrapping});}var currentRenderTarget=_this.getRenderTarget();_this.setRenderTarget(_transmissionRenderTarget);_this.clear();// Turn off the features which can affect the frag color for opaque objects pass.\n// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\nvar currentToneMapping=_this.toneMapping;_this.toneMapping=NoToneMapping;renderObjects(opaqueObjects,scene,camera);_this.toneMapping=currentToneMapping;textures.updateMultisampleRenderTarget(_transmissionRenderTarget);textures.updateRenderTargetMipmap(_transmissionRenderTarget);_this.setRenderTarget(currentRenderTarget);}function renderObjects(renderList,scene,camera){var overrideMaterial=scene.isScene===true?scene.overrideMaterial:null;for(var _i146=0,l=renderList.length;_i146<l;_i146++){var renderItem=renderList[_i146];var object=renderItem.object;var geometry=renderItem.geometry;var material=overrideMaterial===null?renderItem.material:overrideMaterial;var group=renderItem.group;if(object.layers.test(camera.layers)){renderObject(object,scene,camera,geometry,material,group);}}}function renderObject(object,scene,camera,geometry,material,group){object.onBeforeRender(_this,scene,camera,geometry,material,group);object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse,object.matrixWorld);object.normalMatrix.getNormalMatrix(object.modelViewMatrix);material.onBeforeRender(_this,scene,camera,geometry,object,group);if(object.isImmediateRenderObject){var program=setProgram(camera,scene,material,object);state.setMaterial(material);bindingStates.reset();renderObjectImmediate(object,program);}else{if(material.transparent===true&&material.side===DoubleSide){material.side=BackSide;material.needsUpdate=true;_this.renderBufferDirect(camera,scene,geometry,material,object,group);material.side=FrontSide;material.needsUpdate=true;_this.renderBufferDirect(camera,scene,geometry,material,object,group);material.side=DoubleSide;}else{_this.renderBufferDirect(camera,scene,geometry,material,object,group);}}object.onAfterRender(_this,scene,camera,geometry,material,group);}function getProgram(material,scene,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\nvar materialProperties=properties.get(material);var lights=currentRenderState.state.lights;var shadowsArray=currentRenderState.state.shadowsArray;var lightsStateVersion=lights.state.version;var parameters=programCache.getParameters(material,lights.state,shadowsArray,scene,object);var programCacheKey=programCache.getProgramCacheKey(parameters);var programs=materialProperties.programs;// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\nmaterialProperties.environment=material.isMeshStandardMaterial?scene.environment:null;materialProperties.fog=scene.fog;materialProperties.envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||materialProperties.environment);if(programs===undefined){// new material\nmaterial.addEventListener('dispose',onMaterialDispose);programs=new Map();materialProperties.programs=programs;}var program=programs.get(programCacheKey);if(program!==undefined){// early out if program and light state is identical\nif(materialProperties.currentProgram===program&&materialProperties.lightsStateVersion===lightsStateVersion){updateCommonMaterialProperties(material,parameters);return program;}}else{parameters.uniforms=programCache.getUniforms(material);material.onBuild(parameters,_this);material.onBeforeCompile(parameters,_this);program=programCache.acquireProgram(parameters,programCacheKey);programs.set(programCacheKey,program);materialProperties.uniforms=parameters.uniforms;}var uniforms=materialProperties.uniforms;if(!material.isShaderMaterial&&!material.isRawShaderMaterial||material.clipping===true){uniforms.clippingPlanes=clipping.uniform;}updateCommonMaterialProperties(material,parameters);// store the light setup it was created for\nmaterialProperties.needsLights=materialNeedsLights(material);materialProperties.lightsStateVersion=lightsStateVersion;if(materialProperties.needsLights){// wire up the material to this renderer's lighting state\nuniforms.ambientLightColor.value=lights.state.ambient;uniforms.lightProbe.value=lights.state.probe;uniforms.directionalLights.value=lights.state.directional;uniforms.directionalLightShadows.value=lights.state.directionalShadow;uniforms.spotLights.value=lights.state.spot;uniforms.spotLightShadows.value=lights.state.spotShadow;uniforms.rectAreaLights.value=lights.state.rectArea;uniforms.ltc_1.value=lights.state.rectAreaLTC1;uniforms.ltc_2.value=lights.state.rectAreaLTC2;uniforms.pointLights.value=lights.state.point;uniforms.pointLightShadows.value=lights.state.pointShadow;uniforms.hemisphereLights.value=lights.state.hemi;uniforms.directionalShadowMap.value=lights.state.directionalShadowMap;uniforms.directionalShadowMatrix.value=lights.state.directionalShadowMatrix;uniforms.spotShadowMap.value=lights.state.spotShadowMap;uniforms.spotShadowMatrix.value=lights.state.spotShadowMatrix;uniforms.pointShadowMap.value=lights.state.pointShadowMap;uniforms.pointShadowMatrix.value=lights.state.pointShadowMatrix;// TODO (abelnation): add area lights shadow info to uniforms\n}var progUniforms=program.getUniforms();var uniformsList=WebGLUniforms.seqWithValue(progUniforms.seq,uniforms);materialProperties.currentProgram=program;materialProperties.uniformsList=uniformsList;return program;}function updateCommonMaterialProperties(material,parameters){var materialProperties=properties.get(material);materialProperties.outputEncoding=parameters.outputEncoding;materialProperties.instancing=parameters.instancing;materialProperties.skinning=parameters.skinning;materialProperties.morphTargets=parameters.morphTargets;materialProperties.morphNormals=parameters.morphNormals;materialProperties.morphTargetsCount=parameters.morphTargetsCount;materialProperties.numClippingPlanes=parameters.numClippingPlanes;materialProperties.numIntersection=parameters.numClipIntersection;materialProperties.vertexAlphas=parameters.vertexAlphas;materialProperties.vertexTangents=parameters.vertexTangents;}function setProgram(camera,scene,material,object){if(scene.isScene!==true)scene=_emptyScene;// scene could be a Mesh, Line, Points, ...\ntextures.resetTextureUnits();var fog=scene.fog;var environment=material.isMeshStandardMaterial?scene.environment:null;var encoding=_currentRenderTarget===null?_this.outputEncoding:_currentRenderTarget.texture.encoding;var envMap=(material.isMeshStandardMaterial?cubeuvmaps:cubemaps).get(material.envMap||environment);var vertexAlphas=material.vertexColors===true&&!!object.geometry&&!!object.geometry.attributes.color&&object.geometry.attributes.color.itemSize===4;var vertexTangents=!!material.normalMap&&!!object.geometry&&!!object.geometry.attributes.tangent;var morphTargets=!!object.geometry&&!!object.geometry.morphAttributes.position;var morphNormals=!!object.geometry&&!!object.geometry.morphAttributes.normal;var morphTargetsCount=!!object.geometry&&!!object.geometry.morphAttributes.position?object.geometry.morphAttributes.position.length:0;var materialProperties=properties.get(material);var lights=currentRenderState.state.lights;if(_clippingEnabled===true){if(_localClippingEnabled===true||camera!==_currentCamera){var useCache=camera===_currentCamera&&material.id===_currentMaterialId;// we might want to call this function with some ClippingGroup\n// object instead of the material, once it becomes feasible\n// (#8465, #8379)\nclipping.setState(material,camera,useCache);}}//\nvar needsProgramChange=false;if(material.version===materialProperties.__version){if(materialProperties.needsLights&&materialProperties.lightsStateVersion!==lights.state.version){needsProgramChange=true;}else if(materialProperties.outputEncoding!==encoding){needsProgramChange=true;}else if(object.isInstancedMesh&&materialProperties.instancing===false){needsProgramChange=true;}else if(!object.isInstancedMesh&&materialProperties.instancing===true){needsProgramChange=true;}else if(object.isSkinnedMesh&&materialProperties.skinning===false){needsProgramChange=true;}else if(!object.isSkinnedMesh&&materialProperties.skinning===true){needsProgramChange=true;}else if(materialProperties.envMap!==envMap){needsProgramChange=true;}else if(material.fog&&materialProperties.fog!==fog){needsProgramChange=true;}else if(materialProperties.numClippingPlanes!==undefined&&(materialProperties.numClippingPlanes!==clipping.numPlanes||materialProperties.numIntersection!==clipping.numIntersection)){needsProgramChange=true;}else if(materialProperties.vertexAlphas!==vertexAlphas){needsProgramChange=true;}else if(materialProperties.vertexTangents!==vertexTangents){needsProgramChange=true;}else if(materialProperties.morphTargets!==morphTargets){needsProgramChange=true;}else if(materialProperties.morphNormals!==morphNormals){needsProgramChange=true;}else if(capabilities.isWebGL2===true&&materialProperties.morphTargetsCount!==morphTargetsCount){needsProgramChange=true;}}else{needsProgramChange=true;materialProperties.__version=material.version;}//\nvar program=materialProperties.currentProgram;if(needsProgramChange===true){program=getProgram(material,scene,object);}var refreshProgram=false;var refreshMaterial=false;var refreshLights=false;var p_uniforms=program.getUniforms(),m_uniforms=materialProperties.uniforms;if(state.useProgram(program.program)){refreshProgram=true;refreshMaterial=true;refreshLights=true;}if(material.id!==_currentMaterialId){_currentMaterialId=material.id;refreshMaterial=true;}if(refreshProgram||_currentCamera!==camera){p_uniforms.setValue(_gl,'projectionMatrix',camera.projectionMatrix);if(capabilities.logarithmicDepthBuffer){p_uniforms.setValue(_gl,'logDepthBufFC',2.0/(Math.log(camera.far+1.0)/Math.LN2));}if(_currentCamera!==camera){_currentCamera=camera;// lighting uniforms depend on the camera so enforce an update\n// now, in case this material supports lights - or later, when\n// the next material that does gets activated:\nrefreshMaterial=true;// set to true on material change\nrefreshLights=true;// remains set until update done\n}// load material specific uniforms\n// (shader material also gets them for the sake of genericity)\nif(material.isShaderMaterial||material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshStandardMaterial||material.envMap){var uCamPos=p_uniforms.map.cameraPosition;if(uCamPos!==undefined){uCamPos.setValue(_gl,_vector3.setFromMatrixPosition(camera.matrixWorld));}}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial){p_uniforms.setValue(_gl,'isOrthographic',camera.isOrthographicCamera===true);}if(material.isMeshPhongMaterial||material.isMeshToonMaterial||material.isMeshLambertMaterial||material.isMeshBasicMaterial||material.isMeshStandardMaterial||material.isShaderMaterial||material.isShadowMaterial||object.isSkinnedMesh){p_uniforms.setValue(_gl,'viewMatrix',camera.matrixWorldInverse);}}// skinning uniforms must be set even if material didn't change\n// auto-setting of texture unit for bone texture must go before other textures\n// otherwise textures used for skinning can take over texture units reserved for other material textures\nif(object.isSkinnedMesh){p_uniforms.setOptional(_gl,object,'bindMatrix');p_uniforms.setOptional(_gl,object,'bindMatrixInverse');var skeleton=object.skeleton;if(skeleton){if(capabilities.floatVertexTextures){if(skeleton.boneTexture===null)skeleton.computeBoneTexture();p_uniforms.setValue(_gl,'boneTexture',skeleton.boneTexture,textures);p_uniforms.setValue(_gl,'boneTextureSize',skeleton.boneTextureSize);}else{p_uniforms.setOptional(_gl,skeleton,'boneMatrices');}}}if(refreshMaterial||materialProperties.receiveShadow!==object.receiveShadow){materialProperties.receiveShadow=object.receiveShadow;p_uniforms.setValue(_gl,'receiveShadow',object.receiveShadow);}if(refreshMaterial){p_uniforms.setValue(_gl,'toneMappingExposure',_this.toneMappingExposure);if(materialProperties.needsLights){// the current material requires lighting info\n// note: all lighting uniforms are always set correctly\n// they simply reference the renderer's state for their\n// values\n//\n// use the current material's .needsUpdate flags to set\n// the GL state when required\nmarkUniformsLightsNeedsUpdate(m_uniforms,refreshLights);}// refresh uniforms common to several materials\nif(fog&&material.fog){materials.refreshFogUniforms(m_uniforms,fog);}materials.refreshMaterialUniforms(m_uniforms,material,_pixelRatio,_height,_transmissionRenderTarget);WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);}if(material.isShaderMaterial&&material.uniformsNeedUpdate===true){WebGLUniforms.upload(_gl,materialProperties.uniformsList,m_uniforms,textures);material.uniformsNeedUpdate=false;}if(material.isSpriteMaterial){p_uniforms.setValue(_gl,'center',object.center);}// common matrices\np_uniforms.setValue(_gl,'modelViewMatrix',object.modelViewMatrix);p_uniforms.setValue(_gl,'normalMatrix',object.normalMatrix);p_uniforms.setValue(_gl,'modelMatrix',object.matrixWorld);return program;}// If uniforms are marked as clean, they don't need to be loaded to the GPU.\nfunction markUniformsLightsNeedsUpdate(uniforms,value){uniforms.ambientLightColor.needsUpdate=value;uniforms.lightProbe.needsUpdate=value;uniforms.directionalLights.needsUpdate=value;uniforms.directionalLightShadows.needsUpdate=value;uniforms.pointLights.needsUpdate=value;uniforms.pointLightShadows.needsUpdate=value;uniforms.spotLights.needsUpdate=value;uniforms.spotLightShadows.needsUpdate=value;uniforms.rectAreaLights.needsUpdate=value;uniforms.hemisphereLights.needsUpdate=value;}function materialNeedsLights(material){return material.isMeshLambertMaterial||material.isMeshToonMaterial||material.isMeshPhongMaterial||material.isMeshStandardMaterial||material.isShadowMaterial||material.isShaderMaterial&&material.lights===true;}this.getActiveCubeFace=function(){return _currentActiveCubeFace;};this.getActiveMipmapLevel=function(){return _currentActiveMipmapLevel;};this.getRenderTarget=function(){return _currentRenderTarget;};this.setRenderTarget=function(renderTarget){var activeCubeFace=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var activeMipmapLevel=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;_currentRenderTarget=renderTarget;_currentActiveCubeFace=activeCubeFace;_currentActiveMipmapLevel=activeMipmapLevel;if(renderTarget&&properties.get(renderTarget).__webglFramebuffer===undefined){textures.setupRenderTarget(renderTarget);}var framebuffer=null;var isCube=false;var isRenderTarget3D=false;if(renderTarget){var texture=renderTarget.texture;if(texture.isDataTexture3D||texture.isDataTexture2DArray){isRenderTarget3D=true;}var __webglFramebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget){framebuffer=__webglFramebuffer[activeCubeFace];isCube=true;}else if(renderTarget.isWebGLMultisampleRenderTarget){framebuffer=properties.get(renderTarget).__webglMultisampledFramebuffer;}else{framebuffer=__webglFramebuffer;}_currentViewport.copy(renderTarget.viewport);_currentScissor.copy(renderTarget.scissor);_currentScissorTest=renderTarget.scissorTest;}else{_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();_currentScissorTest=_scissorTest;}var framebufferBound=state.bindFramebuffer(36160,framebuffer);if(framebufferBound&&capabilities.drawBuffers){var needsUpdate=false;if(renderTarget){if(renderTarget.isWebGLMultipleRenderTargets){var _textures2=renderTarget.texture;if(_currentDrawBuffers.length!==_textures2.length||_currentDrawBuffers[0]!==36064){for(var _i147=0,il=_textures2.length;_i147<il;_i147++){_currentDrawBuffers[_i147]=36064+_i147;}_currentDrawBuffers.length=_textures2.length;needsUpdate=true;}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==36064){_currentDrawBuffers[0]=36064;_currentDrawBuffers.length=1;needsUpdate=true;}}}else{if(_currentDrawBuffers.length!==1||_currentDrawBuffers[0]!==1029){_currentDrawBuffers[0]=1029;_currentDrawBuffers.length=1;needsUpdate=true;}}if(needsUpdate){if(capabilities.isWebGL2){_gl.drawBuffers(_currentDrawBuffers);}else{extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);}}}state.viewport(_currentViewport);state.scissor(_currentScissor);state.setScissorTest(_currentScissorTest);if(isCube){var textureProperties=properties.get(renderTarget.texture);_gl.framebufferTexture2D(36160,36064,34069+activeCubeFace,textureProperties.__webglTexture,activeMipmapLevel);}else if(isRenderTarget3D){var _textureProperties=properties.get(renderTarget.texture);var layer=activeCubeFace||0;_gl.framebufferTextureLayer(36160,36064,_textureProperties.__webglTexture,activeMipmapLevel||0,layer);}_currentMaterialId=-1;// reset current material to ensure correct uniform bindings\n};this.readRenderTargetPixels=function(renderTarget,x,y,width,height,buffer,activeCubeFaceIndex){if(!(renderTarget&&renderTarget.isWebGLRenderTarget)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');return;}var framebuffer=properties.get(renderTarget).__webglFramebuffer;if(renderTarget.isWebGLCubeRenderTarget&&activeCubeFaceIndex!==undefined){framebuffer=framebuffer[activeCubeFaceIndex];}if(framebuffer){state.bindFramebuffer(36160,framebuffer);try{var texture=renderTarget.texture;var textureFormat=texture.format;var textureType=texture.type;if(textureFormat!==RGBAFormat&&utils.convert(textureFormat)!==_gl.getParameter(35739)){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');return;}var halfFloatSupportedByExt=textureType===HalfFloatType&&(extensions.has('EXT_color_buffer_half_float')||capabilities.isWebGL2&&extensions.has('EXT_color_buffer_float'));if(textureType!==UnsignedByteType&&utils.convert(textureType)!==_gl.getParameter(35738)&&// Edge and Chrome Mac < 52 (#9513)\n!(textureType===FloatType&&(capabilities.isWebGL2||extensions.has('OES_texture_float')||extensions.has('WEBGL_color_buffer_float')))&&// Chrome Mac >= 52 and Firefox\n!halfFloatSupportedByExt){console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');return;}if(_gl.checkFramebufferStatus(36160)===36053){// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\nif(x>=0&&x<=renderTarget.width-width&&y>=0&&y<=renderTarget.height-height){_gl.readPixels(x,y,width,height,utils.convert(textureFormat),utils.convert(textureType),buffer);}}else{console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');}}finally{// restore framebuffer of current render target if necessary\nvar _framebuffer=_currentRenderTarget!==null?properties.get(_currentRenderTarget).__webglFramebuffer:null;state.bindFramebuffer(36160,_framebuffer);}}};this.copyFramebufferToTexture=function(position,texture){var level=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var levelScale=Math.pow(2,-level);var width=Math.floor(texture.image.width*levelScale);var height=Math.floor(texture.image.height*levelScale);var glFormat=utils.convert(texture.format);if(capabilities.isWebGL2){// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n// Not needed in Chrome 93+\nif(glFormat===6407)glFormat=32849;if(glFormat===6408)glFormat=32856;}textures.setTexture2D(texture,0);_gl.copyTexImage2D(3553,level,glFormat,position.x,position.y,width,height,0);state.unbindTexture();};this.copyTextureToTexture=function(position,srcTexture,dstTexture){var level=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var width=srcTexture.image.width;var height=srcTexture.image.height;var glFormat=utils.convert(dstTexture.format);var glType=utils.convert(dstTexture.type);textures.setTexture2D(dstTexture,0);// As another texture upload may have changed pixelStorei\n// parameters, make sure they are correct for the dstTexture\n_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);if(srcTexture.isDataTexture){_gl.texSubImage2D(3553,level,position.x,position.y,width,height,glFormat,glType,srcTexture.image.data);}else{if(srcTexture.isCompressedTexture){_gl.compressedTexSubImage2D(3553,level,position.x,position.y,srcTexture.mipmaps[0].width,srcTexture.mipmaps[0].height,glFormat,srcTexture.mipmaps[0].data);}else{_gl.texSubImage2D(3553,level,position.x,position.y,glFormat,glType,srcTexture.image);}}// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(3553);state.unbindTexture();};this.copyTextureToTexture3D=function(sourceBox,position,srcTexture,dstTexture){var level=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;if(_this.isWebGL1Renderer){console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');return;}var width=sourceBox.max.x-sourceBox.min.x+1;var height=sourceBox.max.y-sourceBox.min.y+1;var depth=sourceBox.max.z-sourceBox.min.z+1;var glFormat=utils.convert(dstTexture.format);var glType=utils.convert(dstTexture.type);var glTarget;if(dstTexture.isDataTexture3D){textures.setTexture3D(dstTexture,0);glTarget=32879;}else if(dstTexture.isDataTexture2DArray){textures.setTexture2DArray(dstTexture,0);glTarget=35866;}else{console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');return;}_gl.pixelStorei(37440,dstTexture.flipY);_gl.pixelStorei(37441,dstTexture.premultiplyAlpha);_gl.pixelStorei(3317,dstTexture.unpackAlignment);var unpackRowLen=_gl.getParameter(3314);var unpackImageHeight=_gl.getParameter(32878);var unpackSkipPixels=_gl.getParameter(3316);var unpackSkipRows=_gl.getParameter(3315);var unpackSkipImages=_gl.getParameter(32877);var image=srcTexture.isCompressedTexture?srcTexture.mipmaps[0]:srcTexture.image;_gl.pixelStorei(3314,image.width);_gl.pixelStorei(32878,image.height);_gl.pixelStorei(3316,sourceBox.min.x);_gl.pixelStorei(3315,sourceBox.min.y);_gl.pixelStorei(32877,sourceBox.min.z);if(srcTexture.isDataTexture||srcTexture.isDataTexture3D){_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,glType,image.data);}else{if(srcTexture.isCompressedTexture){console.warn('THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.');_gl.compressedTexSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,image.data);}else{_gl.texSubImage3D(glTarget,level,position.x,position.y,position.z,width,height,depth,glFormat,glType,image);}}_gl.pixelStorei(3314,unpackRowLen);_gl.pixelStorei(32878,unpackImageHeight);_gl.pixelStorei(3316,unpackSkipPixels);_gl.pixelStorei(3315,unpackSkipRows);_gl.pixelStorei(32877,unpackSkipImages);// Generate mipmaps only when copying level 0\nif(level===0&&dstTexture.generateMipmaps)_gl.generateMipmap(glTarget);state.unbindTexture();};this.initTexture=function(texture){textures.setTexture2D(texture,0);state.unbindTexture();};this.resetState=function(){_currentActiveCubeFace=0;_currentActiveMipmapLevel=0;_currentRenderTarget=null;state.reset();bindingStates.reset();};if(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:this}));// eslint-disable-line no-undef\n}}var WebGL1Renderer=/*#__PURE__*/function(_WebGLRenderer){_inherits(WebGL1Renderer,_WebGLRenderer);var _super37=_createSuper(WebGL1Renderer);function WebGL1Renderer(){_classCallCheck(this,WebGL1Renderer);return _super37.apply(this,arguments);}return _createClass(WebGL1Renderer);}(WebGLRenderer);WebGL1Renderer.prototype.isWebGL1Renderer=true;var FogExp2=/*#__PURE__*/function(){function FogExp2(color){var density=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.00025;_classCallCheck(this,FogExp2);this.name='';this.color=new Color(color);this.density=density;}_createClass(FogExp2,[{key:\"clone\",value:function clone(){return new FogExp2(this.color,this.density);}},{key:\"toJSON\",value:function/* meta */toJSON(){return{type:'FogExp2',color:this.color.getHex(),density:this.density};}}]);return FogExp2;}();FogExp2.prototype.isFogExp2=true;var Fog=/*#__PURE__*/function(){function Fog(color){var near=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var far=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1000;_classCallCheck(this,Fog);this.name='';this.color=new Color(color);this.near=near;this.far=far;}_createClass(Fog,[{key:\"clone\",value:function clone(){return new Fog(this.color,this.near,this.far);}},{key:\"toJSON\",value:function/* meta */toJSON(){return{type:'Fog',color:this.color.getHex(),near:this.near,far:this.far};}}]);return Fog;}();Fog.prototype.isFog=true;var Scene=/*#__PURE__*/function(_Object3D5){_inherits(Scene,_Object3D5);var _super38=_createSuper(Scene);function Scene(){var _this28;_classCallCheck(this,Scene);_this28=_super38.call(this);_this28.type='Scene';_this28.background=null;_this28.environment=null;_this28.fog=null;_this28.overrideMaterial=null;_this28.autoUpdate=true;// checked by the renderer\nif(typeof __THREE_DEVTOOLS__!=='undefined'){__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe',{detail:_assertThisInitialized(_this28)}));// eslint-disable-line no-undef\n}return _this28;}_createClass(Scene,[{key:\"copy\",value:function copy(source,recursive){_get(_getPrototypeOf(Scene.prototype),\"copy\",this).call(this,source,recursive);if(source.background!==null)this.background=source.background.clone();if(source.environment!==null)this.environment=source.environment.clone();if(source.fog!==null)this.fog=source.fog.clone();if(source.overrideMaterial!==null)this.overrideMaterial=source.overrideMaterial.clone();this.autoUpdate=source.autoUpdate;this.matrixAutoUpdate=source.matrixAutoUpdate;return this;}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(Scene.prototype),\"toJSON\",this).call(this,meta);if(this.fog!==null)data.object.fog=this.fog.toJSON();return data;}}]);return Scene;}(Object3D);Scene.prototype.isScene=true;var InterleavedBuffer=/*#__PURE__*/function(){function InterleavedBuffer(array,stride){_classCallCheck(this,InterleavedBuffer);this.array=array;this.stride=stride;this.count=array!==undefined?array.length/stride:0;this.usage=StaticDrawUsage;this.updateRange={offset:0,count:-1};this.version=0;this.uuid=generateUUID();}_createClass(InterleavedBuffer,[{key:\"onUploadCallback\",value:function onUploadCallback(){}},{key:\"needsUpdate\",set:function set(value){if(value===true)this.version++;}},{key:\"setUsage\",value:function setUsage(value){this.usage=value;return this;}},{key:\"copy\",value:function copy(source){this.array=new source.array.constructor(source.array);this.count=source.count;this.stride=source.stride;this.usage=source.usage;return this;}},{key:\"copyAt\",value:function copyAt(index1,attribute,index2){index1*=this.stride;index2*=attribute.stride;for(var _i148=0,l=this.stride;_i148<l;_i148++){this.array[index1+_i148]=attribute.array[index2+_i148];}return this;}},{key:\"set\",value:function set(value){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;this.array.set(value,offset);return this;}},{key:\"clone\",value:function clone(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}if(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer;}var array=new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);var ib=new this.constructor(array,this.stride);ib.setUsage(this.usage);return ib;}},{key:\"onUpload\",value:function onUpload(callback){this.onUploadCallback=callback;return this;}},{key:\"toJSON\",value:function toJSON(data){if(data.arrayBuffers===undefined){data.arrayBuffers={};}// generate UUID for array buffer if necessary\nif(this.array.buffer._uuid===undefined){this.array.buffer._uuid=generateUUID();}if(data.arrayBuffers[this.array.buffer._uuid]===undefined){data.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer));}//\nreturn{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride};}}]);return InterleavedBuffer;}();InterleavedBuffer.prototype.isInterleavedBuffer=true;var _vector$6=/*@__PURE__*/new Vector3();var InterleavedBufferAttribute=/*#__PURE__*/function(){function InterleavedBufferAttribute(interleavedBuffer,itemSize,offset){var normalized=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;_classCallCheck(this,InterleavedBufferAttribute);this.name='';this.data=interleavedBuffer;this.itemSize=itemSize;this.offset=offset;this.normalized=normalized===true;}_createClass(InterleavedBufferAttribute,[{key:\"count\",get:function get(){return this.data.count;}},{key:\"array\",get:function get(){return this.data.array;}},{key:\"needsUpdate\",set:function set(value){this.data.needsUpdate=value;}},{key:\"applyMatrix4\",value:function applyMatrix4(m){for(var _i149=0,l=this.data.count;_i149<l;_i149++){_vector$6.x=this.getX(_i149);_vector$6.y=this.getY(_i149);_vector$6.z=this.getZ(_i149);_vector$6.applyMatrix4(m);this.setXYZ(_i149,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}},{key:\"applyNormalMatrix\",value:function applyNormalMatrix(m){for(var _i150=0,l=this.count;_i150<l;_i150++){_vector$6.x=this.getX(_i150);_vector$6.y=this.getY(_i150);_vector$6.z=this.getZ(_i150);_vector$6.applyNormalMatrix(m);this.setXYZ(_i150,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}},{key:\"transformDirection\",value:function transformDirection(m){for(var _i151=0,l=this.count;_i151<l;_i151++){_vector$6.x=this.getX(_i151);_vector$6.y=this.getY(_i151);_vector$6.z=this.getZ(_i151);_vector$6.transformDirection(m);this.setXYZ(_i151,_vector$6.x,_vector$6.y,_vector$6.z);}return this;}},{key:\"setX\",value:function setX(index,x){this.data.array[index*this.data.stride+this.offset]=x;return this;}},{key:\"setY\",value:function setY(index,y){this.data.array[index*this.data.stride+this.offset+1]=y;return this;}},{key:\"setZ\",value:function setZ(index,z){this.data.array[index*this.data.stride+this.offset+2]=z;return this;}},{key:\"setW\",value:function setW(index,w){this.data.array[index*this.data.stride+this.offset+3]=w;return this;}},{key:\"getX\",value:function getX(index){return this.data.array[index*this.data.stride+this.offset];}},{key:\"getY\",value:function getY(index){return this.data.array[index*this.data.stride+this.offset+1];}},{key:\"getZ\",value:function getZ(index){return this.data.array[index*this.data.stride+this.offset+2];}},{key:\"getW\",value:function getW(index){return this.data.array[index*this.data.stride+this.offset+3];}},{key:\"setXY\",value:function setXY(index,x,y){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;return this;}},{key:\"setXYZ\",value:function setXYZ(index,x,y,z){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;return this;}},{key:\"setXYZW\",value:function setXYZW(index,x,y,z,w){index=index*this.data.stride+this.offset;this.data.array[index+0]=x;this.data.array[index+1]=y;this.data.array[index+2]=z;this.data.array[index+3]=w;return this;}},{key:\"clone\",value:function clone(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');var array=[];for(var _i152=0;_i152<this.count;_i152++){var index=_i152*this.data.stride+this.offset;for(var j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}return new BufferAttribute(new this.array.constructor(array),this.itemSize,this.normalized);}else{if(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.clone(data);}return new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized);}}},{key:\"toJSON\",value:function toJSON(data){if(data===undefined){console.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');var array=[];for(var _i153=0;_i153<this.count;_i153++){var index=_i153*this.data.stride+this.offset;for(var j=0;j<this.itemSize;j++){array.push(this.data.array[index+j]);}}// deinterleave data and save it as an ordinary buffer attribute for now\nreturn{itemSize:this.itemSize,type:this.array.constructor.name,array:array,normalized:this.normalized};}else{// save as true interlaved attribtue\nif(data.interleavedBuffers===undefined){data.interleavedBuffers={};}if(data.interleavedBuffers[this.data.uuid]===undefined){data.interleavedBuffers[this.data.uuid]=this.data.toJSON(data);}return{isInterleavedBufferAttribute:true,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized};}}}]);return InterleavedBufferAttribute;}();InterleavedBufferAttribute.prototype.isInterleavedBufferAttribute=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *  rotation: <float>,\r\n *  sizeAttenuation: <bool>\r\n * }\r\n */var SpriteMaterial=/*#__PURE__*/function(_Material5){_inherits(SpriteMaterial,_Material5);var _super39=_createSuper(SpriteMaterial);function SpriteMaterial(parameters){var _this29;_classCallCheck(this,SpriteMaterial);_this29=_super39.call(this);_this29.type='SpriteMaterial';_this29.color=new Color(0xffffff);_this29.map=null;_this29.alphaMap=null;_this29.rotation=0;_this29.sizeAttenuation=true;_this29.transparent=true;_this29.setValues(parameters);return _this29;}_createClass(SpriteMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(SpriteMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.rotation=source.rotation;this.sizeAttenuation=source.sizeAttenuation;return this;}}]);return SpriteMaterial;}(Material);SpriteMaterial.prototype.isSpriteMaterial=true;var _geometry;var _intersectPoint=/*@__PURE__*/new Vector3();var _worldScale=/*@__PURE__*/new Vector3();var _mvPosition=/*@__PURE__*/new Vector3();var _alignedPosition=/*@__PURE__*/new Vector2();var _rotatedPosition=/*@__PURE__*/new Vector2();var _viewWorldMatrix=/*@__PURE__*/new Matrix4();var _vA=/*@__PURE__*/new Vector3();var _vB=/*@__PURE__*/new Vector3();var _vC=/*@__PURE__*/new Vector3();var _uvA=/*@__PURE__*/new Vector2();var _uvB=/*@__PURE__*/new Vector2();var _uvC=/*@__PURE__*/new Vector2();var Sprite=/*#__PURE__*/function(_Object3D6){_inherits(Sprite,_Object3D6);var _super40=_createSuper(Sprite);function Sprite(material){var _this30;_classCallCheck(this,Sprite);_this30=_super40.call(this);_this30.type='Sprite';if(_geometry===undefined){_geometry=new BufferGeometry();var float32Array=new Float32Array([-0.5,-0.5,0,0,0,0.5,-0.5,0,1,0,0.5,0.5,0,1,1,-0.5,0.5,0,0,1]);var interleavedBuffer=new InterleavedBuffer(float32Array,5);_geometry.setIndex([0,1,2,0,2,3]);_geometry.setAttribute('position',new InterleavedBufferAttribute(interleavedBuffer,3,0,false));_geometry.setAttribute('uv',new InterleavedBufferAttribute(interleavedBuffer,2,3,false));}_this30.geometry=_geometry;_this30.material=material!==undefined?material:new SpriteMaterial();_this30.center=new Vector2(0.5,0.5);return _this30;}_createClass(Sprite,[{key:\"raycast\",value:function raycast(raycaster,intersects){if(raycaster.camera===null){console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');}_worldScale.setFromMatrixScale(this.matrixWorld);_viewWorldMatrix.copy(raycaster.camera.matrixWorld);this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse,this.matrixWorld);_mvPosition.setFromMatrixPosition(this.modelViewMatrix);if(raycaster.camera.isPerspectiveCamera&&this.material.sizeAttenuation===false){_worldScale.multiplyScalar(-_mvPosition.z);}var rotation=this.material.rotation;var sin,cos;if(rotation!==0){cos=Math.cos(rotation);sin=Math.sin(rotation);}var center=this.center;transformVertex(_vA.set(-0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vB.set(0.5,-0.5,0),_mvPosition,center,_worldScale,sin,cos);transformVertex(_vC.set(0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvA.set(0,0);_uvB.set(1,0);_uvC.set(1,1);// check first triangle\nvar intersect=raycaster.ray.intersectTriangle(_vA,_vB,_vC,false,_intersectPoint);if(intersect===null){// check second triangle\ntransformVertex(_vB.set(-0.5,0.5,0),_mvPosition,center,_worldScale,sin,cos);_uvB.set(0,1);intersect=raycaster.ray.intersectTriangle(_vA,_vC,_vB,false,_intersectPoint);if(intersect===null){return;}}var distance=raycaster.ray.origin.distanceTo(_intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,point:_intersectPoint.clone(),uv:Triangle.getUV(_intersectPoint,_vA,_vB,_vC,_uvA,_uvB,_uvC,new Vector2()),face:null,object:this});}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Sprite.prototype),\"copy\",this).call(this,source);if(source.center!==undefined)this.center.copy(source.center);this.material=source.material;return this;}}]);return Sprite;}(Object3D);Sprite.prototype.isSprite=true;function transformVertex(vertexPosition,mvPosition,center,scale,sin,cos){// compute position in camera space\n_alignedPosition.subVectors(vertexPosition,center).addScalar(0.5).multiply(scale);// to check if rotation is not zero\nif(sin!==undefined){_rotatedPosition.x=cos*_alignedPosition.x-sin*_alignedPosition.y;_rotatedPosition.y=sin*_alignedPosition.x+cos*_alignedPosition.y;}else{_rotatedPosition.copy(_alignedPosition);}vertexPosition.copy(mvPosition);vertexPosition.x+=_rotatedPosition.x;vertexPosition.y+=_rotatedPosition.y;// transform to world space\nvertexPosition.applyMatrix4(_viewWorldMatrix);}var _v1$2=/*@__PURE__*/new Vector3();var _v2$1=/*@__PURE__*/new Vector3();var LOD=/*#__PURE__*/function(_Object3D7){_inherits(LOD,_Object3D7);var _super41=_createSuper(LOD);function LOD(){var _this31;_classCallCheck(this,LOD);_this31=_super41.call(this);_this31._currentLevel=0;_this31.type='LOD';Object.defineProperties(_assertThisInitialized(_this31),{levels:{enumerable:true,value:[]},isLOD:{value:true}});_this31.autoUpdate=true;return _this31;}_createClass(LOD,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LOD.prototype),\"copy\",this).call(this,source,false);var levels=source.levels;for(var _i154=0,l=levels.length;_i154<l;_i154++){var level=levels[_i154];this.addLevel(level.object.clone(),level.distance);}this.autoUpdate=source.autoUpdate;return this;}},{key:\"addLevel\",value:function addLevel(object){var distance=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;distance=Math.abs(distance);var levels=this.levels;var l;for(l=0;l<levels.length;l++){if(distance<levels[l].distance){break;}}levels.splice(l,0,{distance:distance,object:object});this.add(object);return this;}},{key:\"getCurrentLevel\",value:function getCurrentLevel(){return this._currentLevel;}},{key:\"getObjectForDistance\",value:function getObjectForDistance(distance){var levels=this.levels;if(levels.length>0){var _i155,l;for(_i155=1,l=levels.length;_i155<l;_i155++){if(distance<levels[_i155].distance){break;}}return levels[_i155-1].object;}return null;}},{key:\"raycast\",value:function raycast(raycaster,intersects){var levels=this.levels;if(levels.length>0){_v1$2.setFromMatrixPosition(this.matrixWorld);var distance=raycaster.ray.origin.distanceTo(_v1$2);this.getObjectForDistance(distance).raycast(raycaster,intersects);}}},{key:\"update\",value:function update(camera){var levels=this.levels;if(levels.length>1){_v1$2.setFromMatrixPosition(camera.matrixWorld);_v2$1.setFromMatrixPosition(this.matrixWorld);var distance=_v1$2.distanceTo(_v2$1)/camera.zoom;levels[0].object.visible=true;var _i156,l;for(_i156=1,l=levels.length;_i156<l;_i156++){if(distance>=levels[_i156].distance){levels[_i156-1].object.visible=false;levels[_i156].object.visible=true;}else{break;}}this._currentLevel=_i156-1;for(;_i156<l;_i156++){levels[_i156].object.visible=false;}}}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(LOD.prototype),\"toJSON\",this).call(this,meta);if(this.autoUpdate===false)data.object.autoUpdate=false;data.object.levels=[];var levels=this.levels;for(var _i157=0,l=levels.length;_i157<l;_i157++){var level=levels[_i157];data.object.levels.push({object:level.object.uuid,distance:level.distance});}return data;}}]);return LOD;}(Object3D);var _basePosition=/*@__PURE__*/new Vector3();var _skinIndex=/*@__PURE__*/new Vector4();var _skinWeight=/*@__PURE__*/new Vector4();var _vector$5=/*@__PURE__*/new Vector3();var _matrix=/*@__PURE__*/new Matrix4();var SkinnedMesh=/*#__PURE__*/function(_Mesh){_inherits(SkinnedMesh,_Mesh);var _super42=_createSuper(SkinnedMesh);function SkinnedMesh(geometry,material){var _this32;_classCallCheck(this,SkinnedMesh);_this32=_super42.call(this,geometry,material);_this32.type='SkinnedMesh';_this32.bindMode='attached';_this32.bindMatrix=new Matrix4();_this32.bindMatrixInverse=new Matrix4();return _this32;}_createClass(SkinnedMesh,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(SkinnedMesh.prototype),\"copy\",this).call(this,source);this.bindMode=source.bindMode;this.bindMatrix.copy(source.bindMatrix);this.bindMatrixInverse.copy(source.bindMatrixInverse);this.skeleton=source.skeleton;return this;}},{key:\"bind\",value:function bind(skeleton,bindMatrix){this.skeleton=skeleton;if(bindMatrix===undefined){this.updateMatrixWorld(true);this.skeleton.calculateInverses();bindMatrix=this.matrixWorld;}this.bindMatrix.copy(bindMatrix);this.bindMatrixInverse.copy(bindMatrix).invert();}},{key:\"pose\",value:function pose(){this.skeleton.pose();}},{key:\"normalizeSkinWeights\",value:function normalizeSkinWeights(){var vector=new Vector4();var skinWeight=this.geometry.attributes.skinWeight;for(var _i158=0,l=skinWeight.count;_i158<l;_i158++){vector.x=skinWeight.getX(_i158);vector.y=skinWeight.getY(_i158);vector.z=skinWeight.getZ(_i158);vector.w=skinWeight.getW(_i158);var scale=1.0/vector.manhattanLength();if(scale!==Infinity){vector.multiplyScalar(scale);}else{vector.set(1,0,0,0);// do something reasonable\n}skinWeight.setXYZW(_i158,vector.x,vector.y,vector.z,vector.w);}}},{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){_get(_getPrototypeOf(SkinnedMesh.prototype),\"updateMatrixWorld\",this).call(this,force);if(this.bindMode==='attached'){this.bindMatrixInverse.copy(this.matrixWorld).invert();}else if(this.bindMode==='detached'){this.bindMatrixInverse.copy(this.bindMatrix).invert();}else{console.warn('THREE.SkinnedMesh: Unrecognized bindMode: '+this.bindMode);}}},{key:\"boneTransform\",value:function boneTransform(index,target){var skeleton=this.skeleton;var geometry=this.geometry;_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex,index);_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight,index);_basePosition.copy(target).applyMatrix4(this.bindMatrix);target.set(0,0,0);for(var _i159=0;_i159<4;_i159++){var weight=_skinWeight.getComponent(_i159);if(weight!==0){var boneIndex=_skinIndex.getComponent(_i159);_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld,skeleton.boneInverses[boneIndex]);target.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix),weight);}}return target.applyMatrix4(this.bindMatrixInverse);}}]);return SkinnedMesh;}(Mesh);SkinnedMesh.prototype.isSkinnedMesh=true;var Bone=/*#__PURE__*/function(_Object3D8){_inherits(Bone,_Object3D8);var _super43=_createSuper(Bone);function Bone(){var _this33;_classCallCheck(this,Bone);_this33=_super43.call(this);_this33.type='Bone';return _this33;}return _createClass(Bone);}(Object3D);Bone.prototype.isBone=true;var DataTexture=/*#__PURE__*/function(_Texture4){_inherits(DataTexture,_Texture4);var _super44=_createSuper(DataTexture);function DataTexture(){var _this34;var data=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var width=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var format=arguments.length>3?arguments[3]:undefined;var type=arguments.length>4?arguments[4]:undefined;var mapping=arguments.length>5?arguments[5]:undefined;var wrapS=arguments.length>6?arguments[6]:undefined;var wrapT=arguments.length>7?arguments[7]:undefined;var magFilter=arguments.length>8&&arguments[8]!==undefined?arguments[8]:NearestFilter;var minFilter=arguments.length>9&&arguments[9]!==undefined?arguments[9]:NearestFilter;var anisotropy=arguments.length>10?arguments[10]:undefined;var encoding=arguments.length>11?arguments[11]:undefined;_classCallCheck(this,DataTexture);_this34=_super44.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);_this34.image={data:data,width:width,height:height};_this34.magFilter=magFilter;_this34.minFilter=minFilter;_this34.generateMipmaps=false;_this34.flipY=false;_this34.unpackAlignment=1;_this34.needsUpdate=true;return _this34;}return _createClass(DataTexture);}(Texture);DataTexture.prototype.isDataTexture=true;var _offsetMatrix=/*@__PURE__*/new Matrix4();var _identityMatrix=/*@__PURE__*/new Matrix4();var Skeleton=/*#__PURE__*/function(){function Skeleton(){var bones=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var boneInverses=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];_classCallCheck(this,Skeleton);this.uuid=generateUUID();this.bones=bones.slice(0);this.boneInverses=boneInverses;this.boneMatrices=null;this.boneTexture=null;this.boneTextureSize=0;this.frame=-1;this.init();}_createClass(Skeleton,[{key:\"init\",value:function init(){var bones=this.bones;var boneInverses=this.boneInverses;this.boneMatrices=new Float32Array(bones.length*16);// calculate inverse bone matrices if necessary\nif(boneInverses.length===0){this.calculateInverses();}else{// handle special case\nif(bones.length!==boneInverses.length){console.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');this.boneInverses=[];for(var _i160=0,il=this.bones.length;_i160<il;_i160++){this.boneInverses.push(new Matrix4());}}}}},{key:\"calculateInverses\",value:function calculateInverses(){this.boneInverses.length=0;for(var _i161=0,il=this.bones.length;_i161<il;_i161++){var inverse=new Matrix4();if(this.bones[_i161]){inverse.copy(this.bones[_i161].matrixWorld).invert();}this.boneInverses.push(inverse);}}},{key:\"pose\",value:function pose(){// recover the bind-time world matrices\nfor(var _i162=0,il=this.bones.length;_i162<il;_i162++){var bone=this.bones[_i162];if(bone){bone.matrixWorld.copy(this.boneInverses[_i162]).invert();}}// compute the local matrices, positions, rotations and scales\nfor(var _i163=0,_il12=this.bones.length;_i163<_il12;_i163++){var _bone=this.bones[_i163];if(_bone){if(_bone.parent&&_bone.parent.isBone){_bone.matrix.copy(_bone.parent.matrixWorld).invert();_bone.matrix.multiply(_bone.matrixWorld);}else{_bone.matrix.copy(_bone.matrixWorld);}_bone.matrix.decompose(_bone.position,_bone.quaternion,_bone.scale);}}}},{key:\"update\",value:function update(){var bones=this.bones;var boneInverses=this.boneInverses;var boneMatrices=this.boneMatrices;var boneTexture=this.boneTexture;// flatten bone matrices to array\nfor(var _i164=0,il=bones.length;_i164<il;_i164++){// compute the offset between the current and the original transform\nvar matrix=bones[_i164]?bones[_i164].matrixWorld:_identityMatrix;_offsetMatrix.multiplyMatrices(matrix,boneInverses[_i164]);_offsetMatrix.toArray(boneMatrices,_i164*16);}if(boneTexture!==null){boneTexture.needsUpdate=true;}}},{key:\"clone\",value:function clone(){return new Skeleton(this.bones,this.boneInverses);}},{key:\"computeBoneTexture\",value:function computeBoneTexture(){// layout (1 matrix = 4 pixels)\n//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\nvar size=Math.sqrt(this.bones.length*4);// 4 pixels needed for 1 matrix\nsize=ceilPowerOfTwo(size);size=Math.max(size,4);var boneMatrices=new Float32Array(size*size*4);// 4 floats per RGBA pixel\nboneMatrices.set(this.boneMatrices);// copy current values\nvar boneTexture=new DataTexture(boneMatrices,size,size,RGBAFormat,FloatType);this.boneMatrices=boneMatrices;this.boneTexture=boneTexture;this.boneTextureSize=size;return this;}},{key:\"getBoneByName\",value:function getBoneByName(name){for(var _i165=0,il=this.bones.length;_i165<il;_i165++){var bone=this.bones[_i165];if(bone.name===name){return bone;}}return undefined;}},{key:\"dispose\",value:function dispose(){if(this.boneTexture!==null){this.boneTexture.dispose();this.boneTexture=null;}}},{key:\"fromJSON\",value:function fromJSON(json,bones){this.uuid=json.uuid;for(var _i166=0,l=json.bones.length;_i166<l;_i166++){var uuid=json.bones[_i166];var bone=bones[uuid];if(bone===undefined){console.warn('THREE.Skeleton: No bone found with UUID:',uuid);bone=new Bone();}this.bones.push(bone);this.boneInverses.push(new Matrix4().fromArray(json.boneInverses[_i166]));}this.init();return this;}},{key:\"toJSON\",value:function toJSON(){var data={metadata:{version:4.5,type:'Skeleton',generator:'Skeleton.toJSON'},bones:[],boneInverses:[]};data.uuid=this.uuid;var bones=this.bones;var boneInverses=this.boneInverses;for(var _i167=0,l=bones.length;_i167<l;_i167++){var bone=bones[_i167];data.bones.push(bone.uuid);var boneInverse=boneInverses[_i167];data.boneInverses.push(boneInverse.toArray());}return data;}}]);return Skeleton;}();var InstancedBufferAttribute=/*#__PURE__*/function(_BufferAttribute11){_inherits(InstancedBufferAttribute,_BufferAttribute11);var _super45=_createSuper(InstancedBufferAttribute);function InstancedBufferAttribute(array,itemSize,normalized){var _this35;var meshPerAttribute=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,InstancedBufferAttribute);if(typeof normalized==='number'){meshPerAttribute=normalized;normalized=false;console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');}_this35=_super45.call(this,array,itemSize,normalized);_this35.meshPerAttribute=meshPerAttribute;return _this35;}_createClass(InstancedBufferAttribute,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(InstancedBufferAttribute.prototype),\"copy\",this).call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(InstancedBufferAttribute.prototype),\"toJSON\",this).call(this);data.meshPerAttribute=this.meshPerAttribute;data.isInstancedBufferAttribute=true;return data;}}]);return InstancedBufferAttribute;}(BufferAttribute);InstancedBufferAttribute.prototype.isInstancedBufferAttribute=true;var _instanceLocalMatrix=/*@__PURE__*/new Matrix4();var _instanceWorldMatrix=/*@__PURE__*/new Matrix4();var _instanceIntersects=[];var _mesh=/*@__PURE__*/new Mesh();var InstancedMesh=/*#__PURE__*/function(_Mesh2){_inherits(InstancedMesh,_Mesh2);var _super46=_createSuper(InstancedMesh);function InstancedMesh(geometry,material,count){var _this36;_classCallCheck(this,InstancedMesh);_this36=_super46.call(this,geometry,material);_this36.instanceMatrix=new InstancedBufferAttribute(new Float32Array(count*16),16);_this36.instanceColor=null;_this36.count=count;_this36.frustumCulled=false;return _this36;}_createClass(InstancedMesh,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(InstancedMesh.prototype),\"copy\",this).call(this,source);this.instanceMatrix.copy(source.instanceMatrix);if(source.instanceColor!==null)this.instanceColor=source.instanceColor.clone();this.count=source.count;return this;}},{key:\"getColorAt\",value:function getColorAt(index,color){color.fromArray(this.instanceColor.array,index*3);}},{key:\"getMatrixAt\",value:function getMatrixAt(index,matrix){matrix.fromArray(this.instanceMatrix.array,index*16);}},{key:\"raycast\",value:function raycast(raycaster,intersects){var matrixWorld=this.matrixWorld;var raycastTimes=this.count;_mesh.geometry=this.geometry;_mesh.material=this.material;if(_mesh.material===undefined)return;for(var instanceId=0;instanceId<raycastTimes;instanceId++){// calculate the world matrix for each instance\nthis.getMatrixAt(instanceId,_instanceLocalMatrix);_instanceWorldMatrix.multiplyMatrices(matrixWorld,_instanceLocalMatrix);// the mesh represents this single instance\n_mesh.matrixWorld=_instanceWorldMatrix;_mesh.raycast(raycaster,_instanceIntersects);// process the result of raycast\nfor(var _i168=0,l=_instanceIntersects.length;_i168<l;_i168++){var intersect=_instanceIntersects[_i168];intersect.instanceId=instanceId;intersect.object=this;intersects.push(intersect);}_instanceIntersects.length=0;}}},{key:\"setColorAt\",value:function setColorAt(index,color){if(this.instanceColor===null){this.instanceColor=new InstancedBufferAttribute(new Float32Array(this.instanceMatrix.count*3),3);}color.toArray(this.instanceColor.array,index*3);}},{key:\"setMatrixAt\",value:function setMatrixAt(index,matrix){matrix.toArray(this.instanceMatrix.array,index*16);}},{key:\"updateMorphTargets\",value:function updateMorphTargets(){}},{key:\"dispose\",value:function dispose(){this.dispatchEvent({type:'dispose'});}}]);return InstancedMesh;}(Mesh);InstancedMesh.prototype.isInstancedMesh=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\"\r\n * }\r\n */var LineBasicMaterial=/*#__PURE__*/function(_Material6){_inherits(LineBasicMaterial,_Material6);var _super47=_createSuper(LineBasicMaterial);function LineBasicMaterial(parameters){var _this37;_classCallCheck(this,LineBasicMaterial);_this37=_super47.call(this);_this37.type='LineBasicMaterial';_this37.color=new Color(0xffffff);_this37.linewidth=1;_this37.linecap='round';_this37.linejoin='round';_this37.setValues(parameters);return _this37;}_createClass(LineBasicMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LineBasicMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.linewidth=source.linewidth;this.linecap=source.linecap;this.linejoin=source.linejoin;return this;}}]);return LineBasicMaterial;}(Material);LineBasicMaterial.prototype.isLineBasicMaterial=true;var _start$1=/*@__PURE__*/new Vector3();var _end$1=/*@__PURE__*/new Vector3();var _inverseMatrix$1=/*@__PURE__*/new Matrix4();var _ray$1=/*@__PURE__*/new Ray();var _sphere$1=/*@__PURE__*/new Sphere();var Line=/*#__PURE__*/function(_Object3D9){_inherits(Line,_Object3D9);var _super48=_createSuper(Line);function Line(){var _this38;var geometry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new BufferGeometry();var material=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new LineBasicMaterial();_classCallCheck(this,Line);_this38=_super48.call(this);_this38.type='Line';_this38.geometry=geometry;_this38.material=material;_this38.updateMorphTargets();return _this38;}_createClass(Line,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Line.prototype),\"copy\",this).call(this,source);this.material=source.material;this.geometry=source.geometry;return this;}},{key:\"computeLineDistances\",value:function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[0];for(var _i169=1,l=positionAttribute.count;_i169<l;_i169++){_start$1.fromBufferAttribute(positionAttribute,_i169-1);_end$1.fromBufferAttribute(positionAttribute,_i169);lineDistances[_i169]=lineDistances[_i169-1];lineDistances[_i169]+=_start$1.distanceTo(_end$1);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}},{key:\"raycast\",value:function raycast(raycaster,intersects){var geometry=this.geometry;var matrixWorld=this.matrixWorld;var threshold=raycaster.params.Line.threshold;var drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere$1.copy(geometry.boundingSphere);_sphere$1.applyMatrix4(matrixWorld);_sphere$1.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere$1)===false)return;//\n_inverseMatrix$1.copy(matrixWorld).invert();_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);var localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);var localThresholdSq=localThreshold*localThreshold;var vStart=new Vector3();var vEnd=new Vector3();var interSegment=new Vector3();var interRay=new Vector3();var step=this.isLineSegments?2:1;if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positionAttribute=attributes.position;if(index!==null){var start=Math.max(0,drawRange.start);var end=Math.min(index.count,drawRange.start+drawRange.count);for(var _i170=start,l=end-1;_i170<l;_i170+=step){var a=index.getX(_i170);var b=index.getX(_i170+1);vStart.fromBufferAttribute(positionAttribute,a);vEnd.fromBufferAttribute(positionAttribute,b);var distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nvar distance=raycaster.ray.origin.distanceTo(interRay);if(distance<raycaster.near||distance>raycaster.far)continue;intersects.push({distance:distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:_i170,face:null,faceIndex:null,object:this});}}else{var _start6=Math.max(0,drawRange.start);var _end5=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(var _i171=_start6,_l6=_end5-1;_i171<_l6;_i171+=step){vStart.fromBufferAttribute(positionAttribute,_i171);vEnd.fromBufferAttribute(positionAttribute,_i171+1);var _distSq=_ray$1.distanceSqToSegment(vStart,vEnd,interRay,interSegment);if(_distSq>localThresholdSq)continue;interRay.applyMatrix4(this.matrixWorld);//Move back to world space for distance calculation\nvar _distance=raycaster.ray.origin.distanceTo(interRay);if(_distance<raycaster.near||_distance>raycaster.far)continue;intersects.push({distance:_distance,// What do we want? intersection point on the ray or on the segment??\n// point: raycaster.ray.at( distance ),\npoint:interSegment.clone().applyMatrix4(this.matrixWorld),index:_i171,face:null,faceIndex:null,object:this});}}}else if(geometry.isGeometry){console.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},{key:\"updateMorphTargets\",value:function updateMorphTargets(){var geometry=this.geometry;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var m=0,ml=morphAttribute.length;m<ml;m++){var name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}]);return Line;}(Object3D);Line.prototype.isLine=true;var _start=/*@__PURE__*/new Vector3();var _end=/*@__PURE__*/new Vector3();var LineSegments=/*#__PURE__*/function(_Line){_inherits(LineSegments,_Line);var _super49=_createSuper(LineSegments);function LineSegments(geometry,material){var _this39;_classCallCheck(this,LineSegments);_this39=_super49.call(this,geometry,material);_this39.type='LineSegments';return _this39;}_createClass(LineSegments,[{key:\"computeLineDistances\",value:function computeLineDistances(){var geometry=this.geometry;if(geometry.isBufferGeometry){// we assume non-indexed geometry\nif(geometry.index===null){var positionAttribute=geometry.attributes.position;var lineDistances=[];for(var _i172=0,l=positionAttribute.count;_i172<l;_i172+=2){_start.fromBufferAttribute(positionAttribute,_i172);_end.fromBufferAttribute(positionAttribute,_i172+1);lineDistances[_i172]=_i172===0?0:lineDistances[_i172-1];lineDistances[_i172+1]=lineDistances[_i172]+_start.distanceTo(_end);}geometry.setAttribute('lineDistance',new Float32BufferAttribute(lineDistances,1));}else{console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');}}else if(geometry.isGeometry){console.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}return this;}}]);return LineSegments;}(Line);LineSegments.prototype.isLineSegments=true;var LineLoop=/*#__PURE__*/function(_Line2){_inherits(LineLoop,_Line2);var _super50=_createSuper(LineLoop);function LineLoop(geometry,material){var _this40;_classCallCheck(this,LineLoop);_this40=_super50.call(this,geometry,material);_this40.type='LineLoop';return _this40;}return _createClass(LineLoop);}(Line);LineLoop.prototype.isLineLoop=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>\r\n *\r\n * }\r\n */var PointsMaterial=/*#__PURE__*/function(_Material7){_inherits(PointsMaterial,_Material7);var _super51=_createSuper(PointsMaterial);function PointsMaterial(parameters){var _this41;_classCallCheck(this,PointsMaterial);_this41=_super51.call(this);_this41.type='PointsMaterial';_this41.color=new Color(0xffffff);_this41.map=null;_this41.alphaMap=null;_this41.size=1;_this41.sizeAttenuation=true;_this41.setValues(parameters);return _this41;}_createClass(PointsMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(PointsMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.map=source.map;this.alphaMap=source.alphaMap;this.size=source.size;this.sizeAttenuation=source.sizeAttenuation;return this;}}]);return PointsMaterial;}(Material);PointsMaterial.prototype.isPointsMaterial=true;var _inverseMatrix=/*@__PURE__*/new Matrix4();var _ray=/*@__PURE__*/new Ray();var _sphere=/*@__PURE__*/new Sphere();var _position$2=/*@__PURE__*/new Vector3();var Points=/*#__PURE__*/function(_Object3D10){_inherits(Points,_Object3D10);var _super52=_createSuper(Points);function Points(){var _this42;var geometry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new BufferGeometry();var material=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new PointsMaterial();_classCallCheck(this,Points);_this42=_super52.call(this);_this42.type='Points';_this42.geometry=geometry;_this42.material=material;_this42.updateMorphTargets();return _this42;}_createClass(Points,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Points.prototype),\"copy\",this).call(this,source);this.material=source.material;this.geometry=source.geometry;return this;}},{key:\"raycast\",value:function raycast(raycaster,intersects){var geometry=this.geometry;var matrixWorld=this.matrixWorld;var threshold=raycaster.params.Points.threshold;var drawRange=geometry.drawRange;// Checking boundingSphere distance to ray\nif(geometry.boundingSphere===null)geometry.computeBoundingSphere();_sphere.copy(geometry.boundingSphere);_sphere.applyMatrix4(matrixWorld);_sphere.radius+=threshold;if(raycaster.ray.intersectsSphere(_sphere)===false)return;//\n_inverseMatrix.copy(matrixWorld).invert();_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);var localThreshold=threshold/((this.scale.x+this.scale.y+this.scale.z)/3);var localThresholdSq=localThreshold*localThreshold;if(geometry.isBufferGeometry){var index=geometry.index;var attributes=geometry.attributes;var positionAttribute=attributes.position;if(index!==null){var start=Math.max(0,drawRange.start);var end=Math.min(index.count,drawRange.start+drawRange.count);for(var _i173=start,il=end;_i173<il;_i173++){var a=index.getX(_i173);_position$2.fromBufferAttribute(positionAttribute,a);testPoint(_position$2,a,localThresholdSq,matrixWorld,raycaster,intersects,this);}}else{var _start7=Math.max(0,drawRange.start);var _end6=Math.min(positionAttribute.count,drawRange.start+drawRange.count);for(var _i174=_start7,l=_end6;_i174<l;_i174++){_position$2.fromBufferAttribute(positionAttribute,_i174);testPoint(_position$2,_i174,localThresholdSq,matrixWorld,raycaster,intersects,this);}}}else{console.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');}}},{key:\"updateMorphTargets\",value:function updateMorphTargets(){var geometry=this.geometry;if(geometry.isBufferGeometry){var morphAttributes=geometry.morphAttributes;var keys=Object.keys(morphAttributes);if(keys.length>0){var morphAttribute=morphAttributes[keys[0]];if(morphAttribute!==undefined){this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var m=0,ml=morphAttribute.length;m<ml;m++){var name=morphAttribute[m].name||String(m);this.morphTargetInfluences.push(0);this.morphTargetDictionary[name]=m;}}}}else{var morphTargets=geometry.morphTargets;if(morphTargets!==undefined&&morphTargets.length>0){console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');}}}}]);return Points;}(Object3D);Points.prototype.isPoints=true;function testPoint(point,index,localThresholdSq,matrixWorld,raycaster,intersects,object){var rayPointDistanceSq=_ray.distanceSqToPoint(point);if(rayPointDistanceSq<localThresholdSq){var intersectPoint=new Vector3();_ray.closestPointToPoint(point,intersectPoint);intersectPoint.applyMatrix4(matrixWorld);var distance=raycaster.ray.origin.distanceTo(intersectPoint);if(distance<raycaster.near||distance>raycaster.far)return;intersects.push({distance:distance,distanceToRay:Math.sqrt(rayPointDistanceSq),point:intersectPoint,index:index,face:null,object:object});}}var VideoTexture=/*#__PURE__*/function(_Texture5){_inherits(VideoTexture,_Texture5);var _super53=_createSuper(VideoTexture);function VideoTexture(video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){var _this43;_classCallCheck(this,VideoTexture);_this43=_super53.call(this,video,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);_this43.format=format!==undefined?format:RGBFormat;_this43.minFilter=minFilter!==undefined?minFilter:LinearFilter;_this43.magFilter=magFilter!==undefined?magFilter:LinearFilter;_this43.generateMipmaps=false;var scope=_assertThisInitialized(_this43);function updateVideo(){scope.needsUpdate=true;video.requestVideoFrameCallback(updateVideo);}if('requestVideoFrameCallback'in video){video.requestVideoFrameCallback(updateVideo);}return _this43;}_createClass(VideoTexture,[{key:\"clone\",value:function clone(){return new this.constructor(this.image).copy(this);}},{key:\"update\",value:function update(){var video=this.image;var hasVideoFrameCallback=('requestVideoFrameCallback'in video);if(hasVideoFrameCallback===false&&video.readyState>=video.HAVE_CURRENT_DATA){this.needsUpdate=true;}}}]);return VideoTexture;}(Texture);VideoTexture.prototype.isVideoTexture=true;var CompressedTexture=/*#__PURE__*/function(_Texture6){_inherits(CompressedTexture,_Texture6);var _super54=_createSuper(CompressedTexture);function CompressedTexture(mipmaps,width,height,format,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,encoding){var _this44;_classCallCheck(this,CompressedTexture);_this44=_super54.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy,encoding);_this44.image={width:width,height:height};_this44.mipmaps=mipmaps;// no flipping for cube textures\n// (also flipping doesn't work for compressed textures )\n_this44.flipY=false;// can't generate mipmaps for compressed textures\n// mips must be embedded in DDS files\n_this44.generateMipmaps=false;return _this44;}return _createClass(CompressedTexture);}(Texture);CompressedTexture.prototype.isCompressedTexture=true;var CanvasTexture=/*#__PURE__*/function(_Texture7){_inherits(CanvasTexture,_Texture7);var _super55=_createSuper(CanvasTexture);function CanvasTexture(canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy){var _this45;_classCallCheck(this,CanvasTexture);_this45=_super55.call(this,canvas,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);_this45.needsUpdate=true;return _this45;}return _createClass(CanvasTexture);}(Texture);CanvasTexture.prototype.isCanvasTexture=true;var DepthTexture=/*#__PURE__*/function(_Texture8){_inherits(DepthTexture,_Texture8);var _super56=_createSuper(DepthTexture);function DepthTexture(width,height,type,mapping,wrapS,wrapT,magFilter,minFilter,anisotropy,format){var _this46;_classCallCheck(this,DepthTexture);format=format!==undefined?format:DepthFormat;if(format!==DepthFormat&&format!==DepthStencilFormat){throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');}if(type===undefined&&format===DepthFormat)type=UnsignedShortType;if(type===undefined&&format===DepthStencilFormat)type=UnsignedInt248Type;_this46=_super56.call(this,null,mapping,wrapS,wrapT,magFilter,minFilter,format,type,anisotropy);_this46.image={width:width,height:height};_this46.magFilter=magFilter!==undefined?magFilter:NearestFilter;_this46.minFilter=minFilter!==undefined?minFilter:NearestFilter;_this46.flipY=false;_this46.generateMipmaps=false;return _this46;}return _createClass(DepthTexture);}(Texture);DepthTexture.prototype.isDepthTexture=true;var CircleGeometry=/*#__PURE__*/function(_BufferGeometry3){_inherits(CircleGeometry,_BufferGeometry3);var _super57=_createSuper(CircleGeometry);function CircleGeometry(){var _this47;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var segments=arguments.length>1&&arguments[1]!==undefined?arguments[1]:8;var thetaStart=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var thetaLength=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Math.PI*2;_classCallCheck(this,CircleGeometry);_this47=_super57.call(this);_this47.type='CircleGeometry';_this47.parameters={radius:radius,segments:segments,thetaStart:thetaStart,thetaLength:thetaLength};segments=Math.max(3,segments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar vertex=new Vector3();var uv=new Vector2();// center point\nvertices.push(0,0,0);normals.push(0,0,1);uvs.push(0.5,0.5);for(var s=0,_i175=3;s<=segments;s++,_i175+=3){var segment=thetaStart+s/segments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uvs\nuv.x=(vertices[_i175]/radius+1)/2;uv.y=(vertices[_i175+1]/radius+1)/2;uvs.push(uv.x,uv.y);}// indices\nfor(var _i176=1;_i176<=segments;_i176++){indices.push(_i176,_i176+1,0);}// build geometry\n_this47.setIndex(indices);_this47.setAttribute('position',new Float32BufferAttribute(vertices,3));_this47.setAttribute('normal',new Float32BufferAttribute(normals,3));_this47.setAttribute('uv',new Float32BufferAttribute(uvs,2));return _this47;}_createClass(CircleGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new CircleGeometry(data.radius,data.segments,data.thetaStart,data.thetaLength);}}]);return CircleGeometry;}(BufferGeometry);var CylinderGeometry=/*#__PURE__*/function(_BufferGeometry4){_inherits(CylinderGeometry,_BufferGeometry4);var _super58=_createSuper(CylinderGeometry);function CylinderGeometry(){var _this48;var radiusTop=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var radiusBottom=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var height=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var radialSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:8;var heightSegments=arguments.length>4&&arguments[4]!==undefined?arguments[4]:1;var openEnded=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;var thetaStart=arguments.length>6&&arguments[6]!==undefined?arguments[6]:0;var thetaLength=arguments.length>7&&arguments[7]!==undefined?arguments[7]:Math.PI*2;_classCallCheck(this,CylinderGeometry);_this48=_super58.call(this);_this48.type='CylinderGeometry';_this48.parameters={radiusTop:radiusTop,radiusBottom:radiusBottom,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};var scope=_assertThisInitialized(_this48);radialSegments=Math.floor(radialSegments);heightSegments=Math.floor(heightSegments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar index=0;var indexArray=[];var halfHeight=height/2;var groupStart=0;// generate geometry\ngenerateTorso();if(openEnded===false){if(radiusTop>0)generateCap(true);if(radiusBottom>0)generateCap(false);}// build geometry\n_this48.setIndex(indices);_this48.setAttribute('position',new Float32BufferAttribute(vertices,3));_this48.setAttribute('normal',new Float32BufferAttribute(normals,3));_this48.setAttribute('uv',new Float32BufferAttribute(uvs,2));function generateTorso(){var normal=new Vector3();var vertex=new Vector3();var groupCount=0;// this will be used to calculate the normal\nvar slope=(radiusBottom-radiusTop)/height;// generate vertices, normals and uvs\nfor(var y=0;y<=heightSegments;y++){var indexRow=[];var v=y/heightSegments;// calculate the radius of the current row\nvar radius=v*(radiusBottom-radiusTop)+radiusTop;for(var x=0;x<=radialSegments;x++){var u=x/radialSegments;var theta=u*thetaLength+thetaStart;var sinTheta=Math.sin(theta);var cosTheta=Math.cos(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=-v*height+halfHeight;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.set(sinTheta,slope,cosTheta).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u,1-v);// save index of vertex in respective row\nindexRow.push(index++);}// now save vertices of the row in our index array\nindexArray.push(indexRow);}// generate indices\nfor(var _x4=0;_x4<radialSegments;_x4++){for(var _y2=0;_y2<heightSegments;_y2++){// we use the index array to access the correct indices\nvar a=indexArray[_y2][_x4];var b=indexArray[_y2+1][_x4];var c=indexArray[_y2+1][_x4+1];var d=indexArray[_y2][_x4+1];// faces\nindices.push(a,b,d);indices.push(b,c,d);// update group counter\ngroupCount+=6;}}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,0);// calculate new start value for groups\ngroupStart+=groupCount;}function generateCap(top){// save the index of the first center vertex\nvar centerIndexStart=index;var uv=new Vector2();var vertex=new Vector3();var groupCount=0;var radius=top===true?radiusTop:radiusBottom;var sign=top===true?1:-1;// first we generate the center vertex data of the cap.\n// because the geometry needs one set of uvs per face,\n// we must generate a center vertex per face/segment\nfor(var x=1;x<=radialSegments;x++){// vertex\nvertices.push(0,halfHeight*sign,0);// normal\nnormals.push(0,sign,0);// uv\nuvs.push(0.5,0.5);// increase index\nindex++;}// save the index of the last center vertex\nvar centerIndexEnd=index;// now we generate the surrounding vertices, normals and uvs\nfor(var _x5=0;_x5<=radialSegments;_x5++){var u=_x5/radialSegments;var theta=u*thetaLength+thetaStart;var cosTheta=Math.cos(theta);var sinTheta=Math.sin(theta);// vertex\nvertex.x=radius*sinTheta;vertex.y=halfHeight*sign;vertex.z=radius*cosTheta;vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,sign,0);// uv\nuv.x=cosTheta*0.5+0.5;uv.y=sinTheta*0.5*sign+0.5;uvs.push(uv.x,uv.y);// increase index\nindex++;}// generate indices\nfor(var _x6=0;_x6<radialSegments;_x6++){var c=centerIndexStart+_x6;var _i177=centerIndexEnd+_x6;if(top===true){// face top\nindices.push(_i177,_i177+1,c);}else{// face bottom\nindices.push(_i177+1,_i177,c);}groupCount+=3;}// add a group to the geometry. this will ensure multi material support\nscope.addGroup(groupStart,groupCount,top===true?1:2);// calculate new start value for groups\ngroupStart+=groupCount;}return _this48;}_createClass(CylinderGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new CylinderGeometry(data.radiusTop,data.radiusBottom,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);}}]);return CylinderGeometry;}(BufferGeometry);var ConeGeometry=/*#__PURE__*/function(_CylinderGeometry){_inherits(ConeGeometry,_CylinderGeometry);var _super59=_createSuper(ConeGeometry);function ConeGeometry(){var _this49;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var height=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var radialSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8;var heightSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var openEnded=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;var thetaStart=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;var thetaLength=arguments.length>6&&arguments[6]!==undefined?arguments[6]:Math.PI*2;_classCallCheck(this,ConeGeometry);_this49=_super59.call(this,0,radius,height,radialSegments,heightSegments,openEnded,thetaStart,thetaLength);_this49.type='ConeGeometry';_this49.parameters={radius:radius,height:height,radialSegments:radialSegments,heightSegments:heightSegments,openEnded:openEnded,thetaStart:thetaStart,thetaLength:thetaLength};return _this49;}_createClass(ConeGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new ConeGeometry(data.radius,data.height,data.radialSegments,data.heightSegments,data.openEnded,data.thetaStart,data.thetaLength);}}]);return ConeGeometry;}(CylinderGeometry);var PolyhedronGeometry=/*#__PURE__*/function(_BufferGeometry5){_inherits(PolyhedronGeometry,_BufferGeometry5);var _super60=_createSuper(PolyhedronGeometry);function PolyhedronGeometry(){var _this50;var vertices=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var indices=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var radius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var detail=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;_classCallCheck(this,PolyhedronGeometry);_this50=_super60.call(this);_this50.type='PolyhedronGeometry';_this50.parameters={vertices:vertices,indices:indices,radius:radius,detail:detail};// default buffer data\nvar vertexBuffer=[];var uvBuffer=[];// the subdivision creates the vertex buffer data\nsubdivide(detail);// all vertices should lie on a conceptual sphere with a given radius\napplyRadius(radius);// finally, create the uv data\ngenerateUVs();// build non-indexed geometry\n_this50.setAttribute('position',new Float32BufferAttribute(vertexBuffer,3));_this50.setAttribute('normal',new Float32BufferAttribute(vertexBuffer.slice(),3));_this50.setAttribute('uv',new Float32BufferAttribute(uvBuffer,2));if(detail===0){_this50.computeVertexNormals();// flat normals\n}else{_this50.normalizeNormals();// smooth normals\n}// helper functions\nfunction subdivide(detail){var a=new Vector3();var b=new Vector3();var c=new Vector3();// iterate over all faces and apply a subdivison with the given detail value\nfor(var _i178=0;_i178<indices.length;_i178+=3){// get the vertices of the face\ngetVertexByIndex(indices[_i178+0],a);getVertexByIndex(indices[_i178+1],b);getVertexByIndex(indices[_i178+2],c);// perform subdivision\nsubdivideFace(a,b,c,detail);}}function subdivideFace(a,b,c,detail){var cols=detail+1;// we use this multidimensional array as a data structure for creating the subdivision\nvar v=[];// construct all of the vertices for this subdivision\nfor(var _i179=0;_i179<=cols;_i179++){v[_i179]=[];var aj=a.clone().lerp(c,_i179/cols);var bj=b.clone().lerp(c,_i179/cols);var rows=cols-_i179;for(var j=0;j<=rows;j++){if(j===0&&_i179===cols){v[_i179][j]=aj;}else{v[_i179][j]=aj.clone().lerp(bj,j/rows);}}}// construct all of the faces\nfor(var _i180=0;_i180<cols;_i180++){for(var _j5=0;_j5<2*(cols-_i180)-1;_j5++){var k=Math.floor(_j5/2);if(_j5%2===0){pushVertex(v[_i180][k+1]);pushVertex(v[_i180+1][k]);pushVertex(v[_i180][k]);}else{pushVertex(v[_i180][k+1]);pushVertex(v[_i180+1][k+1]);pushVertex(v[_i180+1][k]);}}}}function applyRadius(radius){var vertex=new Vector3();// iterate over the entire buffer and apply the radius to each vertex\nfor(var _i181=0;_i181<vertexBuffer.length;_i181+=3){vertex.x=vertexBuffer[_i181+0];vertex.y=vertexBuffer[_i181+1];vertex.z=vertexBuffer[_i181+2];vertex.normalize().multiplyScalar(radius);vertexBuffer[_i181+0]=vertex.x;vertexBuffer[_i181+1]=vertex.y;vertexBuffer[_i181+2]=vertex.z;}}function generateUVs(){var vertex=new Vector3();for(var _i182=0;_i182<vertexBuffer.length;_i182+=3){vertex.x=vertexBuffer[_i182+0];vertex.y=vertexBuffer[_i182+1];vertex.z=vertexBuffer[_i182+2];var u=azimuth(vertex)/2/Math.PI+0.5;var v=inclination(vertex)/Math.PI+0.5;uvBuffer.push(u,1-v);}correctUVs();correctSeam();}function correctSeam(){// handle case when face straddles the seam, see #3269\nfor(var _i183=0;_i183<uvBuffer.length;_i183+=6){// uv data of a single face\nvar x0=uvBuffer[_i183+0];var x1=uvBuffer[_i183+2];var x2=uvBuffer[_i183+4];var max=Math.max(x0,x1,x2);var min=Math.min(x0,x1,x2);// 0.9 is somewhat arbitrary\nif(max>0.9&&min<0.1){if(x0<0.2)uvBuffer[_i183+0]+=1;if(x1<0.2)uvBuffer[_i183+2]+=1;if(x2<0.2)uvBuffer[_i183+4]+=1;}}}function pushVertex(vertex){vertexBuffer.push(vertex.x,vertex.y,vertex.z);}function getVertexByIndex(index,vertex){var stride=index*3;vertex.x=vertices[stride+0];vertex.y=vertices[stride+1];vertex.z=vertices[stride+2];}function correctUVs(){var a=new Vector3();var b=new Vector3();var c=new Vector3();var centroid=new Vector3();var uvA=new Vector2();var uvB=new Vector2();var uvC=new Vector2();for(var _i184=0,j=0;_i184<vertexBuffer.length;_i184+=9,j+=6){a.set(vertexBuffer[_i184+0],vertexBuffer[_i184+1],vertexBuffer[_i184+2]);b.set(vertexBuffer[_i184+3],vertexBuffer[_i184+4],vertexBuffer[_i184+5]);c.set(vertexBuffer[_i184+6],vertexBuffer[_i184+7],vertexBuffer[_i184+8]);uvA.set(uvBuffer[j+0],uvBuffer[j+1]);uvB.set(uvBuffer[j+2],uvBuffer[j+3]);uvC.set(uvBuffer[j+4],uvBuffer[j+5]);centroid.copy(a).add(b).add(c).divideScalar(3);var azi=azimuth(centroid);correctUV(uvA,j+0,a,azi);correctUV(uvB,j+2,b,azi);correctUV(uvC,j+4,c,azi);}}function correctUV(uv,stride,vector,azimuth){if(azimuth<0&&uv.x===1){uvBuffer[stride]=uv.x-1;}if(vector.x===0&&vector.z===0){uvBuffer[stride]=azimuth/2/Math.PI+0.5;}}// Angle around the Y axis, counter-clockwise when looking from above.\nfunction azimuth(vector){return Math.atan2(vector.z,-vector.x);}// Angle above the XZ plane.\nfunction inclination(vector){return Math.atan2(-vector.y,Math.sqrt(vector.x*vector.x+vector.z*vector.z));}return _this50;}_createClass(PolyhedronGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new PolyhedronGeometry(data.vertices,data.indices,data.radius,data.details);}}]);return PolyhedronGeometry;}(BufferGeometry);var DodecahedronGeometry=/*#__PURE__*/function(_PolyhedronGeometry){_inherits(DodecahedronGeometry,_PolyhedronGeometry);var _super61=_createSuper(DodecahedronGeometry);function DodecahedronGeometry(){var _this51;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var detail=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,DodecahedronGeometry);var t=(1+Math.sqrt(5))/2;var r=1/t;var vertices=[// (±1, ±1, ±1)\n-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,// (0, ±1/φ, ±φ)\n0,-r,-t,0,-r,t,0,r,-t,0,r,t,// (±1/φ, ±φ, 0)\n-r,-t,0,-r,t,0,r,-t,0,r,t,0,// (±φ, 0, ±1/φ)\n-t,0,-r,t,0,-r,-t,0,r,t,0,r];var indices=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];_this51=_super61.call(this,vertices,indices,radius,detail);_this51.type='DodecahedronGeometry';_this51.parameters={radius:radius,detail:detail};return _this51;}_createClass(DodecahedronGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new DodecahedronGeometry(data.radius,data.detail);}}]);return DodecahedronGeometry;}(PolyhedronGeometry);var _v0=new Vector3();var _v1$1=new Vector3();var _normal=new Vector3();var _triangle=new Triangle();var EdgesGeometry=/*#__PURE__*/function(_BufferGeometry6){_inherits(EdgesGeometry,_BufferGeometry6);var _super62=_createSuper(EdgesGeometry);function EdgesGeometry(){var _this52;var geometry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var thresholdAngle=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;_classCallCheck(this,EdgesGeometry);_this52=_super62.call(this);_this52.type='EdgesGeometry';_this52.parameters={geometry:geometry,thresholdAngle:thresholdAngle};if(geometry!==null){var precisionPoints=4;var precision=Math.pow(10,precisionPoints);var thresholdDot=Math.cos(DEG2RAD*thresholdAngle);var indexAttr=geometry.getIndex();var positionAttr=geometry.getAttribute('position');var indexCount=indexAttr?indexAttr.count:positionAttr.count;var indexArr=[0,0,0];var vertKeys=['a','b','c'];var hashes=new Array(3);var edgeData={};var vertices=[];for(var _i185=0;_i185<indexCount;_i185+=3){if(indexAttr){indexArr[0]=indexAttr.getX(_i185);indexArr[1]=indexAttr.getX(_i185+1);indexArr[2]=indexAttr.getX(_i185+2);}else{indexArr[0]=_i185;indexArr[1]=_i185+1;indexArr[2]=_i185+2;}var a=_triangle.a,b=_triangle.b,c=_triangle.c;a.fromBufferAttribute(positionAttr,indexArr[0]);b.fromBufferAttribute(positionAttr,indexArr[1]);c.fromBufferAttribute(positionAttr,indexArr[2]);_triangle.getNormal(_normal);// create hashes for the edge from the vertices\nhashes[0]=\"\".concat(Math.round(a.x*precision),\",\").concat(Math.round(a.y*precision),\",\").concat(Math.round(a.z*precision));hashes[1]=\"\".concat(Math.round(b.x*precision),\",\").concat(Math.round(b.y*precision),\",\").concat(Math.round(b.z*precision));hashes[2]=\"\".concat(Math.round(c.x*precision),\",\").concat(Math.round(c.y*precision),\",\").concat(Math.round(c.z*precision));// skip degenerate triangles\nif(hashes[0]===hashes[1]||hashes[1]===hashes[2]||hashes[2]===hashes[0]){continue;}// iterate over every edge\nfor(var j=0;j<3;j++){// get the first and next vertex making up the edge\nvar jNext=(j+1)%3;var vecHash0=hashes[j];var vecHash1=hashes[jNext];var v0=_triangle[vertKeys[j]];var v1=_triangle[vertKeys[jNext]];var hash=\"\".concat(vecHash0,\"_\").concat(vecHash1);var reverseHash=\"\".concat(vecHash1,\"_\").concat(vecHash0);if(reverseHash in edgeData&&edgeData[reverseHash]){// if we found a sibling edge add it into the vertex array if\n// it meets the angle threshold and delete the edge from the map.\nif(_normal.dot(edgeData[reverseHash].normal)<=thresholdDot){vertices.push(v0.x,v0.y,v0.z);vertices.push(v1.x,v1.y,v1.z);}edgeData[reverseHash]=null;}else if(!(hash in edgeData)){// if we've already got an edge here then skip adding a new one\nedgeData[hash]={index0:indexArr[j],index1:indexArr[jNext],normal:_normal.clone()};}}}// iterate over all remaining, unmatched edges and add them to the vertex array\nfor(var key in edgeData){if(edgeData[key]){var _edgeData$key=edgeData[key],index0=_edgeData$key.index0,index1=_edgeData$key.index1;_v0.fromBufferAttribute(positionAttr,index0);_v1$1.fromBufferAttribute(positionAttr,index1);vertices.push(_v0.x,_v0.y,_v0.z);vertices.push(_v1$1.x,_v1$1.y,_v1$1.z);}}_this52.setAttribute('position',new Float32BufferAttribute(vertices,3));}return _this52;}return _createClass(EdgesGeometry);}(BufferGeometry);/**\r\n * Extensible curve object.\r\n *\r\n * Some common of curve methods:\r\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\r\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following curves inherit from THREE.Curve:\r\n *\r\n * -- 2D curves --\r\n * THREE.ArcCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.EllipseCurve\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.SplineCurve\r\n *\r\n * -- 3D curves --\r\n * THREE.CatmullRomCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath.\r\n *\r\n **/var Curve=/*#__PURE__*/function(){function Curve(){_classCallCheck(this,Curve);this.type='Curve';this.arcLengthDivisions=200;}// Virtual base class method to overwrite and implement in subclasses\n//\t- t [0 .. 1]\n_createClass(Curve,[{key:\"getPoint\",value:function/* t, optionalTarget */getPoint(){console.warn('THREE.Curve: .getPoint() not implemented.');return null;}// Get point at relative position in curve according to arc length\n// - u [0 .. 1]\n},{key:\"getPointAt\",value:function getPointAt(u,optionalTarget){var t=this.getUtoTmapping(u);return this.getPoint(t,optionalTarget);}// Get sequence of points using getPoint( t )\n},{key:\"getPoints\",value:function getPoints(){var divisions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPoint(d/divisions));}return points;}// Get sequence of points using getPointAt( u )\n},{key:\"getSpacedPoints\",value:function getSpacedPoints(){var divisions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:5;var points=[];for(var d=0;d<=divisions;d++){points.push(this.getPointAt(d/divisions));}return points;}// Get total curve arc length\n},{key:\"getLength\",value:function getLength(){var lengths=this.getLengths();return lengths[lengths.length-1];}// Get list of cumulative segment lengths\n},{key:\"getLengths\",value:function getLengths(){var divisions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===divisions+1&&!this.needsUpdate){return this.cacheArcLengths;}this.needsUpdate=false;var cache=[];var current,last=this.getPoint(0);var sum=0;cache.push(0);for(var p=1;p<=divisions;p++){current=this.getPoint(p/divisions);sum+=current.distanceTo(last);cache.push(sum);last=current;}this.cacheArcLengths=cache;return cache;// { sums: cache, sum: sum }; Sum is in the last element.\n}},{key:\"updateArcLengths\",value:function updateArcLengths(){this.needsUpdate=true;this.getLengths();}// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n},{key:\"getUtoTmapping\",value:function getUtoTmapping(u,distance){var arcLengths=this.getLengths();var i=0;var il=arcLengths.length;var targetArcLength;// The targeted u distance value to get\nif(distance){targetArcLength=distance;}else{targetArcLength=u*arcLengths[il-1];}// binary search for the index with largest value smaller than target u distance\nvar low=0,high=il-1,comparison;while(low<=high){i=Math.floor(low+(high-low)/2);// less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\ncomparison=arcLengths[i]-targetArcLength;if(comparison<0){low=i+1;}else if(comparison>0){high=i-1;}else{high=i;break;// DONE\n}}i=high;if(arcLengths[i]===targetArcLength){return i/(il-1);}// we could get finer grain at lengths, or use simple interpolation between two points\nvar lengthBefore=arcLengths[i];var lengthAfter=arcLengths[i+1];var segmentLength=lengthAfter-lengthBefore;// determine where we are between the 'before' and 'after' points\nvar segmentFraction=(targetArcLength-lengthBefore)/segmentLength;// add that fractional amount to t\nvar t=(i+segmentFraction)/(il-1);return t;}// Returns a unit vector tangent at t\n// In case any sub curve does not implement its tangent derivation,\n// 2 points a small delta apart will be used to find its gradient\n// which seems to give a reasonable approximation\n},{key:\"getTangent\",value:function getTangent(t,optionalTarget){var delta=0.0001;var t1=t-delta;var t2=t+delta;// Capping in case of danger\nif(t1<0)t1=0;if(t2>1)t2=1;var pt1=this.getPoint(t1);var pt2=this.getPoint(t2);var tangent=optionalTarget||(pt1.isVector2?new Vector2():new Vector3());tangent.copy(pt2).sub(pt1).normalize();return tangent;}},{key:\"getTangentAt\",value:function getTangentAt(u,optionalTarget){var t=this.getUtoTmapping(u);return this.getTangent(t,optionalTarget);}},{key:\"computeFrenetFrames\",value:function computeFrenetFrames(segments,closed){// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\nvar normal=new Vector3();var tangents=[];var normals=[];var binormals=[];var vec=new Vector3();var mat=new Matrix4();// compute the tangent vectors for each segment on the curve\nfor(var _i186=0;_i186<=segments;_i186++){var u=_i186/segments;tangents[_i186]=this.getTangentAt(u,new Vector3());}// select an initial normal vector perpendicular to the first tangent vector,\n// and in the direction of the minimum tangent xyz component\nnormals[0]=new Vector3();binormals[0]=new Vector3();var min=Number.MAX_VALUE;var tx=Math.abs(tangents[0].x);var ty=Math.abs(tangents[0].y);var tz=Math.abs(tangents[0].z);if(tx<=min){min=tx;normal.set(1,0,0);}if(ty<=min){min=ty;normal.set(0,1,0);}if(tz<=min){normal.set(0,0,1);}vec.crossVectors(tangents[0],normal).normalize();normals[0].crossVectors(tangents[0],vec);binormals[0].crossVectors(tangents[0],normals[0]);// compute the slowly-varying normal and binormal vectors for each segment on the curve\nfor(var _i187=1;_i187<=segments;_i187++){normals[_i187]=normals[_i187-1].clone();binormals[_i187]=binormals[_i187-1].clone();vec.crossVectors(tangents[_i187-1],tangents[_i187]);if(vec.length()>Number.EPSILON){vec.normalize();var theta=Math.acos(clamp(tangents[_i187-1].dot(tangents[_i187]),-1,1));// clamp for floating pt errors\nnormals[_i187].applyMatrix4(mat.makeRotationAxis(vec,theta));}binormals[_i187].crossVectors(tangents[_i187],normals[_i187]);}// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\nif(closed===true){var _theta=Math.acos(clamp(normals[0].dot(normals[segments]),-1,1));_theta/=segments;if(tangents[0].dot(vec.crossVectors(normals[0],normals[segments]))>0){_theta=-_theta;}for(var _i188=1;_i188<=segments;_i188++){// twist a little...\nnormals[_i188].applyMatrix4(mat.makeRotationAxis(tangents[_i188],_theta*_i188));binormals[_i188].crossVectors(tangents[_i188],normals[_i188]);}}return{tangents:tangents,normals:normals,binormals:binormals};}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(source){this.arcLengthDivisions=source.arcLengthDivisions;return this;}},{key:\"toJSON\",value:function toJSON(){var data={metadata:{version:4.5,type:'Curve',generator:'Curve.toJSON'}};data.arcLengthDivisions=this.arcLengthDivisions;data.type=this.type;return data;}},{key:\"fromJSON\",value:function fromJSON(json){this.arcLengthDivisions=json.arcLengthDivisions;return this;}}]);return Curve;}();var EllipseCurve=/*#__PURE__*/function(_Curve){_inherits(EllipseCurve,_Curve);var _super63=_createSuper(EllipseCurve);function EllipseCurve(){var _this53;var aX=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var aY=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var xRadius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var yRadius=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var aStartAngle=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var aEndAngle=arguments.length>5&&arguments[5]!==undefined?arguments[5]:Math.PI*2;var aClockwise=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;var aRotation=arguments.length>7&&arguments[7]!==undefined?arguments[7]:0;_classCallCheck(this,EllipseCurve);_this53=_super63.call(this);_this53.type='EllipseCurve';_this53.aX=aX;_this53.aY=aY;_this53.xRadius=xRadius;_this53.yRadius=yRadius;_this53.aStartAngle=aStartAngle;_this53.aEndAngle=aEndAngle;_this53.aClockwise=aClockwise;_this53.aRotation=aRotation;return _this53;}_createClass(EllipseCurve,[{key:\"getPoint\",value:function getPoint(t,optionalTarget){var point=optionalTarget||new Vector2();var twoPi=Math.PI*2;var deltaAngle=this.aEndAngle-this.aStartAngle;var samePoints=Math.abs(deltaAngle)<Number.EPSILON;// ensures that deltaAngle is 0 .. 2 PI\nwhile(deltaAngle<0){deltaAngle+=twoPi;}while(deltaAngle>twoPi){deltaAngle-=twoPi;}if(deltaAngle<Number.EPSILON){if(samePoints){deltaAngle=0;}else{deltaAngle=twoPi;}}if(this.aClockwise===true&&!samePoints){if(deltaAngle===twoPi){deltaAngle=-twoPi;}else{deltaAngle=deltaAngle-twoPi;}}var angle=this.aStartAngle+t*deltaAngle;var x=this.aX+this.xRadius*Math.cos(angle);var y=this.aY+this.yRadius*Math.sin(angle);if(this.aRotation!==0){var cos=Math.cos(this.aRotation);var sin=Math.sin(this.aRotation);var tx=x-this.aX;var ty=y-this.aY;// Rotate the point about the center of the ellipse.\nx=tx*cos-ty*sin+this.aX;y=tx*sin+ty*cos+this.aY;}return point.set(x,y);}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(EllipseCurve.prototype),\"copy\",this).call(this,source);this.aX=source.aX;this.aY=source.aY;this.xRadius=source.xRadius;this.yRadius=source.yRadius;this.aStartAngle=source.aStartAngle;this.aEndAngle=source.aEndAngle;this.aClockwise=source.aClockwise;this.aRotation=source.aRotation;return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(EllipseCurve.prototype),\"toJSON\",this).call(this);data.aX=this.aX;data.aY=this.aY;data.xRadius=this.xRadius;data.yRadius=this.yRadius;data.aStartAngle=this.aStartAngle;data.aEndAngle=this.aEndAngle;data.aClockwise=this.aClockwise;data.aRotation=this.aRotation;return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(EllipseCurve.prototype),\"fromJSON\",this).call(this,json);this.aX=json.aX;this.aY=json.aY;this.xRadius=json.xRadius;this.yRadius=json.yRadius;this.aStartAngle=json.aStartAngle;this.aEndAngle=json.aEndAngle;this.aClockwise=json.aClockwise;this.aRotation=json.aRotation;return this;}}]);return EllipseCurve;}(Curve);EllipseCurve.prototype.isEllipseCurve=true;var ArcCurve=/*#__PURE__*/function(_EllipseCurve){_inherits(ArcCurve,_EllipseCurve);var _super64=_createSuper(ArcCurve);function ArcCurve(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var _this54;_classCallCheck(this,ArcCurve);_this54=_super64.call(this,aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);_this54.type='ArcCurve';return _this54;}return _createClass(ArcCurve);}(EllipseCurve);ArcCurve.prototype.isArcCurve=true;/**\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */ /*\r\nBased on an optimized c++ solution in\r\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n - http://ideone.com/NoEbVM\r\n\r\nThis CubicPoly class could be used for reusing some variables and calculations,\r\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\nwhich can be placed in CurveUtils.\r\n*/function CubicPoly(){var c0=0,c1=0,c2=0,c3=0;/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */function init(x0,x1,t0,t1){c0=x0;c1=t0;c2=-3*x0+3*x1-2*t0-t1;c3=2*x0-2*x1+t0+t1;}return{initCatmullRom:function initCatmullRom(x0,x1,x2,x3,tension){init(x1,x2,tension*(x2-x0),tension*(x3-x1));},initNonuniformCatmullRom:function initNonuniformCatmullRom(x0,x1,x2,x3,dt0,dt1,dt2){// compute tangents when parameterized in [t1,t2]\nvar t1=(x1-x0)/dt0-(x2-x0)/(dt0+dt1)+(x2-x1)/dt1;var t2=(x2-x1)/dt1-(x3-x1)/(dt1+dt2)+(x3-x2)/dt2;// rescale tangents for parametrization in [0,1]\nt1*=dt1;t2*=dt1;init(x1,x2,t1,t2);},calc:function calc(t){var t2=t*t;var t3=t2*t;return c0+c1*t+c2*t2+c3*t3;}};}//\nvar tmp=new Vector3();var px=new CubicPoly(),py=new CubicPoly(),pz=new CubicPoly();var CatmullRomCurve3=/*#__PURE__*/function(_Curve2){_inherits(CatmullRomCurve3,_Curve2);var _super65=_createSuper(CatmullRomCurve3);function CatmullRomCurve3(){var _this55;var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var closed=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var curveType=arguments.length>2&&arguments[2]!==undefined?arguments[2]:'centripetal';var tension=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0.5;_classCallCheck(this,CatmullRomCurve3);_this55=_super65.call(this);_this55.type='CatmullRomCurve3';_this55.points=points;_this55.closed=closed;_this55.curveType=curveType;_this55.tension=tension;return _this55;}_createClass(CatmullRomCurve3,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var point=optionalTarget;var points=this.points;var l=points.length;var p=(l-(this.closed?0:1))*t;var intPoint=Math.floor(p);var weight=p-intPoint;if(this.closed){intPoint+=intPoint>0?0:(Math.floor(Math.abs(intPoint)/l)+1)*l;}else if(weight===0&&intPoint===l-1){intPoint=l-2;weight=1;}var p0,p3;// 4 points (p1 & p2 defined below)\nif(this.closed||intPoint>0){p0=points[(intPoint-1)%l];}else{// extrapolate first point\ntmp.subVectors(points[0],points[1]).add(points[0]);p0=tmp;}var p1=points[intPoint%l];var p2=points[(intPoint+1)%l];if(this.closed||intPoint+2<l){p3=points[(intPoint+2)%l];}else{// extrapolate last point\ntmp.subVectors(points[l-1],points[l-2]).add(points[l-1]);p3=tmp;}if(this.curveType==='centripetal'||this.curveType==='chordal'){// init Centripetal / Chordal Catmull-Rom\nvar pow=this.curveType==='chordal'?0.5:0.25;var dt0=Math.pow(p0.distanceToSquared(p1),pow);var dt1=Math.pow(p1.distanceToSquared(p2),pow);var dt2=Math.pow(p2.distanceToSquared(p3),pow);// safety check for repeated points\nif(dt1<1e-4)dt1=1.0;if(dt0<1e-4)dt0=dt1;if(dt2<1e-4)dt2=dt1;px.initNonuniformCatmullRom(p0.x,p1.x,p2.x,p3.x,dt0,dt1,dt2);py.initNonuniformCatmullRom(p0.y,p1.y,p2.y,p3.y,dt0,dt1,dt2);pz.initNonuniformCatmullRom(p0.z,p1.z,p2.z,p3.z,dt0,dt1,dt2);}else if(this.curveType==='catmullrom'){px.initCatmullRom(p0.x,p1.x,p2.x,p3.x,this.tension);py.initCatmullRom(p0.y,p1.y,p2.y,p3.y,this.tension);pz.initCatmullRom(p0.z,p1.z,p2.z,p3.z,this.tension);}point.set(px.calc(weight),py.calc(weight),pz.calc(weight));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(CatmullRomCurve3.prototype),\"copy\",this).call(this,source);this.points=[];for(var _i189=0,l=source.points.length;_i189<l;_i189++){var point=source.points[_i189];this.points.push(point.clone());}this.closed=source.closed;this.curveType=source.curveType;this.tension=source.tension;return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(CatmullRomCurve3.prototype),\"toJSON\",this).call(this);data.points=[];for(var _i190=0,l=this.points.length;_i190<l;_i190++){var point=this.points[_i190];data.points.push(point.toArray());}data.closed=this.closed;data.curveType=this.curveType;data.tension=this.tension;return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(CatmullRomCurve3.prototype),\"fromJSON\",this).call(this,json);this.points=[];for(var _i191=0,l=json.points.length;_i191<l;_i191++){var point=json.points[_i191];this.points.push(new Vector3().fromArray(point));}this.closed=json.closed;this.curveType=json.curveType;this.tension=json.tension;return this;}}]);return CatmullRomCurve3;}(Curve);CatmullRomCurve3.prototype.isCatmullRomCurve3=true;/**\r\n * Bezier Curves formulas obtained from\r\n * http://en.wikipedia.org/wiki/Bézier_curve\r\n */function CatmullRom(t,p0,p1,p2,p3){var v0=(p2-p0)*0.5;var v1=(p3-p1)*0.5;var t2=t*t;var t3=t*t2;return(2*p1-2*p2+v0+v1)*t3+(-3*p1+3*p2-2*v0-v1)*t2+v0*t+p1;}//\nfunction QuadraticBezierP0(t,p){var k=1-t;return k*k*p;}function QuadraticBezierP1(t,p){return 2*(1-t)*t*p;}function QuadraticBezierP2(t,p){return t*t*p;}function QuadraticBezier(t,p0,p1,p2){return QuadraticBezierP0(t,p0)+QuadraticBezierP1(t,p1)+QuadraticBezierP2(t,p2);}//\nfunction CubicBezierP0(t,p){var k=1-t;return k*k*k*p;}function CubicBezierP1(t,p){var k=1-t;return 3*k*k*t*p;}function CubicBezierP2(t,p){return 3*(1-t)*t*t*p;}function CubicBezierP3(t,p){return t*t*t*p;}function CubicBezier(t,p0,p1,p2,p3){return CubicBezierP0(t,p0)+CubicBezierP1(t,p1)+CubicBezierP2(t,p2)+CubicBezierP3(t,p3);}var CubicBezierCurve=/*#__PURE__*/function(_Curve3){_inherits(CubicBezierCurve,_Curve3);var _super66=_createSuper(CubicBezierCurve);function CubicBezierCurve(){var _this56;var v0=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector2();var v1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var v2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Vector2();var v3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:new Vector2();_classCallCheck(this,CubicBezierCurve);_this56=_super66.call(this);_this56.type='CubicBezierCurve';_this56.v0=v0;_this56.v1=v1;_this56.v2=v2;_this56.v3=v3;return _this56;}_createClass(CubicBezierCurve,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var point=optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(CubicBezierCurve.prototype),\"copy\",this).call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(CubicBezierCurve.prototype),\"toJSON\",this).call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(CubicBezierCurve.prototype),\"fromJSON\",this).call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}]);return CubicBezierCurve;}(Curve);CubicBezierCurve.prototype.isCubicBezierCurve=true;var CubicBezierCurve3=/*#__PURE__*/function(_Curve4){_inherits(CubicBezierCurve3,_Curve4);var _super67=_createSuper(CubicBezierCurve3);function CubicBezierCurve3(){var _this57;var v0=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var v1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var v2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Vector3();var v3=arguments.length>3&&arguments[3]!==undefined?arguments[3]:new Vector3();_classCallCheck(this,CubicBezierCurve3);_this57=_super67.call(this);_this57.type='CubicBezierCurve3';_this57.v0=v0;_this57.v1=v1;_this57.v2=v2;_this57.v3=v3;return _this57;}_createClass(CubicBezierCurve3,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var point=optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2,v3=this.v3;point.set(CubicBezier(t,v0.x,v1.x,v2.x,v3.x),CubicBezier(t,v0.y,v1.y,v2.y,v3.y),CubicBezier(t,v0.z,v1.z,v2.z,v3.z));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(CubicBezierCurve3.prototype),\"copy\",this).call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);this.v3.copy(source.v3);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(CubicBezierCurve3.prototype),\"toJSON\",this).call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();data.v3=this.v3.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(CubicBezierCurve3.prototype),\"fromJSON\",this).call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);this.v3.fromArray(json.v3);return this;}}]);return CubicBezierCurve3;}(Curve);CubicBezierCurve3.prototype.isCubicBezierCurve3=true;var LineCurve=/*#__PURE__*/function(_Curve5){_inherits(LineCurve,_Curve5);var _super68=_createSuper(LineCurve);function LineCurve(){var _this58;var v1=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector2();var v2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();_classCallCheck(this,LineCurve);_this58=_super68.call(this);_this58.type='LineCurve';_this58.v1=v1;_this58.v2=v2;return _this58;}_createClass(LineCurve,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\n},{key:\"getPointAt\",value:function getPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}},{key:\"getTangent\",value:function getTangent(t,optionalTarget){var tangent=optionalTarget||new Vector2();tangent.copy(this.v2).sub(this.v1).normalize();return tangent;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LineCurve.prototype),\"copy\",this).call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(LineCurve.prototype),\"toJSON\",this).call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(LineCurve.prototype),\"fromJSON\",this).call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}]);return LineCurve;}(Curve);LineCurve.prototype.isLineCurve=true;var LineCurve3=/*#__PURE__*/function(_Curve6){_inherits(LineCurve3,_Curve6);var _super69=_createSuper(LineCurve3);function LineCurve3(){var _this59;var v1=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var v2=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();_classCallCheck(this,LineCurve3);_this59=_super69.call(this);_this59.type='LineCurve3';_this59.isLineCurve3=true;_this59.v1=v1;_this59.v2=v2;return _this59;}_createClass(LineCurve3,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var point=optionalTarget;if(t===1){point.copy(this.v2);}else{point.copy(this.v2).sub(this.v1);point.multiplyScalar(t).add(this.v1);}return point;}// Line curve is linear, so we can overwrite default getPointAt\n},{key:\"getPointAt\",value:function getPointAt(u,optionalTarget){return this.getPoint(u,optionalTarget);}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LineCurve3.prototype),\"copy\",this).call(this,source);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(LineCurve3.prototype),\"toJSON\",this).call(this);data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(LineCurve3.prototype),\"fromJSON\",this).call(this,json);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}]);return LineCurve3;}(Curve);var QuadraticBezierCurve=/*#__PURE__*/function(_Curve7){_inherits(QuadraticBezierCurve,_Curve7);var _super70=_createSuper(QuadraticBezierCurve);function QuadraticBezierCurve(){var _this60;var v0=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector2();var v1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var v2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Vector2();_classCallCheck(this,QuadraticBezierCurve);_this60=_super70.call(this);_this60.type='QuadraticBezierCurve';_this60.v0=v0;_this60.v1=v1;_this60.v2=v2;return _this60;}_createClass(QuadraticBezierCurve,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var point=optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(QuadraticBezierCurve.prototype),\"copy\",this).call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(QuadraticBezierCurve.prototype),\"toJSON\",this).call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(QuadraticBezierCurve.prototype),\"fromJSON\",this).call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}]);return QuadraticBezierCurve;}(Curve);QuadraticBezierCurve.prototype.isQuadraticBezierCurve=true;var QuadraticBezierCurve3=/*#__PURE__*/function(_Curve8){_inherits(QuadraticBezierCurve3,_Curve8);var _super71=_createSuper(QuadraticBezierCurve3);function QuadraticBezierCurve3(){var _this61;var v0=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var v1=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var v2=arguments.length>2&&arguments[2]!==undefined?arguments[2]:new Vector3();_classCallCheck(this,QuadraticBezierCurve3);_this61=_super71.call(this);_this61.type='QuadraticBezierCurve3';_this61.v0=v0;_this61.v1=v1;_this61.v2=v2;return _this61;}_createClass(QuadraticBezierCurve3,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();var point=optionalTarget;var v0=this.v0,v1=this.v1,v2=this.v2;point.set(QuadraticBezier(t,v0.x,v1.x,v2.x),QuadraticBezier(t,v0.y,v1.y,v2.y),QuadraticBezier(t,v0.z,v1.z,v2.z));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(QuadraticBezierCurve3.prototype),\"copy\",this).call(this,source);this.v0.copy(source.v0);this.v1.copy(source.v1);this.v2.copy(source.v2);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(QuadraticBezierCurve3.prototype),\"toJSON\",this).call(this);data.v0=this.v0.toArray();data.v1=this.v1.toArray();data.v2=this.v2.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(QuadraticBezierCurve3.prototype),\"fromJSON\",this).call(this,json);this.v0.fromArray(json.v0);this.v1.fromArray(json.v1);this.v2.fromArray(json.v2);return this;}}]);return QuadraticBezierCurve3;}(Curve);QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3=true;var SplineCurve=/*#__PURE__*/function(_Curve9){_inherits(SplineCurve,_Curve9);var _super72=_createSuper(SplineCurve);function SplineCurve(){var _this62;var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];_classCallCheck(this,SplineCurve);_this62=_super72.call(this);_this62.type='SplineCurve';_this62.points=points;return _this62;}_createClass(SplineCurve,[{key:\"getPoint\",value:function getPoint(t){var optionalTarget=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2();var point=optionalTarget;var points=this.points;var p=(points.length-1)*t;var intPoint=Math.floor(p);var weight=p-intPoint;var p0=points[intPoint===0?intPoint:intPoint-1];var p1=points[intPoint];var p2=points[intPoint>points.length-2?points.length-1:intPoint+1];var p3=points[intPoint>points.length-3?points.length-1:intPoint+2];point.set(CatmullRom(weight,p0.x,p1.x,p2.x,p3.x),CatmullRom(weight,p0.y,p1.y,p2.y,p3.y));return point;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(SplineCurve.prototype),\"copy\",this).call(this,source);this.points=[];for(var _i192=0,l=source.points.length;_i192<l;_i192++){var point=source.points[_i192];this.points.push(point.clone());}return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(SplineCurve.prototype),\"toJSON\",this).call(this);data.points=[];for(var _i193=0,l=this.points.length;_i193<l;_i193++){var point=this.points[_i193];data.points.push(point.toArray());}return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(SplineCurve.prototype),\"fromJSON\",this).call(this,json);this.points=[];for(var _i194=0,l=json.points.length;_i194<l;_i194++){var point=json.points[_i194];this.points.push(new Vector2().fromArray(point));}return this;}}]);return SplineCurve;}(Curve);SplineCurve.prototype.isSplineCurve=true;var Curves=/*#__PURE__*/Object.freeze({__proto__:null,ArcCurve:ArcCurve,CatmullRomCurve3:CatmullRomCurve3,CubicBezierCurve:CubicBezierCurve,CubicBezierCurve3:CubicBezierCurve3,EllipseCurve:EllipseCurve,LineCurve:LineCurve,LineCurve3:LineCurve3,QuadraticBezierCurve:QuadraticBezierCurve,QuadraticBezierCurve3:QuadraticBezierCurve3,SplineCurve:SplineCurve});/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/var CurvePath=/*#__PURE__*/function(_Curve10){_inherits(CurvePath,_Curve10);var _super73=_createSuper(CurvePath);function CurvePath(){var _this63;_classCallCheck(this,CurvePath);_this63=_super73.call(this);_this63.type='CurvePath';_this63.curves=[];_this63.autoClose=false;// Automatically closes the path\nreturn _this63;}_createClass(CurvePath,[{key:\"add\",value:function add(curve){this.curves.push(curve);}},{key:\"closePath\",value:function closePath(){// Add a line curve if start and end of lines are not connected\nvar startPoint=this.curves[0].getPoint(0);var endPoint=this.curves[this.curves.length-1].getPoint(1);if(!startPoint.equals(endPoint)){this.curves.push(new LineCurve(endPoint,startPoint));}}// To get accurate point with reference to\n// entire path distance at time t,\n// following has to be done:\n// 1. Length of each sub path have to be known\n// 2. Locate and identify type of curve\n// 3. Get t for the curve\n// 4. Return curve.getPointAt(t')\n},{key:\"getPoint\",value:function getPoint(t,optionalTarget){var d=t*this.getLength();var curveLengths=this.getCurveLengths();var i=0;// To think about boundaries points.\nwhile(i<curveLengths.length){if(curveLengths[i]>=d){var diff=curveLengths[i]-d;var curve=this.curves[i];var segmentLength=curve.getLength();var u=segmentLength===0?0:1-diff/segmentLength;return curve.getPointAt(u,optionalTarget);}i++;}return null;// loop where sum != 0, sum > d , sum+1 <d\n}// We cannot use the default THREE.Curve getPoint() with getLength() because in\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n// getPoint() depends on getLength\n},{key:\"getLength\",value:function getLength(){var lens=this.getCurveLengths();return lens[lens.length-1];}// cacheLengths must be recalculated.\n},{key:\"updateArcLengths\",value:function updateArcLengths(){this.needsUpdate=true;this.cacheLengths=null;this.getCurveLengths();}// Compute lengths and cache them\n// We cannot overwrite getLengths() because UtoT mapping uses it.\n},{key:\"getCurveLengths\",value:function getCurveLengths(){// We use cache values if curves and cache array are same length\nif(this.cacheLengths&&this.cacheLengths.length===this.curves.length){return this.cacheLengths;}// Get length of sub-curve\n// Push sums into cached array\nvar lengths=[];var sums=0;for(var _i195=0,l=this.curves.length;_i195<l;_i195++){sums+=this.curves[_i195].getLength();lengths.push(sums);}this.cacheLengths=lengths;return lengths;}},{key:\"getSpacedPoints\",value:function getSpacedPoints(){var divisions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:40;var points=[];for(var _i196=0;_i196<=divisions;_i196++){points.push(this.getPoint(_i196/divisions));}if(this.autoClose){points.push(points[0]);}return points;}},{key:\"getPoints\",value:function getPoints(){var divisions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:12;var points=[];var last;for(var _i197=0,curves=this.curves;_i197<curves.length;_i197++){var curve=curves[_i197];var resolution=curve&&curve.isEllipseCurve?divisions*2:curve&&(curve.isLineCurve||curve.isLineCurve3)?1:curve&&curve.isSplineCurve?divisions*curve.points.length:divisions;var pts=curve.getPoints(resolution);for(var j=0;j<pts.length;j++){var point=pts[j];if(last&&last.equals(point))continue;// ensures no consecutive points are duplicates\npoints.push(point);last=point;}}if(this.autoClose&&points.length>1&&!points[points.length-1].equals(points[0])){points.push(points[0]);}return points;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(CurvePath.prototype),\"copy\",this).call(this,source);this.curves=[];for(var _i198=0,l=source.curves.length;_i198<l;_i198++){var curve=source.curves[_i198];this.curves.push(curve.clone());}this.autoClose=source.autoClose;return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(CurvePath.prototype),\"toJSON\",this).call(this);data.autoClose=this.autoClose;data.curves=[];for(var _i199=0,l=this.curves.length;_i199<l;_i199++){var curve=this.curves[_i199];data.curves.push(curve.toJSON());}return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(CurvePath.prototype),\"fromJSON\",this).call(this,json);this.autoClose=json.autoClose;this.curves=[];for(var _i200=0,l=json.curves.length;_i200<l;_i200++){var curve=json.curves[_i200];this.curves.push(new Curves[curve.type]().fromJSON(curve));}return this;}}]);return CurvePath;}(Curve);var Path=/*#__PURE__*/function(_CurvePath){_inherits(Path,_CurvePath);var _super74=_createSuper(Path);function Path(points){var _this64;_classCallCheck(this,Path);_this64=_super74.call(this);_this64.type='Path';_this64.currentPoint=new Vector2();if(points){_this64.setFromPoints(points);}return _this64;}_createClass(Path,[{key:\"setFromPoints\",value:function setFromPoints(points){this.moveTo(points[0].x,points[0].y);for(var _i201=1,l=points.length;_i201<l;_i201++){this.lineTo(points[_i201].x,points[_i201].y);}return this;}},{key:\"moveTo\",value:function moveTo(x,y){this.currentPoint.set(x,y);// TODO consider referencing vectors instead of copying?\nreturn this;}},{key:\"lineTo\",value:function lineTo(x,y){var curve=new LineCurve(this.currentPoint.clone(),new Vector2(x,y));this.curves.push(curve);this.currentPoint.set(x,y);return this;}},{key:\"quadraticCurveTo\",value:function quadraticCurveTo(aCPx,aCPy,aX,aY){var curve=new QuadraticBezierCurve(this.currentPoint.clone(),new Vector2(aCPx,aCPy),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}},{key:\"bezierCurveTo\",value:function bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){var curve=new CubicBezierCurve(this.currentPoint.clone(),new Vector2(aCP1x,aCP1y),new Vector2(aCP2x,aCP2y),new Vector2(aX,aY));this.curves.push(curve);this.currentPoint.set(aX,aY);return this;}},{key:\"splineThru\",value:function splineThru(pts/*Array of Vector*/){var npts=[this.currentPoint.clone()].concat(pts);var curve=new SplineCurve(npts);this.curves.push(curve);this.currentPoint.copy(pts[pts.length-1]);return this;}},{key:\"arc\",value:function arc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absarc(aX+x0,aY+y0,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}},{key:\"absarc\",value:function absarc(aX,aY,aRadius,aStartAngle,aEndAngle,aClockwise){this.absellipse(aX,aY,aRadius,aRadius,aStartAngle,aEndAngle,aClockwise);return this;}},{key:\"ellipse\",value:function ellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var x0=this.currentPoint.x;var y0=this.currentPoint.y;this.absellipse(aX+x0,aY+y0,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);return this;}},{key:\"absellipse\",value:function absellipse(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation){var curve=new EllipseCurve(aX,aY,xRadius,yRadius,aStartAngle,aEndAngle,aClockwise,aRotation);if(this.curves.length>0){// if a previous curve is present, attempt to join\nvar firstPoint=curve.getPoint(0);if(!firstPoint.equals(this.currentPoint)){this.lineTo(firstPoint.x,firstPoint.y);}}this.curves.push(curve);var lastPoint=curve.getPoint(1);this.currentPoint.copy(lastPoint);return this;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Path.prototype),\"copy\",this).call(this,source);this.currentPoint.copy(source.currentPoint);return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(Path.prototype),\"toJSON\",this).call(this);data.currentPoint=this.currentPoint.toArray();return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(Path.prototype),\"fromJSON\",this).call(this,json);this.currentPoint.fromArray(json.currentPoint);return this;}}]);return Path;}(CurvePath);var Shape=/*#__PURE__*/function(_Path){_inherits(Shape,_Path);var _super75=_createSuper(Shape);function Shape(points){var _this65;_classCallCheck(this,Shape);_this65=_super75.call(this,points);_this65.uuid=generateUUID();_this65.type='Shape';_this65.holes=[];return _this65;}_createClass(Shape,[{key:\"getPointsHoles\",value:function getPointsHoles(divisions){var holesPts=[];for(var _i202=0,l=this.holes.length;_i202<l;_i202++){holesPts[_i202]=this.holes[_i202].getPoints(divisions);}return holesPts;}// get points of shape and holes (keypoints based on segments parameter)\n},{key:\"extractPoints\",value:function extractPoints(divisions){return{shape:this.getPoints(divisions),holes:this.getPointsHoles(divisions)};}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Shape.prototype),\"copy\",this).call(this,source);this.holes=[];for(var _i203=0,l=source.holes.length;_i203<l;_i203++){var hole=source.holes[_i203];this.holes.push(hole.clone());}return this;}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(Shape.prototype),\"toJSON\",this).call(this);data.uuid=this.uuid;data.holes=[];for(var _i204=0,l=this.holes.length;_i204<l;_i204++){var hole=this.holes[_i204];data.holes.push(hole.toJSON());}return data;}},{key:\"fromJSON\",value:function fromJSON(json){_get(_getPrototypeOf(Shape.prototype),\"fromJSON\",this).call(this,json);this.uuid=json.uuid;this.holes=[];for(var _i205=0,l=json.holes.length;_i205<l;_i205++){var hole=json.holes[_i205];this.holes.push(new Path().fromJSON(hole));}return this;}}]);return Shape;}(Path);/**\r\n * Port from https://github.com/mapbox/earcut (v2.2.2)\r\n */var Earcut={triangulate:function triangulate(data,holeIndices){var dim=arguments.length>2&&arguments[2]!==undefined?arguments[2]:2;var hasHoles=holeIndices&&holeIndices.length;var outerLen=hasHoles?holeIndices[0]*dim:data.length;var outerNode=linkedList(data,0,outerLen,dim,true);var triangles=[];if(!outerNode||outerNode.next===outerNode.prev)return triangles;var minX,minY,maxX,maxY,x,y,invSize;if(hasHoles)outerNode=eliminateHoles(data,holeIndices,outerNode,dim);// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\nif(data.length>80*dim){minX=maxX=data[0];minY=maxY=data[1];for(var _i206=dim;_i206<outerLen;_i206+=dim){x=data[_i206];y=data[_i206+1];if(x<minX)minX=x;if(y<minY)minY=y;if(x>maxX)maxX=x;if(y>maxY)maxY=y;}// minX, minY and invSize are later used to transform coords into integers for z-order calculation\ninvSize=Math.max(maxX-minX,maxY-minY);invSize=invSize!==0?1/invSize:0;}earcutLinked(outerNode,triangles,dim,minX,minY,invSize);return triangles;}};// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList(data,start,end,dim,clockwise){var i,last;if(clockwise===signedArea(data,start,end,dim)>0){for(i=start;i<end;i+=dim){last=insertNode(i,data[i],data[i+1],last);}}else{for(i=end-dim;i>=start;i-=dim){last=insertNode(i,data[i],data[i+1],last);}}if(last&&equals(last,last.next)){removeNode(last);last=last.next;}return last;}// eliminate colinear or duplicate points\nfunction filterPoints(start,end){if(!start)return start;if(!end)end=start;var p=start,again;do{again=false;if(!p.steiner&&(equals(p,p.next)||area(p.prev,p,p.next)===0)){removeNode(p);p=end=p.prev;if(p===p.next)break;again=true;}else{p=p.next;}}while(again||p!==end);return end;}// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked(ear,triangles,dim,minX,minY,invSize,pass){if(!ear)return;// interlink polygon nodes in z-order\nif(!pass&&invSize)indexCurve(ear,minX,minY,invSize);var stop=ear,prev,next;// iterate through ears, slicing them one by one\nwhile(ear.prev!==ear.next){prev=ear.prev;next=ear.next;if(invSize?isEarHashed(ear,minX,minY,invSize):isEar(ear)){// cut off the triangle\ntriangles.push(prev.i/dim);triangles.push(ear.i/dim);triangles.push(next.i/dim);removeNode(ear);// skipping the next vertex leads to less sliver triangles\near=next.next;stop=next.next;continue;}ear=next;// if we looped through the whole remaining polygon and can't find any more ears\nif(ear===stop){// try filtering points and slicing again\nif(!pass){earcutLinked(filterPoints(ear),triangles,dim,minX,minY,invSize,1);// if this didn't work, try curing all small self-intersections locally\n}else if(pass===1){ear=cureLocalIntersections(filterPoints(ear),triangles,dim);earcutLinked(ear,triangles,dim,minX,minY,invSize,2);// as a last resort, try splitting the remaining polygon into two\n}else if(pass===2){splitEarcut(ear,triangles,dim,minX,minY,invSize);}break;}}}// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar(ear){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// now make sure we don't have other points inside the potential ear\nvar p=ear.next.next;while(p!==ear.prev){if(pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.next;}return true;}function isEarHashed(ear,minX,minY,invSize){var a=ear.prev,b=ear,c=ear.next;if(area(a,b,c)>=0)return false;// reflex, can't be an ear\n// triangle bbox; min & max are calculated like this for speed\nvar minTX=a.x<b.x?a.x<c.x?a.x:c.x:b.x<c.x?b.x:c.x,minTY=a.y<b.y?a.y<c.y?a.y:c.y:b.y<c.y?b.y:c.y,maxTX=a.x>b.x?a.x>c.x?a.x:c.x:b.x>c.x?b.x:c.x,maxTY=a.y>b.y?a.y>c.y?a.y:c.y:b.y>c.y?b.y:c.y;// z-order range for the current triangle bbox;\nvar minZ=zOrder(minTX,minTY,minX,minY,invSize),maxZ=zOrder(maxTX,maxTY,minX,minY,invSize);var p=ear.prevZ,n=ear.nextZ;// look for points inside the triangle in both directions\nwhile(p&&p.z>=minZ&&n&&n.z<=maxZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}// look for remaining points in decreasing z-order\nwhile(p&&p.z>=minZ){if(p!==ear.prev&&p!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,p.x,p.y)&&area(p.prev,p,p.next)>=0)return false;p=p.prevZ;}// look for remaining points in increasing z-order\nwhile(n&&n.z<=maxZ){if(n!==ear.prev&&n!==ear.next&&pointInTriangle(a.x,a.y,b.x,b.y,c.x,c.y,n.x,n.y)&&area(n.prev,n,n.next)>=0)return false;n=n.nextZ;}return true;}// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections(start,triangles,dim){var p=start;do{var a=p.prev,b=p.next.next;if(!equals(a,b)&&intersects(a,p,p.next,b)&&locallyInside(a,b)&&locallyInside(b,a)){triangles.push(a.i/dim);triangles.push(p.i/dim);triangles.push(b.i/dim);// remove two nodes involved\nremoveNode(p);removeNode(p.next);p=start=b;}p=p.next;}while(p!==start);return filterPoints(p);}// try splitting polygon into two and triangulate them independently\nfunction splitEarcut(start,triangles,dim,minX,minY,invSize){// look for a valid diagonal that divides the polygon into two\nvar a=start;do{var b=a.next.next;while(b!==a.prev){if(a.i!==b.i&&isValidDiagonal(a,b)){// split the polygon in two by the diagonal\nvar c=splitPolygon(a,b);// filter colinear points around the cuts\na=filterPoints(a,a.next);c=filterPoints(c,c.next);// run earcut on each half\nearcutLinked(a,triangles,dim,minX,minY,invSize);earcutLinked(c,triangles,dim,minX,minY,invSize);return;}b=b.next;}a=a.next;}while(a!==start);}// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles(data,holeIndices,outerNode,dim){var queue=[];var i,len,start,end,list;for(i=0,len=holeIndices.length;i<len;i++){start=holeIndices[i]*dim;end=i<len-1?holeIndices[i+1]*dim:data.length;list=linkedList(data,start,end,dim,false);if(list===list.next)list.steiner=true;queue.push(getLeftmost(list));}queue.sort(compareX);// process holes from left to right\nfor(i=0;i<queue.length;i++){eliminateHole(queue[i],outerNode);outerNode=filterPoints(outerNode,outerNode.next);}return outerNode;}function compareX(a,b){return a.x-b.x;}// find a bridge between vertices that connects hole with an outer ring and and link it\nfunction eliminateHole(hole,outerNode){outerNode=findHoleBridge(hole,outerNode);if(outerNode){var b=splitPolygon(outerNode,hole);// filter collinear points around the cuts\nfilterPoints(outerNode,outerNode.next);filterPoints(b,b.next);}}// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge(hole,outerNode){var p=outerNode;var hx=hole.x;var hy=hole.y;var qx=-Infinity,m;// find a segment intersected by a ray from the hole's leftmost point to the left;\n// segment's endpoint with lesser x will be potential connection point\ndo{if(hy<=p.y&&hy>=p.next.y&&p.next.y!==p.y){var x=p.x+(hy-p.y)*(p.next.x-p.x)/(p.next.y-p.y);if(x<=hx&&x>qx){qx=x;if(x===hx){if(hy===p.y)return p;if(hy===p.next.y)return p.next;}m=p.x<p.next.x?p:p.next;}}p=p.next;}while(p!==outerNode);if(!m)return null;if(hx===qx)return m;// hole touches outer segment; pick leftmost endpoint\n// look for points inside the triangle of hole point, segment intersection and endpoint;\n// if there are no points found, we have a valid connection;\n// otherwise choose the point of the minimum angle with the ray as connection point\nvar stop=m,mx=m.x,my=m.y;var tanMin=Infinity,tan;p=m;do{if(hx>=p.x&&p.x>=mx&&hx!==p.x&&pointInTriangle(hy<my?hx:qx,hy,mx,my,hy<my?qx:hx,hy,p.x,p.y)){tan=Math.abs(hy-p.y)/(hx-p.x);// tangential\nif(locallyInside(p,hole)&&(tan<tanMin||tan===tanMin&&(p.x>m.x||p.x===m.x&&sectorContainsSector(m,p)))){m=p;tanMin=tan;}}p=p.next;}while(p!==stop);return m;}// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector(m,p){return area(m.prev,m,p.prev)<0&&area(p.next,m,m.next)<0;}// interlink polygon nodes in z-order\nfunction indexCurve(start,minX,minY,invSize){var p=start;do{if(p.z===null)p.z=zOrder(p.x,p.y,minX,minY,invSize);p.prevZ=p.prev;p.nextZ=p.next;p=p.next;}while(p!==start);p.prevZ.nextZ=null;p.prevZ=null;sortLinked(p);}// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked(list){var i,p,q,e,tail,numMerges,pSize,qSize,inSize=1;do{p=list;list=null;tail=null;numMerges=0;while(p){numMerges++;q=p;pSize=0;for(i=0;i<inSize;i++){pSize++;q=q.nextZ;if(!q)break;}qSize=inSize;while(pSize>0||qSize>0&&q){if(pSize!==0&&(qSize===0||!q||p.z<=q.z)){e=p;p=p.nextZ;pSize--;}else{e=q;q=q.nextZ;qSize--;}if(tail)tail.nextZ=e;else list=e;e.prevZ=tail;tail=e;}p=q;}tail.nextZ=null;inSize*=2;}while(numMerges>1);return list;}// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder(x,y,minX,minY,invSize){// coords are transformed into non-negative 15-bit integer range\nx=32767*(x-minX)*invSize;y=32767*(y-minY)*invSize;x=(x|x<<8)&0x00FF00FF;x=(x|x<<4)&0x0F0F0F0F;x=(x|x<<2)&0x33333333;x=(x|x<<1)&0x55555555;y=(y|y<<8)&0x00FF00FF;y=(y|y<<4)&0x0F0F0F0F;y=(y|y<<2)&0x33333333;y=(y|y<<1)&0x55555555;return x|y<<1;}// find the leftmost node of a polygon ring\nfunction getLeftmost(start){var p=start,leftmost=start;do{if(p.x<leftmost.x||p.x===leftmost.x&&p.y<leftmost.y)leftmost=p;p=p.next;}while(p!==start);return leftmost;}// check if a point lies within a convex triangle\nfunction pointInTriangle(ax,ay,bx,by,cx,cy,px,py){return(cx-px)*(ay-py)-(ax-px)*(cy-py)>=0&&(ax-px)*(by-py)-(bx-px)*(ay-py)>=0&&(bx-px)*(cy-py)-(cx-px)*(by-py)>=0;}// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal(a,b){return a.next.i!==b.i&&a.prev.i!==b.i&&!intersectsPolygon(a,b)&&(// dones't intersect other edges\nlocallyInside(a,b)&&locallyInside(b,a)&&middleInside(a,b)&&(// locally visible\narea(a.prev,a,b.prev)||area(a,b.prev,b))||// does not create opposite-facing sectors\nequals(a,b)&&area(a.prev,a,a.next)>0&&area(b.prev,b,b.next)>0);// special zero-length case\n}// signed area of a triangle\nfunction area(p,q,r){return(q.y-p.y)*(r.x-q.x)-(q.x-p.x)*(r.y-q.y);}// check if two points are equal\nfunction equals(p1,p2){return p1.x===p2.x&&p1.y===p2.y;}// check if two segments intersect\nfunction intersects(p1,q1,p2,q2){var o1=sign(area(p1,q1,p2));var o2=sign(area(p1,q1,q2));var o3=sign(area(p2,q2,p1));var o4=sign(area(p2,q2,q1));if(o1!==o2&&o3!==o4)return true;// general case\nif(o1===0&&onSegment(p1,p2,q1))return true;// p1, q1 and p2 are collinear and p2 lies on p1q1\nif(o2===0&&onSegment(p1,q2,q1))return true;// p1, q1 and q2 are collinear and q2 lies on p1q1\nif(o3===0&&onSegment(p2,p1,q2))return true;// p2, q2 and p1 are collinear and p1 lies on p2q2\nif(o4===0&&onSegment(p2,q1,q2))return true;// p2, q2 and q1 are collinear and q1 lies on p2q2\nreturn false;}// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment(p,q,r){return q.x<=Math.max(p.x,r.x)&&q.x>=Math.min(p.x,r.x)&&q.y<=Math.max(p.y,r.y)&&q.y>=Math.min(p.y,r.y);}function sign(num){return num>0?1:num<0?-1:0;}// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon(a,b){var p=a;do{if(p.i!==a.i&&p.next.i!==a.i&&p.i!==b.i&&p.next.i!==b.i&&intersects(p,p.next,a,b))return true;p=p.next;}while(p!==a);return false;}// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside(a,b){return area(a.prev,a,a.next)<0?area(a,b,a.next)>=0&&area(a,a.prev,b)>=0:area(a,b,a.prev)<0||area(a,a.next,b)<0;}// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside(a,b){var p=a,inside=false;var px=(a.x+b.x)/2,py=(a.y+b.y)/2;do{if(p.y>py!==p.next.y>py&&p.next.y!==p.y&&px<(p.next.x-p.x)*(py-p.y)/(p.next.y-p.y)+p.x)inside=!inside;p=p.next;}while(p!==a);return inside;}// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon(a,b){var a2=new Node(a.i,a.x,a.y),b2=new Node(b.i,b.x,b.y),an=a.next,bp=b.prev;a.next=b;b.prev=a;a2.next=an;an.prev=a2;b2.next=a2;a2.prev=b2;bp.next=b2;b2.prev=bp;return b2;}// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode(i,x,y,last){var p=new Node(i,x,y);if(!last){p.prev=p;p.next=p;}else{p.next=last.next;p.prev=last;last.next.prev=p;last.next=p;}return p;}function removeNode(p){p.next.prev=p.prev;p.prev.next=p.next;if(p.prevZ)p.prevZ.nextZ=p.nextZ;if(p.nextZ)p.nextZ.prevZ=p.prevZ;}function Node(i,x,y){// vertex index in coordinates array\nthis.i=i;// vertex coordinates\nthis.x=x;this.y=y;// previous and next vertex nodes in a polygon ring\nthis.prev=null;this.next=null;// z-order curve value\nthis.z=null;// previous and next nodes in z-order\nthis.prevZ=null;this.nextZ=null;// indicates whether this is a steiner point\nthis.steiner=false;}function signedArea(data,start,end,dim){var sum=0;for(var _i207=start,j=end-dim;_i207<end;_i207+=dim){sum+=(data[j]-data[_i207])*(data[_i207+1]+data[j+1]);j=_i207;}return sum;}var ShapeUtils=/*#__PURE__*/function(){function ShapeUtils(){_classCallCheck(this,ShapeUtils);}_createClass(ShapeUtils,null,[{key:\"area\",value:// calculate area of the contour polygon\nfunction area(contour){var n=contour.length;var a=0.0;for(var p=n-1,q=0;q<n;p=q++){a+=contour[p].x*contour[q].y-contour[q].x*contour[p].y;}return a*0.5;}},{key:\"isClockWise\",value:function isClockWise(pts){return ShapeUtils.area(pts)<0;}},{key:\"triangulateShape\",value:function triangulateShape(contour,holes){var vertices=[];// flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\nvar holeIndices=[];// array of hole indices\nvar faces=[];// final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\nremoveDupEndPts(contour);addContour(vertices,contour);//\nvar holeIndex=contour.length;holes.forEach(removeDupEndPts);for(var _i208=0;_i208<holes.length;_i208++){holeIndices.push(holeIndex);holeIndex+=holes[_i208].length;addContour(vertices,holes[_i208]);}//\nvar triangles=Earcut.triangulate(vertices,holeIndices);//\nfor(var _i209=0;_i209<triangles.length;_i209+=3){faces.push(triangles.slice(_i209,_i209+3));}return faces;}}]);return ShapeUtils;}();function removeDupEndPts(points){var l=points.length;if(l>2&&points[l-1].equals(points[0])){points.pop();}}function addContour(vertices,contour){for(var _i210=0;_i210<contour.length;_i210++){vertices.push(contour[_i210].x);vertices.push(contour[_i210].y);}}/**\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  depth: <float>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\r\n *  bevelOffset: <float>, // how far from shape outline does bevel start\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\r\n *\r\n *  UVGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n */var ExtrudeGeometry=/*#__PURE__*/function(_BufferGeometry7){_inherits(ExtrudeGeometry,_BufferGeometry7);var _super76=_createSuper(ExtrudeGeometry);function ExtrudeGeometry(){var _this66;var shapes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Shape([new Vector2(0.5,0.5),new Vector2(-0.5,0.5),new Vector2(-0.5,-0.5),new Vector2(0.5,-0.5)]);var options=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};_classCallCheck(this,ExtrudeGeometry);_this66=_super76.call(this);_this66.type='ExtrudeGeometry';_this66.parameters={shapes:shapes,options:options};shapes=Array.isArray(shapes)?shapes:[shapes];var scope=_assertThisInitialized(_this66);var verticesArray=[];var uvArray=[];for(var _i211=0,l=shapes.length;_i211<l;_i211++){var shape=shapes[_i211];addShape(shape);}// build geometry\n_this66.setAttribute('position',new Float32BufferAttribute(verticesArray,3));_this66.setAttribute('uv',new Float32BufferAttribute(uvArray,2));_this66.computeVertexNormals();// functions\nfunction addShape(shape){var placeholder=[];// options\nvar curveSegments=options.curveSegments!==undefined?options.curveSegments:12;var steps=options.steps!==undefined?options.steps:1;var depth=options.depth!==undefined?options.depth:1;var bevelEnabled=options.bevelEnabled!==undefined?options.bevelEnabled:true;var bevelThickness=options.bevelThickness!==undefined?options.bevelThickness:0.2;var bevelSize=options.bevelSize!==undefined?options.bevelSize:bevelThickness-0.1;var bevelOffset=options.bevelOffset!==undefined?options.bevelOffset:0;var bevelSegments=options.bevelSegments!==undefined?options.bevelSegments:3;var extrudePath=options.extrudePath;var uvgen=options.UVGenerator!==undefined?options.UVGenerator:WorldUVGenerator;// deprecated options\nif(options.amount!==undefined){console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');depth=options.amount;}//\nvar extrudePts,extrudeByPath=false;var splineTube,binormal,normal,position2;if(extrudePath){extrudePts=extrudePath.getSpacedPoints(steps);extrudeByPath=true;bevelEnabled=false;// bevels not supported for path extrusion\n// SETUP TNB variables\n// TODO1 - have a .isClosed in spline?\nsplineTube=extrudePath.computeFrenetFrames(steps,false);// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\nbinormal=new Vector3();normal=new Vector3();position2=new Vector3();}// Safeguards if bevels are not enabled\nif(!bevelEnabled){bevelSegments=0;bevelThickness=0;bevelSize=0;bevelOffset=0;}// Variables initialization\nvar shapePoints=shape.extractPoints(curveSegments);var vertices=shapePoints.shape;var holes=shapePoints.holes;var reverse=!ShapeUtils.isClockWise(vertices);if(reverse){vertices=vertices.reverse();// Maybe we should also check if holes are in the opposite direction, just to be safe ...\nfor(var h=0,hl=holes.length;h<hl;h++){var ahole=holes[h];if(ShapeUtils.isClockWise(ahole)){holes[h]=ahole.reverse();}}}var faces=ShapeUtils.triangulateShape(vertices,holes);/* Vertices */var contour=vertices;// vertices has all points but contour has only points of circumference\nfor(var _h=0,_hl=holes.length;_h<_hl;_h++){var _ahole=holes[_h];vertices=vertices.concat(_ahole);}function scalePt2(pt,vec,size){if(!vec)console.error('THREE.ExtrudeGeometry: vec does not exist');return vec.clone().multiplyScalar(size).add(pt);}var vlen=vertices.length,flen=faces.length;// Find directions for point movement\nfunction getBevelVec(inPt,inPrev,inNext){// computes for inPt the corresponding point inPt' on a new contour\n//   shifted by 1 unit (length of normalized vector) to the left\n// if we walk along contour clockwise, this new contour is outside the old one\n//\n// inPt' is the intersection of the two lines parallel to the two\n//  adjacent edges of inPt at a distance of 1 unit on the left side.\nvar v_trans_x,v_trans_y,shrink_by;// resulting translation vector for inPt\n// good reading for geometry algorithms (here: line-line intersection)\n// http://geomalgorithms.com/a05-_intersect-1.html\nvar v_prev_x=inPt.x-inPrev.x,v_prev_y=inPt.y-inPrev.y;var v_next_x=inNext.x-inPt.x,v_next_y=inNext.y-inPt.y;var v_prev_lensq=v_prev_x*v_prev_x+v_prev_y*v_prev_y;// check for collinear edges\nvar collinear0=v_prev_x*v_next_y-v_prev_y*v_next_x;if(Math.abs(collinear0)>Number.EPSILON){// not collinear\n// length of vectors for normalizing\nvar v_prev_len=Math.sqrt(v_prev_lensq);var v_next_len=Math.sqrt(v_next_x*v_next_x+v_next_y*v_next_y);// shift adjacent points by unit vectors to the left\nvar ptPrevShift_x=inPrev.x-v_prev_y/v_prev_len;var ptPrevShift_y=inPrev.y+v_prev_x/v_prev_len;var ptNextShift_x=inNext.x-v_next_y/v_next_len;var ptNextShift_y=inNext.y+v_next_x/v_next_len;// scaling factor for v_prev to intersection point\nvar sf=((ptNextShift_x-ptPrevShift_x)*v_next_y-(ptNextShift_y-ptPrevShift_y)*v_next_x)/(v_prev_x*v_next_y-v_prev_y*v_next_x);// vector from inPt to intersection point\nv_trans_x=ptPrevShift_x+v_prev_x*sf-inPt.x;v_trans_y=ptPrevShift_y+v_prev_y*sf-inPt.y;// Don't normalize!, otherwise sharp corners become ugly\n//  but prevent crazy spikes\nvar v_trans_lensq=v_trans_x*v_trans_x+v_trans_y*v_trans_y;if(v_trans_lensq<=2){return new Vector2(v_trans_x,v_trans_y);}else{shrink_by=Math.sqrt(v_trans_lensq/2);}}else{// handle special case of collinear edges\nvar direction_eq=false;// assumes: opposite\nif(v_prev_x>Number.EPSILON){if(v_next_x>Number.EPSILON){direction_eq=true;}}else{if(v_prev_x<-Number.EPSILON){if(v_next_x<-Number.EPSILON){direction_eq=true;}}else{if(Math.sign(v_prev_y)===Math.sign(v_next_y)){direction_eq=true;}}}if(direction_eq){// console.log(\"Warning: lines are a straight sequence\");\nv_trans_x=-v_prev_y;v_trans_y=v_prev_x;shrink_by=Math.sqrt(v_prev_lensq);}else{// console.log(\"Warning: lines are a straight spike\");\nv_trans_x=v_prev_x;v_trans_y=v_prev_y;shrink_by=Math.sqrt(v_prev_lensq/2);}}return new Vector2(v_trans_x/shrink_by,v_trans_y/shrink_by);}var contourMovements=[];for(var _i212=0,il=contour.length,j=il-1,k=_i212+1;_i212<il;_i212++,j++,k++){if(j===il)j=0;if(k===il)k=0;//  (j)---(i)---(k)\n// console.log('i,j,k', i, j , k)\ncontourMovements[_i212]=getBevelVec(contour[_i212],contour[j],contour[k]);}var holesMovements=[];var oneHoleMovements,verticesMovements=contourMovements.concat();for(var _h2=0,_hl2=holes.length;_h2<_hl2;_h2++){var _ahole2=holes[_h2];oneHoleMovements=[];for(var _i213=0,_il13=_ahole2.length,_j6=_il13-1,_k=_i213+1;_i213<_il13;_i213++,_j6++,_k++){if(_j6===_il13)_j6=0;if(_k===_il13)_k=0;//  (j)---(i)---(k)\noneHoleMovements[_i213]=getBevelVec(_ahole2[_i213],_ahole2[_j6],_ahole2[_k]);}holesMovements.push(oneHoleMovements);verticesMovements=verticesMovements.concat(oneHoleMovements);}// Loop bevelSegments, 1 for the front, 1 for the back\nfor(var b=0;b<bevelSegments;b++){//for ( b = bevelSegments; b > 0; b -- ) {\nvar t=b/bevelSegments;var z=bevelThickness*Math.cos(t*Math.PI/2);var _bs=bevelSize*Math.sin(t*Math.PI/2)+bevelOffset;// contract shape\nfor(var _i214=0,_il14=contour.length;_i214<_il14;_i214++){var vert=scalePt2(contour[_i214],contourMovements[_i214],_bs);v(vert.x,vert.y,-z);}// expand holes\nfor(var _h3=0,_hl3=holes.length;_h3<_hl3;_h3++){var _ahole3=holes[_h3];oneHoleMovements=holesMovements[_h3];for(var _i215=0,_il15=_ahole3.length;_i215<_il15;_i215++){var _vert=scalePt2(_ahole3[_i215],oneHoleMovements[_i215],_bs);v(_vert.x,_vert.y,-z);}}}var bs=bevelSize+bevelOffset;// Back facing vertices\nfor(var _i216=0;_i216<vlen;_i216++){var _vert2=bevelEnabled?scalePt2(vertices[_i216],verticesMovements[_i216],bs):vertices[_i216];if(!extrudeByPath){v(_vert2.x,_vert2.y,0);}else{// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\nnormal.copy(splineTube.normals[0]).multiplyScalar(_vert2.x);binormal.copy(splineTube.binormals[0]).multiplyScalar(_vert2.y);position2.copy(extrudePts[0]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}// Add stepped vertices...\n// Including front facing vertices\nfor(var s=1;s<=steps;s++){for(var _i217=0;_i217<vlen;_i217++){var _vert3=bevelEnabled?scalePt2(vertices[_i217],verticesMovements[_i217],bs):vertices[_i217];if(!extrudeByPath){v(_vert3.x,_vert3.y,depth/steps*s);}else{// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\nnormal.copy(splineTube.normals[s]).multiplyScalar(_vert3.x);binormal.copy(splineTube.binormals[s]).multiplyScalar(_vert3.y);position2.copy(extrudePts[s]).add(normal).add(binormal);v(position2.x,position2.y,position2.z);}}}// Add bevel segments planes\n//for ( b = 1; b <= bevelSegments; b ++ ) {\nfor(var _b5=bevelSegments-1;_b5>=0;_b5--){var _t=_b5/bevelSegments;var _z2=bevelThickness*Math.cos(_t*Math.PI/2);var _bs2=bevelSize*Math.sin(_t*Math.PI/2)+bevelOffset;// contract shape\nfor(var _i218=0,_il16=contour.length;_i218<_il16;_i218++){var _vert4=scalePt2(contour[_i218],contourMovements[_i218],_bs2);v(_vert4.x,_vert4.y,depth+_z2);}// expand holes\nfor(var _h4=0,_hl4=holes.length;_h4<_hl4;_h4++){var _ahole4=holes[_h4];oneHoleMovements=holesMovements[_h4];for(var _i219=0,_il17=_ahole4.length;_i219<_il17;_i219++){var _vert5=scalePt2(_ahole4[_i219],oneHoleMovements[_i219],_bs2);if(!extrudeByPath){v(_vert5.x,_vert5.y,depth+_z2);}else{v(_vert5.x,_vert5.y+extrudePts[steps-1].y,extrudePts[steps-1].x+_z2);}}}}/* Faces */ // Top and bottom faces\nbuildLidFaces();// Sides faces\nbuildSideFaces();/////  Internal functions\nfunction buildLidFaces(){var start=verticesArray.length/3;if(bevelEnabled){var layer=0;// steps + 1\nvar offset=vlen*layer;// Bottom faces\nfor(var _i220=0;_i220<flen;_i220++){var face=faces[_i220];f3(face[2]+offset,face[1]+offset,face[0]+offset);}layer=steps+bevelSegments*2;offset=vlen*layer;// Top faces\nfor(var _i221=0;_i221<flen;_i221++){var _face=faces[_i221];f3(_face[0]+offset,_face[1]+offset,_face[2]+offset);}}else{// Bottom faces\nfor(var _i222=0;_i222<flen;_i222++){var _face2=faces[_i222];f3(_face2[2],_face2[1],_face2[0]);}// Top faces\nfor(var _i223=0;_i223<flen;_i223++){var _face3=faces[_i223];f3(_face3[0]+vlen*steps,_face3[1]+vlen*steps,_face3[2]+vlen*steps);}}scope.addGroup(start,verticesArray.length/3-start,0);}// Create faces for the z-sides of the shape\nfunction buildSideFaces(){var start=verticesArray.length/3;var layeroffset=0;sidewalls(contour,layeroffset);layeroffset+=contour.length;for(var _h5=0,_hl5=holes.length;_h5<_hl5;_h5++){var _ahole5=holes[_h5];sidewalls(_ahole5,layeroffset);//, true\nlayeroffset+=_ahole5.length;}scope.addGroup(start,verticesArray.length/3-start,1);}function sidewalls(contour,layeroffset){var i=contour.length;while(--i>=0){var _j7=i;var _k2=i-1;if(_k2<0)_k2=contour.length-1;//console.log('b', i,j, i-1, k,vertices.length);\nfor(var _s4=0,sl=steps+bevelSegments*2;_s4<sl;_s4++){var slen1=vlen*_s4;var slen2=vlen*(_s4+1);var a=layeroffset+_j7+slen1,_b6=layeroffset+_k2+slen1,c=layeroffset+_k2+slen2,d=layeroffset+_j7+slen2;f4(a,_b6,c,d);}}}function v(x,y,z){placeholder.push(x);placeholder.push(y);placeholder.push(z);}function f3(a,b,c){addVertex(a);addVertex(b);addVertex(c);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateTopUV(scope,verticesArray,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[2]);}function f4(a,b,c,d){addVertex(a);addVertex(b);addVertex(d);addVertex(b);addVertex(c);addVertex(d);var nextIndex=verticesArray.length/3;var uvs=uvgen.generateSideWallUV(scope,verticesArray,nextIndex-6,nextIndex-3,nextIndex-2,nextIndex-1);addUV(uvs[0]);addUV(uvs[1]);addUV(uvs[3]);addUV(uvs[1]);addUV(uvs[2]);addUV(uvs[3]);}function addVertex(index){verticesArray.push(placeholder[index*3+0]);verticesArray.push(placeholder[index*3+1]);verticesArray.push(placeholder[index*3+2]);}function addUV(vector2){uvArray.push(vector2.x);uvArray.push(vector2.y);}}return _this66;}_createClass(ExtrudeGeometry,[{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(ExtrudeGeometry.prototype),\"toJSON\",this).call(this);var shapes=this.parameters.shapes;var options=this.parameters.options;return toJSON$1(shapes,options,data);}}],[{key:\"fromJSON\",value:function fromJSON(data,shapes){var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}var extrudePath=data.options.extrudePath;if(extrudePath!==undefined){data.options.extrudePath=new Curves[extrudePath.type]().fromJSON(extrudePath);}return new ExtrudeGeometry(geometryShapes,data.options);}}]);return ExtrudeGeometry;}(BufferGeometry);var WorldUVGenerator={generateTopUV:function generateTopUV(geometry,vertices,indexA,indexB,indexC){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];return[new Vector2(a_x,a_y),new Vector2(b_x,b_y),new Vector2(c_x,c_y)];},generateSideWallUV:function generateSideWallUV(geometry,vertices,indexA,indexB,indexC,indexD){var a_x=vertices[indexA*3];var a_y=vertices[indexA*3+1];var a_z=vertices[indexA*3+2];var b_x=vertices[indexB*3];var b_y=vertices[indexB*3+1];var b_z=vertices[indexB*3+2];var c_x=vertices[indexC*3];var c_y=vertices[indexC*3+1];var c_z=vertices[indexC*3+2];var d_x=vertices[indexD*3];var d_y=vertices[indexD*3+1];var d_z=vertices[indexD*3+2];if(Math.abs(a_y-b_y)<Math.abs(a_x-b_x)){return[new Vector2(a_x,1-a_z),new Vector2(b_x,1-b_z),new Vector2(c_x,1-c_z),new Vector2(d_x,1-d_z)];}else{return[new Vector2(a_y,1-a_z),new Vector2(b_y,1-b_z),new Vector2(c_y,1-c_z),new Vector2(d_y,1-d_z)];}}};function toJSON$1(shapes,options,data){data.shapes=[];if(Array.isArray(shapes)){for(var _i224=0,l=shapes.length;_i224<l;_i224++){var shape=shapes[_i224];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}if(options.extrudePath!==undefined)data.options.extrudePath=options.extrudePath.toJSON();return data;}var IcosahedronGeometry=/*#__PURE__*/function(_PolyhedronGeometry2){_inherits(IcosahedronGeometry,_PolyhedronGeometry2);var _super77=_createSuper(IcosahedronGeometry);function IcosahedronGeometry(){var _this67;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var detail=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,IcosahedronGeometry);var t=(1+Math.sqrt(5))/2;var vertices=[-1,t,0,1,t,0,-1,-t,0,1,-t,0,0,-1,t,0,1,t,0,-1,-t,0,1,-t,t,0,-1,t,0,1,-t,0,-1,-t,0,1];var indices=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];_this67=_super77.call(this,vertices,indices,radius,detail);_this67.type='IcosahedronGeometry';_this67.parameters={radius:radius,detail:detail};return _this67;}_createClass(IcosahedronGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new IcosahedronGeometry(data.radius,data.detail);}}]);return IcosahedronGeometry;}(PolyhedronGeometry);var LatheGeometry=/*#__PURE__*/function(_BufferGeometry8){_inherits(LatheGeometry,_BufferGeometry8);var _super78=_createSuper(LatheGeometry);function LatheGeometry(){var _this68;var points=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[new Vector2(0,0.5),new Vector2(0.5,0),new Vector2(0,-0.5)];var segments=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;var phiStart=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var phiLength=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Math.PI*2;_classCallCheck(this,LatheGeometry);_this68=_super78.call(this);_this68.type='LatheGeometry';_this68.parameters={points:points,segments:segments,phiStart:phiStart,phiLength:phiLength};segments=Math.floor(segments);// clamp phiLength so it's in range of [ 0, 2PI ]\nphiLength=clamp(phiLength,0,Math.PI*2);// buffers\nvar indices=[];var vertices=[];var uvs=[];// helper variables\nvar inverseSegments=1.0/segments;var vertex=new Vector3();var uv=new Vector2();// generate vertices and uvs\nfor(var _i225=0;_i225<=segments;_i225++){var phi=phiStart+_i225*inverseSegments*phiLength;var sin=Math.sin(phi);var cos=Math.cos(phi);for(var j=0;j<=points.length-1;j++){// vertex\nvertex.x=points[j].x*sin;vertex.y=points[j].y;vertex.z=points[j].x*cos;vertices.push(vertex.x,vertex.y,vertex.z);// uv\nuv.x=_i225/segments;uv.y=j/(points.length-1);uvs.push(uv.x,uv.y);}}// indices\nfor(var _i226=0;_i226<segments;_i226++){for(var _j8=0;_j8<points.length-1;_j8++){var base=_j8+_i226*points.length;var a=base;var b=base+points.length;var c=base+points.length+1;var d=base+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\n_this68.setIndex(indices);_this68.setAttribute('position',new Float32BufferAttribute(vertices,3));_this68.setAttribute('uv',new Float32BufferAttribute(uvs,2));// generate normals\n_this68.computeVertexNormals();// if the geometry is closed, we need to average the normals along the seam.\n// because the corresponding vertices are identical (but still have different UVs).\nif(phiLength===Math.PI*2){var normals=_this68.attributes.normal.array;var n1=new Vector3();var n2=new Vector3();var n=new Vector3();// this is the buffer offset for the last line of vertices\nvar _base=segments*points.length*3;for(var _i227=0,_j9=0;_i227<points.length;_i227++,_j9+=3){// select the normal of the vertex in the first line\nn1.x=normals[_j9+0];n1.y=normals[_j9+1];n1.z=normals[_j9+2];// select the normal of the vertex in the last line\nn2.x=normals[_base+_j9+0];n2.y=normals[_base+_j9+1];n2.z=normals[_base+_j9+2];// average normals\nn.addVectors(n1,n2).normalize();// assign the new values to both normals\nnormals[_j9+0]=normals[_base+_j9+0]=n.x;normals[_j9+1]=normals[_base+_j9+1]=n.y;normals[_j9+2]=normals[_base+_j9+2]=n.z;}}return _this68;}_createClass(LatheGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new LatheGeometry(data.points,data.segments,data.phiStart,data.phiLength);}}]);return LatheGeometry;}(BufferGeometry);var OctahedronGeometry=/*#__PURE__*/function(_PolyhedronGeometry3){_inherits(OctahedronGeometry,_PolyhedronGeometry3);var _super79=_createSuper(OctahedronGeometry);function OctahedronGeometry(){var _this69;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var detail=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,OctahedronGeometry);var vertices=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1];var indices=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];_this69=_super79.call(this,vertices,indices,radius,detail);_this69.type='OctahedronGeometry';_this69.parameters={radius:radius,detail:detail};return _this69;}_createClass(OctahedronGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new OctahedronGeometry(data.radius,data.detail);}}]);return OctahedronGeometry;}(PolyhedronGeometry);var RingGeometry=/*#__PURE__*/function(_BufferGeometry9){_inherits(RingGeometry,_BufferGeometry9);var _super80=_createSuper(RingGeometry);function RingGeometry(){var _this70;var innerRadius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0.5;var outerRadius=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var thetaSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8;var phiSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;var thetaStart=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var thetaLength=arguments.length>5&&arguments[5]!==undefined?arguments[5]:Math.PI*2;_classCallCheck(this,RingGeometry);_this70=_super80.call(this);_this70.type='RingGeometry';_this70.parameters={innerRadius:innerRadius,outerRadius:outerRadius,thetaSegments:thetaSegments,phiSegments:phiSegments,thetaStart:thetaStart,thetaLength:thetaLength};thetaSegments=Math.max(3,thetaSegments);phiSegments=Math.max(1,phiSegments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// some helper variables\nvar radius=innerRadius;var radiusStep=(outerRadius-innerRadius)/phiSegments;var vertex=new Vector3();var uv=new Vector2();// generate vertices, normals and uvs\nfor(var j=0;j<=phiSegments;j++){for(var _i228=0;_i228<=thetaSegments;_i228++){// values are generate from the inside of the ring to the outside\nvar segment=thetaStart+_i228/thetaSegments*thetaLength;// vertex\nvertex.x=radius*Math.cos(segment);vertex.y=radius*Math.sin(segment);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormals.push(0,0,1);// uv\nuv.x=(vertex.x/outerRadius+1)/2;uv.y=(vertex.y/outerRadius+1)/2;uvs.push(uv.x,uv.y);}// increase the radius for next row of vertices\nradius+=radiusStep;}// indices\nfor(var _j10=0;_j10<phiSegments;_j10++){var thetaSegmentLevel=_j10*(thetaSegments+1);for(var _i229=0;_i229<thetaSegments;_i229++){var _segment=_i229+thetaSegmentLevel;var a=_segment;var b=_segment+thetaSegments+1;var c=_segment+thetaSegments+2;var d=_segment+1;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\n_this70.setIndex(indices);_this70.setAttribute('position',new Float32BufferAttribute(vertices,3));_this70.setAttribute('normal',new Float32BufferAttribute(normals,3));_this70.setAttribute('uv',new Float32BufferAttribute(uvs,2));return _this70;}_createClass(RingGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new RingGeometry(data.innerRadius,data.outerRadius,data.thetaSegments,data.phiSegments,data.thetaStart,data.thetaLength);}}]);return RingGeometry;}(BufferGeometry);var ShapeGeometry=/*#__PURE__*/function(_BufferGeometry10){_inherits(ShapeGeometry,_BufferGeometry10);var _super81=_createSuper(ShapeGeometry);function ShapeGeometry(){var _this71;var shapes=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Shape([new Vector2(0,0.5),new Vector2(-0.5,-0.5),new Vector2(0.5,-0.5)]);var curveSegments=arguments.length>1&&arguments[1]!==undefined?arguments[1]:12;_classCallCheck(this,ShapeGeometry);_this71=_super81.call(this);_this71.type='ShapeGeometry';_this71.parameters={shapes:shapes,curveSegments:curveSegments};// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar groupStart=0;var groupCount=0;// allow single and array values for \"shapes\" parameter\nif(Array.isArray(shapes)===false){addShape(shapes);}else{for(var _i230=0;_i230<shapes.length;_i230++){addShape(shapes[_i230]);_this71.addGroup(groupStart,groupCount,_i230);// enables MultiMaterial support\ngroupStart+=groupCount;groupCount=0;}}// build geometry\n_this71.setIndex(indices);_this71.setAttribute('position',new Float32BufferAttribute(vertices,3));_this71.setAttribute('normal',new Float32BufferAttribute(normals,3));_this71.setAttribute('uv',new Float32BufferAttribute(uvs,2));// helper functions\nfunction addShape(shape){var indexOffset=vertices.length/3;var points=shape.extractPoints(curveSegments);var shapeVertices=points.shape;var shapeHoles=points.holes;// check direction of vertices\nif(ShapeUtils.isClockWise(shapeVertices)===false){shapeVertices=shapeVertices.reverse();}for(var _i231=0,l=shapeHoles.length;_i231<l;_i231++){var shapeHole=shapeHoles[_i231];if(ShapeUtils.isClockWise(shapeHole)===true){shapeHoles[_i231]=shapeHole.reverse();}}var faces=ShapeUtils.triangulateShape(shapeVertices,shapeHoles);// join vertices of inner and outer paths to a single array\nfor(var _i232=0,_l7=shapeHoles.length;_i232<_l7;_i232++){var _shapeHole=shapeHoles[_i232];shapeVertices=shapeVertices.concat(_shapeHole);}// vertices, normals, uvs\nfor(var _i233=0,_l8=shapeVertices.length;_i233<_l8;_i233++){var _vertex=shapeVertices[_i233];vertices.push(_vertex.x,_vertex.y,0);normals.push(0,0,1);uvs.push(_vertex.x,_vertex.y);// world uvs\n}// incides\nfor(var _i234=0,_l9=faces.length;_i234<_l9;_i234++){var face=faces[_i234];var a=face[0]+indexOffset;var b=face[1]+indexOffset;var c=face[2]+indexOffset;indices.push(a,b,c);groupCount+=3;}}return _this71;}_createClass(ShapeGeometry,[{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(ShapeGeometry.prototype),\"toJSON\",this).call(this);var shapes=this.parameters.shapes;return _toJSON(shapes,data);}}],[{key:\"fromJSON\",value:function fromJSON(data,shapes){var geometryShapes=[];for(var j=0,jl=data.shapes.length;j<jl;j++){var shape=shapes[data.shapes[j]];geometryShapes.push(shape);}return new ShapeGeometry(geometryShapes,data.curveSegments);}}]);return ShapeGeometry;}(BufferGeometry);function _toJSON(shapes,data){data.shapes=[];if(Array.isArray(shapes)){for(var _i235=0,l=shapes.length;_i235<l;_i235++){var shape=shapes[_i235];data.shapes.push(shape.uuid);}}else{data.shapes.push(shapes.uuid);}return data;}var SphereGeometry=/*#__PURE__*/function(_BufferGeometry11){_inherits(SphereGeometry,_BufferGeometry11);var _super82=_createSuper(SphereGeometry);function SphereGeometry(){var _this72;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var widthSegments=arguments.length>1&&arguments[1]!==undefined?arguments[1]:32;var heightSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:16;var phiStart=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0;var phiLength=arguments.length>4&&arguments[4]!==undefined?arguments[4]:Math.PI*2;var thetaStart=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0;var thetaLength=arguments.length>6&&arguments[6]!==undefined?arguments[6]:Math.PI;_classCallCheck(this,SphereGeometry);_this72=_super82.call(this);_this72.type='SphereGeometry';_this72.parameters={radius:radius,widthSegments:widthSegments,heightSegments:heightSegments,phiStart:phiStart,phiLength:phiLength,thetaStart:thetaStart,thetaLength:thetaLength};widthSegments=Math.max(3,Math.floor(widthSegments));heightSegments=Math.max(2,Math.floor(heightSegments));var thetaEnd=Math.min(thetaStart+thetaLength,Math.PI);var index=0;var grid=[];var vertex=new Vector3();var normal=new Vector3();// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// generate vertices, normals and uvs\nfor(var iy=0;iy<=heightSegments;iy++){var verticesRow=[];var v=iy/heightSegments;// special case for the poles\nvar uOffset=0;if(iy==0&&thetaStart==0){uOffset=0.5/widthSegments;}else if(iy==heightSegments&&thetaEnd==Math.PI){uOffset=-0.5/widthSegments;}for(var ix=0;ix<=widthSegments;ix++){var u=ix/widthSegments;// vertex\nvertex.x=-radius*Math.cos(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertex.y=radius*Math.cos(thetaStart+v*thetaLength);vertex.z=radius*Math.sin(phiStart+u*phiLength)*Math.sin(thetaStart+v*thetaLength);vertices.push(vertex.x,vertex.y,vertex.z);// normal\nnormal.copy(vertex).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(u+uOffset,1-v);verticesRow.push(index++);}grid.push(verticesRow);}// indices\nfor(var _iy3=0;_iy3<heightSegments;_iy3++){for(var _ix3=0;_ix3<widthSegments;_ix3++){var a=grid[_iy3][_ix3+1];var b=grid[_iy3][_ix3];var c=grid[_iy3+1][_ix3];var d=grid[_iy3+1][_ix3+1];if(_iy3!==0||thetaStart>0)indices.push(a,b,d);if(_iy3!==heightSegments-1||thetaEnd<Math.PI)indices.push(b,c,d);}}// build geometry\n_this72.setIndex(indices);_this72.setAttribute('position',new Float32BufferAttribute(vertices,3));_this72.setAttribute('normal',new Float32BufferAttribute(normals,3));_this72.setAttribute('uv',new Float32BufferAttribute(uvs,2));return _this72;}_createClass(SphereGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new SphereGeometry(data.radius,data.widthSegments,data.heightSegments,data.phiStart,data.phiLength,data.thetaStart,data.thetaLength);}}]);return SphereGeometry;}(BufferGeometry);var TetrahedronGeometry=/*#__PURE__*/function(_PolyhedronGeometry4){_inherits(TetrahedronGeometry,_PolyhedronGeometry4);var _super83=_createSuper(TetrahedronGeometry);function TetrahedronGeometry(){var _this73;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var detail=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;_classCallCheck(this,TetrahedronGeometry);var vertices=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1];var indices=[2,1,0,0,3,2,1,3,0,2,3,1];_this73=_super83.call(this,vertices,indices,radius,detail);_this73.type='TetrahedronGeometry';_this73.parameters={radius:radius,detail:detail};return _this73;}_createClass(TetrahedronGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new TetrahedronGeometry(data.radius,data.detail);}}]);return TetrahedronGeometry;}(PolyhedronGeometry);var TorusGeometry=/*#__PURE__*/function(_BufferGeometry12){_inherits(TorusGeometry,_BufferGeometry12);var _super84=_createSuper(TorusGeometry);function TorusGeometry(){var _this74;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var tube=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.4;var radialSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8;var tubularSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:6;var arc=arguments.length>4&&arguments[4]!==undefined?arguments[4]:Math.PI*2;_classCallCheck(this,TorusGeometry);_this74=_super84.call(this);_this74.type='TorusGeometry';_this74.parameters={radius:radius,tube:tube,radialSegments:radialSegments,tubularSegments:tubularSegments,arc:arc};radialSegments=Math.floor(radialSegments);tubularSegments=Math.floor(tubularSegments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar center=new Vector3();var vertex=new Vector3();var normal=new Vector3();// generate vertices, normals and uvs\nfor(var j=0;j<=radialSegments;j++){for(var _i236=0;_i236<=tubularSegments;_i236++){var u=_i236/tubularSegments*arc;var v=j/radialSegments*Math.PI*2;// vertex\nvertex.x=(radius+tube*Math.cos(v))*Math.cos(u);vertex.y=(radius+tube*Math.cos(v))*Math.sin(u);vertex.z=tube*Math.sin(v);vertices.push(vertex.x,vertex.y,vertex.z);// normal\ncenter.x=radius*Math.cos(u);center.y=radius*Math.sin(u);normal.subVectors(vertex,center).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(_i236/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(var _j11=1;_j11<=radialSegments;_j11++){for(var _i237=1;_i237<=tubularSegments;_i237++){// indices\nvar a=(tubularSegments+1)*_j11+_i237-1;var b=(tubularSegments+1)*(_j11-1)+_i237-1;var c=(tubularSegments+1)*(_j11-1)+_i237;var d=(tubularSegments+1)*_j11+_i237;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\n_this74.setIndex(indices);_this74.setAttribute('position',new Float32BufferAttribute(vertices,3));_this74.setAttribute('normal',new Float32BufferAttribute(normals,3));_this74.setAttribute('uv',new Float32BufferAttribute(uvs,2));return _this74;}_createClass(TorusGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new TorusGeometry(data.radius,data.tube,data.radialSegments,data.tubularSegments,data.arc);}}]);return TorusGeometry;}(BufferGeometry);var TorusKnotGeometry=/*#__PURE__*/function(_BufferGeometry13){_inherits(TorusKnotGeometry,_BufferGeometry13);var _super85=_createSuper(TorusKnotGeometry);function TorusKnotGeometry(){var _this75;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var tube=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.4;var tubularSegments=arguments.length>2&&arguments[2]!==undefined?arguments[2]:64;var radialSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:8;var p=arguments.length>4&&arguments[4]!==undefined?arguments[4]:2;var q=arguments.length>5&&arguments[5]!==undefined?arguments[5]:3;_classCallCheck(this,TorusKnotGeometry);_this75=_super85.call(this);_this75.type='TorusKnotGeometry';_this75.parameters={radius:radius,tube:tube,tubularSegments:tubularSegments,radialSegments:radialSegments,p:p,q:q};tubularSegments=Math.floor(tubularSegments);radialSegments=Math.floor(radialSegments);// buffers\nvar indices=[];var vertices=[];var normals=[];var uvs=[];// helper variables\nvar vertex=new Vector3();var normal=new Vector3();var P1=new Vector3();var P2=new Vector3();var B=new Vector3();var T=new Vector3();var N=new Vector3();// generate vertices, normals and uvs\nfor(var _i238=0;_i238<=tubularSegments;++_i238){// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\nvar u=_i238/tubularSegments*p*Math.PI*2;// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\ncalculatePositionOnCurve(u,p,q,radius,P1);calculatePositionOnCurve(u+0.01,p,q,radius,P2);// calculate orthonormal basis\nT.subVectors(P2,P1);N.addVectors(P2,P1);B.crossVectors(T,N);N.crossVectors(B,T);// normalize B, N. T can be ignored, we don't use it\nB.normalize();N.normalize();for(var j=0;j<=radialSegments;++j){// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\nvar v=j/radialSegments*Math.PI*2;var cx=-tube*Math.cos(v);var cy=tube*Math.sin(v);// now calculate the final vertex position.\n// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\nvertex.x=P1.x+(cx*N.x+cy*B.x);vertex.y=P1.y+(cx*N.y+cy*B.y);vertex.z=P1.z+(cx*N.z+cy*B.z);vertices.push(vertex.x,vertex.y,vertex.z);// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\nnormal.subVectors(vertex,P1).normalize();normals.push(normal.x,normal.y,normal.z);// uv\nuvs.push(_i238/tubularSegments);uvs.push(j/radialSegments);}}// generate indices\nfor(var _j12=1;_j12<=tubularSegments;_j12++){for(var _i239=1;_i239<=radialSegments;_i239++){// indices\nvar a=(radialSegments+1)*(_j12-1)+(_i239-1);var b=(radialSegments+1)*_j12+(_i239-1);var c=(radialSegments+1)*_j12+_i239;var d=(radialSegments+1)*(_j12-1)+_i239;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}// build geometry\n_this75.setIndex(indices);_this75.setAttribute('position',new Float32BufferAttribute(vertices,3));_this75.setAttribute('normal',new Float32BufferAttribute(normals,3));_this75.setAttribute('uv',new Float32BufferAttribute(uvs,2));// this function calculates the current position on the torus curve\nfunction calculatePositionOnCurve(u,p,q,radius,position){var cu=Math.cos(u);var su=Math.sin(u);var quOverP=q/p*u;var cs=Math.cos(quOverP);position.x=radius*(2+cs)*0.5*cu;position.y=radius*(2+cs)*su*0.5;position.z=radius*Math.sin(quOverP)*0.5;}return _this75;}_createClass(TorusKnotGeometry,null,[{key:\"fromJSON\",value:function fromJSON(data){return new TorusKnotGeometry(data.radius,data.tube,data.tubularSegments,data.radialSegments,data.p,data.q);}}]);return TorusKnotGeometry;}(BufferGeometry);var TubeGeometry=/*#__PURE__*/function(_BufferGeometry14){_inherits(TubeGeometry,_BufferGeometry14);var _super86=_createSuper(TubeGeometry);function TubeGeometry(){var _this76;var path=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new QuadraticBezierCurve3(new Vector3(-1,-1,0),new Vector3(-1,1,0),new Vector3(1,1,0));var tubularSegments=arguments.length>1&&arguments[1]!==undefined?arguments[1]:64;var radius=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var radialSegments=arguments.length>3&&arguments[3]!==undefined?arguments[3]:8;var closed=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;_classCallCheck(this,TubeGeometry);_this76=_super86.call(this);_this76.type='TubeGeometry';_this76.parameters={path:path,tubularSegments:tubularSegments,radius:radius,radialSegments:radialSegments,closed:closed};var frames=path.computeFrenetFrames(tubularSegments,closed);// expose internals\n_this76.tangents=frames.tangents;_this76.normals=frames.normals;_this76.binormals=frames.binormals;// helper variables\nvar vertex=new Vector3();var normal=new Vector3();var uv=new Vector2();var P=new Vector3();// buffer\nvar vertices=[];var normals=[];var uvs=[];var indices=[];// create buffer data\ngenerateBufferData();// build geometry\n_this76.setIndex(indices);_this76.setAttribute('position',new Float32BufferAttribute(vertices,3));_this76.setAttribute('normal',new Float32BufferAttribute(normals,3));_this76.setAttribute('uv',new Float32BufferAttribute(uvs,2));// functions\nfunction generateBufferData(){for(var _i240=0;_i240<tubularSegments;_i240++){generateSegment(_i240);}// if the geometry is not closed, generate the last row of vertices and normals\n// at the regular position on the given path\n//\n// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\ngenerateSegment(closed===false?tubularSegments:0);// uvs are generated in a separate function.\n// this makes it easy compute correct values for closed geometries\ngenerateUVs();// finally create faces\ngenerateIndices();}function generateSegment(i){// we use getPointAt to sample evenly distributed points from the given path\nP=path.getPointAt(i/tubularSegments,P);// retrieve corresponding normal and binormal\nvar N=frames.normals[i];var B=frames.binormals[i];// generate normals and vertices for the current segment\nfor(var j=0;j<=radialSegments;j++){var v=j/radialSegments*Math.PI*2;var sin=Math.sin(v);var cos=-Math.cos(v);// normal\nnormal.x=cos*N.x+sin*B.x;normal.y=cos*N.y+sin*B.y;normal.z=cos*N.z+sin*B.z;normal.normalize();normals.push(normal.x,normal.y,normal.z);// vertex\nvertex.x=P.x+radius*normal.x;vertex.y=P.y+radius*normal.y;vertex.z=P.z+radius*normal.z;vertices.push(vertex.x,vertex.y,vertex.z);}}function generateIndices(){for(var j=1;j<=tubularSegments;j++){for(var _i241=1;_i241<=radialSegments;_i241++){var a=(radialSegments+1)*(j-1)+(_i241-1);var b=(radialSegments+1)*j+(_i241-1);var c=(radialSegments+1)*j+_i241;var d=(radialSegments+1)*(j-1)+_i241;// faces\nindices.push(a,b,d);indices.push(b,c,d);}}}function generateUVs(){for(var _i242=0;_i242<=tubularSegments;_i242++){for(var j=0;j<=radialSegments;j++){uv.x=_i242/tubularSegments;uv.y=j/radialSegments;uvs.push(uv.x,uv.y);}}}return _this76;}_createClass(TubeGeometry,[{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(TubeGeometry.prototype),\"toJSON\",this).call(this);data.path=this.parameters.path.toJSON();return data;}}],[{key:\"fromJSON\",value:function fromJSON(data){// This only works for built-in curves (e.g. CatmullRomCurve3).\n// User defined curves or instances of CurvePath will not be deserialized.\nreturn new TubeGeometry(new Curves[data.path.type]().fromJSON(data.path),data.tubularSegments,data.radius,data.radialSegments,data.closed);}}]);return TubeGeometry;}(BufferGeometry);var WireframeGeometry=/*#__PURE__*/function(_BufferGeometry15){_inherits(WireframeGeometry,_BufferGeometry15);var _super87=_createSuper(WireframeGeometry);function WireframeGeometry(){var _this77;var geometry=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;_classCallCheck(this,WireframeGeometry);_this77=_super87.call(this);_this77.type='WireframeGeometry';_this77.parameters={geometry:geometry};if(geometry!==null){// buffer\nvar vertices=[];var edges=new Set();// helper variables\nvar start=new Vector3();var end=new Vector3();if(geometry.index!==null){// indexed BufferGeometry\nvar position=geometry.attributes.position;var indices=geometry.index;var groups=geometry.groups;if(groups.length===0){groups=[{start:0,count:indices.count,materialIndex:0}];}// create a data structure that contains all eges without duplicates\nfor(var o=0,ol=groups.length;o<ol;++o){var group=groups[o];var groupStart=group.start;var groupCount=group.count;for(var _i243=groupStart,l=groupStart+groupCount;_i243<l;_i243+=3){for(var j=0;j<3;j++){var index1=indices.getX(_i243+j);var index2=indices.getX(_i243+(j+1)%3);start.fromBufferAttribute(position,index1);end.fromBufferAttribute(position,index2);if(isUniqueEdge(start,end,edges)===true){vertices.push(start.x,start.y,start.z);vertices.push(end.x,end.y,end.z);}}}}}else{// non-indexed BufferGeometry\nvar _position2=geometry.attributes.position;for(var _i244=0,_l10=_position2.count/3;_i244<_l10;_i244++){for(var _j13=0;_j13<3;_j13++){// three edges per triangle, an edge is represented as (index1, index2)\n// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\nvar _index=3*_i244+_j13;var _index2=3*_i244+(_j13+1)%3;start.fromBufferAttribute(_position2,_index);end.fromBufferAttribute(_position2,_index2);if(isUniqueEdge(start,end,edges)===true){vertices.push(start.x,start.y,start.z);vertices.push(end.x,end.y,end.z);}}}}// build geometry\n_this77.setAttribute('position',new Float32BufferAttribute(vertices,3));}return _this77;}return _createClass(WireframeGeometry);}(BufferGeometry);function isUniqueEdge(start,end,edges){var hash1=\"\".concat(start.x,\",\").concat(start.y,\",\").concat(start.z,\"-\").concat(end.x,\",\").concat(end.y,\",\").concat(end.z);var hash2=\"\".concat(end.x,\",\").concat(end.y,\",\").concat(end.z,\"-\").concat(start.x,\",\").concat(start.y,\",\").concat(start.z);// coincident edge\nif(edges.has(hash1)===true||edges.has(hash2)===true){return false;}else{edges.add(hash1,hash2);return true;}}var Geometries=/*#__PURE__*/Object.freeze({__proto__:null,BoxGeometry:BoxGeometry,BoxBufferGeometry:BoxGeometry,CircleGeometry:CircleGeometry,CircleBufferGeometry:CircleGeometry,ConeGeometry:ConeGeometry,ConeBufferGeometry:ConeGeometry,CylinderGeometry:CylinderGeometry,CylinderBufferGeometry:CylinderGeometry,DodecahedronGeometry:DodecahedronGeometry,DodecahedronBufferGeometry:DodecahedronGeometry,EdgesGeometry:EdgesGeometry,ExtrudeGeometry:ExtrudeGeometry,ExtrudeBufferGeometry:ExtrudeGeometry,IcosahedronGeometry:IcosahedronGeometry,IcosahedronBufferGeometry:IcosahedronGeometry,LatheGeometry:LatheGeometry,LatheBufferGeometry:LatheGeometry,OctahedronGeometry:OctahedronGeometry,OctahedronBufferGeometry:OctahedronGeometry,PlaneGeometry:PlaneGeometry,PlaneBufferGeometry:PlaneGeometry,PolyhedronGeometry:PolyhedronGeometry,PolyhedronBufferGeometry:PolyhedronGeometry,RingGeometry:RingGeometry,RingBufferGeometry:RingGeometry,ShapeGeometry:ShapeGeometry,ShapeBufferGeometry:ShapeGeometry,SphereGeometry:SphereGeometry,SphereBufferGeometry:SphereGeometry,TetrahedronGeometry:TetrahedronGeometry,TetrahedronBufferGeometry:TetrahedronGeometry,TorusGeometry:TorusGeometry,TorusBufferGeometry:TorusGeometry,TorusKnotGeometry:TorusKnotGeometry,TorusKnotBufferGeometry:TorusKnotGeometry,TubeGeometry:TubeGeometry,TubeBufferGeometry:TubeGeometry,WireframeGeometry:WireframeGeometry});/**\r\n * parameters = {\r\n *  color: <THREE.Color>\r\n * }\r\n */var ShadowMaterial=/*#__PURE__*/function(_Material8){_inherits(ShadowMaterial,_Material8);var _super88=_createSuper(ShadowMaterial);function ShadowMaterial(parameters){var _this78;_classCallCheck(this,ShadowMaterial);_this78=_super88.call(this);_this78.type='ShadowMaterial';_this78.color=new Color(0x000000);_this78.transparent=true;_this78.setValues(parameters);return _this78;}_createClass(ShadowMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(ShadowMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);return this;}}]);return ShadowMaterial;}(Material);ShadowMaterial.prototype.isShadowMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */var MeshStandardMaterial=/*#__PURE__*/function(_Material9){_inherits(MeshStandardMaterial,_Material9);var _super89=_createSuper(MeshStandardMaterial);function MeshStandardMaterial(parameters){var _this79;_classCallCheck(this,MeshStandardMaterial);_this79=_super89.call(this);_this79.defines={'STANDARD':''};_this79.type='MeshStandardMaterial';_this79.color=new Color(0xffffff);// diffuse\n_this79.roughness=1.0;_this79.metalness=0.0;_this79.map=null;_this79.lightMap=null;_this79.lightMapIntensity=1.0;_this79.aoMap=null;_this79.aoMapIntensity=1.0;_this79.emissive=new Color(0x000000);_this79.emissiveIntensity=1.0;_this79.emissiveMap=null;_this79.bumpMap=null;_this79.bumpScale=1;_this79.normalMap=null;_this79.normalMapType=TangentSpaceNormalMap;_this79.normalScale=new Vector2(1,1);_this79.displacementMap=null;_this79.displacementScale=1;_this79.displacementBias=0;_this79.roughnessMap=null;_this79.metalnessMap=null;_this79.alphaMap=null;_this79.envMap=null;_this79.envMapIntensity=1.0;_this79.refractionRatio=0.98;_this79.wireframe=false;_this79.wireframeLinewidth=1;_this79.wireframeLinecap='round';_this79.wireframeLinejoin='round';_this79.flatShading=false;_this79.setValues(parameters);return _this79;}_createClass(MeshStandardMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshStandardMaterial.prototype),\"copy\",this).call(this,source);this.defines={'STANDARD':''};this.color.copy(source.color);this.roughness=source.roughness;this.metalness=source.metalness;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.roughnessMap=source.roughnessMap;this.metalnessMap=source.metalnessMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.envMapIntensity=source.envMapIntensity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.flatShading=source.flatShading;return this;}}]);return MeshStandardMaterial;}(Material);MeshStandardMaterial.prototype.isMeshStandardMaterial=true;/**\r\n * parameters = {\r\n *  clearcoat: <float>,\r\n *  clearcoatMap: new THREE.Texture( <Image> ),\r\n *  clearcoatRoughness: <float>,\r\n *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),\r\n *  clearcoatNormalScale: <Vector2>,\r\n *  clearcoatNormalMap: new THREE.Texture( <Image> ),\r\n *\r\n *  ior: <float>,\r\n *  reflectivity: <float>,\r\n *\r\n *  sheen: <float>,\r\n *  sheenTint: <Color>,\r\n *  sheenRoughness: <float>,\r\n *\r\n *  transmission: <float>,\r\n *  transmissionMap: new THREE.Texture( <Image> ),\r\n *\r\n *  thickness: <float>,\r\n *  thicknessMap: new THREE.Texture( <Image> ),\r\n *  attenuationDistance: <float>,\r\n *  attenuationTint: <Color>,\r\n *\r\n *  specularIntensity: <float>,\r\n *  specularIntensityhMap: new THREE.Texture( <Image> ),\r\n *  specularTint: <Color>,\r\n *  specularTintMap: new THREE.Texture( <Image> )\r\n * }\r\n */var MeshPhysicalMaterial=/*#__PURE__*/function(_MeshStandardMaterial){_inherits(MeshPhysicalMaterial,_MeshStandardMaterial);var _super90=_createSuper(MeshPhysicalMaterial);function MeshPhysicalMaterial(parameters){var _this80;_classCallCheck(this,MeshPhysicalMaterial);_this80=_super90.call(this);_this80.defines={'STANDARD':'','PHYSICAL':''};_this80.type='MeshPhysicalMaterial';_this80.clearcoatMap=null;_this80.clearcoatRoughness=0.0;_this80.clearcoatRoughnessMap=null;_this80.clearcoatNormalScale=new Vector2(1,1);_this80.clearcoatNormalMap=null;_this80.ior=1.5;Object.defineProperty(_assertThisInitialized(_this80),'reflectivity',{get:function get(){return clamp(2.5*(this.ior-1)/(this.ior+1),0,1);},set:function set(reflectivity){this.ior=(1+0.4*reflectivity)/(1-0.4*reflectivity);}});_this80.sheenTint=new Color(0x000000);_this80.sheenRoughness=1.0;_this80.transmissionMap=null;_this80.thickness=0.01;_this80.thicknessMap=null;_this80.attenuationDistance=0.0;_this80.attenuationTint=new Color(1,1,1);_this80.specularIntensity=1.0;_this80.specularIntensityMap=null;_this80.specularTint=new Color(1,1,1);_this80.specularTintMap=null;_this80._sheen=0.0;_this80._clearcoat=0;_this80._transmission=0;_this80.setValues(parameters);return _this80;}_createClass(MeshPhysicalMaterial,[{key:\"sheen\",get:function get(){return this._sheen;},set:function set(value){if(this._sheen>0!==value>0){this.version++;}this._sheen=value;}},{key:\"clearcoat\",get:function get(){return this._clearcoat;},set:function set(value){if(this._clearcoat>0!==value>0){this.version++;}this._clearcoat=value;}},{key:\"transmission\",get:function get(){return this._transmission;},set:function set(value){if(this._transmission>0!==value>0){this.version++;}this._transmission=value;}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshPhysicalMaterial.prototype),\"copy\",this).call(this,source);this.defines={'STANDARD':'','PHYSICAL':''};this.clearcoat=source.clearcoat;this.clearcoatMap=source.clearcoatMap;this.clearcoatRoughness=source.clearcoatRoughness;this.clearcoatRoughnessMap=source.clearcoatRoughnessMap;this.clearcoatNormalMap=source.clearcoatNormalMap;this.clearcoatNormalScale.copy(source.clearcoatNormalScale);this.ior=source.ior;this.sheen=source.sheen;this.sheenTint.copy(source.sheenTint);this.sheenRoughness=source.sheenRoughness;this.transmission=source.transmission;this.transmissionMap=source.transmissionMap;this.thickness=source.thickness;this.thicknessMap=source.thicknessMap;this.attenuationDistance=source.attenuationDistance;this.attenuationTint.copy(source.attenuationTint);this.specularIntensity=source.specularIntensity;this.specularIntensityMap=source.specularIntensityMap;this.specularTint.copy(source.specularTint);this.specularTintMap=source.specularTintMap;return this;}}]);return MeshPhysicalMaterial;}(MeshStandardMaterial);MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.MultiplyOperation,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */var MeshPhongMaterial=/*#__PURE__*/function(_Material10){_inherits(MeshPhongMaterial,_Material10);var _super91=_createSuper(MeshPhongMaterial);function MeshPhongMaterial(parameters){var _this81;_classCallCheck(this,MeshPhongMaterial);_this81=_super91.call(this);_this81.type='MeshPhongMaterial';_this81.color=new Color(0xffffff);// diffuse\n_this81.specular=new Color(0x111111);_this81.shininess=30;_this81.map=null;_this81.lightMap=null;_this81.lightMapIntensity=1.0;_this81.aoMap=null;_this81.aoMapIntensity=1.0;_this81.emissive=new Color(0x000000);_this81.emissiveIntensity=1.0;_this81.emissiveMap=null;_this81.bumpMap=null;_this81.bumpScale=1;_this81.normalMap=null;_this81.normalMapType=TangentSpaceNormalMap;_this81.normalScale=new Vector2(1,1);_this81.displacementMap=null;_this81.displacementScale=1;_this81.displacementBias=0;_this81.specularMap=null;_this81.alphaMap=null;_this81.envMap=null;_this81.combine=MultiplyOperation;_this81.reflectivity=1;_this81.refractionRatio=0.98;_this81.wireframe=false;_this81.wireframeLinewidth=1;_this81.wireframeLinecap='round';_this81.wireframeLinejoin='round';_this81.flatShading=false;_this81.setValues(parameters);return _this81;}_createClass(MeshPhongMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshPhongMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.specular.copy(source.specular);this.shininess=source.shininess;this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;this.flatShading=source.flatShading;return this;}}]);return MeshPhongMaterial;}(Material);MeshPhongMaterial.prototype.isMeshPhongMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *  gradientMap: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n * }\r\n */var MeshToonMaterial=/*#__PURE__*/function(_Material11){_inherits(MeshToonMaterial,_Material11);var _super92=_createSuper(MeshToonMaterial);function MeshToonMaterial(parameters){var _this82;_classCallCheck(this,MeshToonMaterial);_this82=_super92.call(this);_this82.defines={'TOON':''};_this82.type='MeshToonMaterial';_this82.color=new Color(0xffffff);_this82.map=null;_this82.gradientMap=null;_this82.lightMap=null;_this82.lightMapIntensity=1.0;_this82.aoMap=null;_this82.aoMapIntensity=1.0;_this82.emissive=new Color(0x000000);_this82.emissiveIntensity=1.0;_this82.emissiveMap=null;_this82.bumpMap=null;_this82.bumpScale=1;_this82.normalMap=null;_this82.normalMapType=TangentSpaceNormalMap;_this82.normalScale=new Vector2(1,1);_this82.displacementMap=null;_this82.displacementScale=1;_this82.displacementBias=0;_this82.alphaMap=null;_this82.wireframe=false;_this82.wireframeLinewidth=1;_this82.wireframeLinecap='round';_this82.wireframeLinejoin='round';_this82.setValues(parameters);return _this82;}_createClass(MeshToonMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshToonMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.map=source.map;this.gradientMap=source.gradientMap;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;return this;}}]);return MeshToonMaterial;}(Material);MeshToonMaterial.prototype.isMeshToonMaterial=true;/**\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */var MeshNormalMaterial=/*#__PURE__*/function(_Material12){_inherits(MeshNormalMaterial,_Material12);var _super93=_createSuper(MeshNormalMaterial);function MeshNormalMaterial(parameters){var _this83;_classCallCheck(this,MeshNormalMaterial);_this83=_super93.call(this);_this83.type='MeshNormalMaterial';_this83.bumpMap=null;_this83.bumpScale=1;_this83.normalMap=null;_this83.normalMapType=TangentSpaceNormalMap;_this83.normalScale=new Vector2(1,1);_this83.displacementMap=null;_this83.displacementScale=1;_this83.displacementBias=0;_this83.wireframe=false;_this83.wireframeLinewidth=1;_this83.fog=false;_this83.flatShading=false;_this83.setValues(parameters);return _this83;}_createClass(MeshNormalMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshNormalMaterial.prototype),\"copy\",this).call(this,source);this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.flatShading=source.flatShading;return this;}}]);return MeshNormalMaterial;}(Material);MeshNormalMaterial.prototype.isMeshNormalMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n * }\r\n */var MeshLambertMaterial=/*#__PURE__*/function(_Material13){_inherits(MeshLambertMaterial,_Material13);var _super94=_createSuper(MeshLambertMaterial);function MeshLambertMaterial(parameters){var _this84;_classCallCheck(this,MeshLambertMaterial);_this84=_super94.call(this);_this84.type='MeshLambertMaterial';_this84.color=new Color(0xffffff);// diffuse\n_this84.map=null;_this84.lightMap=null;_this84.lightMapIntensity=1.0;_this84.aoMap=null;_this84.aoMapIntensity=1.0;_this84.emissive=new Color(0x000000);_this84.emissiveIntensity=1.0;_this84.emissiveMap=null;_this84.specularMap=null;_this84.alphaMap=null;_this84.envMap=null;_this84.combine=MultiplyOperation;_this84.reflectivity=1;_this84.refractionRatio=0.98;_this84.wireframe=false;_this84.wireframeLinewidth=1;_this84.wireframeLinecap='round';_this84.wireframeLinejoin='round';_this84.setValues(parameters);return _this84;}_createClass(MeshLambertMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshLambertMaterial.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.map=source.map;this.lightMap=source.lightMap;this.lightMapIntensity=source.lightMapIntensity;this.aoMap=source.aoMap;this.aoMapIntensity=source.aoMapIntensity;this.emissive.copy(source.emissive);this.emissiveMap=source.emissiveMap;this.emissiveIntensity=source.emissiveIntensity;this.specularMap=source.specularMap;this.alphaMap=source.alphaMap;this.envMap=source.envMap;this.combine=source.combine;this.reflectivity=source.reflectivity;this.refractionRatio=source.refractionRatio;this.wireframe=source.wireframe;this.wireframeLinewidth=source.wireframeLinewidth;this.wireframeLinecap=source.wireframeLinecap;this.wireframeLinejoin=source.wireframeLinejoin;return this;}}]);return MeshLambertMaterial;}(Material);MeshLambertMaterial.prototype.isMeshLambertMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  matcap: new THREE.Texture( <Image> ),\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalMapType: THREE.TangentSpaceNormalMap,\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  flatShading: <bool>\r\n * }\r\n */var MeshMatcapMaterial=/*#__PURE__*/function(_Material14){_inherits(MeshMatcapMaterial,_Material14);var _super95=_createSuper(MeshMatcapMaterial);function MeshMatcapMaterial(parameters){var _this85;_classCallCheck(this,MeshMatcapMaterial);_this85=_super95.call(this);_this85.defines={'MATCAP':''};_this85.type='MeshMatcapMaterial';_this85.color=new Color(0xffffff);// diffuse\n_this85.matcap=null;_this85.map=null;_this85.bumpMap=null;_this85.bumpScale=1;_this85.normalMap=null;_this85.normalMapType=TangentSpaceNormalMap;_this85.normalScale=new Vector2(1,1);_this85.displacementMap=null;_this85.displacementScale=1;_this85.displacementBias=0;_this85.alphaMap=null;_this85.flatShading=false;_this85.setValues(parameters);return _this85;}_createClass(MeshMatcapMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(MeshMatcapMaterial.prototype),\"copy\",this).call(this,source);this.defines={'MATCAP':''};this.color.copy(source.color);this.matcap=source.matcap;this.map=source.map;this.bumpMap=source.bumpMap;this.bumpScale=source.bumpScale;this.normalMap=source.normalMap;this.normalMapType=source.normalMapType;this.normalScale.copy(source.normalScale);this.displacementMap=source.displacementMap;this.displacementScale=source.displacementScale;this.displacementBias=source.displacementBias;this.alphaMap=source.alphaMap;this.flatShading=source.flatShading;return this;}}]);return MeshMatcapMaterial;}(Material);MeshMatcapMaterial.prototype.isMeshMatcapMaterial=true;/**\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>\r\n * }\r\n */var LineDashedMaterial=/*#__PURE__*/function(_LineBasicMaterial){_inherits(LineDashedMaterial,_LineBasicMaterial);var _super96=_createSuper(LineDashedMaterial);function LineDashedMaterial(parameters){var _this86;_classCallCheck(this,LineDashedMaterial);_this86=_super96.call(this);_this86.type='LineDashedMaterial';_this86.scale=1;_this86.dashSize=3;_this86.gapSize=1;_this86.setValues(parameters);return _this86;}_createClass(LineDashedMaterial,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LineDashedMaterial.prototype),\"copy\",this).call(this,source);this.scale=source.scale;this.dashSize=source.dashSize;this.gapSize=source.gapSize;return this;}}]);return LineDashedMaterial;}(LineBasicMaterial);LineDashedMaterial.prototype.isLineDashedMaterial=true;var Materials=/*#__PURE__*/Object.freeze({__proto__:null,ShadowMaterial:ShadowMaterial,SpriteMaterial:SpriteMaterial,RawShaderMaterial:RawShaderMaterial,ShaderMaterial:ShaderMaterial,PointsMaterial:PointsMaterial,MeshPhysicalMaterial:MeshPhysicalMaterial,MeshStandardMaterial:MeshStandardMaterial,MeshPhongMaterial:MeshPhongMaterial,MeshToonMaterial:MeshToonMaterial,MeshNormalMaterial:MeshNormalMaterial,MeshLambertMaterial:MeshLambertMaterial,MeshDepthMaterial:MeshDepthMaterial,MeshDistanceMaterial:MeshDistanceMaterial,MeshBasicMaterial:MeshBasicMaterial,MeshMatcapMaterial:MeshMatcapMaterial,LineDashedMaterial:LineDashedMaterial,LineBasicMaterial:LineBasicMaterial,Material:Material});var AnimationUtils={// same as Array.prototype.slice, but also works on typed arrays\narraySlice:function arraySlice(array,from,to){if(AnimationUtils.isTypedArray(array)){// in ios9 array.subarray(from, undefined) will return empty array\n// but array.subarray(from) or array.subarray(from, len) is correct\nreturn new array.constructor(array.subarray(from,to!==undefined?to:array.length));}return array.slice(from,to);},// converts an array to a specific type\nconvertArray:function convertArray(array,type,forceClone){if(!array||// let 'undefined' and 'null' pass\n!forceClone&&array.constructor===type)return array;if(typeof type.BYTES_PER_ELEMENT==='number'){return new type(array);// create typed array\n}return Array.prototype.slice.call(array);// create Array\n},isTypedArray:function isTypedArray(object){return ArrayBuffer.isView(object)&&!(object instanceof DataView);},// returns an array by which times and values can be sorted\ngetKeyframeOrder:function getKeyframeOrder(times){function compareTime(i,j){return times[i]-times[j];}var n=times.length;var result=new Array(n);for(var _i245=0;_i245!==n;++_i245){result[_i245]=_i245;}result.sort(compareTime);return result;},// uses the array previously returned by 'getKeyframeOrder' to sort data\nsortedArray:function sortedArray(values,stride,order){var nValues=values.length;var result=new values.constructor(nValues);for(var _i246=0,dstOffset=0;dstOffset!==nValues;++_i246){var srcOffset=order[_i246]*stride;for(var j=0;j!==stride;++j){result[dstOffset++]=values[srcOffset+j];}}return result;},// function for parsing AOS keyframe formats\nflattenJSON:function flattenJSON(jsonKeys,times,values,valuePropertyName){var i=1,key=jsonKeys[0];while(key!==undefined&&key[valuePropertyName]===undefined){key=jsonKeys[i++];}if(key===undefined)return;// no data\nvar value=key[valuePropertyName];if(value===undefined)return;// no data\nif(Array.isArray(value)){do{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push.apply(values,value);// push all elements\n}key=jsonKeys[i++];}while(key!==undefined);}else if(value.toArray!==undefined){// ...assume THREE.Math-ish\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);value.toArray(values,values.length);}key=jsonKeys[i++];}while(key!==undefined);}else{// otherwise push as-is\ndo{value=key[valuePropertyName];if(value!==undefined){times.push(key.time);values.push(value);}key=jsonKeys[i++];}while(key!==undefined);}},subclip:function subclip(sourceClip,name,startFrame,endFrame){var fps=arguments.length>4&&arguments[4]!==undefined?arguments[4]:30;var clip=sourceClip.clone();clip.name=name;var tracks=[];for(var _i247=0;_i247<clip.tracks.length;++_i247){var track=clip.tracks[_i247];var valueSize=track.getValueSize();var times=[];var values=[];for(var j=0;j<track.times.length;++j){var frame=track.times[j]*fps;if(frame<startFrame||frame>=endFrame)continue;times.push(track.times[j]);for(var k=0;k<valueSize;++k){values.push(track.values[j*valueSize+k]);}}if(times.length===0)continue;track.times=AnimationUtils.convertArray(times,track.times.constructor);track.values=AnimationUtils.convertArray(values,track.values.constructor);tracks.push(track);}clip.tracks=tracks;// find minimum .times value across all tracks in the trimmed clip\nvar minStartTime=Infinity;for(var _i248=0;_i248<clip.tracks.length;++_i248){if(minStartTime>clip.tracks[_i248].times[0]){minStartTime=clip.tracks[_i248].times[0];}}// shift all tracks such that clip begins at t=0\nfor(var _i249=0;_i249<clip.tracks.length;++_i249){clip.tracks[_i249].shift(-1*minStartTime);}clip.resetDuration();return clip;},makeClipAdditive:function makeClipAdditive(targetClip){var referenceFrame=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var referenceClip=arguments.length>2&&arguments[2]!==undefined?arguments[2]:targetClip;var fps=arguments.length>3&&arguments[3]!==undefined?arguments[3]:30;if(fps<=0)fps=30;var numTracks=referenceClip.tracks.length;var referenceTime=referenceFrame/fps;// Make each track's values relative to the values at the reference frame\nvar _loop=function _loop(_i250){var referenceTrack=referenceClip.tracks[_i250];var referenceTrackType=referenceTrack.ValueTypeName;// Skip this track if it's non-numeric\nif(referenceTrackType==='bool'||referenceTrackType==='string')return\"continue\";// Find the track in the target clip whose name and type matches the reference track\nvar targetTrack=targetClip.tracks.find(function(track){return track.name===referenceTrack.name&&track.ValueTypeName===referenceTrackType;});if(targetTrack===undefined)return\"continue\";var referenceOffset=0;var referenceValueSize=referenceTrack.getValueSize();if(referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){referenceOffset=referenceValueSize/3;}var targetOffset=0;var targetValueSize=targetTrack.getValueSize();if(targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline){targetOffset=targetValueSize/3;}var lastIndex=referenceTrack.times.length-1;var referenceValue=void 0;// Find the value to subtract out of the track\nif(referenceTime<=referenceTrack.times[0]){// Reference frame is earlier than the first keyframe, so just use the first keyframe\nvar startIndex=referenceOffset;var endIndex=referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,startIndex,endIndex);}else if(referenceTime>=referenceTrack.times[lastIndex]){// Reference frame is after the last keyframe, so just use the last keyframe\nvar _startIndex=lastIndex*referenceValueSize+referenceOffset;var _endIndex=_startIndex+referenceValueSize-referenceOffset;referenceValue=AnimationUtils.arraySlice(referenceTrack.values,_startIndex,_endIndex);}else{// Interpolate to the reference value\nvar interpolant=referenceTrack.createInterpolant();var _startIndex2=referenceOffset;var _endIndex2=referenceValueSize-referenceOffset;interpolant.evaluate(referenceTime);referenceValue=AnimationUtils.arraySlice(interpolant.resultBuffer,_startIndex2,_endIndex2);}// Conjugate the quaternion\nif(referenceTrackType==='quaternion'){var referenceQuat=new Quaternion().fromArray(referenceValue).normalize().conjugate();referenceQuat.toArray(referenceValue);}// Subtract the reference value from all of the track values\nvar numTimes=targetTrack.times.length;for(var j=0;j<numTimes;++j){var valueStart=j*targetValueSize+targetOffset;if(referenceTrackType==='quaternion'){// Multiply the conjugate for quaternion track types\nQuaternion.multiplyQuaternionsFlat(targetTrack.values,valueStart,referenceValue,0,targetTrack.values,valueStart);}else{var valueEnd=targetValueSize-targetOffset*2;// Subtract each value for all other numeric track types\nfor(var k=0;k<valueEnd;++k){targetTrack.values[valueStart+k]-=referenceValue[k];}}}};for(var _i250=0;_i250<numTracks;++_i250){var _ret=_loop(_i250);if(_ret===\"continue\")continue;}targetClip.blendMode=AdditiveAnimationBlendMode;return targetClip;}};/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n */var Interpolant=/*#__PURE__*/function(){function Interpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){_classCallCheck(this,Interpolant);this.parameterPositions=parameterPositions;this._cachedIndex=0;this.resultBuffer=resultBuffer!==undefined?resultBuffer:new sampleValues.constructor(sampleSize);this.sampleValues=sampleValues;this.valueSize=sampleSize;this.settings=null;this.DefaultSettings_={};}_createClass(Interpolant,[{key:\"evaluate\",value:function evaluate(t){var pp=this.parameterPositions;var i1=this._cachedIndex,t1=pp[i1],t0=pp[i1-1];validate_interval:{seek:{var right;linear_scan:{//- See http://jsperf.com/comparison-to-undefined/3\n//- slower code:\n//-\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\nforward_scan:if(!(t<t1)){for(var giveUpAt=i1+2;;){if(t1===undefined){if(t<t0)break forward_scan;// after end\ni1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t,t0);}if(i1===giveUpAt)break;// this loop\nt0=t1;t1=pp[++i1];if(t<t1){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the right side of the index\nright=pp.length;break linear_scan;}//- slower code:\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\nif(!(t>=t0)){// looping?\nvar t1global=pp[1];if(t<t1global){i1=2;// + 1, using the scan for the details\nt0=t1global;}// linear reverse scan\nfor(var _giveUpAt=i1-2;;){if(t0===undefined){// before start\nthis._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(i1===_giveUpAt)break;// this loop\nt1=t0;t0=pp[--i1-1];if(t>=t0){// we have arrived at the sought interval\nbreak seek;}}// prepare binary search on the left side of the index\nright=i1;i1=0;break linear_scan;}// the interval is valid\nbreak validate_interval;}// linear scan\n// binary search\nwhile(i1<right){var mid=i1+right>>>1;if(t<pp[mid]){right=mid;}else{i1=mid+1;}}t1=pp[i1];t0=pp[i1-1];// check boundary cases, again\nif(t0===undefined){this._cachedIndex=0;return this.beforeStart_(0,t,t1);}if(t1===undefined){i1=pp.length;this._cachedIndex=i1;return this.afterEnd_(i1-1,t0,t);}}// seek\nthis._cachedIndex=i1;this.intervalChanged_(i1,t0,t1);}// validate_interval\nreturn this.interpolate_(i1,t0,t,t1);}},{key:\"getSettings_\",value:function getSettings_(){return this.settings||this.DefaultSettings_;}},{key:\"copySampleValue_\",value:function copySampleValue_(index){// copies a sample value to the result buffer\nvar result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset=index*stride;for(var _i251=0;_i251!==stride;++_i251){result[_i251]=values[offset+_i251];}return result;}// Template methods for derived classes:\n},{key:\"interpolate_\",value:function/* i1, t0, t, t1 */interpolate_(){throw new Error('call to abstract method');// implementations shall return this.resultBuffer\n}},{key:\"intervalChanged_\",value:function/* i1, t0, t1 */intervalChanged_(){// empty\n}}]);return Interpolant;}();// ALIAS DEFINITIONS\nInterpolant.prototype.beforeStart_=Interpolant.prototype.copySampleValue_;Interpolant.prototype.afterEnd_=Interpolant.prototype.copySampleValue_;/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n */var CubicInterpolant=/*#__PURE__*/function(_Interpolant){_inherits(CubicInterpolant,_Interpolant);var _super97=_createSuper(CubicInterpolant);function CubicInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){var _this87;_classCallCheck(this,CubicInterpolant);_this87=_super97.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);_this87._weightPrev=-0;_this87._offsetPrev=-0;_this87._weightNext=-0;_this87._offsetNext=-0;_this87.DefaultSettings_={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};return _this87;}_createClass(CubicInterpolant,[{key:\"intervalChanged_\",value:function intervalChanged_(i1,t0,t1){var pp=this.parameterPositions;var iPrev=i1-2,iNext=i1+1,tPrev=pp[iPrev],tNext=pp[iNext];if(tPrev===undefined){switch(this.getSettings_().endingStart){case ZeroSlopeEnding:// f'(t0) = 0\niPrev=i1;tPrev=2*t0-t1;break;case WrapAroundEnding:// use the other end of the curve\niPrev=pp.length-2;tPrev=t0+pp[iPrev]-pp[iPrev+1];break;default:// ZeroCurvatureEnding\n// f''(t0) = 0 a.k.a. Natural Spline\niPrev=i1;tPrev=t1;}}if(tNext===undefined){switch(this.getSettings_().endingEnd){case ZeroSlopeEnding:// f'(tN) = 0\niNext=i1;tNext=2*t1-t0;break;case WrapAroundEnding:// use the other end of the curve\niNext=1;tNext=t1+pp[1]-pp[0];break;default:// ZeroCurvatureEnding\n// f''(tN) = 0, a.k.a. Natural Spline\niNext=i1-1;tNext=t0;}}var halfDt=(t1-t0)*0.5,stride=this.valueSize;this._weightPrev=halfDt/(t0-tPrev);this._weightNext=halfDt/(tNext-t1);this._offsetPrev=iPrev*stride;this._offsetNext=iNext*stride;}},{key:\"interpolate_\",value:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,o1=i1*stride,o0=o1-stride,oP=this._offsetPrev,oN=this._offsetNext,wP=this._weightPrev,wN=this._weightNext,p=(t-t0)/(t1-t0),pp=p*p,ppp=pp*p;// evaluate polynomials\nvar sP=-wP*ppp+2*wP*pp-wP*p;var s0=(1+wP)*ppp+(-1.5-2*wP)*pp+(-0.5+wP)*p+1;var s1=(-1-wN)*ppp+(1.5+wN)*pp+0.5*p;var sN=wN*ppp-wN*pp;// combine data linearly\nfor(var _i252=0;_i252!==stride;++_i252){result[_i252]=sP*values[oP+_i252]+s0*values[o0+_i252]+s1*values[o1+_i252]+sN*values[oN+_i252];}return result;}}]);return CubicInterpolant;}(Interpolant);var LinearInterpolant=/*#__PURE__*/function(_Interpolant2){_inherits(LinearInterpolant,_Interpolant2);var _super98=_createSuper(LinearInterpolant);function LinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){_classCallCheck(this,LinearInterpolant);return _super98.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}_createClass(LinearInterpolant,[{key:\"interpolate_\",value:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,offset1=i1*stride,offset0=offset1-stride,weight1=(t-t0)/(t1-t0),weight0=1-weight1;for(var _i253=0;_i253!==stride;++_i253){result[_i253]=values[offset0+_i253]*weight0+values[offset1+_i253]*weight1;}return result;}}]);return LinearInterpolant;}(Interpolant);/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n */var DiscreteInterpolant=/*#__PURE__*/function(_Interpolant3){_inherits(DiscreteInterpolant,_Interpolant3);var _super99=_createSuper(DiscreteInterpolant);function DiscreteInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){_classCallCheck(this,DiscreteInterpolant);return _super99.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}_createClass(DiscreteInterpolant,[{key:\"interpolate_\",value:function interpolate_(i1/*, t0, t, t1 */){return this.copySampleValue_(i1-1);}}]);return DiscreteInterpolant;}(Interpolant);var KeyframeTrack=/*#__PURE__*/function(){function KeyframeTrack(name,times,values,interpolation){_classCallCheck(this,KeyframeTrack);if(name===undefined)throw new Error('THREE.KeyframeTrack: track name is undefined');if(times===undefined||times.length===0)throw new Error('THREE.KeyframeTrack: no keyframes in track named '+name);this.name=name;this.times=AnimationUtils.convertArray(times,this.TimeBufferType);this.values=AnimationUtils.convertArray(values,this.ValueBufferType);this.setInterpolation(interpolation||this.DefaultInterpolation);}// Serialization (in static context, because of constructor invocation\n// and automatic invocation of .toJSON):\n_createClass(KeyframeTrack,[{key:\"InterpolantFactoryMethodDiscrete\",value:function InterpolantFactoryMethodDiscrete(result){return new DiscreteInterpolant(this.times,this.values,this.getValueSize(),result);}},{key:\"InterpolantFactoryMethodLinear\",value:function InterpolantFactoryMethodLinear(result){return new LinearInterpolant(this.times,this.values,this.getValueSize(),result);}},{key:\"InterpolantFactoryMethodSmooth\",value:function InterpolantFactoryMethodSmooth(result){return new CubicInterpolant(this.times,this.values,this.getValueSize(),result);}},{key:\"setInterpolation\",value:function setInterpolation(interpolation){var factoryMethod;switch(interpolation){case InterpolateDiscrete:factoryMethod=this.InterpolantFactoryMethodDiscrete;break;case InterpolateLinear:factoryMethod=this.InterpolantFactoryMethodLinear;break;case InterpolateSmooth:factoryMethod=this.InterpolantFactoryMethodSmooth;break;}if(factoryMethod===undefined){var message='unsupported interpolation for '+this.ValueTypeName+' keyframe track named '+this.name;if(this.createInterpolant===undefined){// fall back to default, unless the default itself is messed up\nif(interpolation!==this.DefaultInterpolation){this.setInterpolation(this.DefaultInterpolation);}else{throw new Error(message);// fatal, in this case\n}}console.warn('THREE.KeyframeTrack:',message);return this;}this.createInterpolant=factoryMethod;return this;}},{key:\"getInterpolation\",value:function getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return InterpolateDiscrete;case this.InterpolantFactoryMethodLinear:return InterpolateLinear;case this.InterpolantFactoryMethodSmooth:return InterpolateSmooth;}}},{key:\"getValueSize\",value:function getValueSize(){return this.values.length/this.times.length;}// move all keyframes either forwards or backwards in time\n},{key:\"shift\",value:function shift(timeOffset){if(timeOffset!==0.0){var times=this.times;for(var _i254=0,n=times.length;_i254!==n;++_i254){times[_i254]+=timeOffset;}}return this;}// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n},{key:\"scale\",value:function scale(timeScale){if(timeScale!==1.0){var times=this.times;for(var _i255=0,n=times.length;_i255!==n;++_i255){times[_i255]*=timeScale;}}return this;}// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n},{key:\"trim\",value:function trim(startTime,endTime){var times=this.times,nKeys=times.length;var from=0,to=nKeys-1;while(from!==nKeys&&times[from]<startTime){++from;}while(to!==-1&&times[to]>endTime){--to;}++to;// inclusive -> exclusive bound\nif(from!==0||to!==nKeys){// empty tracks are forbidden, so keep at least one keyframe\nif(from>=to){to=Math.max(to,1);from=to-1;}var stride=this.getValueSize();this.times=AnimationUtils.arraySlice(times,from,to);this.values=AnimationUtils.arraySlice(this.values,from*stride,to*stride);}return this;}// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n},{key:\"validate\",value:function validate(){var valid=true;var valueSize=this.getValueSize();if(valueSize-Math.floor(valueSize)!==0){console.error('THREE.KeyframeTrack: Invalid value size in track.',this);valid=false;}var times=this.times,values=this.values,nKeys=times.length;if(nKeys===0){console.error('THREE.KeyframeTrack: Track is empty.',this);valid=false;}var prevTime=null;for(var _i256=0;_i256!==nKeys;_i256++){var currTime=times[_i256];if(typeof currTime==='number'&&isNaN(currTime)){console.error('THREE.KeyframeTrack: Time is not a valid number.',this,_i256,currTime);valid=false;break;}if(prevTime!==null&&prevTime>currTime){console.error('THREE.KeyframeTrack: Out of order keys.',this,_i256,currTime,prevTime);valid=false;break;}prevTime=currTime;}if(values!==undefined){if(AnimationUtils.isTypedArray(values)){for(var _i257=0,n=values.length;_i257!==n;++_i257){var _value5=values[_i257];if(isNaN(_value5)){console.error('THREE.KeyframeTrack: Value is not a valid number.',this,_i257,_value5);valid=false;break;}}}}return valid;}// removes equivalent sequential keys as common in morph target sequences\n// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --\x3e (0,0,1,1,0,0)\n},{key:\"optimize\",value:function optimize(){// times or values may be shared with other tracks, so overwriting is unsafe\nvar times=AnimationUtils.arraySlice(this.times),values=AnimationUtils.arraySlice(this.values),stride=this.getValueSize(),smoothInterpolation=this.getInterpolation()===InterpolateSmooth,lastIndex=times.length-1;var writeIndex=1;for(var _i258=1;_i258<lastIndex;++_i258){var keep=false;var time=times[_i258];var timeNext=times[_i258+1];// remove adjacent keyframes scheduled at the same time\nif(time!==timeNext&&(_i258!==1||time!==times[0])){if(!smoothInterpolation){// remove unnecessary keyframes same as their neighbors\nvar offset=_i258*stride,offsetP=offset-stride,offsetN=offset+stride;for(var j=0;j!==stride;++j){var _value6=values[offset+j];if(_value6!==values[offsetP+j]||_value6!==values[offsetN+j]){keep=true;break;}}}else{keep=true;}}// in-place compaction\nif(keep){if(_i258!==writeIndex){times[writeIndex]=times[_i258];var readOffset=_i258*stride,writeOffset=writeIndex*stride;for(var _j14=0;_j14!==stride;++_j14){values[writeOffset+_j14]=values[readOffset+_j14];}}++writeIndex;}}// flush last keyframe (compaction looks ahead)\nif(lastIndex>0){times[writeIndex]=times[lastIndex];for(var _readOffset=lastIndex*stride,_writeOffset=writeIndex*stride,_j15=0;_j15!==stride;++_j15){values[_writeOffset+_j15]=values[_readOffset+_j15];}++writeIndex;}if(writeIndex!==times.length){this.times=AnimationUtils.arraySlice(times,0,writeIndex);this.values=AnimationUtils.arraySlice(values,0,writeIndex*stride);}else{this.times=times;this.values=values;}return this;}},{key:\"clone\",value:function clone(){var times=AnimationUtils.arraySlice(this.times,0);var values=AnimationUtils.arraySlice(this.values,0);var TypedKeyframeTrack=this.constructor;var track=new TypedKeyframeTrack(this.name,times,values);// Interpolant argument to constructor is not saved, so copy the factory method directly.\ntrack.createInterpolant=this.createInterpolant;return track;}}],[{key:\"toJSON\",value:function toJSON(track){var trackType=track.constructor;var json;// derived classes can define a static toJSON method\nif(trackType.toJSON!==this.toJSON){json=trackType.toJSON(track);}else{// by default, we assume the data can be serialized as-is\njson={'name':track.name,'times':AnimationUtils.convertArray(track.times,Array),'values':AnimationUtils.convertArray(track.values,Array)};var interpolation=track.getInterpolation();if(interpolation!==track.DefaultInterpolation){json.interpolation=interpolation;}}json.type=track.ValueTypeName;// mandatory\nreturn json;}}]);return KeyframeTrack;}();KeyframeTrack.prototype.TimeBufferType=Float32Array;KeyframeTrack.prototype.ValueBufferType=Float32Array;KeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;/**\r\n * A Track of Boolean keyframe values.\r\n */var BooleanKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack){_inherits(BooleanKeyframeTrack,_KeyframeTrack);var _super100=_createSuper(BooleanKeyframeTrack);function BooleanKeyframeTrack(){_classCallCheck(this,BooleanKeyframeTrack);return _super100.apply(this,arguments);}return _createClass(BooleanKeyframeTrack);}(KeyframeTrack);BooleanKeyframeTrack.prototype.ValueTypeName='bool';BooleanKeyframeTrack.prototype.ValueBufferType=Array;BooleanKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;BooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\r\n * A Track of keyframe values that represent color.\r\n */var ColorKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack2){_inherits(ColorKeyframeTrack,_KeyframeTrack2);var _super101=_createSuper(ColorKeyframeTrack);function ColorKeyframeTrack(){_classCallCheck(this,ColorKeyframeTrack);return _super101.apply(this,arguments);}return _createClass(ColorKeyframeTrack);}(KeyframeTrack);ColorKeyframeTrack.prototype.ValueTypeName='color';/**\r\n * A Track of numeric keyframe values.\r\n */var NumberKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack3){_inherits(NumberKeyframeTrack,_KeyframeTrack3);var _super102=_createSuper(NumberKeyframeTrack);function NumberKeyframeTrack(){_classCallCheck(this,NumberKeyframeTrack);return _super102.apply(this,arguments);}return _createClass(NumberKeyframeTrack);}(KeyframeTrack);NumberKeyframeTrack.prototype.ValueTypeName='number';/**\r\n * Spherical linear unit quaternion interpolant.\r\n */var QuaternionLinearInterpolant=/*#__PURE__*/function(_Interpolant4){_inherits(QuaternionLinearInterpolant,_Interpolant4);var _super103=_createSuper(QuaternionLinearInterpolant);function QuaternionLinearInterpolant(parameterPositions,sampleValues,sampleSize,resultBuffer){_classCallCheck(this,QuaternionLinearInterpolant);return _super103.call(this,parameterPositions,sampleValues,sampleSize,resultBuffer);}_createClass(QuaternionLinearInterpolant,[{key:\"interpolate_\",value:function interpolate_(i1,t0,t,t1){var result=this.resultBuffer,values=this.sampleValues,stride=this.valueSize,alpha=(t-t0)/(t1-t0);var offset=i1*stride;for(var end=offset+stride;offset!==end;offset+=4){Quaternion.slerpFlat(result,0,values,offset-stride,values,offset,alpha);}return result;}}]);return QuaternionLinearInterpolant;}(Interpolant);/**\r\n * A Track of quaternion keyframe values.\r\n */var QuaternionKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack4){_inherits(QuaternionKeyframeTrack,_KeyframeTrack4);var _super104=_createSuper(QuaternionKeyframeTrack);function QuaternionKeyframeTrack(){_classCallCheck(this,QuaternionKeyframeTrack);return _super104.apply(this,arguments);}_createClass(QuaternionKeyframeTrack,[{key:\"InterpolantFactoryMethodLinear\",value:function InterpolantFactoryMethodLinear(result){return new QuaternionLinearInterpolant(this.times,this.values,this.getValueSize(),result);}}]);return QuaternionKeyframeTrack;}(KeyframeTrack);QuaternionKeyframeTrack.prototype.ValueTypeName='quaternion';// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation=InterpolateLinear;QuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\r\n * A Track that interpolates Strings\r\n */var StringKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack5){_inherits(StringKeyframeTrack,_KeyframeTrack5);var _super105=_createSuper(StringKeyframeTrack);function StringKeyframeTrack(){_classCallCheck(this,StringKeyframeTrack);return _super105.apply(this,arguments);}return _createClass(StringKeyframeTrack);}(KeyframeTrack);StringKeyframeTrack.prototype.ValueTypeName='string';StringKeyframeTrack.prototype.ValueBufferType=Array;StringKeyframeTrack.prototype.DefaultInterpolation=InterpolateDiscrete;StringKeyframeTrack.prototype.InterpolantFactoryMethodLinear=undefined;StringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth=undefined;/**\r\n * A Track of vectored keyframe values.\r\n */var VectorKeyframeTrack=/*#__PURE__*/function(_KeyframeTrack6){_inherits(VectorKeyframeTrack,_KeyframeTrack6);var _super106=_createSuper(VectorKeyframeTrack);function VectorKeyframeTrack(){_classCallCheck(this,VectorKeyframeTrack);return _super106.apply(this,arguments);}return _createClass(VectorKeyframeTrack);}(KeyframeTrack);VectorKeyframeTrack.prototype.ValueTypeName='vector';var AnimationClip=/*#__PURE__*/function(){function AnimationClip(name){var duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:-1;var tracks=arguments.length>2?arguments[2]:undefined;var blendMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:NormalAnimationBlendMode;_classCallCheck(this,AnimationClip);this.name=name;this.tracks=tracks;this.duration=duration;this.blendMode=blendMode;this.uuid=generateUUID();// this means it should figure out its duration by scanning the tracks\nif(this.duration<0){this.resetDuration();}}_createClass(AnimationClip,[{key:\"resetDuration\",value:function resetDuration(){var tracks=this.tracks;var duration=0;for(var _i259=0,n=tracks.length;_i259!==n;++_i259){var track=this.tracks[_i259];duration=Math.max(duration,track.times[track.times.length-1]);}this.duration=duration;return this;}},{key:\"trim\",value:function trim(){for(var _i260=0;_i260<this.tracks.length;_i260++){this.tracks[_i260].trim(0,this.duration);}return this;}},{key:\"validate\",value:function validate(){var valid=true;for(var _i261=0;_i261<this.tracks.length;_i261++){valid=valid&&this.tracks[_i261].validate();}return valid;}},{key:\"optimize\",value:function optimize(){for(var _i262=0;_i262<this.tracks.length;_i262++){this.tracks[_i262].optimize();}return this;}},{key:\"clone\",value:function clone(){var tracks=[];for(var _i263=0;_i263<this.tracks.length;_i263++){tracks.push(this.tracks[_i263].clone());}return new this.constructor(this.name,this.duration,tracks,this.blendMode);}},{key:\"toJSON\",value:function toJSON(){return this.constructor.toJSON(this);}}],[{key:\"parse\",value:function parse(json){var tracks=[],jsonTracks=json.tracks,frameTime=1.0/(json.fps||1.0);for(var _i264=0,n=jsonTracks.length;_i264!==n;++_i264){tracks.push(parseKeyframeTrack(jsonTracks[_i264]).scale(frameTime));}var clip=new this(json.name,json.duration,tracks,json.blendMode);clip.uuid=json.uuid;return clip;}},{key:\"toJSON\",value:function toJSON(clip){var tracks=[],clipTracks=clip.tracks;var json={'name':clip.name,'duration':clip.duration,'tracks':tracks,'uuid':clip.uuid,'blendMode':clip.blendMode};for(var _i265=0,n=clipTracks.length;_i265!==n;++_i265){tracks.push(KeyframeTrack.toJSON(clipTracks[_i265]));}return json;}},{key:\"CreateFromMorphTargetSequence\",value:function CreateFromMorphTargetSequence(name,morphTargetSequence,fps,noLoop){var numMorphTargets=morphTargetSequence.length;var tracks=[];for(var _i266=0;_i266<numMorphTargets;_i266++){var times=[];var values=[];times.push((_i266+numMorphTargets-1)%numMorphTargets,_i266,(_i266+1)%numMorphTargets);values.push(0,1,0);var order=AnimationUtils.getKeyframeOrder(times);times=AnimationUtils.sortedArray(times,1,order);values=AnimationUtils.sortedArray(values,1,order);// if there is a key at the first frame, duplicate it as the\n// last frame as well for perfect loop.\nif(!noLoop&&times[0]===0){times.push(numMorphTargets);values.push(values[0]);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluences['+morphTargetSequence[_i266].name+']',times,values).scale(1.0/fps));}return new this(name,-1,tracks);}},{key:\"findByName\",value:function findByName(objectOrClipArray,name){var clipArray=objectOrClipArray;if(!Array.isArray(objectOrClipArray)){var o=objectOrClipArray;clipArray=o.geometry&&o.geometry.animations||o.animations;}for(var _i267=0;_i267<clipArray.length;_i267++){if(clipArray[_i267].name===name){return clipArray[_i267];}}return null;}},{key:\"CreateClipsFromMorphTargetSequences\",value:function CreateClipsFromMorphTargetSequences(morphTargets,fps,noLoop){var animationToMorphTargets={};// tested with https://regex101.com/ on trick sequences\n// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\nvar pattern=/^([\\w-]*?)([\\d]+)$/;// sort morph target names into animation groups based\n// patterns like Walk_001, Walk_002, Run_001, Run_002\nfor(var _i268=0,il=morphTargets.length;_i268<il;_i268++){var morphTarget=morphTargets[_i268];var parts=morphTarget.name.match(pattern);if(parts&&parts.length>1){var name=parts[1];var animationMorphTargets=animationToMorphTargets[name];if(!animationMorphTargets){animationToMorphTargets[name]=animationMorphTargets=[];}animationMorphTargets.push(morphTarget);}}var clips=[];for(var _name4 in animationToMorphTargets){clips.push(this.CreateFromMorphTargetSequence(_name4,animationToMorphTargets[_name4],fps,noLoop));}return clips;}// parse the animation.hierarchy format\n},{key:\"parseAnimation\",value:function parseAnimation(animation,bones){if(!animation){console.error('THREE.AnimationClip: No animation in JSONLoader data.');return null;}var addNonemptyTrack=function addNonemptyTrack(trackType,trackName,animationKeys,propertyName,destTracks){// only return track if there are actually keys.\nif(animationKeys.length!==0){var times=[];var values=[];AnimationUtils.flattenJSON(animationKeys,times,values,propertyName);// empty keys are filtered out, so check again\nif(times.length!==0){destTracks.push(new trackType(trackName,times,values));}}};var tracks=[];var clipName=animation.name||'default';var fps=animation.fps||30;var blendMode=animation.blendMode;// automatic length determination in AnimationClip.\nvar duration=animation.length||-1;var hierarchyTracks=animation.hierarchy||[];for(var h=0;h<hierarchyTracks.length;h++){var animationKeys=hierarchyTracks[h].keys;// skip empty tracks\nif(!animationKeys||animationKeys.length===0)continue;// process morph targets\nif(animationKeys[0].morphTargets){// figure out all morph targets used in this track\nvar morphTargetNames={};var k=void 0;for(k=0;k<animationKeys.length;k++){if(animationKeys[k].morphTargets){for(var m=0;m<animationKeys[k].morphTargets.length;m++){morphTargetNames[animationKeys[k].morphTargets[m]]=-1;}}}// create a track for each morph target with all zero\n// morphTargetInfluences except for the keys in which\n// the morphTarget is named.\nfor(var morphTargetName in morphTargetNames){var times=[];var values=[];for(var _m=0;_m!==animationKeys[k].morphTargets.length;++_m){var animationKey=animationKeys[k];times.push(animationKey.time);values.push(animationKey.morphTarget===morphTargetName?1:0);}tracks.push(new NumberKeyframeTrack('.morphTargetInfluence['+morphTargetName+']',times,values));}duration=morphTargetNames.length*(fps||1.0);}else{// ...assume skeletal animation\nvar boneName='.bones['+bones[h].name+']';addNonemptyTrack(VectorKeyframeTrack,boneName+'.position',animationKeys,'pos',tracks);addNonemptyTrack(QuaternionKeyframeTrack,boneName+'.quaternion',animationKeys,'rot',tracks);addNonemptyTrack(VectorKeyframeTrack,boneName+'.scale',animationKeys,'scl',tracks);}}if(tracks.length===0){return null;}var clip=new this(clipName,duration,tracks,blendMode);return clip;}}]);return AnimationClip;}();function getTrackTypeForValueTypeName(typeName){switch(typeName.toLowerCase()){case'scalar':case'double':case'float':case'number':case'integer':return NumberKeyframeTrack;case'vector':case'vector2':case'vector3':case'vector4':return VectorKeyframeTrack;case'color':return ColorKeyframeTrack;case'quaternion':return QuaternionKeyframeTrack;case'bool':case'boolean':return BooleanKeyframeTrack;case'string':return StringKeyframeTrack;}throw new Error('THREE.KeyframeTrack: Unsupported typeName: '+typeName);}function parseKeyframeTrack(json){if(json.type===undefined){throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');}var trackType=getTrackTypeForValueTypeName(json.type);if(json.times===undefined){var times=[],values=[];AnimationUtils.flattenJSON(json.keys,times,values,'value');json.times=times;json.values=values;}// derived classes can define a static parse method\nif(trackType.parse!==undefined){return trackType.parse(json);}else{// by default, we assume a constructor compatible with the base\nreturn new trackType(json.name,json.times,json.values,json.interpolation);}}var Cache={enabled:false,files:{},add:function add(key,file){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Adding key:', key );\nthis.files[key]=file;},get:function get(key){if(this.enabled===false)return;// console.log( 'THREE.Cache', 'Checking key:', key );\nreturn this.files[key];},remove:function remove(key){delete this.files[key];},clear:function clear(){this.files={};}};var LoadingManager=/*#__PURE__*/_createClass(function LoadingManager(onLoad,onProgress,onError){_classCallCheck(this,LoadingManager);var scope=this;var isLoading=false;var itemsLoaded=0;var itemsTotal=0;var urlModifier=undefined;var handlers=[];// Refer to #5689 for the reason why we don't set .onStart\n// in the constructor\nthis.onStart=undefined;this.onLoad=onLoad;this.onProgress=onProgress;this.onError=onError;this.itemStart=function(url){itemsTotal++;if(isLoading===false){if(scope.onStart!==undefined){scope.onStart(url,itemsLoaded,itemsTotal);}}isLoading=true;};this.itemEnd=function(url){itemsLoaded++;if(scope.onProgress!==undefined){scope.onProgress(url,itemsLoaded,itemsTotal);}if(itemsLoaded===itemsTotal){isLoading=false;if(scope.onLoad!==undefined){scope.onLoad();}}};this.itemError=function(url){if(scope.onError!==undefined){scope.onError(url);}};this.resolveURL=function(url){if(urlModifier){return urlModifier(url);}return url;};this.setURLModifier=function(transform){urlModifier=transform;return this;};this.addHandler=function(regex,loader){handlers.push(regex,loader);return this;};this.removeHandler=function(regex){var index=handlers.indexOf(regex);if(index!==-1){handlers.splice(index,2);}return this;};this.getHandler=function(file){for(var _i269=0,l=handlers.length;_i269<l;_i269+=2){var regex=handlers[_i269];var loader=handlers[_i269+1];if(regex.global)regex.lastIndex=0;// see #17920\nif(regex.test(file)){return loader;}}return null;};});var DefaultLoadingManager=new LoadingManager();var Loader=/*#__PURE__*/function(){function Loader(manager){_classCallCheck(this,Loader);this.manager=manager!==undefined?manager:DefaultLoadingManager;this.crossOrigin='anonymous';this.withCredentials=false;this.path='';this.resourcePath='';this.requestHeader={};}_createClass(Loader,[{key:\"load\",value:function/* url, onLoad, onProgress, onError */load(){}},{key:\"loadAsync\",value:function loadAsync(url,onProgress){var scope=this;return new Promise(function(resolve,reject){scope.load(url,resolve,onProgress,reject);});}},{key:\"parse\",value:function/* data */parse(){}},{key:\"setCrossOrigin\",value:function setCrossOrigin(crossOrigin){this.crossOrigin=crossOrigin;return this;}},{key:\"setWithCredentials\",value:function setWithCredentials(value){this.withCredentials=value;return this;}},{key:\"setPath\",value:function setPath(path){this.path=path;return this;}},{key:\"setResourcePath\",value:function setResourcePath(resourcePath){this.resourcePath=resourcePath;return this;}},{key:\"setRequestHeader\",value:function setRequestHeader(requestHeader){this.requestHeader=requestHeader;return this;}}]);return Loader;}();var loading={};var FileLoader=/*#__PURE__*/function(_Loader){_inherits(FileLoader,_Loader);var _super107=_createSuper(FileLoader);function FileLoader(manager){_classCallCheck(this,FileLoader);return _super107.call(this,manager);}_createClass(FileLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}// Check if request is duplicate\nif(loading[url]!==undefined){loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});return;}// Check for data: URI\nvar dataUriRegex=/^data:(.*?)(;base64)?,(.*)$/;var dataUriRegexResult=url.match(dataUriRegex);var request;// Safari can not handle Data URIs through XMLHttpRequest so process manually\nif(dataUriRegexResult){var mimeType=dataUriRegexResult[1];var isBase64=!!dataUriRegexResult[2];var data=dataUriRegexResult[3];data=decodeURIComponent(data);if(isBase64)data=atob(data);try{var response;var responseType=(this.responseType||'').toLowerCase();switch(responseType){case'arraybuffer':case'blob':var view=new Uint8Array(data.length);for(var _i270=0;_i270<data.length;_i270++){view[_i270]=data.charCodeAt(_i270);}if(responseType==='blob'){response=new Blob([view.buffer],{type:mimeType});}else{response=view.buffer;}break;case'document':var parser=new DOMParser();response=parser.parseFromString(data,mimeType);break;case'json':response=JSON.parse(data);break;default:// 'text' or other\nresponse=data;break;}// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onLoad)onLoad(response);scope.manager.itemEnd(url);},0);}catch(error){// Wait for next browser tick like standard XMLHttpRequest event dispatching does\nsetTimeout(function(){if(onError)onError(error);scope.manager.itemError(url);scope.manager.itemEnd(url);},0);}}else{// Initialise array for duplicate requests\nloading[url]=[];loading[url].push({onLoad:onLoad,onProgress:onProgress,onError:onError});request=new XMLHttpRequest();request.open('GET',url,true);request.addEventListener('load',function(event){var response=this.response;var callbacks=loading[url];delete loading[url];if(this.status===200||this.status===0){// Some browsers return HTTP Status 0 when using non-http protocol\n// e.g. 'file://' or 'data://'. Handle as success.\nif(this.status===0)console.warn('THREE.FileLoader: HTTP Status 0 received.');// Add to cache only on HTTP success, so that we do not cache\n// error response bodies as proper responses to requests.\nCache.add(url,response);for(var _i271=0,il=callbacks.length;_i271<il;_i271++){var callback=callbacks[_i271];if(callback.onLoad)callback.onLoad(response);}scope.manager.itemEnd(url);}else{for(var _i272=0,_il18=callbacks.length;_i272<_il18;_i272++){var _callback=callbacks[_i272];if(_callback.onError)_callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);}},false);request.addEventListener('progress',function(event){var callbacks=loading[url];for(var _i273=0,il=callbacks.length;_i273<il;_i273++){var callback=callbacks[_i273];if(callback.onProgress)callback.onProgress(event);}},false);request.addEventListener('error',function(event){var callbacks=loading[url];delete loading[url];for(var _i274=0,il=callbacks.length;_i274<il;_i274++){var callback=callbacks[_i274];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);request.addEventListener('abort',function(event){var callbacks=loading[url];delete loading[url];for(var _i275=0,il=callbacks.length;_i275<il;_i275++){var callback=callbacks[_i275];if(callback.onError)callback.onError(event);}scope.manager.itemError(url);scope.manager.itemEnd(url);},false);if(this.responseType!==undefined)request.responseType=this.responseType;if(this.withCredentials!==undefined)request.withCredentials=this.withCredentials;if(request.overrideMimeType)request.overrideMimeType(this.mimeType!==undefined?this.mimeType:'text/plain');for(var header in this.requestHeader){request.setRequestHeader(header,this.requestHeader[header]);}request.send(null);}scope.manager.itemStart(url);return request;}},{key:\"setResponseType\",value:function setResponseType(value){this.responseType=value;return this;}},{key:\"setMimeType\",value:function setMimeType(value){this.mimeType=value;return this;}}]);return FileLoader;}(Loader);var AnimationLoader=/*#__PURE__*/function(_Loader2){_inherits(AnimationLoader,_Loader2);var _super108=_createSuper(AnimationLoader);function AnimationLoader(manager){_classCallCheck(this,AnimationLoader);return _super108.call(this,manager);}_createClass(AnimationLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}},{key:\"parse\",value:function parse(json){var animations=[];for(var _i276=0;_i276<json.length;_i276++){var clip=AnimationClip.parse(json[_i276]);animations.push(clip);}return animations;}}]);return AnimationLoader;}(Loader);/**\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */var CompressedTextureLoader=/*#__PURE__*/function(_Loader3){_inherits(CompressedTextureLoader,_Loader3);var _super109=_createSuper(CompressedTextureLoader);function CompressedTextureLoader(manager){_classCallCheck(this,CompressedTextureLoader);return _super109.call(this,manager);}_createClass(CompressedTextureLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var images=[];var texture=new CompressedTexture();var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(scope.withCredentials);var loaded=0;function loadTexture(i){loader.load(url[i],function(buffer){var texDatas=scope.parse(buffer,true);images[i]={width:texDatas.width,height:texDatas.height,format:texDatas.format,mipmaps:texDatas.mipmaps};loaded+=1;if(loaded===6){if(texDatas.mipmapCount===1)texture.minFilter=LinearFilter;texture.image=images;texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);}},onProgress,onError);}if(Array.isArray(url)){for(var _i277=0,il=url.length;_i277<il;++_i277){loadTexture(_i277);}}else{// compressed cubemap texture stored in a single DDS file\nloader.load(url,function(buffer){var texDatas=scope.parse(buffer,true);if(texDatas.isCubemap){var faces=texDatas.mipmaps.length/texDatas.mipmapCount;for(var f=0;f<faces;f++){images[f]={mipmaps:[]};for(var _i278=0;_i278<texDatas.mipmapCount;_i278++){images[f].mipmaps.push(texDatas.mipmaps[f*texDatas.mipmapCount+_i278]);images[f].format=texDatas.format;images[f].width=texDatas.width;images[f].height=texDatas.height;}}texture.image=images;}else{texture.image.width=texDatas.width;texture.image.height=texDatas.height;texture.mipmaps=texDatas.mipmaps;}if(texDatas.mipmapCount===1){texture.minFilter=LinearFilter;}texture.format=texDatas.format;texture.needsUpdate=true;if(onLoad)onLoad(texture);},onProgress,onError);}return texture;}}]);return CompressedTextureLoader;}(Loader);var ImageLoader=/*#__PURE__*/function(_Loader4){_inherits(ImageLoader,_Loader4);var _super110=_createSuper(ImageLoader);function ImageLoader(manager){_classCallCheck(this,ImageLoader);return _super110.call(this,manager);}_createClass(ImageLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}var image=createElementNS('img');function onImageLoad(){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);Cache.add(url,this);if(onLoad)onLoad(this);scope.manager.itemEnd(url);}function onImageError(event){image.removeEventListener('load',onImageLoad,false);image.removeEventListener('error',onImageError,false);if(onError)onError(event);scope.manager.itemError(url);scope.manager.itemEnd(url);}image.addEventListener('load',onImageLoad,false);image.addEventListener('error',onImageError,false);if(url.substr(0,5)!=='data:'){if(this.crossOrigin!==undefined)image.crossOrigin=this.crossOrigin;}scope.manager.itemStart(url);image.src=url;return image;}}]);return ImageLoader;}(Loader);var CubeTextureLoader=/*#__PURE__*/function(_Loader5){_inherits(CubeTextureLoader,_Loader5);var _super111=_createSuper(CubeTextureLoader);function CubeTextureLoader(manager){_classCallCheck(this,CubeTextureLoader);return _super111.call(this,manager);}_createClass(CubeTextureLoader,[{key:\"load\",value:function load(urls,onLoad,onProgress,onError){var texture=new CubeTexture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);var loaded=0;function loadTexture(i){loader.load(urls[i],function(image){texture.images[i]=image;loaded++;if(loaded===6){texture.needsUpdate=true;if(onLoad)onLoad(texture);}},undefined,onError);}for(var _i279=0;_i279<urls.length;++_i279){loadTexture(_i279);}return texture;}}]);return CubeTextureLoader;}(Loader);/**\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n *\r\n * Sub classes have to implement the parse() method which will be used in load().\r\n */var DataTextureLoader=/*#__PURE__*/function(_Loader6){_inherits(DataTextureLoader,_Loader6);var _super112=_createSuper(DataTextureLoader);function DataTextureLoader(manager){_classCallCheck(this,DataTextureLoader);return _super112.call(this,manager);}_createClass(DataTextureLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var texture=new DataTexture();var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setRequestHeader(this.requestHeader);loader.setPath(this.path);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(buffer){var texData=scope.parse(buffer);if(!texData)return;if(texData.image!==undefined){texture.image=texData.image;}else if(texData.data!==undefined){texture.image.width=texData.width;texture.image.height=texData.height;texture.image.data=texData.data;}texture.wrapS=texData.wrapS!==undefined?texData.wrapS:ClampToEdgeWrapping;texture.wrapT=texData.wrapT!==undefined?texData.wrapT:ClampToEdgeWrapping;texture.magFilter=texData.magFilter!==undefined?texData.magFilter:LinearFilter;texture.minFilter=texData.minFilter!==undefined?texData.minFilter:LinearFilter;texture.anisotropy=texData.anisotropy!==undefined?texData.anisotropy:1;if(texData.encoding!==undefined){texture.encoding=texData.encoding;}if(texData.flipY!==undefined){texture.flipY=texData.flipY;}if(texData.format!==undefined){texture.format=texData.format;}if(texData.type!==undefined){texture.type=texData.type;}if(texData.mipmaps!==undefined){texture.mipmaps=texData.mipmaps;texture.minFilter=LinearMipmapLinearFilter;// presumably...\n}if(texData.mipmapCount===1){texture.minFilter=LinearFilter;}if(texData.generateMipmaps!==undefined){texture.generateMipmaps=texData.generateMipmaps;}texture.needsUpdate=true;if(onLoad)onLoad(texture,texData);},onProgress,onError);return texture;}}]);return DataTextureLoader;}(Loader);var TextureLoader=/*#__PURE__*/function(_Loader7){_inherits(TextureLoader,_Loader7);var _super113=_createSuper(TextureLoader);function TextureLoader(manager){_classCallCheck(this,TextureLoader);return _super113.call(this,manager);}_createClass(TextureLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var texture=new Texture();var loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);loader.setPath(this.path);loader.load(url,function(image){texture.image=image;texture.needsUpdate=true;if(onLoad!==undefined){onLoad(texture);}},onProgress,onError);return texture;}}]);return TextureLoader;}(Loader);var Light=/*#__PURE__*/function(_Object3D11){_inherits(Light,_Object3D11);var _super114=_createSuper(Light);function Light(color){var _this88;var intensity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;_classCallCheck(this,Light);_this88=_super114.call(this);_this88.type='Light';_this88.color=new Color(color);_this88.intensity=intensity;return _this88;}_createClass(Light,[{key:\"dispose\",value:function dispose(){// Empty here in base class; some subclasses override.\n}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(Light.prototype),\"copy\",this).call(this,source);this.color.copy(source.color);this.intensity=source.intensity;return this;}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(Light.prototype),\"toJSON\",this).call(this,meta);data.object.color=this.color.getHex();data.object.intensity=this.intensity;if(this.groundColor!==undefined)data.object.groundColor=this.groundColor.getHex();if(this.distance!==undefined)data.object.distance=this.distance;if(this.angle!==undefined)data.object.angle=this.angle;if(this.decay!==undefined)data.object.decay=this.decay;if(this.penumbra!==undefined)data.object.penumbra=this.penumbra;if(this.shadow!==undefined)data.object.shadow=this.shadow.toJSON();return data;}}]);return Light;}(Object3D);Light.prototype.isLight=true;var HemisphereLight=/*#__PURE__*/function(_Light){_inherits(HemisphereLight,_Light);var _super115=_createSuper(HemisphereLight);function HemisphereLight(skyColor,groundColor,intensity){var _this89;_classCallCheck(this,HemisphereLight);_this89=_super115.call(this,skyColor,intensity);_this89.type='HemisphereLight';_this89.position.copy(Object3D.DefaultUp);_this89.updateMatrix();_this89.groundColor=new Color(groundColor);return _this89;}_createClass(HemisphereLight,[{key:\"copy\",value:function copy(source){Light.prototype.copy.call(this,source);this.groundColor.copy(source.groundColor);return this;}}]);return HemisphereLight;}(Light);HemisphereLight.prototype.isHemisphereLight=true;var _projScreenMatrix$1=/*@__PURE__*/new Matrix4();var _lightPositionWorld$1=/*@__PURE__*/new Vector3();var _lookTarget$1=/*@__PURE__*/new Vector3();var LightShadow=/*#__PURE__*/function(){function LightShadow(camera){_classCallCheck(this,LightShadow);this.camera=camera;this.bias=0;this.normalBias=0;this.radius=1;this.blurSamples=8;this.mapSize=new Vector2(512,512);this.map=null;this.mapPass=null;this.matrix=new Matrix4();this.autoUpdate=true;this.needsUpdate=false;this._frustum=new Frustum();this._frameExtents=new Vector2(1,1);this._viewportCount=1;this._viewports=[new Vector4(0,0,1,1)];}_createClass(LightShadow,[{key:\"getViewportCount\",value:function getViewportCount(){return this._viewportCount;}},{key:\"getFrustum\",value:function getFrustum(){return this._frustum;}},{key:\"updateMatrices\",value:function updateMatrices(light){var shadowCamera=this.camera;var shadowMatrix=this.matrix;_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);shadowCamera.position.copy(_lightPositionWorld$1);_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);shadowCamera.lookAt(_lookTarget$1);shadowCamera.updateMatrixWorld();_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix,shadowCamera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix$1);shadowMatrix.set(0.5,0.0,0.0,0.5,0.0,0.5,0.0,0.5,0.0,0.0,0.5,0.5,0.0,0.0,0.0,1.0);shadowMatrix.multiply(shadowCamera.projectionMatrix);shadowMatrix.multiply(shadowCamera.matrixWorldInverse);}},{key:\"getViewport\",value:function getViewport(viewportIndex){return this._viewports[viewportIndex];}},{key:\"getFrameExtents\",value:function getFrameExtents(){return this._frameExtents;}},{key:\"dispose\",value:function dispose(){if(this.map){this.map.dispose();}if(this.mapPass){this.mapPass.dispose();}}},{key:\"copy\",value:function copy(source){this.camera=source.camera.clone();this.bias=source.bias;this.radius=source.radius;this.mapSize.copy(source.mapSize);return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"toJSON\",value:function toJSON(){var object={};if(this.bias!==0)object.bias=this.bias;if(this.normalBias!==0)object.normalBias=this.normalBias;if(this.radius!==1)object.radius=this.radius;if(this.mapSize.x!==512||this.mapSize.y!==512)object.mapSize=this.mapSize.toArray();object.camera=this.camera.toJSON(false).object;delete object.camera.matrix;return object;}}]);return LightShadow;}();var SpotLightShadow=/*#__PURE__*/function(_LightShadow){_inherits(SpotLightShadow,_LightShadow);var _super116=_createSuper(SpotLightShadow);function SpotLightShadow(){var _this90;_classCallCheck(this,SpotLightShadow);_this90=_super116.call(this,new PerspectiveCamera(50,1,0.5,500));_this90.focus=1;return _this90;}_createClass(SpotLightShadow,[{key:\"updateMatrices\",value:function updateMatrices(light){var camera=this.camera;var fov=RAD2DEG*2*light.angle*this.focus;var aspect=this.mapSize.width/this.mapSize.height;var far=light.distance||camera.far;if(fov!==camera.fov||aspect!==camera.aspect||far!==camera.far){camera.fov=fov;camera.aspect=aspect;camera.far=far;camera.updateProjectionMatrix();}_get(_getPrototypeOf(SpotLightShadow.prototype),\"updateMatrices\",this).call(this,light);}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(SpotLightShadow.prototype),\"copy\",this).call(this,source);this.focus=source.focus;return this;}}]);return SpotLightShadow;}(LightShadow);SpotLightShadow.prototype.isSpotLightShadow=true;var SpotLight=/*#__PURE__*/function(_Light2){_inherits(SpotLight,_Light2);var _super117=_createSuper(SpotLight);function SpotLight(color,intensity){var _this91;var distance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var angle=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Math.PI/3;var penumbra=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0;var decay=arguments.length>5&&arguments[5]!==undefined?arguments[5]:1;_classCallCheck(this,SpotLight);_this91=_super117.call(this,color,intensity);_this91.type='SpotLight';_this91.position.copy(Object3D.DefaultUp);_this91.updateMatrix();_this91.target=new Object3D();_this91.distance=distance;_this91.angle=angle;_this91.penumbra=penumbra;_this91.decay=decay;// for physically correct lights, should be 2.\n_this91.shadow=new SpotLightShadow();return _this91;}_createClass(SpotLight,[{key:\"power\",get:function get(){// compute the light's luminous power (in lumens) from its intensity (in candela)\n// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\nreturn this.intensity*Math.PI;},set:function set(power){// set the light's intensity (in candela) from the desired luminous power (in lumens)\nthis.intensity=power/Math.PI;}},{key:\"dispose\",value:function dispose(){this.shadow.dispose();}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(SpotLight.prototype),\"copy\",this).call(this,source);this.distance=source.distance;this.angle=source.angle;this.penumbra=source.penumbra;this.decay=source.decay;this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}]);return SpotLight;}(Light);SpotLight.prototype.isSpotLight=true;var _projScreenMatrix=/*@__PURE__*/new Matrix4();var _lightPositionWorld=/*@__PURE__*/new Vector3();var _lookTarget=/*@__PURE__*/new Vector3();var PointLightShadow=/*#__PURE__*/function(_LightShadow2){_inherits(PointLightShadow,_LightShadow2);var _super118=_createSuper(PointLightShadow);function PointLightShadow(){var _this92;_classCallCheck(this,PointLightShadow);_this92=_super118.call(this,new PerspectiveCamera(90,1,0.5,500));_this92._frameExtents=new Vector2(4,2);_this92._viewportCount=6;_this92._viewports=[// These viewports map a cube-map onto a 2D texture with the\n// following orientation:\n//\n//  xzXZ\n//   y Y\n//\n// X - Positive x direction\n// x - Negative x direction\n// Y - Positive y direction\n// y - Negative y direction\n// Z - Positive z direction\n// z - Negative z direction\n// positive X\nnew Vector4(2,1,1,1),// negative X\nnew Vector4(0,1,1,1),// positive Z\nnew Vector4(3,1,1,1),// negative Z\nnew Vector4(1,1,1,1),// positive Y\nnew Vector4(3,0,1,1),// negative Y\nnew Vector4(1,0,1,1)];_this92._cubeDirections=[new Vector3(1,0,0),new Vector3(-1,0,0),new Vector3(0,0,1),new Vector3(0,0,-1),new Vector3(0,1,0),new Vector3(0,-1,0)];_this92._cubeUps=[new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,1,0),new Vector3(0,0,1),new Vector3(0,0,-1)];return _this92;}_createClass(PointLightShadow,[{key:\"updateMatrices\",value:function updateMatrices(light){var viewportIndex=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var camera=this.camera;var shadowMatrix=this.matrix;var far=light.distance||camera.far;if(far!==camera.far){camera.far=far;camera.updateProjectionMatrix();}_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);camera.position.copy(_lightPositionWorld);_lookTarget.copy(camera.position);_lookTarget.add(this._cubeDirections[viewportIndex]);camera.up.copy(this._cubeUps[viewportIndex]);camera.lookAt(_lookTarget);camera.updateMatrixWorld();shadowMatrix.makeTranslation(-_lightPositionWorld.x,-_lightPositionWorld.y,-_lightPositionWorld.z);_projScreenMatrix.multiplyMatrices(camera.projectionMatrix,camera.matrixWorldInverse);this._frustum.setFromProjectionMatrix(_projScreenMatrix);}}]);return PointLightShadow;}(LightShadow);PointLightShadow.prototype.isPointLightShadow=true;var PointLight=/*#__PURE__*/function(_Light3){_inherits(PointLight,_Light3);var _super119=_createSuper(PointLight);function PointLight(color,intensity){var _this93;var distance=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var decay=arguments.length>3&&arguments[3]!==undefined?arguments[3]:1;_classCallCheck(this,PointLight);_this93=_super119.call(this,color,intensity);_this93.type='PointLight';_this93.distance=distance;_this93.decay=decay;// for physically correct lights, should be 2.\n_this93.shadow=new PointLightShadow();return _this93;}_createClass(PointLight,[{key:\"power\",get:function get(){// compute the light's luminous power (in lumens) from its intensity (in candela)\n// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\nreturn this.intensity*4*Math.PI;},set:function set(power){// set the light's intensity (in candela) from the desired luminous power (in lumens)\nthis.intensity=power/(4*Math.PI);}},{key:\"dispose\",value:function dispose(){this.shadow.dispose();}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(PointLight.prototype),\"copy\",this).call(this,source);this.distance=source.distance;this.decay=source.decay;this.shadow=source.shadow.clone();return this;}}]);return PointLight;}(Light);PointLight.prototype.isPointLight=true;var DirectionalLightShadow=/*#__PURE__*/function(_LightShadow3){_inherits(DirectionalLightShadow,_LightShadow3);var _super120=_createSuper(DirectionalLightShadow);function DirectionalLightShadow(){_classCallCheck(this,DirectionalLightShadow);return _super120.call(this,new OrthographicCamera(-5,5,5,-5,0.5,500));}return _createClass(DirectionalLightShadow);}(LightShadow);DirectionalLightShadow.prototype.isDirectionalLightShadow=true;var DirectionalLight=/*#__PURE__*/function(_Light4){_inherits(DirectionalLight,_Light4);var _super121=_createSuper(DirectionalLight);function DirectionalLight(color,intensity){var _this94;_classCallCheck(this,DirectionalLight);_this94=_super121.call(this,color,intensity);_this94.type='DirectionalLight';_this94.position.copy(Object3D.DefaultUp);_this94.updateMatrix();_this94.target=new Object3D();_this94.shadow=new DirectionalLightShadow();return _this94;}_createClass(DirectionalLight,[{key:\"dispose\",value:function dispose(){this.shadow.dispose();}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(DirectionalLight.prototype),\"copy\",this).call(this,source);this.target=source.target.clone();this.shadow=source.shadow.clone();return this;}}]);return DirectionalLight;}(Light);DirectionalLight.prototype.isDirectionalLight=true;var AmbientLight=/*#__PURE__*/function(_Light5){_inherits(AmbientLight,_Light5);var _super122=_createSuper(AmbientLight);function AmbientLight(color,intensity){var _this95;_classCallCheck(this,AmbientLight);_this95=_super122.call(this,color,intensity);_this95.type='AmbientLight';return _this95;}return _createClass(AmbientLight);}(Light);AmbientLight.prototype.isAmbientLight=true;var RectAreaLight=/*#__PURE__*/function(_Light6){_inherits(RectAreaLight,_Light6);var _super123=_createSuper(RectAreaLight);function RectAreaLight(color,intensity){var _this96;var width=arguments.length>2&&arguments[2]!==undefined?arguments[2]:10;var height=arguments.length>3&&arguments[3]!==undefined?arguments[3]:10;_classCallCheck(this,RectAreaLight);_this96=_super123.call(this,color,intensity);_this96.type='RectAreaLight';_this96.width=width;_this96.height=height;return _this96;}_createClass(RectAreaLight,[{key:\"power\",get:function get(){// compute the light's luminous power (in lumens) from its intensity (in nits)\nreturn this.intensity*this.width*this.height*Math.PI;},set:function set(power){// set the light's intensity (in nits) from the desired luminous power (in lumens)\nthis.intensity=power/(this.width*this.height*Math.PI);}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(RectAreaLight.prototype),\"copy\",this).call(this,source);this.width=source.width;this.height=source.height;return this;}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(RectAreaLight.prototype),\"toJSON\",this).call(this,meta);data.object.width=this.width;data.object.height=this.height;return data;}}]);return RectAreaLight;}(Light);RectAreaLight.prototype.isRectAreaLight=true;/**\r\n * Primary reference:\r\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\r\n *\r\n * Secondary reference:\r\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\r\n */ // 3-band SH defined by 9 coefficients\nvar SphericalHarmonics3=/*#__PURE__*/function(){function SphericalHarmonics3(){_classCallCheck(this,SphericalHarmonics3);this.coefficients=[];for(var _i280=0;_i280<9;_i280++){this.coefficients.push(new Vector3());}}_createClass(SphericalHarmonics3,[{key:\"set\",value:function set(coefficients){for(var _i281=0;_i281<9;_i281++){this.coefficients[_i281].copy(coefficients[_i281]);}return this;}},{key:\"zero\",value:function zero(){for(var _i282=0;_i282<9;_i282++){this.coefficients[_i282].set(0,0,0);}return this;}// get the radiance in the direction of the normal\n// target is a Vector3\n},{key:\"getAt\",value:function getAt(normal,target){// normal is assumed to be unit length\nvar x=normal.x,y=normal.y,z=normal.z;var coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.282095);// band 1\ntarget.addScaledVector(coeff[1],0.488603*y);target.addScaledVector(coeff[2],0.488603*z);target.addScaledVector(coeff[3],0.488603*x);// band 2\ntarget.addScaledVector(coeff[4],1.092548*(x*y));target.addScaledVector(coeff[5],1.092548*(y*z));target.addScaledVector(coeff[6],0.315392*(3.0*z*z-1.0));target.addScaledVector(coeff[7],1.092548*(x*z));target.addScaledVector(coeff[8],0.546274*(x*x-y*y));return target;}// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n// target is a Vector3\n// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n},{key:\"getIrradianceAt\",value:function getIrradianceAt(normal,target){// normal is assumed to be unit length\nvar x=normal.x,y=normal.y,z=normal.z;var coeff=this.coefficients;// band 0\ntarget.copy(coeff[0]).multiplyScalar(0.886227);// π * 0.282095\n// band 1\ntarget.addScaledVector(coeff[1],2.0*0.511664*y);// ( 2 * π / 3 ) * 0.488603\ntarget.addScaledVector(coeff[2],2.0*0.511664*z);target.addScaledVector(coeff[3],2.0*0.511664*x);// band 2\ntarget.addScaledVector(coeff[4],2.0*0.429043*x*y);// ( π / 4 ) * 1.092548\ntarget.addScaledVector(coeff[5],2.0*0.429043*y*z);target.addScaledVector(coeff[6],0.743125*z*z-0.247708);// ( π / 4 ) * 0.315392 * 3\ntarget.addScaledVector(coeff[7],2.0*0.429043*x*z);target.addScaledVector(coeff[8],0.429043*(x*x-y*y));// ( π / 4 ) * 0.546274\nreturn target;}},{key:\"add\",value:function add(sh){for(var _i283=0;_i283<9;_i283++){this.coefficients[_i283].add(sh.coefficients[_i283]);}return this;}},{key:\"addScaledSH\",value:function addScaledSH(sh,s){for(var _i284=0;_i284<9;_i284++){this.coefficients[_i284].addScaledVector(sh.coefficients[_i284],s);}return this;}},{key:\"scale\",value:function scale(s){for(var _i285=0;_i285<9;_i285++){this.coefficients[_i285].multiplyScalar(s);}return this;}},{key:\"lerp\",value:function lerp(sh,alpha){for(var _i286=0;_i286<9;_i286++){this.coefficients[_i286].lerp(sh.coefficients[_i286],alpha);}return this;}},{key:\"equals\",value:function equals(sh){for(var _i287=0;_i287<9;_i287++){if(!this.coefficients[_i287].equals(sh.coefficients[_i287])){return false;}}return true;}},{key:\"copy\",value:function copy(sh){return this.set(sh.coefficients);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"fromArray\",value:function fromArray(array){var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var coefficients=this.coefficients;for(var _i288=0;_i288<9;_i288++){coefficients[_i288].fromArray(array,offset+_i288*3);}return this;}},{key:\"toArray\",value:function toArray(){var array=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var offset=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var coefficients=this.coefficients;for(var _i289=0;_i289<9;_i289++){coefficients[_i289].toArray(array,offset+_i289*3);}return array;}// evaluate the basis functions\n// shBasis is an Array[ 9 ]\n}],[{key:\"getBasisAt\",value:function getBasisAt(normal,shBasis){// normal is assumed to be unit length\nvar x=normal.x,y=normal.y,z=normal.z;// band 0\nshBasis[0]=0.282095;// band 1\nshBasis[1]=0.488603*y;shBasis[2]=0.488603*z;shBasis[3]=0.488603*x;// band 2\nshBasis[4]=1.092548*x*y;shBasis[5]=1.092548*y*z;shBasis[6]=0.315392*(3*z*z-1);shBasis[7]=1.092548*x*z;shBasis[8]=0.546274*(x*x-y*y);}}]);return SphericalHarmonics3;}();SphericalHarmonics3.prototype.isSphericalHarmonics3=true;var LightProbe=/*#__PURE__*/function(_Light7){_inherits(LightProbe,_Light7);var _super124=_createSuper(LightProbe);function LightProbe(){var _this97;var sh=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new SphericalHarmonics3();var intensity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;_classCallCheck(this,LightProbe);_this97=_super124.call(this,undefined,intensity);_this97.sh=sh;return _this97;}_createClass(LightProbe,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(LightProbe.prototype),\"copy\",this).call(this,source);this.sh.copy(source.sh);return this;}},{key:\"fromJSON\",value:function fromJSON(json){this.intensity=json.intensity;// TODO: Move this bit to Light.fromJSON();\nthis.sh.fromArray(json.sh);return this;}},{key:\"toJSON\",value:function toJSON(meta){var data=_get(_getPrototypeOf(LightProbe.prototype),\"toJSON\",this).call(this,meta);data.object.sh=this.sh.toArray();return data;}}]);return LightProbe;}(Light);LightProbe.prototype.isLightProbe=true;var MaterialLoader=/*#__PURE__*/function(_Loader8){_inherits(MaterialLoader,_Loader8);var _super125=_createSuper(MaterialLoader);function MaterialLoader(manager){var _this98;_classCallCheck(this,MaterialLoader);_this98=_super125.call(this,manager);_this98.textures={};return _this98;}_createClass(MaterialLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}},{key:\"parse\",value:function parse(json){var textures=this.textures;function getTexture(name){if(textures[name]===undefined){console.warn('THREE.MaterialLoader: Undefined texture',name);}return textures[name];}var material=new Materials[json.type]();if(json.uuid!==undefined)material.uuid=json.uuid;if(json.name!==undefined)material.name=json.name;if(json.color!==undefined&&material.color!==undefined)material.color.setHex(json.color);if(json.roughness!==undefined)material.roughness=json.roughness;if(json.metalness!==undefined)material.metalness=json.metalness;if(json.sheen!==undefined)material.sheen=json.sheen;if(json.sheenTint!==undefined)material.sheenTint=new Color().setHex(json.sheenTint);if(json.sheenRoughness!==undefined)material.sheenRoughness=json.sheenRoughness;if(json.emissive!==undefined&&material.emissive!==undefined)material.emissive.setHex(json.emissive);if(json.specular!==undefined&&material.specular!==undefined)material.specular.setHex(json.specular);if(json.specularIntensity!==undefined)material.specularIntensity=json.specularIntensity;if(json.specularTint!==undefined&&material.specularTint!==undefined)material.specularTint.setHex(json.specularTint);if(json.shininess!==undefined)material.shininess=json.shininess;if(json.clearcoat!==undefined)material.clearcoat=json.clearcoat;if(json.clearcoatRoughness!==undefined)material.clearcoatRoughness=json.clearcoatRoughness;if(json.transmission!==undefined)material.transmission=json.transmission;if(json.thickness!==undefined)material.thickness=json.thickness;if(json.attenuationDistance!==undefined)material.attenuationDistance=json.attenuationDistance;if(json.attenuationTint!==undefined&&material.attenuationTint!==undefined)material.attenuationTint.setHex(json.attenuationTint);if(json.fog!==undefined)material.fog=json.fog;if(json.flatShading!==undefined)material.flatShading=json.flatShading;if(json.blending!==undefined)material.blending=json.blending;if(json.combine!==undefined)material.combine=json.combine;if(json.side!==undefined)material.side=json.side;if(json.shadowSide!==undefined)material.shadowSide=json.shadowSide;if(json.opacity!==undefined)material.opacity=json.opacity;if(json.format!==undefined)material.format=json.format;if(json.transparent!==undefined)material.transparent=json.transparent;if(json.alphaTest!==undefined)material.alphaTest=json.alphaTest;if(json.depthTest!==undefined)material.depthTest=json.depthTest;if(json.depthWrite!==undefined)material.depthWrite=json.depthWrite;if(json.colorWrite!==undefined)material.colorWrite=json.colorWrite;if(json.stencilWrite!==undefined)material.stencilWrite=json.stencilWrite;if(json.stencilWriteMask!==undefined)material.stencilWriteMask=json.stencilWriteMask;if(json.stencilFunc!==undefined)material.stencilFunc=json.stencilFunc;if(json.stencilRef!==undefined)material.stencilRef=json.stencilRef;if(json.stencilFuncMask!==undefined)material.stencilFuncMask=json.stencilFuncMask;if(json.stencilFail!==undefined)material.stencilFail=json.stencilFail;if(json.stencilZFail!==undefined)material.stencilZFail=json.stencilZFail;if(json.stencilZPass!==undefined)material.stencilZPass=json.stencilZPass;if(json.wireframe!==undefined)material.wireframe=json.wireframe;if(json.wireframeLinewidth!==undefined)material.wireframeLinewidth=json.wireframeLinewidth;if(json.wireframeLinecap!==undefined)material.wireframeLinecap=json.wireframeLinecap;if(json.wireframeLinejoin!==undefined)material.wireframeLinejoin=json.wireframeLinejoin;if(json.rotation!==undefined)material.rotation=json.rotation;if(json.linewidth!==1)material.linewidth=json.linewidth;if(json.dashSize!==undefined)material.dashSize=json.dashSize;if(json.gapSize!==undefined)material.gapSize=json.gapSize;if(json.scale!==undefined)material.scale=json.scale;if(json.polygonOffset!==undefined)material.polygonOffset=json.polygonOffset;if(json.polygonOffsetFactor!==undefined)material.polygonOffsetFactor=json.polygonOffsetFactor;if(json.polygonOffsetUnits!==undefined)material.polygonOffsetUnits=json.polygonOffsetUnits;if(json.dithering!==undefined)material.dithering=json.dithering;if(json.alphaToCoverage!==undefined)material.alphaToCoverage=json.alphaToCoverage;if(json.premultipliedAlpha!==undefined)material.premultipliedAlpha=json.premultipliedAlpha;if(json.visible!==undefined)material.visible=json.visible;if(json.toneMapped!==undefined)material.toneMapped=json.toneMapped;if(json.userData!==undefined)material.userData=json.userData;if(json.vertexColors!==undefined){if(typeof json.vertexColors==='number'){material.vertexColors=json.vertexColors>0?true:false;}else{material.vertexColors=json.vertexColors;}}// Shader Material\nif(json.uniforms!==undefined){for(var name in json.uniforms){var uniform=json.uniforms[name];material.uniforms[name]={};switch(uniform.type){case't':material.uniforms[name].value=getTexture(uniform.value);break;case'c':material.uniforms[name].value=new Color().setHex(uniform.value);break;case'v2':material.uniforms[name].value=new Vector2().fromArray(uniform.value);break;case'v3':material.uniforms[name].value=new Vector3().fromArray(uniform.value);break;case'v4':material.uniforms[name].value=new Vector4().fromArray(uniform.value);break;case'm3':material.uniforms[name].value=new Matrix3().fromArray(uniform.value);break;case'm4':material.uniforms[name].value=new Matrix4().fromArray(uniform.value);break;default:material.uniforms[name].value=uniform.value;}}}if(json.defines!==undefined)material.defines=json.defines;if(json.vertexShader!==undefined)material.vertexShader=json.vertexShader;if(json.fragmentShader!==undefined)material.fragmentShader=json.fragmentShader;if(json.extensions!==undefined){for(var key in json.extensions){material.extensions[key]=json.extensions[key];}}// Deprecated\nif(json.shading!==undefined)material.flatShading=json.shading===1;// THREE.FlatShading\n// for PointsMaterial\nif(json.size!==undefined)material.size=json.size;if(json.sizeAttenuation!==undefined)material.sizeAttenuation=json.sizeAttenuation;// maps\nif(json.map!==undefined)material.map=getTexture(json.map);if(json.matcap!==undefined)material.matcap=getTexture(json.matcap);if(json.alphaMap!==undefined)material.alphaMap=getTexture(json.alphaMap);if(json.bumpMap!==undefined)material.bumpMap=getTexture(json.bumpMap);if(json.bumpScale!==undefined)material.bumpScale=json.bumpScale;if(json.normalMap!==undefined)material.normalMap=getTexture(json.normalMap);if(json.normalMapType!==undefined)material.normalMapType=json.normalMapType;if(json.normalScale!==undefined){var normalScale=json.normalScale;if(Array.isArray(normalScale)===false){// Blender exporter used to export a scalar. See #7459\nnormalScale=[normalScale,normalScale];}material.normalScale=new Vector2().fromArray(normalScale);}if(json.displacementMap!==undefined)material.displacementMap=getTexture(json.displacementMap);if(json.displacementScale!==undefined)material.displacementScale=json.displacementScale;if(json.displacementBias!==undefined)material.displacementBias=json.displacementBias;if(json.roughnessMap!==undefined)material.roughnessMap=getTexture(json.roughnessMap);if(json.metalnessMap!==undefined)material.metalnessMap=getTexture(json.metalnessMap);if(json.emissiveMap!==undefined)material.emissiveMap=getTexture(json.emissiveMap);if(json.emissiveIntensity!==undefined)material.emissiveIntensity=json.emissiveIntensity;if(json.specularMap!==undefined)material.specularMap=getTexture(json.specularMap);if(json.specularIntensityMap!==undefined)material.specularIntensityMap=getTexture(json.specularIntensityMap);if(json.specularTintMap!==undefined)material.specularTintMap=getTexture(json.specularTintMap);if(json.envMap!==undefined)material.envMap=getTexture(json.envMap);if(json.envMapIntensity!==undefined)material.envMapIntensity=json.envMapIntensity;if(json.reflectivity!==undefined)material.reflectivity=json.reflectivity;if(json.refractionRatio!==undefined)material.refractionRatio=json.refractionRatio;if(json.lightMap!==undefined)material.lightMap=getTexture(json.lightMap);if(json.lightMapIntensity!==undefined)material.lightMapIntensity=json.lightMapIntensity;if(json.aoMap!==undefined)material.aoMap=getTexture(json.aoMap);if(json.aoMapIntensity!==undefined)material.aoMapIntensity=json.aoMapIntensity;if(json.gradientMap!==undefined)material.gradientMap=getTexture(json.gradientMap);if(json.clearcoatMap!==undefined)material.clearcoatMap=getTexture(json.clearcoatMap);if(json.clearcoatRoughnessMap!==undefined)material.clearcoatRoughnessMap=getTexture(json.clearcoatRoughnessMap);if(json.clearcoatNormalMap!==undefined)material.clearcoatNormalMap=getTexture(json.clearcoatNormalMap);if(json.clearcoatNormalScale!==undefined)material.clearcoatNormalScale=new Vector2().fromArray(json.clearcoatNormalScale);if(json.transmissionMap!==undefined)material.transmissionMap=getTexture(json.transmissionMap);if(json.thicknessMap!==undefined)material.thicknessMap=getTexture(json.thicknessMap);return material;}},{key:\"setTextures\",value:function setTextures(value){this.textures=value;return this;}}]);return MaterialLoader;}(Loader);var LoaderUtils=/*#__PURE__*/function(){function LoaderUtils(){_classCallCheck(this,LoaderUtils);}_createClass(LoaderUtils,null,[{key:\"decodeText\",value:function decodeText(array){if(typeof TextDecoder!=='undefined'){return new TextDecoder().decode(array);}// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n// throws a \"maximum call stack size exceeded\" error for large arrays.\nvar s='';for(var _i290=0,il=array.length;_i290<il;_i290++){// Implicitly assumes little-endian.\ns+=String.fromCharCode(array[_i290]);}try{// merges multi-byte utf-8 characters.\nreturn decodeURIComponent(escape(s));}catch(e){// see #16358\nreturn s;}}},{key:\"extractUrlBase\",value:function extractUrlBase(url){var index=url.lastIndexOf('/');if(index===-1)return'./';return url.substr(0,index+1);}}]);return LoaderUtils;}();var InstancedBufferGeometry=/*#__PURE__*/function(_BufferGeometry16){_inherits(InstancedBufferGeometry,_BufferGeometry16);var _super126=_createSuper(InstancedBufferGeometry);function InstancedBufferGeometry(){var _this99;_classCallCheck(this,InstancedBufferGeometry);_this99=_super126.call(this);_this99.type='InstancedBufferGeometry';_this99.instanceCount=Infinity;return _this99;}_createClass(InstancedBufferGeometry,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(InstancedBufferGeometry.prototype),\"copy\",this).call(this,source);this.instanceCount=source.instanceCount;return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"toJSON\",value:function toJSON(){var data=_get(_getPrototypeOf(InstancedBufferGeometry.prototype),\"toJSON\",this).call(this,this);data.instanceCount=this.instanceCount;data.isInstancedBufferGeometry=true;return data;}}]);return InstancedBufferGeometry;}(BufferGeometry);InstancedBufferGeometry.prototype.isInstancedBufferGeometry=true;var BufferGeometryLoader=/*#__PURE__*/function(_Loader9){_inherits(BufferGeometryLoader,_Loader9);var _super127=_createSuper(BufferGeometryLoader);function BufferGeometryLoader(manager){_classCallCheck(this,BufferGeometryLoader);return _super127.call(this,manager);}_createClass(BufferGeometryLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(scope.manager);loader.setPath(scope.path);loader.setRequestHeader(scope.requestHeader);loader.setWithCredentials(scope.withCredentials);loader.load(url,function(text){try{onLoad(scope.parse(JSON.parse(text)));}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}},{key:\"parse\",value:function parse(json){var interleavedBufferMap={};var arrayBufferMap={};function getInterleavedBuffer(json,uuid){if(interleavedBufferMap[uuid]!==undefined)return interleavedBufferMap[uuid];var interleavedBuffers=json.interleavedBuffers;var interleavedBuffer=interleavedBuffers[uuid];var buffer=getArrayBuffer(json,interleavedBuffer.buffer);var array=getTypedArray(interleavedBuffer.type,buffer);var ib=new InterleavedBuffer(array,interleavedBuffer.stride);ib.uuid=interleavedBuffer.uuid;interleavedBufferMap[uuid]=ib;return ib;}function getArrayBuffer(json,uuid){if(arrayBufferMap[uuid]!==undefined)return arrayBufferMap[uuid];var arrayBuffers=json.arrayBuffers;var arrayBuffer=arrayBuffers[uuid];var ab=new Uint32Array(arrayBuffer).buffer;arrayBufferMap[uuid]=ab;return ab;}var geometry=json.isInstancedBufferGeometry?new InstancedBufferGeometry():new BufferGeometry();var index=json.data.index;if(index!==undefined){var typedArray=getTypedArray(index.type,index.array);geometry.setIndex(new BufferAttribute(typedArray,1));}var attributes=json.data.attributes;for(var key in attributes){var attribute=attributes[key];var bufferAttribute=void 0;if(attribute.isInterleavedBufferAttribute){var interleavedBuffer=getInterleavedBuffer(json.data,attribute.data);bufferAttribute=new InterleavedBufferAttribute(interleavedBuffer,attribute.itemSize,attribute.offset,attribute.normalized);}else{var _typedArray=getTypedArray(attribute.type,attribute.array);var bufferAttributeConstr=attribute.isInstancedBufferAttribute?InstancedBufferAttribute:BufferAttribute;bufferAttribute=new bufferAttributeConstr(_typedArray,attribute.itemSize,attribute.normalized);}if(attribute.name!==undefined)bufferAttribute.name=attribute.name;if(attribute.usage!==undefined)bufferAttribute.setUsage(attribute.usage);if(attribute.updateRange!==undefined){bufferAttribute.updateRange.offset=attribute.updateRange.offset;bufferAttribute.updateRange.count=attribute.updateRange.count;}geometry.setAttribute(key,bufferAttribute);}var morphAttributes=json.data.morphAttributes;if(morphAttributes){for(var _key3 in morphAttributes){var attributeArray=morphAttributes[_key3];var array=[];for(var _i291=0,il=attributeArray.length;_i291<il;_i291++){var _attribute3=attributeArray[_i291];var _bufferAttribute=void 0;if(_attribute3.isInterleavedBufferAttribute){var _interleavedBuffer=getInterleavedBuffer(json.data,_attribute3.data);_bufferAttribute=new InterleavedBufferAttribute(_interleavedBuffer,_attribute3.itemSize,_attribute3.offset,_attribute3.normalized);}else{var _typedArray2=getTypedArray(_attribute3.type,_attribute3.array);_bufferAttribute=new BufferAttribute(_typedArray2,_attribute3.itemSize,_attribute3.normalized);}if(_attribute3.name!==undefined)_bufferAttribute.name=_attribute3.name;array.push(_bufferAttribute);}geometry.morphAttributes[_key3]=array;}}var morphTargetsRelative=json.data.morphTargetsRelative;if(morphTargetsRelative){geometry.morphTargetsRelative=true;}var groups=json.data.groups||json.data.drawcalls||json.data.offsets;if(groups!==undefined){for(var _i292=0,n=groups.length;_i292!==n;++_i292){var group=groups[_i292];geometry.addGroup(group.start,group.count,group.materialIndex);}}var boundingSphere=json.data.boundingSphere;if(boundingSphere!==undefined){var center=new Vector3();if(boundingSphere.center!==undefined){center.fromArray(boundingSphere.center);}geometry.boundingSphere=new Sphere(center,boundingSphere.radius);}if(json.name)geometry.name=json.name;if(json.userData)geometry.userData=json.userData;return geometry;}}]);return BufferGeometryLoader;}(Loader);var ObjectLoader=/*#__PURE__*/function(_Loader10){_inherits(ObjectLoader,_Loader10);var _super128=_createSuper(ObjectLoader);function ObjectLoader(manager){_classCallCheck(this,ObjectLoader);return _super128.call(this,manager);}_createClass(ObjectLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;var loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(text){var json=null;try{json=JSON.parse(text);}catch(error){if(onError!==undefined)onError(error);console.error('THREE:ObjectLoader: Can\\'t parse '+url+'.',error.message);return;}var metadata=json.metadata;if(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry'){console.error('THREE.ObjectLoader: Can\\'t load '+url);return;}scope.parse(json,onLoad);},onProgress,onError);}},{key:\"loadAsync\",value:function(){var _loadAsync=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(url,onProgress){var scope,path,loader,text,json,metadata;return regeneratorRuntime.wrap(function _callee2$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:scope=this;path=this.path===''?LoaderUtils.extractUrlBase(url):this.path;this.resourcePath=this.resourcePath||path;loader=new FileLoader(this.manager);loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);_context6.next=9;return loader.loadAsync(url,onProgress);case 9:text=_context6.sent;json=JSON.parse(text);metadata=json.metadata;if(!(metadata===undefined||metadata.type===undefined||metadata.type.toLowerCase()==='geometry')){_context6.next=14;break;}throw new Error('THREE.ObjectLoader: Can\\'t load '+url);case 14:_context6.next=16;return scope.parseAsync(json);case 16:return _context6.abrupt(\"return\",_context6.sent);case 17:case\"end\":return _context6.stop();}}},_callee2,this);}));function loadAsync(_x7,_x8){return _loadAsync.apply(this,arguments);}return loadAsync;}()},{key:\"parse\",value:function parse(json,onLoad){var animations=this.parseAnimations(json.animations);var shapes=this.parseShapes(json.shapes);var geometries=this.parseGeometries(json.geometries,shapes);var images=this.parseImages(json.images,function(){if(onLoad!==undefined)onLoad(object);});var textures=this.parseTextures(json.textures,images);var materials=this.parseMaterials(json.materials,textures);var object=this.parseObject(json.object,geometries,materials,textures,animations);var skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);//\nif(onLoad!==undefined){var hasImages=false;for(var uuid in images){if(images[uuid]instanceof HTMLImageElement){hasImages=true;break;}}if(hasImages===false)onLoad(object);}return object;}},{key:\"parseAsync\",value:function(){var _parseAsync=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee3(json){var animations,shapes,geometries,images,textures,materials,object,skeletons;return regeneratorRuntime.wrap(function _callee3$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:animations=this.parseAnimations(json.animations);shapes=this.parseShapes(json.shapes);geometries=this.parseGeometries(json.geometries,shapes);_context7.next=5;return this.parseImagesAsync(json.images);case 5:images=_context7.sent;textures=this.parseTextures(json.textures,images);materials=this.parseMaterials(json.materials,textures);object=this.parseObject(json.object,geometries,materials,textures,animations);skeletons=this.parseSkeletons(json.skeletons,object);this.bindSkeletons(object,skeletons);return _context7.abrupt(\"return\",object);case 12:case\"end\":return _context7.stop();}}},_callee3,this);}));function parseAsync(_x9){return _parseAsync.apply(this,arguments);}return parseAsync;}()},{key:\"parseShapes\",value:function parseShapes(json){var shapes={};if(json!==undefined){for(var _i293=0,l=json.length;_i293<l;_i293++){var shape=new Shape().fromJSON(json[_i293]);shapes[shape.uuid]=shape;}}return shapes;}},{key:\"parseSkeletons\",value:function parseSkeletons(json,object){var skeletons={};var bones={};// generate bone lookup table\nobject.traverse(function(child){if(child.isBone)bones[child.uuid]=child;});// create skeletons\nif(json!==undefined){for(var _i294=0,l=json.length;_i294<l;_i294++){var skeleton=new Skeleton().fromJSON(json[_i294],bones);skeletons[skeleton.uuid]=skeleton;}}return skeletons;}},{key:\"parseGeometries\",value:function parseGeometries(json,shapes){var geometries={};if(json!==undefined){var bufferGeometryLoader=new BufferGeometryLoader();for(var _i295=0,l=json.length;_i295<l;_i295++){var geometry=void 0;var data=json[_i295];switch(data.type){case'BufferGeometry':case'InstancedBufferGeometry':geometry=bufferGeometryLoader.parse(data);break;case'Geometry':console.error('THREE.ObjectLoader: The legacy Geometry type is no longer supported.');break;default:if(data.type in Geometries){geometry=Geometries[data.type].fromJSON(data,shapes);}else{console.warn(\"THREE.ObjectLoader: Unsupported geometry type \\\"\".concat(data.type,\"\\\"\"));}}geometry.uuid=data.uuid;if(data.name!==undefined)geometry.name=data.name;if(geometry.isBufferGeometry===true&&data.userData!==undefined)geometry.userData=data.userData;geometries[data.uuid]=geometry;}}return geometries;}},{key:\"parseMaterials\",value:function parseMaterials(json,textures){var cache={};// MultiMaterial\nvar materials={};if(json!==undefined){var loader=new MaterialLoader();loader.setTextures(textures);for(var _i296=0,l=json.length;_i296<l;_i296++){var data=json[_i296];if(data.type==='MultiMaterial'){// Deprecated\nvar array=[];for(var j=0;j<data.materials.length;j++){var material=data.materials[j];if(cache[material.uuid]===undefined){cache[material.uuid]=loader.parse(material);}array.push(cache[material.uuid]);}materials[data.uuid]=array;}else{if(cache[data.uuid]===undefined){cache[data.uuid]=loader.parse(data);}materials[data.uuid]=cache[data.uuid];}}}return materials;}},{key:\"parseAnimations\",value:function parseAnimations(json){var animations={};if(json!==undefined){for(var _i297=0;_i297<json.length;_i297++){var data=json[_i297];var clip=AnimationClip.parse(data);animations[clip.uuid]=clip;}}return animations;}},{key:\"parseImages\",value:function parseImages(json,onLoad){var scope=this;var images={};var loader;function loadImage(url){scope.manager.itemStart(url);return loader.load(url,function(){scope.manager.itemEnd(url);},undefined,function(){scope.manager.itemError(url);scope.manager.itemEnd(url);});}function deserializeImage(image){if(typeof image==='string'){var url=image;var path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url)?url:scope.resourcePath+url;return loadImage(path);}else{if(image.data){return{data:getTypedArray(image.type,image.data),width:image.width,height:image.height};}else{return null;}}}if(json!==undefined&&json.length>0){var manager=new LoadingManager(onLoad);loader=new ImageLoader(manager);loader.setCrossOrigin(this.crossOrigin);for(var _i298=0,il=json.length;_i298<il;_i298++){var image=json[_i298];var url=image.url;if(Array.isArray(url)){// load array of images e.g CubeTexture\nimages[image.uuid]=[];for(var j=0,jl=url.length;j<jl;j++){var currentUrl=url[j];var deserializedImage=deserializeImage(currentUrl);if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}}}else{// load single image\nvar _deserializedImage=deserializeImage(image.url);if(_deserializedImage!==null){images[image.uuid]=_deserializedImage;}}}}return images;}},{key:\"parseImagesAsync\",value:function(){var _parseImagesAsync=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee5(json){var scope,images,loader,deserializeImage,_deserializeImage,_i299,il,image,url,j,jl,currentUrl,deserializedImage,_deserializedImage2;return regeneratorRuntime.wrap(function _callee5$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_deserializeImage=function _deserializeImage3(){_deserializeImage=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee4(image){var _url,path;return regeneratorRuntime.wrap(function _callee4$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:if(!(typeof image==='string')){_context8.next=8;break;}_url=image;path=/^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(_url)?_url:scope.resourcePath+_url;_context8.next=5;return loader.loadAsync(path);case 5:return _context8.abrupt(\"return\",_context8.sent);case 8:if(!image.data){_context8.next=12;break;}return _context8.abrupt(\"return\",{data:getTypedArray(image.type,image.data),width:image.width,height:image.height});case 12:return _context8.abrupt(\"return\",null);case 13:case\"end\":return _context8.stop();}}},_callee4);}));return _deserializeImage.apply(this,arguments);};deserializeImage=function _deserializeImage2(_x11){return _deserializeImage.apply(this,arguments);};scope=this;images={};if(!(json!==undefined&&json.length>0)){_context9.next=32;break;}loader=new ImageLoader(this.manager);loader.setCrossOrigin(this.crossOrigin);_i299=0,il=json.length;case 8:if(!(_i299<il)){_context9.next=32;break;}image=json[_i299];url=image.url;if(!Array.isArray(url)){_context9.next=25;break;}// load array of images e.g CubeTexture\nimages[image.uuid]=[];j=0,jl=url.length;case 14:if(!(j<jl)){_context9.next=23;break;}currentUrl=url[j];_context9.next=18;return deserializeImage(currentUrl);case 18:deserializedImage=_context9.sent;if(deserializedImage!==null){if(deserializedImage instanceof HTMLImageElement){images[image.uuid].push(deserializedImage);}else{// special case: handle array of data textures for cube textures\nimages[image.uuid].push(new DataTexture(deserializedImage.data,deserializedImage.width,deserializedImage.height));}}case 20:j++;_context9.next=14;break;case 23:_context9.next=29;break;case 25:_context9.next=27;return deserializeImage(image.url);case 27:_deserializedImage2=_context9.sent;if(_deserializedImage2!==null){images[image.uuid]=_deserializedImage2;}case 29:_i299++;_context9.next=8;break;case 32:return _context9.abrupt(\"return\",images);case 33:case\"end\":return _context9.stop();}}},_callee5,this);}));function parseImagesAsync(_x10){return _parseImagesAsync.apply(this,arguments);}return parseImagesAsync;}()},{key:\"parseTextures\",value:function parseTextures(json,images){function parseConstant(value,type){if(typeof value==='number')return value;console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.',value);return type[value];}var textures={};if(json!==undefined){for(var _i300=0,l=json.length;_i300<l;_i300++){var data=json[_i300];if(data.image===undefined){console.warn('THREE.ObjectLoader: No \"image\" specified for',data.uuid);}if(images[data.image]===undefined){console.warn('THREE.ObjectLoader: Undefined image',data.image);}var texture=void 0;var image=images[data.image];if(Array.isArray(image)){texture=new CubeTexture(image);if(image.length===6)texture.needsUpdate=true;}else{if(image&&image.data){texture=new DataTexture(image.data,image.width,image.height);}else{texture=new Texture(image);}if(image)texture.needsUpdate=true;// textures can have undefined image data\n}texture.uuid=data.uuid;if(data.name!==undefined)texture.name=data.name;if(data.mapping!==undefined)texture.mapping=parseConstant(data.mapping,TEXTURE_MAPPING);if(data.offset!==undefined)texture.offset.fromArray(data.offset);if(data.repeat!==undefined)texture.repeat.fromArray(data.repeat);if(data.center!==undefined)texture.center.fromArray(data.center);if(data.rotation!==undefined)texture.rotation=data.rotation;if(data.wrap!==undefined){texture.wrapS=parseConstant(data.wrap[0],TEXTURE_WRAPPING);texture.wrapT=parseConstant(data.wrap[1],TEXTURE_WRAPPING);}if(data.format!==undefined)texture.format=data.format;if(data.type!==undefined)texture.type=data.type;if(data.encoding!==undefined)texture.encoding=data.encoding;if(data.minFilter!==undefined)texture.minFilter=parseConstant(data.minFilter,TEXTURE_FILTER);if(data.magFilter!==undefined)texture.magFilter=parseConstant(data.magFilter,TEXTURE_FILTER);if(data.anisotropy!==undefined)texture.anisotropy=data.anisotropy;if(data.flipY!==undefined)texture.flipY=data.flipY;if(data.premultiplyAlpha!==undefined)texture.premultiplyAlpha=data.premultiplyAlpha;if(data.unpackAlignment!==undefined)texture.unpackAlignment=data.unpackAlignment;textures[data.uuid]=texture;}}return textures;}},{key:\"parseObject\",value:function parseObject(data,geometries,materials,textures,animations){var object;function getGeometry(name){if(geometries[name]===undefined){console.warn('THREE.ObjectLoader: Undefined geometry',name);}return geometries[name];}function getMaterial(name){if(name===undefined)return undefined;if(Array.isArray(name)){var array=[];for(var _i301=0,l=name.length;_i301<l;_i301++){var uuid=name[_i301];if(materials[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined material',uuid);}array.push(materials[uuid]);}return array;}if(materials[name]===undefined){console.warn('THREE.ObjectLoader: Undefined material',name);}return materials[name];}function getTexture(uuid){if(textures[uuid]===undefined){console.warn('THREE.ObjectLoader: Undefined texture',uuid);}return textures[uuid];}var geometry,material;switch(data.type){case'Scene':object=new Scene();if(data.background!==undefined){if(Number.isInteger(data.background)){object.background=new Color(data.background);}else{object.background=getTexture(data.background);}}if(data.environment!==undefined){object.environment=getTexture(data.environment);}if(data.fog!==undefined){if(data.fog.type==='Fog'){object.fog=new Fog(data.fog.color,data.fog.near,data.fog.far);}else if(data.fog.type==='FogExp2'){object.fog=new FogExp2(data.fog.color,data.fog.density);}}break;case'PerspectiveCamera':object=new PerspectiveCamera(data.fov,data.aspect,data.near,data.far);if(data.focus!==undefined)object.focus=data.focus;if(data.zoom!==undefined)object.zoom=data.zoom;if(data.filmGauge!==undefined)object.filmGauge=data.filmGauge;if(data.filmOffset!==undefined)object.filmOffset=data.filmOffset;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'OrthographicCamera':object=new OrthographicCamera(data.left,data.right,data.top,data.bottom,data.near,data.far);if(data.zoom!==undefined)object.zoom=data.zoom;if(data.view!==undefined)object.view=Object.assign({},data.view);break;case'AmbientLight':object=new AmbientLight(data.color,data.intensity);break;case'DirectionalLight':object=new DirectionalLight(data.color,data.intensity);break;case'PointLight':object=new PointLight(data.color,data.intensity,data.distance,data.decay);break;case'RectAreaLight':object=new RectAreaLight(data.color,data.intensity,data.width,data.height);break;case'SpotLight':object=new SpotLight(data.color,data.intensity,data.distance,data.angle,data.penumbra,data.decay);break;case'HemisphereLight':object=new HemisphereLight(data.color,data.groundColor,data.intensity);break;case'LightProbe':object=new LightProbe().fromJSON(data);break;case'SkinnedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new SkinnedMesh(geometry,material);if(data.bindMode!==undefined)object.bindMode=data.bindMode;if(data.bindMatrix!==undefined)object.bindMatrix.fromArray(data.bindMatrix);if(data.skeleton!==undefined)object.skeleton=data.skeleton;break;case'Mesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);object=new Mesh(geometry,material);break;case'InstancedMesh':geometry=getGeometry(data.geometry);material=getMaterial(data.material);var count=data.count;var instanceMatrix=data.instanceMatrix;var instanceColor=data.instanceColor;object=new InstancedMesh(geometry,material,count);object.instanceMatrix=new InstancedBufferAttribute(new Float32Array(instanceMatrix.array),16);if(instanceColor!==undefined)object.instanceColor=new InstancedBufferAttribute(new Float32Array(instanceColor.array),instanceColor.itemSize);break;case'LOD':object=new LOD();break;case'Line':object=new Line(getGeometry(data.geometry),getMaterial(data.material));break;case'LineLoop':object=new LineLoop(getGeometry(data.geometry),getMaterial(data.material));break;case'LineSegments':object=new LineSegments(getGeometry(data.geometry),getMaterial(data.material));break;case'PointCloud':case'Points':object=new Points(getGeometry(data.geometry),getMaterial(data.material));break;case'Sprite':object=new Sprite(getMaterial(data.material));break;case'Group':object=new Group();break;case'Bone':object=new Bone();break;default:object=new Object3D();}object.uuid=data.uuid;if(data.name!==undefined)object.name=data.name;if(data.matrix!==undefined){object.matrix.fromArray(data.matrix);if(data.matrixAutoUpdate!==undefined)object.matrixAutoUpdate=data.matrixAutoUpdate;if(object.matrixAutoUpdate)object.matrix.decompose(object.position,object.quaternion,object.scale);}else{if(data.position!==undefined)object.position.fromArray(data.position);if(data.rotation!==undefined)object.rotation.fromArray(data.rotation);if(data.quaternion!==undefined)object.quaternion.fromArray(data.quaternion);if(data.scale!==undefined)object.scale.fromArray(data.scale);}if(data.castShadow!==undefined)object.castShadow=data.castShadow;if(data.receiveShadow!==undefined)object.receiveShadow=data.receiveShadow;if(data.shadow){if(data.shadow.bias!==undefined)object.shadow.bias=data.shadow.bias;if(data.shadow.normalBias!==undefined)object.shadow.normalBias=data.shadow.normalBias;if(data.shadow.radius!==undefined)object.shadow.radius=data.shadow.radius;if(data.shadow.mapSize!==undefined)object.shadow.mapSize.fromArray(data.shadow.mapSize);if(data.shadow.camera!==undefined)object.shadow.camera=this.parseObject(data.shadow.camera);}if(data.visible!==undefined)object.visible=data.visible;if(data.frustumCulled!==undefined)object.frustumCulled=data.frustumCulled;if(data.renderOrder!==undefined)object.renderOrder=data.renderOrder;if(data.userData!==undefined)object.userData=data.userData;if(data.layers!==undefined)object.layers.mask=data.layers;if(data.children!==undefined){var children=data.children;for(var _i302=0;_i302<children.length;_i302++){object.add(this.parseObject(children[_i302],geometries,materials,textures,animations));}}if(data.animations!==undefined){var objectAnimations=data.animations;for(var _i303=0;_i303<objectAnimations.length;_i303++){var uuid=objectAnimations[_i303];object.animations.push(animations[uuid]);}}if(data.type==='LOD'){if(data.autoUpdate!==undefined)object.autoUpdate=data.autoUpdate;var levels=data.levels;for(var l=0;l<levels.length;l++){var level=levels[l];var child=object.getObjectByProperty('uuid',level.object);if(child!==undefined){object.addLevel(child,level.distance);}}}return object;}},{key:\"bindSkeletons\",value:function bindSkeletons(object,skeletons){if(Object.keys(skeletons).length===0)return;object.traverse(function(child){if(child.isSkinnedMesh===true&&child.skeleton!==undefined){var skeleton=skeletons[child.skeleton];if(skeleton===undefined){console.warn('THREE.ObjectLoader: No skeleton found with UUID:',child.skeleton);}else{child.bind(skeleton,child.bindMatrix);}}});}/* DEPRECATED */},{key:\"setTexturePath\",value:function setTexturePath(value){console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');return this.setResourcePath(value);}}]);return ObjectLoader;}(Loader);var TEXTURE_MAPPING={UVMapping:UVMapping,CubeReflectionMapping:CubeReflectionMapping,CubeRefractionMapping:CubeRefractionMapping,EquirectangularReflectionMapping:EquirectangularReflectionMapping,EquirectangularRefractionMapping:EquirectangularRefractionMapping,CubeUVReflectionMapping:CubeUVReflectionMapping,CubeUVRefractionMapping:CubeUVRefractionMapping};var TEXTURE_WRAPPING={RepeatWrapping:RepeatWrapping,ClampToEdgeWrapping:ClampToEdgeWrapping,MirroredRepeatWrapping:MirroredRepeatWrapping};var TEXTURE_FILTER={NearestFilter:NearestFilter,NearestMipmapNearestFilter:NearestMipmapNearestFilter,NearestMipmapLinearFilter:NearestMipmapLinearFilter,LinearFilter:LinearFilter,LinearMipmapNearestFilter:LinearMipmapNearestFilter,LinearMipmapLinearFilter:LinearMipmapLinearFilter};var ImageBitmapLoader=/*#__PURE__*/function(_Loader11){_inherits(ImageBitmapLoader,_Loader11);var _super129=_createSuper(ImageBitmapLoader);function ImageBitmapLoader(manager){var _this100;_classCallCheck(this,ImageBitmapLoader);_this100=_super129.call(this,manager);if(typeof createImageBitmap==='undefined'){console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');}if(typeof fetch==='undefined'){console.warn('THREE.ImageBitmapLoader: fetch() not supported.');}_this100.options={premultiplyAlpha:'none'};return _this100;}_createClass(ImageBitmapLoader,[{key:\"setOptions\",value:function setOptions(options){this.options=options;return this;}},{key:\"load\",value:function load(url,onLoad,onProgress,onError){if(url===undefined)url='';if(this.path!==undefined)url=this.path+url;url=this.manager.resolveURL(url);var scope=this;var cached=Cache.get(url);if(cached!==undefined){scope.manager.itemStart(url);setTimeout(function(){if(onLoad)onLoad(cached);scope.manager.itemEnd(url);},0);return cached;}var fetchOptions={};fetchOptions.credentials=this.crossOrigin==='anonymous'?'same-origin':'include';fetchOptions.headers=this.requestHeader;fetch(url,fetchOptions).then(function(res){return res.blob();}).then(function(blob){return createImageBitmap(blob,Object.assign(scope.options,{colorSpaceConversion:'none'}));}).then(function(imageBitmap){Cache.add(url,imageBitmap);if(onLoad)onLoad(imageBitmap);scope.manager.itemEnd(url);})[\"catch\"](function(e){if(onError)onError(e);scope.manager.itemError(url);scope.manager.itemEnd(url);});scope.manager.itemStart(url);}}]);return ImageBitmapLoader;}(Loader);ImageBitmapLoader.prototype.isImageBitmapLoader=true;var _context;var AudioContext={getContext:function getContext(){if(_context===undefined){_context=new(window.AudioContext||window.webkitAudioContext)();}return _context;},setContext:function setContext(value){_context=value;}};var AudioLoader=/*#__PURE__*/function(_Loader12){_inherits(AudioLoader,_Loader12);var _super130=_createSuper(AudioLoader);function AudioLoader(manager){_classCallCheck(this,AudioLoader);return _super130.call(this,manager);}_createClass(AudioLoader,[{key:\"load\",value:function load(url,onLoad,onProgress,onError){var scope=this;var loader=new FileLoader(this.manager);loader.setResponseType('arraybuffer');loader.setPath(this.path);loader.setRequestHeader(this.requestHeader);loader.setWithCredentials(this.withCredentials);loader.load(url,function(buffer){try{// Create a copy of the buffer. The `decodeAudioData` method\n// detaches the buffer when complete, preventing reuse.\nvar bufferCopy=buffer.slice(0);var context=AudioContext.getContext();context.decodeAudioData(bufferCopy,function(audioBuffer){onLoad(audioBuffer);});}catch(e){if(onError){onError(e);}else{console.error(e);}scope.manager.itemError(url);}},onProgress,onError);}}]);return AudioLoader;}(Loader);var HemisphereLightProbe=/*#__PURE__*/function(_LightProbe){_inherits(HemisphereLightProbe,_LightProbe);var _super131=_createSuper(HemisphereLightProbe);function HemisphereLightProbe(skyColor,groundColor){var _this101;var intensity=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;_classCallCheck(this,HemisphereLightProbe);_this101=_super131.call(this,undefined,intensity);var color1=new Color().set(skyColor);var color2=new Color().set(groundColor);var sky=new Vector3(color1.r,color1.g,color1.b);var ground=new Vector3(color2.r,color2.g,color2.b);// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\nvar c0=Math.sqrt(Math.PI);var c1=c0*Math.sqrt(0.75);_this101.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);_this101.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);return _this101;}return _createClass(HemisphereLightProbe);}(LightProbe);HemisphereLightProbe.prototype.isHemisphereLightProbe=true;var AmbientLightProbe=/*#__PURE__*/function(_LightProbe2){_inherits(AmbientLightProbe,_LightProbe2);var _super132=_createSuper(AmbientLightProbe);function AmbientLightProbe(color){var _this102;var intensity=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;_classCallCheck(this,AmbientLightProbe);_this102=_super132.call(this,undefined,intensity);var color1=new Color().set(color);// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n_this102.sh.coefficients[0].set(color1.r,color1.g,color1.b).multiplyScalar(2*Math.sqrt(Math.PI));return _this102;}return _createClass(AmbientLightProbe);}(LightProbe);AmbientLightProbe.prototype.isAmbientLightProbe=true;var _eyeRight=/*@__PURE__*/new Matrix4();var _eyeLeft=/*@__PURE__*/new Matrix4();var StereoCamera=/*#__PURE__*/function(){function StereoCamera(){_classCallCheck(this,StereoCamera);this.type='StereoCamera';this.aspect=1;this.eyeSep=0.064;this.cameraL=new PerspectiveCamera();this.cameraL.layers.enable(1);this.cameraL.matrixAutoUpdate=false;this.cameraR=new PerspectiveCamera();this.cameraR.layers.enable(2);this.cameraR.matrixAutoUpdate=false;this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null};}_createClass(StereoCamera,[{key:\"update\",value:function update(camera){var cache=this._cache;var needsUpdate=cache.focus!==camera.focus||cache.fov!==camera.fov||cache.aspect!==camera.aspect*this.aspect||cache.near!==camera.near||cache.far!==camera.far||cache.zoom!==camera.zoom||cache.eyeSep!==this.eyeSep;if(needsUpdate){cache.focus=camera.focus;cache.fov=camera.fov;cache.aspect=camera.aspect*this.aspect;cache.near=camera.near;cache.far=camera.far;cache.zoom=camera.zoom;cache.eyeSep=this.eyeSep;// Off-axis stereoscopic effect based on\n// http://paulbourke.net/stereographics/stereorender/\nvar projectionMatrix=camera.projectionMatrix.clone();var eyeSepHalf=cache.eyeSep/2;var eyeSepOnProjection=eyeSepHalf*cache.near/cache.focus;var ymax=cache.near*Math.tan(DEG2RAD*cache.fov*0.5)/cache.zoom;var xmin,xmax;// translate xOffset\n_eyeLeft.elements[12]=-eyeSepHalf;_eyeRight.elements[12]=eyeSepHalf;// for left eye\nxmin=-ymax*cache.aspect+eyeSepOnProjection;xmax=ymax*cache.aspect+eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraL.projectionMatrix.copy(projectionMatrix);// for right eye\nxmin=-ymax*cache.aspect-eyeSepOnProjection;xmax=ymax*cache.aspect-eyeSepOnProjection;projectionMatrix.elements[0]=2*cache.near/(xmax-xmin);projectionMatrix.elements[8]=(xmax+xmin)/(xmax-xmin);this.cameraR.projectionMatrix.copy(projectionMatrix);}this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);}}]);return StereoCamera;}();var Clock=/*#__PURE__*/function(){function Clock(){var autoStart=arguments.length>0&&arguments[0]!==undefined?arguments[0]:true;_classCallCheck(this,Clock);this.autoStart=autoStart;this.startTime=0;this.oldTime=0;this.elapsedTime=0;this.running=false;}_createClass(Clock,[{key:\"start\",value:function start(){this.startTime=now();this.oldTime=this.startTime;this.elapsedTime=0;this.running=true;}},{key:\"stop\",value:function stop(){this.getElapsedTime();this.running=false;this.autoStart=false;}},{key:\"getElapsedTime\",value:function getElapsedTime(){this.getDelta();return this.elapsedTime;}},{key:\"getDelta\",value:function getDelta(){var diff=0;if(this.autoStart&&!this.running){this.start();return 0;}if(this.running){var newTime=now();diff=(newTime-this.oldTime)/1000;this.oldTime=newTime;this.elapsedTime+=diff;}return diff;}}]);return Clock;}();function now(){return(typeof performance==='undefined'?Date:performance).now();// see #10732\n}var _position$1=/*@__PURE__*/new Vector3();var _quaternion$1=/*@__PURE__*/new Quaternion();var _scale$1=/*@__PURE__*/new Vector3();var _orientation$1=/*@__PURE__*/new Vector3();var AudioListener=/*#__PURE__*/function(_Object3D12){_inherits(AudioListener,_Object3D12);var _super133=_createSuper(AudioListener);function AudioListener(){var _this103;_classCallCheck(this,AudioListener);_this103=_super133.call(this);_this103.type='AudioListener';_this103.context=AudioContext.getContext();_this103.gain=_this103.context.createGain();_this103.gain.connect(_this103.context.destination);_this103.filter=null;_this103.timeDelta=0;// private\n_this103._clock=new Clock();return _this103;}_createClass(AudioListener,[{key:\"getInput\",value:function getInput(){return this.gain;}},{key:\"removeFilter\",value:function removeFilter(){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);this.gain.connect(this.context.destination);this.filter=null;}return this;}},{key:\"getFilter\",value:function getFilter(){return this.filter;}},{key:\"setFilter\",value:function setFilter(value){if(this.filter!==null){this.gain.disconnect(this.filter);this.filter.disconnect(this.context.destination);}else{this.gain.disconnect(this.context.destination);}this.filter=value;this.gain.connect(this.filter);this.filter.connect(this.context.destination);return this;}},{key:\"getMasterVolume\",value:function getMasterVolume(){return this.gain.gain.value;}},{key:\"setMasterVolume\",value:function setMasterVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}},{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){_get(_getPrototypeOf(AudioListener.prototype),\"updateMatrixWorld\",this).call(this,force);var listener=this.context.listener;var up=this.up;this.timeDelta=this._clock.getDelta();this.matrixWorld.decompose(_position$1,_quaternion$1,_scale$1);_orientation$1.set(0,0,-1).applyQuaternion(_quaternion$1);if(listener.positionX){// code path for Chrome (see #14393)\nvar endTime=this.context.currentTime+this.timeDelta;listener.positionX.linearRampToValueAtTime(_position$1.x,endTime);listener.positionY.linearRampToValueAtTime(_position$1.y,endTime);listener.positionZ.linearRampToValueAtTime(_position$1.z,endTime);listener.forwardX.linearRampToValueAtTime(_orientation$1.x,endTime);listener.forwardY.linearRampToValueAtTime(_orientation$1.y,endTime);listener.forwardZ.linearRampToValueAtTime(_orientation$1.z,endTime);listener.upX.linearRampToValueAtTime(up.x,endTime);listener.upY.linearRampToValueAtTime(up.y,endTime);listener.upZ.linearRampToValueAtTime(up.z,endTime);}else{listener.setPosition(_position$1.x,_position$1.y,_position$1.z);listener.setOrientation(_orientation$1.x,_orientation$1.y,_orientation$1.z,up.x,up.y,up.z);}}}]);return AudioListener;}(Object3D);var Audio=/*#__PURE__*/function(_Object3D13){_inherits(Audio,_Object3D13);var _super134=_createSuper(Audio);function Audio(listener){var _this104;_classCallCheck(this,Audio);_this104=_super134.call(this);_this104.type='Audio';_this104.listener=listener;_this104.context=listener.context;_this104.gain=_this104.context.createGain();_this104.gain.connect(listener.getInput());_this104.autoplay=false;_this104.buffer=null;_this104.detune=0;_this104.loop=false;_this104.loopStart=0;_this104.loopEnd=0;_this104.offset=0;_this104.duration=undefined;_this104.playbackRate=1;_this104.isPlaying=false;_this104.hasPlaybackControl=true;_this104.source=null;_this104.sourceType='empty';_this104._startedAt=0;_this104._progress=0;_this104._connected=false;_this104.filters=[];return _this104;}_createClass(Audio,[{key:\"getOutput\",value:function getOutput(){return this.gain;}},{key:\"setNodeSource\",value:function setNodeSource(audioNode){this.hasPlaybackControl=false;this.sourceType='audioNode';this.source=audioNode;this.connect();return this;}},{key:\"setMediaElementSource\",value:function setMediaElementSource(mediaElement){this.hasPlaybackControl=false;this.sourceType='mediaNode';this.source=this.context.createMediaElementSource(mediaElement);this.connect();return this;}},{key:\"setMediaStreamSource\",value:function setMediaStreamSource(mediaStream){this.hasPlaybackControl=false;this.sourceType='mediaStreamNode';this.source=this.context.createMediaStreamSource(mediaStream);this.connect();return this;}},{key:\"setBuffer\",value:function setBuffer(audioBuffer){this.buffer=audioBuffer;this.sourceType='buffer';if(this.autoplay)this.play();return this;}},{key:\"play\",value:function play(){var delay=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;if(this.isPlaying===true){console.warn('THREE.Audio: Audio is already playing.');return;}if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._startedAt=this.context.currentTime+delay;var source=this.context.createBufferSource();source.buffer=this.buffer;source.loop=this.loop;source.loopStart=this.loopStart;source.loopEnd=this.loopEnd;source.onended=this.onEnded.bind(this);source.start(this._startedAt,this._progress+this.offset,this.duration);this.isPlaying=true;this.source=source;this.setDetune(this.detune);this.setPlaybackRate(this.playbackRate);return this.connect();}},{key:\"pause\",value:function pause(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}if(this.isPlaying===true){// update current progress\nthis._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate;if(this.loop===true){// ensure _progress does not exceed duration with looped audios\nthis._progress=this._progress%(this.duration||this.buffer.duration);}this.source.stop();this.source.onended=null;this.isPlaying=false;}return this;}},{key:\"stop\",value:function stop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this._progress=0;this.source.stop();this.source.onended=null;this.isPlaying=false;return this;}},{key:\"connect\",value:function connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var _i304=1,l=this.filters.length;_i304<l;_i304++){this.filters[_i304-1].connect(this.filters[_i304]);}this.filters[this.filters.length-1].connect(this.getOutput());}else{this.source.connect(this.getOutput());}this._connected=true;return this;}},{key:\"disconnect\",value:function disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var _i305=1,l=this.filters.length;_i305<l;_i305++){this.filters[_i305-1].disconnect(this.filters[_i305]);}this.filters[this.filters.length-1].disconnect(this.getOutput());}else{this.source.disconnect(this.getOutput());}this._connected=false;return this;}},{key:\"getFilters\",value:function getFilters(){return this.filters;}},{key:\"setFilters\",value:function setFilters(value){if(!value)value=[];if(this._connected===true){this.disconnect();this.filters=value.slice();this.connect();}else{this.filters=value.slice();}return this;}},{key:\"setDetune\",value:function setDetune(value){this.detune=value;if(this.source.detune===undefined)return;// only set detune when available\nif(this.isPlaying===true){this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,0.01);}return this;}},{key:\"getDetune\",value:function getDetune(){return this.detune;}},{key:\"getFilter\",value:function getFilter(){return this.getFilters()[0];}},{key:\"setFilter\",value:function setFilter(filter){return this.setFilters(filter?[filter]:[]);}},{key:\"setPlaybackRate\",value:function setPlaybackRate(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.playbackRate=value;if(this.isPlaying===true){this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,0.01);}return this;}},{key:\"getPlaybackRate\",value:function getPlaybackRate(){return this.playbackRate;}},{key:\"onEnded\",value:function onEnded(){this.isPlaying=false;}},{key:\"getLoop\",value:function getLoop(){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return false;}return this.loop;}},{key:\"setLoop\",value:function setLoop(value){if(this.hasPlaybackControl===false){console.warn('THREE.Audio: this Audio has no playback control.');return;}this.loop=value;if(this.isPlaying===true){this.source.loop=this.loop;}return this;}},{key:\"setLoopStart\",value:function setLoopStart(value){this.loopStart=value;return this;}},{key:\"setLoopEnd\",value:function setLoopEnd(value){this.loopEnd=value;return this;}},{key:\"getVolume\",value:function getVolume(){return this.gain.gain.value;}},{key:\"setVolume\",value:function setVolume(value){this.gain.gain.setTargetAtTime(value,this.context.currentTime,0.01);return this;}}]);return Audio;}(Object3D);var _position=/*@__PURE__*/new Vector3();var _quaternion=/*@__PURE__*/new Quaternion();var _scale=/*@__PURE__*/new Vector3();var _orientation=/*@__PURE__*/new Vector3();var PositionalAudio=/*#__PURE__*/function(_Audio){_inherits(PositionalAudio,_Audio);var _super135=_createSuper(PositionalAudio);function PositionalAudio(listener){var _this105;_classCallCheck(this,PositionalAudio);_this105=_super135.call(this,listener);_this105.panner=_this105.context.createPanner();_this105.panner.panningModel='HRTF';_this105.panner.connect(_this105.gain);return _this105;}_createClass(PositionalAudio,[{key:\"getOutput\",value:function getOutput(){return this.panner;}},{key:\"getRefDistance\",value:function getRefDistance(){return this.panner.refDistance;}},{key:\"setRefDistance\",value:function setRefDistance(value){this.panner.refDistance=value;return this;}},{key:\"getRolloffFactor\",value:function getRolloffFactor(){return this.panner.rolloffFactor;}},{key:\"setRolloffFactor\",value:function setRolloffFactor(value){this.panner.rolloffFactor=value;return this;}},{key:\"getDistanceModel\",value:function getDistanceModel(){return this.panner.distanceModel;}},{key:\"setDistanceModel\",value:function setDistanceModel(value){this.panner.distanceModel=value;return this;}},{key:\"getMaxDistance\",value:function getMaxDistance(){return this.panner.maxDistance;}},{key:\"setMaxDistance\",value:function setMaxDistance(value){this.panner.maxDistance=value;return this;}},{key:\"setDirectionalCone\",value:function setDirectionalCone(coneInnerAngle,coneOuterAngle,coneOuterGain){this.panner.coneInnerAngle=coneInnerAngle;this.panner.coneOuterAngle=coneOuterAngle;this.panner.coneOuterGain=coneOuterGain;return this;}},{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){_get(_getPrototypeOf(PositionalAudio.prototype),\"updateMatrixWorld\",this).call(this,force);if(this.hasPlaybackControl===true&&this.isPlaying===false)return;this.matrixWorld.decompose(_position,_quaternion,_scale);_orientation.set(0,0,1).applyQuaternion(_quaternion);var panner=this.panner;if(panner.positionX){// code path for Chrome and Firefox (see #14393)\nvar endTime=this.context.currentTime+this.listener.timeDelta;panner.positionX.linearRampToValueAtTime(_position.x,endTime);panner.positionY.linearRampToValueAtTime(_position.y,endTime);panner.positionZ.linearRampToValueAtTime(_position.z,endTime);panner.orientationX.linearRampToValueAtTime(_orientation.x,endTime);panner.orientationY.linearRampToValueAtTime(_orientation.y,endTime);panner.orientationZ.linearRampToValueAtTime(_orientation.z,endTime);}else{panner.setPosition(_position.x,_position.y,_position.z);panner.setOrientation(_orientation.x,_orientation.y,_orientation.z);}}}]);return PositionalAudio;}(Audio);var AudioAnalyser=/*#__PURE__*/function(){function AudioAnalyser(audio){var fftSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2048;_classCallCheck(this,AudioAnalyser);this.analyser=audio.context.createAnalyser();this.analyser.fftSize=fftSize;this.data=new Uint8Array(this.analyser.frequencyBinCount);audio.getOutput().connect(this.analyser);}_createClass(AudioAnalyser,[{key:\"getFrequencyData\",value:function getFrequencyData(){this.analyser.getByteFrequencyData(this.data);return this.data;}},{key:\"getAverageFrequency\",value:function getAverageFrequency(){var value=0;var data=this.getFrequencyData();for(var _i306=0;_i306<data.length;_i306++){value+=data[_i306];}return value/data.length;}}]);return AudioAnalyser;}();var PropertyMixer=/*#__PURE__*/function(){function PropertyMixer(binding,typeName,valueSize){_classCallCheck(this,PropertyMixer);this.binding=binding;this.valueSize=valueSize;var mixFunction,mixFunctionAdditive,setIdentity;// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n//\n// interpolators can use .buffer as their .result\n// the data then goes to 'incoming'\n//\n// 'accu0' and 'accu1' are used frame-interleaved for\n// the cumulative result and are compared to detect\n// changes\n//\n// 'orig' stores the original state of the property\n//\n// 'add' is used for additive cumulative results\n//\n// 'work' is optional and is only present for quaternion types. It is used\n// to store intermediate quaternion multiplication results\nswitch(typeName){case'quaternion':mixFunction=this._slerp;mixFunctionAdditive=this._slerpAdditive;setIdentity=this._setAdditiveIdentityQuaternion;this.buffer=new Float64Array(valueSize*6);this._workIndex=5;break;case'string':case'bool':mixFunction=this._select;// Use the regular mix function and for additive on these types,\n// additive is not relevant for non-numeric types\nmixFunctionAdditive=this._select;setIdentity=this._setAdditiveIdentityOther;this.buffer=new Array(valueSize*5);break;default:mixFunction=this._lerp;mixFunctionAdditive=this._lerpAdditive;setIdentity=this._setAdditiveIdentityNumeric;this.buffer=new Float64Array(valueSize*5);}this._mixBufferRegion=mixFunction;this._mixBufferRegionAdditive=mixFunctionAdditive;this._setIdentity=setIdentity;this._origIndex=3;this._addIndex=4;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;this.useCount=0;this.referenceCount=0;}// accumulate data in the 'incoming' region into 'accu<i>'\n_createClass(PropertyMixer,[{key:\"accumulate\",value:function accumulate(accuIndex,weight){// note: happily accumulating nothing when weight = 0, the caller knows\n// the weight and shouldn't have made the call in the first place\nvar buffer=this.buffer,stride=this.valueSize,offset=accuIndex*stride+stride;var currentWeight=this.cumulativeWeight;if(currentWeight===0){// accuN := incoming * weight\nfor(var _i307=0;_i307!==stride;++_i307){buffer[offset+_i307]=buffer[_i307];}currentWeight=weight;}else{// accuN := accuN + incoming * weight\ncurrentWeight+=weight;var mix=weight/currentWeight;this._mixBufferRegion(buffer,offset,0,mix,stride);}this.cumulativeWeight=currentWeight;}// accumulate data in the 'incoming' region into 'add'\n},{key:\"accumulateAdditive\",value:function accumulateAdditive(weight){var buffer=this.buffer,stride=this.valueSize,offset=stride*this._addIndex;if(this.cumulativeWeightAdditive===0){// add = identity\nthis._setIdentity();}// add := add + incoming * weight\nthis._mixBufferRegionAdditive(buffer,offset,0,weight,stride);this.cumulativeWeightAdditive+=weight;}// apply the state of 'accu<i>' to the binding when accus differ\n},{key:\"apply\",value:function apply(accuIndex){var stride=this.valueSize,buffer=this.buffer,offset=accuIndex*stride+stride,weight=this.cumulativeWeight,weightAdditive=this.cumulativeWeightAdditive,binding=this.binding;this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;if(weight<1){// accuN := accuN + original * ( 1 - cumulativeWeight )\nvar originalValueOffset=stride*this._origIndex;this._mixBufferRegion(buffer,offset,originalValueOffset,1-weight,stride);}if(weightAdditive>0){// accuN := accuN + additive accuN\nthis._mixBufferRegionAdditive(buffer,offset,this._addIndex*stride,1,stride);}for(var _i308=stride,e=stride+stride;_i308!==e;++_i308){if(buffer[_i308]!==buffer[_i308+stride]){// value has changed -> update scene graph\nbinding.setValue(buffer,offset);break;}}}// remember the state of the bound property and copy it to both accus\n},{key:\"saveOriginalState\",value:function saveOriginalState(){var binding=this.binding;var buffer=this.buffer,stride=this.valueSize,originalValueOffset=stride*this._origIndex;binding.getValue(buffer,originalValueOffset);// accu[0..1] := orig -- initially detect changes against the original\nfor(var _i309=stride,e=originalValueOffset;_i309!==e;++_i309){buffer[_i309]=buffer[originalValueOffset+_i309%stride];}// Add to identity for additive\nthis._setIdentity();this.cumulativeWeight=0;this.cumulativeWeightAdditive=0;}// apply the state previously taken via 'saveOriginalState' to the binding\n},{key:\"restoreOriginalState\",value:function restoreOriginalState(){var originalValueOffset=this.valueSize*3;this.binding.setValue(this.buffer,originalValueOffset);}},{key:\"_setAdditiveIdentityNumeric\",value:function _setAdditiveIdentityNumeric(){var startIndex=this._addIndex*this.valueSize;var endIndex=startIndex+this.valueSize;for(var _i310=startIndex;_i310<endIndex;_i310++){this.buffer[_i310]=0;}}},{key:\"_setAdditiveIdentityQuaternion\",value:function _setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric();this.buffer[this._addIndex*this.valueSize+3]=1;}},{key:\"_setAdditiveIdentityOther\",value:function _setAdditiveIdentityOther(){var startIndex=this._origIndex*this.valueSize;var targetIndex=this._addIndex*this.valueSize;for(var _i311=0;_i311<this.valueSize;_i311++){this.buffer[targetIndex+_i311]=this.buffer[startIndex+_i311];}}// mix functions\n},{key:\"_select\",value:function _select(buffer,dstOffset,srcOffset,t,stride){if(t>=0.5){for(var _i312=0;_i312!==stride;++_i312){buffer[dstOffset+_i312]=buffer[srcOffset+_i312];}}}},{key:\"_slerp\",value:function _slerp(buffer,dstOffset,srcOffset,t){Quaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,srcOffset,t);}},{key:\"_slerpAdditive\",value:function _slerpAdditive(buffer,dstOffset,srcOffset,t,stride){var workOffset=this._workIndex*stride;// Store result in intermediate buffer offset\nQuaternion.multiplyQuaternionsFlat(buffer,workOffset,buffer,dstOffset,buffer,srcOffset);// Slerp to the intermediate result\nQuaternion.slerpFlat(buffer,dstOffset,buffer,dstOffset,buffer,workOffset,t);}},{key:\"_lerp\",value:function _lerp(buffer,dstOffset,srcOffset,t,stride){var s=1-t;for(var _i313=0;_i313!==stride;++_i313){var j=dstOffset+_i313;buffer[j]=buffer[j]*s+buffer[srcOffset+_i313]*t;}}},{key:\"_lerpAdditive\",value:function _lerpAdditive(buffer,dstOffset,srcOffset,t,stride){for(var _i314=0;_i314!==stride;++_i314){var j=dstOffset+_i314;buffer[j]=buffer[j]+buffer[srcOffset+_i314]*t;}}}]);return PropertyMixer;}();// Characters [].:/ are reserved for track binding syntax.\nvar _RESERVED_CHARS_RE='\\\\[\\\\]\\\\.:\\\\/';var _reservedRe=new RegExp('['+_RESERVED_CHARS_RE+']','g');// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nvar _wordChar='[^'+_RESERVED_CHARS_RE+']';var _wordCharOrDot='[^'+_RESERVED_CHARS_RE.replace('\\\\.','')+']';// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nvar _directoryRe=/((?:WC+[\\/:])*)/.source.replace('WC',_wordChar);// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nvar _nodeRe=/(WCOD+)?/.source.replace('WCOD',_wordCharOrDot);// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nvar _objectRe=/(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC',_wordChar);// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nvar _propertyRe=/\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC',_wordChar);var _trackRe=new RegExp(''+'^'+_directoryRe+_nodeRe+_objectRe+_propertyRe+'$');var _supportedObjectNames=['material','materials','bones'];var Composite=/*#__PURE__*/function(){function Composite(targetGroup,path,optionalParsedPath){_classCallCheck(this,Composite);var parsedPath=optionalParsedPath||PropertyBinding.parseTrackName(path);this._targetGroup=targetGroup;this._bindings=targetGroup.subscribe_(path,parsedPath);}_createClass(Composite,[{key:\"getValue\",value:function getValue(array,offset){this.bind();// bind all binding\nvar firstValidIndex=this._targetGroup.nCachedObjects_,binding=this._bindings[firstValidIndex];// and only call .getValue on the first\nif(binding!==undefined)binding.getValue(array,offset);}},{key:\"setValue\",value:function setValue(array,offset){var bindings=this._bindings;for(var _i315=this._targetGroup.nCachedObjects_,n=bindings.length;_i315!==n;++_i315){bindings[_i315].setValue(array,offset);}}},{key:\"bind\",value:function bind(){var bindings=this._bindings;for(var _i316=this._targetGroup.nCachedObjects_,n=bindings.length;_i316!==n;++_i316){bindings[_i316].bind();}}},{key:\"unbind\",value:function unbind(){var bindings=this._bindings;for(var _i317=this._targetGroup.nCachedObjects_,n=bindings.length;_i317!==n;++_i317){bindings[_i317].unbind();}}}]);return Composite;}();// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nvar PropertyBinding=/*#__PURE__*/function(){function PropertyBinding(rootNode,path,parsedPath){_classCallCheck(this,PropertyBinding);this.path=path;this.parsedPath=parsedPath||PropertyBinding.parseTrackName(path);this.node=PropertyBinding.findNode(rootNode,this.parsedPath.nodeName)||rootNode;this.rootNode=rootNode;// initial state of these methods that calls 'bind'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}_createClass(PropertyBinding,[{key:\"_getValue_unavailable\",value:// these are used to \"bind\" a nonexistent property\nfunction _getValue_unavailable(){}},{key:\"_setValue_unavailable\",value:function _setValue_unavailable(){}// Getters\n},{key:\"_getValue_direct\",value:function _getValue_direct(buffer,offset){buffer[offset]=this.targetObject[this.propertyName];}},{key:\"_getValue_array\",value:function _getValue_array(buffer,offset){var source=this.resolvedProperty;for(var _i318=0,n=source.length;_i318!==n;++_i318){buffer[offset++]=source[_i318];}}},{key:\"_getValue_arrayElement\",value:function _getValue_arrayElement(buffer,offset){buffer[offset]=this.resolvedProperty[this.propertyIndex];}},{key:\"_getValue_toArray\",value:function _getValue_toArray(buffer,offset){this.resolvedProperty.toArray(buffer,offset);}// Direct\n},{key:\"_setValue_direct\",value:function _setValue_direct(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];}},{key:\"_setValue_direct_setNeedsUpdate\",value:function _setValue_direct_setNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.needsUpdate=true;}},{key:\"_setValue_direct_setMatrixWorldNeedsUpdate\",value:function _setValue_direct_setMatrixWorldNeedsUpdate(buffer,offset){this.targetObject[this.propertyName]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// EntireArray\n},{key:\"_setValue_array\",value:function _setValue_array(buffer,offset){var dest=this.resolvedProperty;for(var _i319=0,n=dest.length;_i319!==n;++_i319){dest[_i319]=buffer[offset++];}}},{key:\"_setValue_array_setNeedsUpdate\",value:function _setValue_array_setNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var _i320=0,n=dest.length;_i320!==n;++_i320){dest[_i320]=buffer[offset++];}this.targetObject.needsUpdate=true;}},{key:\"_setValue_array_setMatrixWorldNeedsUpdate\",value:function _setValue_array_setMatrixWorldNeedsUpdate(buffer,offset){var dest=this.resolvedProperty;for(var _i321=0,n=dest.length;_i321!==n;++_i321){dest[_i321]=buffer[offset++];}this.targetObject.matrixWorldNeedsUpdate=true;}// ArrayElement\n},{key:\"_setValue_arrayElement\",value:function _setValue_arrayElement(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];}},{key:\"_setValue_arrayElement_setNeedsUpdate\",value:function _setValue_arrayElement_setNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.needsUpdate=true;}},{key:\"_setValue_arrayElement_setMatrixWorldNeedsUpdate\",value:function _setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty[this.propertyIndex]=buffer[offset];this.targetObject.matrixWorldNeedsUpdate=true;}// HasToFromArray\n},{key:\"_setValue_fromArray\",value:function _setValue_fromArray(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);}},{key:\"_setValue_fromArray_setNeedsUpdate\",value:function _setValue_fromArray_setNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.needsUpdate=true;}},{key:\"_setValue_fromArray_setMatrixWorldNeedsUpdate\",value:function _setValue_fromArray_setMatrixWorldNeedsUpdate(buffer,offset){this.resolvedProperty.fromArray(buffer,offset);this.targetObject.matrixWorldNeedsUpdate=true;}},{key:\"_getValue_unbound\",value:function _getValue_unbound(targetArray,offset){this.bind();this.getValue(targetArray,offset);}},{key:\"_setValue_unbound\",value:function _setValue_unbound(sourceArray,offset){this.bind();this.setValue(sourceArray,offset);}// create getter / setter pair for a property in the scene graph\n},{key:\"bind\",value:function bind(){var targetObject=this.node;var parsedPath=this.parsedPath;var objectName=parsedPath.objectName;var propertyName=parsedPath.propertyName;var propertyIndex=parsedPath.propertyIndex;if(!targetObject){targetObject=PropertyBinding.findNode(this.rootNode,parsedPath.nodeName)||this.rootNode;this.node=targetObject;}// set fail state so we can just 'return' on error\nthis.getValue=this._getValue_unavailable;this.setValue=this._setValue_unavailable;// ensure there is a value node\nif(!targetObject){console.error('THREE.PropertyBinding: Trying to update node for track: '+this.path+' but it wasn\\'t found.');return;}if(objectName){var objectIndex=parsedPath.objectIndex;// special cases were we need to reach deeper into the hierarchy to get the face materials....\nswitch(objectName){case'materials':if(!targetObject.material){console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.',this);return;}if(!targetObject.material.materials){console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.',this);return;}targetObject=targetObject.material.materials;break;case'bones':if(!targetObject.skeleton){console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.',this);return;}// potential future optimization: skip this if propertyIndex is already an integer\n// and convert the integer string to a true integer.\ntargetObject=targetObject.skeleton.bones;// support resolving morphTarget names into indices.\nfor(var _i322=0;_i322<targetObject.length;_i322++){if(targetObject[_i322].name===objectIndex){objectIndex=_i322;break;}}break;default:if(targetObject[objectName]===undefined){console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.',this);return;}targetObject=targetObject[objectName];}if(objectIndex!==undefined){if(targetObject[objectIndex]===undefined){console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.',this,targetObject);return;}targetObject=targetObject[objectIndex];}}// resolve property\nvar nodeProperty=targetObject[propertyName];if(nodeProperty===undefined){var nodeName=parsedPath.nodeName;console.error('THREE.PropertyBinding: Trying to update property for track: '+nodeName+'.'+propertyName+' but it wasn\\'t found.',targetObject);return;}// determine versioning scheme\nvar versioning=this.Versioning.None;this.targetObject=targetObject;if(targetObject.needsUpdate!==undefined){// material\nversioning=this.Versioning.NeedsUpdate;}else if(targetObject.matrixWorldNeedsUpdate!==undefined){// node transform\nversioning=this.Versioning.MatrixWorldNeedsUpdate;}// determine how the property gets bound\nvar bindingType=this.BindingType.Direct;if(propertyIndex!==undefined){// access a sub element of the property array (only primitives are supported right now)\nif(propertyName==='morphTargetInfluences'){// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n// support resolving morphTarget names into indices.\nif(!targetObject.geometry){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.',this);return;}if(targetObject.geometry.isBufferGeometry){if(!targetObject.geometry.morphAttributes){console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.',this);return;}if(targetObject.morphTargetDictionary[propertyIndex]!==undefined){propertyIndex=targetObject.morphTargetDictionary[propertyIndex];}}else{console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.',this);return;}}bindingType=this.BindingType.ArrayElement;this.resolvedProperty=nodeProperty;this.propertyIndex=propertyIndex;}else if(nodeProperty.fromArray!==undefined&&nodeProperty.toArray!==undefined){// must use copy for Object3D.Euler/Quaternion\nbindingType=this.BindingType.HasFromToArray;this.resolvedProperty=nodeProperty;}else if(Array.isArray(nodeProperty)){bindingType=this.BindingType.EntireArray;this.resolvedProperty=nodeProperty;}else{this.propertyName=propertyName;}// select getter / setter\nthis.getValue=this.GetterByBindingType[bindingType];this.setValue=this.SetterByBindingTypeAndVersioning[bindingType][versioning];}},{key:\"unbind\",value:function unbind(){this.node=null;// back to the prototype version of getValue / setValue\n// note: avoiding to mutate the shape of 'this' via 'delete'\nthis.getValue=this._getValue_unbound;this.setValue=this._setValue_unbound;}}],[{key:\"create\",value:function create(root,path,parsedPath){if(!(root&&root.isAnimationObjectGroup)){return new PropertyBinding(root,path,parsedPath);}else{return new PropertyBinding.Composite(root,path,parsedPath);}}/**\r\n\t * Replaces spaces with underscores and removes unsupported characters from\r\n\t * node names, to ensure compatibility with parseTrackName().\r\n\t *\r\n\t * @param {string} name Node name to be sanitized.\r\n\t * @return {string}\r\n\t */},{key:\"sanitizeNodeName\",value:function sanitizeNodeName(name){return name.replace(/\\s/g,'_').replace(_reservedRe,'');}},{key:\"parseTrackName\",value:function parseTrackName(trackName){var matches=_trackRe.exec(trackName);if(!matches){throw new Error('PropertyBinding: Cannot parse trackName: '+trackName);}var results={// directoryName: matches[ 1 ], // (tschw) currently unused\nnodeName:matches[2],objectName:matches[3],objectIndex:matches[4],propertyName:matches[5],// required\npropertyIndex:matches[6]};var lastDot=results.nodeName&&results.nodeName.lastIndexOf('.');if(lastDot!==undefined&&lastDot!==-1){var objectName=results.nodeName.substring(lastDot+1);// Object names must be checked against an allowlist. Otherwise, there\n// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n// 'bar' could be the objectName, or part of a nodeName (which can\n// include '.' characters).\nif(_supportedObjectNames.indexOf(objectName)!==-1){results.nodeName=results.nodeName.substring(0,lastDot);results.objectName=objectName;}}if(results.propertyName===null||results.propertyName.length===0){throw new Error('PropertyBinding: can not parse propertyName from trackName: '+trackName);}return results;}},{key:\"findNode\",value:function findNode(root,nodeName){if(!nodeName||nodeName===''||nodeName==='.'||nodeName===-1||nodeName===root.name||nodeName===root.uuid){return root;}// search into skeleton bones.\nif(root.skeleton){var bone=root.skeleton.getBoneByName(nodeName);if(bone!==undefined){return bone;}}// search into node subtree.\nif(root.children){var searchNodeSubtree=function searchNodeSubtree(children){for(var _i323=0;_i323<children.length;_i323++){var childNode=children[_i323];if(childNode.name===nodeName||childNode.uuid===nodeName){return childNode;}var result=searchNodeSubtree(childNode.children);if(result)return result;}return null;};var subTreeNode=searchNodeSubtree(root.children);if(subTreeNode){return subTreeNode;}}return null;}}]);return PropertyBinding;}();PropertyBinding.Composite=Composite;PropertyBinding.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};PropertyBinding.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};PropertyBinding.prototype.GetterByBindingType=[PropertyBinding.prototype._getValue_direct,PropertyBinding.prototype._getValue_array,PropertyBinding.prototype._getValue_arrayElement,PropertyBinding.prototype._getValue_toArray];PropertyBinding.prototype.SetterByBindingTypeAndVersioning=[[// Direct\nPropertyBinding.prototype._setValue_direct,PropertyBinding.prototype._setValue_direct_setNeedsUpdate,PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[// EntireArray\nPropertyBinding.prototype._setValue_array,PropertyBinding.prototype._setValue_array_setNeedsUpdate,PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate],[// ArrayElement\nPropertyBinding.prototype._setValue_arrayElement,PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[// HasToFromArray\nPropertyBinding.prototype._setValue_fromArray,PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n *  - Add objects you would otherwise pass as 'root' to the\r\n *    constructor or the .clipAction method of AnimationMixer.\r\n *\r\n *  - Instead pass this object as 'root'.\r\n *\r\n *  - You can also add and remove objects later when the mixer\r\n *    is running.\r\n *\r\n * Note:\r\n *\r\n *    Objects of this class appear as one object to the mixer,\r\n *    so cache control of the individual objects must be done\r\n *    on the group.\r\n *\r\n * Limitation:\r\n *\r\n *  - The animated properties must be compatible among the\r\n *    all objects in the group.\r\n *\r\n *  - A single property can either be controlled through a\r\n *    target group or directly, but not both.\r\n */var AnimationObjectGroup=/*#__PURE__*/function(){function AnimationObjectGroup(){_classCallCheck(this,AnimationObjectGroup);this.uuid=generateUUID();// cached objects followed by the active ones\nthis._objects=Array.prototype.slice.call(arguments);this.nCachedObjects_=0;// threshold\n// note: read by PropertyBinding.Composite\nvar indices={};this._indicesByUUID=indices;// for bookkeeping\nfor(var _i324=0,n=arguments.length;_i324!==n;++_i324){indices[arguments[_i324].uuid]=_i324;}this._paths=[];// inside: string\nthis._parsedPaths=[];// inside: { we don't care, here }\nthis._bindings=[];// inside: Array< PropertyBinding >\nthis._bindingsIndicesByPath={};// inside: indices in these arrays\nvar scope=this;this.stats={objects:{get total(){return scope._objects.length;},get inUse(){return this.total-scope.nCachedObjects_;}},get bindingsPerObject(){return scope._bindings.length;}};}_createClass(AnimationObjectGroup,[{key:\"add\",value:function add(){var objects=this._objects,indicesByUUID=this._indicesByUUID,paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,nBindings=bindings.length;var knownObject=undefined,nObjects=objects.length,nCachedObjects=this.nCachedObjects_;for(var _i325=0,n=arguments.length;_i325!==n;++_i325){var object=arguments[_i325],uuid=object.uuid;var index=indicesByUUID[uuid];if(index===undefined){// unknown object -> add it to the ACTIVE region\nindex=nObjects++;indicesByUUID[uuid]=index;objects.push(object);// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){bindings[j].push(new PropertyBinding(object,paths[j],parsedPaths[j]));}}else if(index<nCachedObjects){knownObject=objects[index];// move existing object to the ACTIVE region\nvar firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex];indicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;indicesByUUID[uuid]=firstActiveIndex;objects[firstActiveIndex]=object;// accounting is done, now do the same for all bindings\nfor(var _j16=0,_m2=nBindings;_j16!==_m2;++_j16){var bindingsForPath=bindings[_j16],lastCached=bindingsForPath[firstActiveIndex];var binding=bindingsForPath[index];bindingsForPath[index]=lastCached;if(binding===undefined){// since we do not bother to create new bindings\n// for objects that are cached, the binding may\n// or may not exist\nbinding=new PropertyBinding(object,paths[_j16],parsedPaths[_j16]);}bindingsForPath[firstActiveIndex]=binding;}}else if(objects[index]!==knownObject){console.error('THREE.AnimationObjectGroup: Different objects with the same UUID '+'detected. Clean the caches or recreate your infrastructure when reloading scenes.');}// else the object is already where we want it to be\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}},{key:\"remove\",value:function remove(){var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;var nCachedObjects=this.nCachedObjects_;for(var _i326=0,n=arguments.length;_i326!==n;++_i326){var object=arguments[_i326],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined&&index>=nCachedObjects){// move existing object into the CACHED region\nvar lastCachedIndex=nCachedObjects++,firstActiveObject=objects[lastCachedIndex];indicesByUUID[firstActiveObject.uuid]=index;objects[index]=firstActiveObject;indicesByUUID[uuid]=lastCachedIndex;objects[lastCachedIndex]=object;// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],firstActive=bindingsForPath[lastCachedIndex],binding=bindingsForPath[index];bindingsForPath[index]=firstActive;bindingsForPath[lastCachedIndex]=binding;}}}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// remove & forget\n},{key:\"uncache\",value:function uncache(){var objects=this._objects,indicesByUUID=this._indicesByUUID,bindings=this._bindings,nBindings=bindings.length;var nCachedObjects=this.nCachedObjects_,nObjects=objects.length;for(var _i327=0,n=arguments.length;_i327!==n;++_i327){var object=arguments[_i327],uuid=object.uuid,index=indicesByUUID[uuid];if(index!==undefined){delete indicesByUUID[uuid];if(index<nCachedObjects){// object is cached, shrink the CACHED region\nvar firstActiveIndex=--nCachedObjects,lastCachedObject=objects[firstActiveIndex],lastIndex=--nObjects,lastObject=objects[lastIndex];// last cached object takes this object's place\nindicesByUUID[lastCachedObject.uuid]=index;objects[index]=lastCachedObject;// last object goes to the activated slot and pop\nindicesByUUID[lastObject.uuid]=firstActiveIndex;objects[firstActiveIndex]=lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(var j=0,m=nBindings;j!==m;++j){var bindingsForPath=bindings[j],lastCached=bindingsForPath[firstActiveIndex],last=bindingsForPath[lastIndex];bindingsForPath[index]=lastCached;bindingsForPath[firstActiveIndex]=last;bindingsForPath.pop();}}else{// object is active, just swap with the last and pop\nvar _lastIndex=--nObjects,_lastObject=objects[_lastIndex];if(_lastIndex>0){indicesByUUID[_lastObject.uuid]=index;}objects[index]=_lastObject;objects.pop();// accounting is done, now do the same for all bindings\nfor(var _j17=0,_m3=nBindings;_j17!==_m3;++_j17){var _bindingsForPath=bindings[_j17];_bindingsForPath[index]=_bindingsForPath[_lastIndex];_bindingsForPath.pop();}}// cached or active\n}// if object is known\n}// for arguments\nthis.nCachedObjects_=nCachedObjects;}// Internal interface used by befriended PropertyBinding.Composite:\n},{key:\"subscribe_\",value:function subscribe_(path,parsedPath){// returns an array of bindings for the given path that is changed\n// according to the contained objects in the group\nvar indicesByPath=this._bindingsIndicesByPath;var index=indicesByPath[path];var bindings=this._bindings;if(index!==undefined)return bindings[index];var paths=this._paths,parsedPaths=this._parsedPaths,objects=this._objects,nObjects=objects.length,nCachedObjects=this.nCachedObjects_,bindingsForPath=new Array(nObjects);index=bindings.length;indicesByPath[path]=index;paths.push(path);parsedPaths.push(parsedPath);bindings.push(bindingsForPath);for(var _i328=nCachedObjects,n=objects.length;_i328!==n;++_i328){var object=objects[_i328];bindingsForPath[_i328]=new PropertyBinding(object,path,parsedPath);}return bindingsForPath;}},{key:\"unsubscribe_\",value:function unsubscribe_(path){// tells the group to forget about a property path and no longer\n// update the array previously obtained with 'subscribe_'\nvar indicesByPath=this._bindingsIndicesByPath,index=indicesByPath[path];if(index!==undefined){var paths=this._paths,parsedPaths=this._parsedPaths,bindings=this._bindings,lastBindingsIndex=bindings.length-1,lastBindings=bindings[lastBindingsIndex],lastBindingsPath=path[lastBindingsIndex];indicesByPath[lastBindingsPath]=index;bindings[index]=lastBindings;bindings.pop();parsedPaths[index]=parsedPaths[lastBindingsIndex];parsedPaths.pop();paths[index]=paths[lastBindingsIndex];paths.pop();}}}]);return AnimationObjectGroup;}();AnimationObjectGroup.prototype.isAnimationObjectGroup=true;var AnimationAction=/*#__PURE__*/function(){function AnimationAction(mixer,clip){var localRoot=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var blendMode=arguments.length>3&&arguments[3]!==undefined?arguments[3]:clip.blendMode;_classCallCheck(this,AnimationAction);this._mixer=mixer;this._clip=clip;this._localRoot=localRoot;this.blendMode=blendMode;var tracks=clip.tracks,nTracks=tracks.length,interpolants=new Array(nTracks);var interpolantSettings={endingStart:ZeroCurvatureEnding,endingEnd:ZeroCurvatureEnding};for(var _i329=0;_i329!==nTracks;++_i329){var interpolant=tracks[_i329].createInterpolant(null);interpolants[_i329]=interpolant;interpolant.settings=interpolantSettings;}this._interpolantSettings=interpolantSettings;this._interpolants=interpolants;// bound by the mixer\n// inside: PropertyMixer (managed by the mixer)\nthis._propertyBindings=new Array(nTracks);this._cacheIndex=null;// for the memory manager\nthis._byClipCacheIndex=null;// for the memory manager\nthis._timeScaleInterpolant=null;this._weightInterpolant=null;this.loop=LoopRepeat;this._loopCount=-1;// global mixer time when the action is to be started\n// it's set back to 'null' upon start of the action\nthis._startTime=null;// scaled local time of the action\n// gets clamped or wrapped to 0..clip.duration according to loop\nthis.time=0;this.timeScale=1;this._effectiveTimeScale=1;this.weight=1;this._effectiveWeight=1;this.repetitions=Infinity;// no. of repetitions when looping\nthis.paused=false;// true -> zero effective time scale\nthis.enabled=true;// false -> zero effective weight\nthis.clampWhenFinished=false;// keep feeding the last frame?\nthis.zeroSlopeAtStart=true;// for smooth interpolation w/o separate\nthis.zeroSlopeAtEnd=true;// clips for start, loop and end\n}// State & Scheduling\n_createClass(AnimationAction,[{key:\"play\",value:function play(){this._mixer._activateAction(this);return this;}},{key:\"stop\",value:function stop(){this._mixer._deactivateAction(this);return this.reset();}},{key:\"reset\",value:function reset(){this.paused=false;this.enabled=true;this.time=0;// restart clip\nthis._loopCount=-1;// forget previous loops\nthis._startTime=null;// forget scheduling\nreturn this.stopFading().stopWarping();}},{key:\"isRunning\",value:function isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this);}// return true when play has been called\n},{key:\"isScheduled\",value:function isScheduled(){return this._mixer._isActiveAction(this);}},{key:\"startAt\",value:function startAt(time){this._startTime=time;return this;}},{key:\"setLoop\",value:function setLoop(mode,repetitions){this.loop=mode;this.repetitions=repetitions;return this;}// Weight\n// set the weight stopping any scheduled fading\n// although .enabled = false yields an effective weight of zero, this\n// method does *not* change .enabled, because it would be confusing\n},{key:\"setEffectiveWeight\",value:function setEffectiveWeight(weight){this.weight=weight;// note: same logic as when updated at runtime\nthis._effectiveWeight=this.enabled?weight:0;return this.stopFading();}// return the weight considering fading and .enabled\n},{key:\"getEffectiveWeight\",value:function getEffectiveWeight(){return this._effectiveWeight;}},{key:\"fadeIn\",value:function fadeIn(duration){return this._scheduleFading(duration,0,1);}},{key:\"fadeOut\",value:function fadeOut(duration){return this._scheduleFading(duration,1,0);}},{key:\"crossFadeFrom\",value:function crossFadeFrom(fadeOutAction,duration,warp){fadeOutAction.fadeOut(duration);this.fadeIn(duration);if(warp){var fadeInDuration=this._clip.duration,fadeOutDuration=fadeOutAction._clip.duration,startEndRatio=fadeOutDuration/fadeInDuration,endStartRatio=fadeInDuration/fadeOutDuration;fadeOutAction.warp(1.0,startEndRatio,duration);this.warp(endStartRatio,1.0,duration);}return this;}},{key:\"crossFadeTo\",value:function crossFadeTo(fadeInAction,duration,warp){return fadeInAction.crossFadeFrom(this,duration,warp);}},{key:\"stopFading\",value:function stopFading(){var weightInterpolant=this._weightInterpolant;if(weightInterpolant!==null){this._weightInterpolant=null;this._mixer._takeBackControlInterpolant(weightInterpolant);}return this;}// Time Scale Control\n// set the time scale stopping any scheduled warping\n// although .paused = true yields an effective time scale of zero, this\n// method does *not* change .paused, because it would be confusing\n},{key:\"setEffectiveTimeScale\",value:function setEffectiveTimeScale(timeScale){this.timeScale=timeScale;this._effectiveTimeScale=this.paused?0:timeScale;return this.stopWarping();}// return the time scale considering warping and .paused\n},{key:\"getEffectiveTimeScale\",value:function getEffectiveTimeScale(){return this._effectiveTimeScale;}},{key:\"setDuration\",value:function setDuration(duration){this.timeScale=this._clip.duration/duration;return this.stopWarping();}},{key:\"syncWith\",value:function syncWith(action){this.time=action.time;this.timeScale=action.timeScale;return this.stopWarping();}},{key:\"halt\",value:function halt(duration){return this.warp(this._effectiveTimeScale,0,duration);}},{key:\"warp\",value:function warp(startTimeScale,endTimeScale,duration){var mixer=this._mixer,now=mixer.time,timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._timeScaleInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;times[1]=now+duration;values[0]=startTimeScale/timeScale;values[1]=endTimeScale/timeScale;return this;}},{key:\"stopWarping\",value:function stopWarping(){var timeScaleInterpolant=this._timeScaleInterpolant;if(timeScaleInterpolant!==null){this._timeScaleInterpolant=null;this._mixer._takeBackControlInterpolant(timeScaleInterpolant);}return this;}// Object Accessors\n},{key:\"getMixer\",value:function getMixer(){return this._mixer;}},{key:\"getClip\",value:function getClip(){return this._clip;}},{key:\"getRoot\",value:function getRoot(){return this._localRoot||this._mixer._root;}// Interna\n},{key:\"_update\",value:function _update(time,deltaTime,timeDirection,accuIndex){// called by the mixer\nif(!this.enabled){// call ._updateWeight() to update ._effectiveWeight\nthis._updateWeight(time);return;}var startTime=this._startTime;if(startTime!==null){// check for scheduled start of action\nvar timeRunning=(time-startTime)*timeDirection;if(timeRunning<0||timeDirection===0){return;// yet to come / don't decide when delta = 0\n}// start\nthis._startTime=null;// unschedule\ndeltaTime=timeDirection*timeRunning;}// apply time scale and advance time\ndeltaTime*=this._updateTimeScale(time);var clipTime=this._updateTime(deltaTime);// note: _updateTime may disable the action resulting in\n// an effective weight of 0\nvar weight=this._updateWeight(time);if(weight>0){var interpolants=this._interpolants;var propertyMixers=this._propertyBindings;switch(this.blendMode){case AdditiveAnimationBlendMode:for(var j=0,m=interpolants.length;j!==m;++j){interpolants[j].evaluate(clipTime);propertyMixers[j].accumulateAdditive(weight);}break;case NormalAnimationBlendMode:default:for(var _j18=0,_m4=interpolants.length;_j18!==_m4;++_j18){interpolants[_j18].evaluate(clipTime);propertyMixers[_j18].accumulate(accuIndex,weight);}}}}},{key:\"_updateWeight\",value:function _updateWeight(time){var weight=0;if(this.enabled){weight=this.weight;var interpolant=this._weightInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];weight*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopFading();if(interpolantValue===0){// faded out, disable\nthis.enabled=false;}}}}this._effectiveWeight=weight;return weight;}},{key:\"_updateTimeScale\",value:function _updateTimeScale(time){var timeScale=0;if(!this.paused){timeScale=this.timeScale;var interpolant=this._timeScaleInterpolant;if(interpolant!==null){var interpolantValue=interpolant.evaluate(time)[0];timeScale*=interpolantValue;if(time>interpolant.parameterPositions[1]){this.stopWarping();if(timeScale===0){// motion has halted, pause\nthis.paused=true;}else{// warp done - apply final time scale\nthis.timeScale=timeScale;}}}}this._effectiveTimeScale=timeScale;return timeScale;}},{key:\"_updateTime\",value:function _updateTime(deltaTime){var duration=this._clip.duration;var loop=this.loop;var time=this.time+deltaTime;var loopCount=this._loopCount;var pingPong=loop===LoopPingPong;if(deltaTime===0){if(loopCount===-1)return time;return pingPong&&(loopCount&1)===1?duration-time:time;}if(loop===LoopOnce){if(loopCount===-1){// just started\nthis._loopCount=0;this._setEndings(true,true,false);}handle_stop:{if(time>=duration){time=duration;}else if(time<0){time=0;}else{this.time=time;break handle_stop;}if(this.clampWhenFinished)this.paused=true;else this.enabled=false;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime<0?-1:1});}}else{// repetitive Repeat or PingPong\nif(loopCount===-1){// just started\nif(deltaTime>=0){loopCount=0;this._setEndings(true,this.repetitions===0,pingPong);}else{// when looping in reverse direction, the initial\n// transition through zero counts as a repetition,\n// so leave loopCount at -1\nthis._setEndings(this.repetitions===0,true,pingPong);}}if(time>=duration||time<0){// wrap around\nvar loopDelta=Math.floor(time/duration);// signed\ntime-=duration*loopDelta;loopCount+=Math.abs(loopDelta);var pending=this.repetitions-loopCount;if(pending<=0){// have to stop (switch state, clamp time, fire event)\nif(this.clampWhenFinished)this.paused=true;else this.enabled=false;time=deltaTime>0?duration:0;this.time=time;this._mixer.dispatchEvent({type:'finished',action:this,direction:deltaTime>0?1:-1});}else{// keep running\nif(pending===1){// entering the last round\nvar atStart=deltaTime<0;this._setEndings(atStart,!atStart,pingPong);}else{this._setEndings(false,false,pingPong);}this._loopCount=loopCount;this.time=time;this._mixer.dispatchEvent({type:'loop',action:this,loopDelta:loopDelta});}}else{this.time=time;}if(pingPong&&(loopCount&1)===1){// invert time for the \"pong round\"\nreturn duration-time;}}return time;}},{key:\"_setEndings\",value:function _setEndings(atStart,atEnd,pingPong){var settings=this._interpolantSettings;if(pingPong){settings.endingStart=ZeroSlopeEnding;settings.endingEnd=ZeroSlopeEnding;}else{// assuming for LoopOnce atStart == atEnd == true\nif(atStart){settings.endingStart=this.zeroSlopeAtStart?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingStart=WrapAroundEnding;}if(atEnd){settings.endingEnd=this.zeroSlopeAtEnd?ZeroSlopeEnding:ZeroCurvatureEnding;}else{settings.endingEnd=WrapAroundEnding;}}}},{key:\"_scheduleFading\",value:function _scheduleFading(duration,weightNow,weightThen){var mixer=this._mixer,now=mixer.time;var interpolant=this._weightInterpolant;if(interpolant===null){interpolant=mixer._lendControlInterpolant();this._weightInterpolant=interpolant;}var times=interpolant.parameterPositions,values=interpolant.sampleValues;times[0]=now;values[0]=weightNow;times[1]=now+duration;values[1]=weightThen;return this;}}]);return AnimationAction;}();var AnimationMixer=/*#__PURE__*/function(_EventDispatcher7){_inherits(AnimationMixer,_EventDispatcher7);var _super136=_createSuper(AnimationMixer);function AnimationMixer(root){var _this106;_classCallCheck(this,AnimationMixer);_this106=_super136.call(this);_this106._root=root;_this106._initMemoryManager();_this106._accuIndex=0;_this106.time=0;_this106.timeScale=1.0;return _this106;}_createClass(AnimationMixer,[{key:\"_bindAction\",value:function _bindAction(action,prototypeAction){var root=action._localRoot||this._root,tracks=action._clip.tracks,nTracks=tracks.length,bindings=action._propertyBindings,interpolants=action._interpolants,rootUuid=root.uuid,bindingsByRoot=this._bindingsByRootAndName;var bindingsByName=bindingsByRoot[rootUuid];if(bindingsByName===undefined){bindingsByName={};bindingsByRoot[rootUuid]=bindingsByName;}for(var _i330=0;_i330!==nTracks;++_i330){var track=tracks[_i330],trackName=track.name;var binding=bindingsByName[trackName];if(binding!==undefined){bindings[_i330]=binding;}else{binding=bindings[_i330];if(binding!==undefined){// existing binding, make sure the cache knows\nif(binding._cacheIndex===null){++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);}continue;}var path=prototypeAction&&prototypeAction._propertyBindings[_i330].binding.parsedPath;binding=new PropertyMixer(PropertyBinding.create(root,trackName,path),track.ValueTypeName,track.getValueSize());++binding.referenceCount;this._addInactiveBinding(binding,rootUuid,trackName);bindings[_i330]=binding;}interpolants[_i330].resultBuffer=binding.buffer;}}},{key:\"_activateAction\",value:function _activateAction(action){if(!this._isActiveAction(action)){if(action._cacheIndex===null){// this action has been forgotten by the cache, but the user\n// appears to be still using it -> rebind\nvar rootUuid=(action._localRoot||this._root).uuid,clipUuid=action._clip.uuid,actionsForClip=this._actionsByClip[clipUuid];this._bindAction(action,actionsForClip&&actionsForClip.knownActions[0]);this._addInactiveAction(action,clipUuid,rootUuid);}var bindings=action._propertyBindings;// increment reference counts / sort out state\nfor(var _i331=0,n=bindings.length;_i331!==n;++_i331){var binding=bindings[_i331];if(binding.useCount++===0){this._lendBinding(binding);binding.saveOriginalState();}}this._lendAction(action);}}},{key:\"_deactivateAction\",value:function _deactivateAction(action){if(this._isActiveAction(action)){var bindings=action._propertyBindings;// decrement reference counts / sort out state\nfor(var _i332=0,n=bindings.length;_i332!==n;++_i332){var binding=bindings[_i332];if(--binding.useCount===0){binding.restoreOriginalState();this._takeBackBinding(binding);}}this._takeBackAction(action);}}// Memory manager\n},{key:\"_initMemoryManager\",value:function _initMemoryManager(){this._actions=[];// 'nActiveActions' followed by inactive ones\nthis._nActiveActions=0;this._actionsByClip={};// inside:\n// {\n// \tknownActions: Array< AnimationAction > - used as prototypes\n// \tactionByRoot: AnimationAction - lookup\n// }\nthis._bindings=[];// 'nActiveBindings' followed by inactive ones\nthis._nActiveBindings=0;this._bindingsByRootAndName={};// inside: Map< name, PropertyMixer >\nthis._controlInterpolants=[];// same game as above\nthis._nActiveControlInterpolants=0;var scope=this;this.stats={actions:{get total(){return scope._actions.length;},get inUse(){return scope._nActiveActions;}},bindings:{get total(){return scope._bindings.length;},get inUse(){return scope._nActiveBindings;}},controlInterpolants:{get total(){return scope._controlInterpolants.length;},get inUse(){return scope._nActiveControlInterpolants;}}};}// Memory management for AnimationAction objects\n},{key:\"_isActiveAction\",value:function _isActiveAction(action){var index=action._cacheIndex;return index!==null&&index<this._nActiveActions;}},{key:\"_addInactiveAction\",value:function _addInactiveAction(action,clipUuid,rootUuid){var actions=this._actions,actionsByClip=this._actionsByClip;var actionsForClip=actionsByClip[clipUuid];if(actionsForClip===undefined){actionsForClip={knownActions:[action],actionByRoot:{}};action._byClipCacheIndex=0;actionsByClip[clipUuid]=actionsForClip;}else{var knownActions=actionsForClip.knownActions;action._byClipCacheIndex=knownActions.length;knownActions.push(action);}action._cacheIndex=actions.length;actions.push(action);actionsForClip.actionByRoot[rootUuid]=action;}},{key:\"_removeInactiveAction\",value:function _removeInactiveAction(action){var actions=this._actions,lastInactiveAction=actions[actions.length-1],cacheIndex=action._cacheIndex;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();action._cacheIndex=null;var clipUuid=action._clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid],knownActionsForClip=actionsForClip.knownActions,lastKnownAction=knownActionsForClip[knownActionsForClip.length-1],byClipCacheIndex=action._byClipCacheIndex;lastKnownAction._byClipCacheIndex=byClipCacheIndex;knownActionsForClip[byClipCacheIndex]=lastKnownAction;knownActionsForClip.pop();action._byClipCacheIndex=null;var actionByRoot=actionsForClip.actionByRoot,rootUuid=(action._localRoot||this._root).uuid;delete actionByRoot[rootUuid];if(knownActionsForClip.length===0){delete actionsByClip[clipUuid];}this._removeInactiveBindingsForAction(action);}},{key:\"_removeInactiveBindingsForAction\",value:function _removeInactiveBindingsForAction(action){var bindings=action._propertyBindings;for(var _i333=0,n=bindings.length;_i333!==n;++_i333){var binding=bindings[_i333];if(--binding.referenceCount===0){this._removeInactiveBinding(binding);}}}},{key:\"_lendAction\",value:function _lendAction(action){// [ active actions |  inactive actions  ]\n// [  active actions >| inactive actions ]\n//                 s        a\n//                  <-swap->\n//                 a        s\nvar actions=this._actions,prevIndex=action._cacheIndex,lastActiveIndex=this._nActiveActions++,firstInactiveAction=actions[lastActiveIndex];action._cacheIndex=lastActiveIndex;actions[lastActiveIndex]=action;firstInactiveAction._cacheIndex=prevIndex;actions[prevIndex]=firstInactiveAction;}},{key:\"_takeBackAction\",value:function _takeBackAction(action){// [  active actions  | inactive actions ]\n// [ active actions |< inactive actions  ]\n//        a        s\n//         <-swap->\n//        s        a\nvar actions=this._actions,prevIndex=action._cacheIndex,firstInactiveIndex=--this._nActiveActions,lastActiveAction=actions[firstInactiveIndex];action._cacheIndex=firstInactiveIndex;actions[firstInactiveIndex]=action;lastActiveAction._cacheIndex=prevIndex;actions[prevIndex]=lastActiveAction;}// Memory management for PropertyMixer objects\n},{key:\"_addInactiveBinding\",value:function _addInactiveBinding(binding,rootUuid,trackName){var bindingsByRoot=this._bindingsByRootAndName,bindings=this._bindings;var bindingByName=bindingsByRoot[rootUuid];if(bindingByName===undefined){bindingByName={};bindingsByRoot[rootUuid]=bindingByName;}bindingByName[trackName]=binding;binding._cacheIndex=bindings.length;bindings.push(binding);}},{key:\"_removeInactiveBinding\",value:function _removeInactiveBinding(binding){var bindings=this._bindings,propBinding=binding.binding,rootUuid=propBinding.rootNode.uuid,trackName=propBinding.path,bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid],lastInactiveBinding=bindings[bindings.length-1],cacheIndex=binding._cacheIndex;lastInactiveBinding._cacheIndex=cacheIndex;bindings[cacheIndex]=lastInactiveBinding;bindings.pop();delete bindingByName[trackName];if(Object.keys(bindingByName).length===0){delete bindingsByRoot[rootUuid];}}},{key:\"_lendBinding\",value:function _lendBinding(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,lastActiveIndex=this._nActiveBindings++,firstInactiveBinding=bindings[lastActiveIndex];binding._cacheIndex=lastActiveIndex;bindings[lastActiveIndex]=binding;firstInactiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=firstInactiveBinding;}},{key:\"_takeBackBinding\",value:function _takeBackBinding(binding){var bindings=this._bindings,prevIndex=binding._cacheIndex,firstInactiveIndex=--this._nActiveBindings,lastActiveBinding=bindings[firstInactiveIndex];binding._cacheIndex=firstInactiveIndex;bindings[firstInactiveIndex]=binding;lastActiveBinding._cacheIndex=prevIndex;bindings[prevIndex]=lastActiveBinding;}// Memory management of Interpolants for weight and time scale\n},{key:\"_lendControlInterpolant\",value:function _lendControlInterpolant(){var interpolants=this._controlInterpolants,lastActiveIndex=this._nActiveControlInterpolants++;var interpolant=interpolants[lastActiveIndex];if(interpolant===undefined){interpolant=new LinearInterpolant(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer);interpolant.__cacheIndex=lastActiveIndex;interpolants[lastActiveIndex]=interpolant;}return interpolant;}},{key:\"_takeBackControlInterpolant\",value:function _takeBackControlInterpolant(interpolant){var interpolants=this._controlInterpolants,prevIndex=interpolant.__cacheIndex,firstInactiveIndex=--this._nActiveControlInterpolants,lastActiveInterpolant=interpolants[firstInactiveIndex];interpolant.__cacheIndex=firstInactiveIndex;interpolants[firstInactiveIndex]=interpolant;lastActiveInterpolant.__cacheIndex=prevIndex;interpolants[prevIndex]=lastActiveInterpolant;}// return an action for a clip optionally using a custom root target\n// object (this method allocates a lot of dynamic memory in case a\n// previously unknown clip/root combination is specified)\n},{key:\"clipAction\",value:function clipAction(clip,optionalRoot,blendMode){var root=optionalRoot||this._root,rootUuid=root.uuid;var clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip;var clipUuid=clipObject!==null?clipObject.uuid:clip;var actionsForClip=this._actionsByClip[clipUuid];var prototypeAction=null;if(blendMode===undefined){if(clipObject!==null){blendMode=clipObject.blendMode;}else{blendMode=NormalAnimationBlendMode;}}if(actionsForClip!==undefined){var existingAction=actionsForClip.actionByRoot[rootUuid];if(existingAction!==undefined&&existingAction.blendMode===blendMode){return existingAction;}// we know the clip, so we don't have to parse all\n// the bindings again but can just copy\nprototypeAction=actionsForClip.knownActions[0];// also, take the clip from the prototype action\nif(clipObject===null)clipObject=prototypeAction._clip;}// clip must be known when specified via string\nif(clipObject===null)return null;// allocate all resources required to run it\nvar newAction=new AnimationAction(this,clipObject,optionalRoot,blendMode);this._bindAction(newAction,prototypeAction);// and make the action known to the memory manager\nthis._addInactiveAction(newAction,clipUuid,rootUuid);return newAction;}// get an existing action\n},{key:\"existingAction\",value:function existingAction(clip,optionalRoot){var root=optionalRoot||this._root,rootUuid=root.uuid,clipObject=typeof clip==='string'?AnimationClip.findByName(root,clip):clip,clipUuid=clipObject?clipObject.uuid:clip,actionsForClip=this._actionsByClip[clipUuid];if(actionsForClip!==undefined){return actionsForClip.actionByRoot[rootUuid]||null;}return null;}// deactivates all previously scheduled actions\n},{key:\"stopAllAction\",value:function stopAllAction(){var actions=this._actions,nActions=this._nActiveActions;for(var _i334=nActions-1;_i334>=0;--_i334){actions[_i334].stop();}return this;}// advance the time and update apply the animation\n},{key:\"update\",value:function update(deltaTime){deltaTime*=this.timeScale;var actions=this._actions,nActions=this._nActiveActions,time=this.time+=deltaTime,timeDirection=Math.sign(deltaTime),accuIndex=this._accuIndex^=1;// run active actions\nfor(var _i335=0;_i335!==nActions;++_i335){var action=actions[_i335];action._update(time,deltaTime,timeDirection,accuIndex);}// update scene graph\nvar bindings=this._bindings,nBindings=this._nActiveBindings;for(var _i336=0;_i336!==nBindings;++_i336){bindings[_i336].apply(accuIndex);}return this;}// Allows you to seek to a specific time in an animation.\n},{key:\"setTime\",value:function setTime(timeInSeconds){this.time=0;// Zero out time attribute for AnimationMixer object;\nfor(var _i337=0;_i337<this._actions.length;_i337++){this._actions[_i337].time=0;// Zero out time attribute for all associated AnimationAction objects.\n}return this.update(timeInSeconds);// Update used to set exact time. Returns \"this\" AnimationMixer object.\n}// return this mixer's root target object\n},{key:\"getRoot\",value:function getRoot(){return this._root;}// free all resources specific to a particular clip\n},{key:\"uncacheClip\",value:function uncacheClip(clip){var actions=this._actions,clipUuid=clip.uuid,actionsByClip=this._actionsByClip,actionsForClip=actionsByClip[clipUuid];if(actionsForClip!==undefined){// note: just calling _removeInactiveAction would mess up the\n// iteration state and also require updating the state we can\n// just throw away\nvar actionsToRemove=actionsForClip.knownActions;for(var _i338=0,n=actionsToRemove.length;_i338!==n;++_i338){var action=actionsToRemove[_i338];this._deactivateAction(action);var cacheIndex=action._cacheIndex,lastInactiveAction=actions[actions.length-1];action._cacheIndex=null;action._byClipCacheIndex=null;lastInactiveAction._cacheIndex=cacheIndex;actions[cacheIndex]=lastInactiveAction;actions.pop();this._removeInactiveBindingsForAction(action);}delete actionsByClip[clipUuid];}}// free all resources specific to a particular root target object\n},{key:\"uncacheRoot\",value:function uncacheRoot(root){var rootUuid=root.uuid,actionsByClip=this._actionsByClip;for(var clipUuid in actionsByClip){var actionByRoot=actionsByClip[clipUuid].actionByRoot,action=actionByRoot[rootUuid];if(action!==undefined){this._deactivateAction(action);this._removeInactiveAction(action);}}var bindingsByRoot=this._bindingsByRootAndName,bindingByName=bindingsByRoot[rootUuid];if(bindingByName!==undefined){for(var trackName in bindingByName){var binding=bindingByName[trackName];binding.restoreOriginalState();this._removeInactiveBinding(binding);}}}// remove a targeted clip from the cache\n},{key:\"uncacheAction\",value:function uncacheAction(clip,optionalRoot){var action=this.existingAction(clip,optionalRoot);if(action!==null){this._deactivateAction(action);this._removeInactiveAction(action);}}}]);return AnimationMixer;}(EventDispatcher);AnimationMixer.prototype._controlInterpolantsResultBuffer=new Float32Array(1);var Uniform=/*#__PURE__*/function(){function Uniform(value){_classCallCheck(this,Uniform);if(typeof value==='string'){console.warn('THREE.Uniform: Type parameter is no longer needed.');value=arguments[1];}this.value=value;}_createClass(Uniform,[{key:\"clone\",value:function clone(){return new Uniform(this.value.clone===undefined?this.value:this.value.clone());}}]);return Uniform;}();var InstancedInterleavedBuffer=/*#__PURE__*/function(_InterleavedBuffer){_inherits(InstancedInterleavedBuffer,_InterleavedBuffer);var _super137=_createSuper(InstancedInterleavedBuffer);function InstancedInterleavedBuffer(array,stride){var _this107;var meshPerAttribute=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;_classCallCheck(this,InstancedInterleavedBuffer);_this107=_super137.call(this,array,stride);_this107.meshPerAttribute=meshPerAttribute;return _this107;}_createClass(InstancedInterleavedBuffer,[{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(InstancedInterleavedBuffer.prototype),\"copy\",this).call(this,source);this.meshPerAttribute=source.meshPerAttribute;return this;}},{key:\"clone\",value:function clone(data){var ib=_get(_getPrototypeOf(InstancedInterleavedBuffer.prototype),\"clone\",this).call(this,data);ib.meshPerAttribute=this.meshPerAttribute;return ib;}},{key:\"toJSON\",value:function toJSON(data){var json=_get(_getPrototypeOf(InstancedInterleavedBuffer.prototype),\"toJSON\",this).call(this,data);json.isInstancedInterleavedBuffer=true;json.meshPerAttribute=this.meshPerAttribute;return json;}}]);return InstancedInterleavedBuffer;}(InterleavedBuffer);InstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer=true;var GLBufferAttribute=/*#__PURE__*/function(){function GLBufferAttribute(buffer,type,itemSize,elementSize,count){_classCallCheck(this,GLBufferAttribute);this.buffer=buffer;this.type=type;this.itemSize=itemSize;this.elementSize=elementSize;this.count=count;this.version=0;}_createClass(GLBufferAttribute,[{key:\"needsUpdate\",set:function set(value){if(value===true)this.version++;}},{key:\"setBuffer\",value:function setBuffer(buffer){this.buffer=buffer;return this;}},{key:\"setType\",value:function setType(type,elementSize){this.type=type;this.elementSize=elementSize;return this;}},{key:\"setItemSize\",value:function setItemSize(itemSize){this.itemSize=itemSize;return this;}},{key:\"setCount\",value:function setCount(count){this.count=count;return this;}}]);return GLBufferAttribute;}();GLBufferAttribute.prototype.isGLBufferAttribute=true;var Raycaster=/*#__PURE__*/function(){function Raycaster(origin,direction){var near=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;var far=arguments.length>3&&arguments[3]!==undefined?arguments[3]:Infinity;_classCallCheck(this,Raycaster);this.ray=new Ray(origin,direction);// direction is assumed to be normalized (for accurate distance calculations)\nthis.near=near;this.far=far;this.camera=null;this.layers=new Layers();this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}};}_createClass(Raycaster,[{key:\"set\",value:function set(origin,direction){// direction is assumed to be normalized (for accurate distance calculations)\nthis.ray.set(origin,direction);}},{key:\"setFromCamera\",value:function setFromCamera(coords,camera){if(camera&&camera.isPerspectiveCamera){this.ray.origin.setFromMatrixPosition(camera.matrixWorld);this.ray.direction.set(coords.x,coords.y,0.5).unproject(camera).sub(this.ray.origin).normalize();this.camera=camera;}else if(camera&&camera.isOrthographicCamera){this.ray.origin.set(coords.x,coords.y,(camera.near+camera.far)/(camera.near-camera.far)).unproject(camera);// set origin in plane of camera\nthis.ray.direction.set(0,0,-1).transformDirection(camera.matrixWorld);this.camera=camera;}else{console.error('THREE.Raycaster: Unsupported camera type: '+camera.type);}}},{key:\"intersectObject\",value:function intersectObject(object){var recursive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var intersects=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];_intersectObject(object,this,intersects,recursive);intersects.sort(ascSort);return intersects;}},{key:\"intersectObjects\",value:function intersectObjects(objects){var recursive=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;var intersects=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];for(var _i339=0,l=objects.length;_i339<l;_i339++){_intersectObject(objects[_i339],this,intersects,recursive);}intersects.sort(ascSort);return intersects;}}]);return Raycaster;}();function ascSort(a,b){return a.distance-b.distance;}function _intersectObject(object,raycaster,intersects,recursive){if(object.layers.test(raycaster.layers)){object.raycast(raycaster,intersects);}if(recursive===true){var children=object.children;for(var _i340=0,l=children.length;_i340<l;_i340++){_intersectObject(children[_i340],raycaster,intersects,true);}}}/**\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\r\n * The azimuthal angle (theta) is measured from the positive z-axis.\r\n */var Spherical=/*#__PURE__*/function(){function Spherical(){var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var phi=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var theta=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;_classCallCheck(this,Spherical);this.radius=radius;this.phi=phi;// polar angle\nthis.theta=theta;// azimuthal angle\nreturn this;}_createClass(Spherical,[{key:\"set\",value:function set(radius,phi,theta){this.radius=radius;this.phi=phi;this.theta=theta;return this;}},{key:\"copy\",value:function copy(other){this.radius=other.radius;this.phi=other.phi;this.theta=other.theta;return this;}// restrict phi to be betwee EPS and PI-EPS\n},{key:\"makeSafe\",value:function makeSafe(){var EPS=0.000001;this.phi=Math.max(EPS,Math.min(Math.PI-EPS,this.phi));return this;}},{key:\"setFromVector3\",value:function setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}},{key:\"setFromCartesianCoords\",value:function setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+y*y+z*z);if(this.radius===0){this.theta=0;this.phi=0;}else{this.theta=Math.atan2(x,z);this.phi=Math.acos(clamp(y/this.radius,-1,1));}return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Spherical;}();/**\r\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\r\n */var Cylindrical=/*#__PURE__*/function(){function Cylindrical(){var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var theta=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;var y=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;_classCallCheck(this,Cylindrical);this.radius=radius;// distance from the origin to a point in the x-z plane\nthis.theta=theta;// counterclockwise angle in the x-z plane measured in radians from the positive z-axis\nthis.y=y;// height above the x-z plane\nreturn this;}_createClass(Cylindrical,[{key:\"set\",value:function set(radius,theta,y){this.radius=radius;this.theta=theta;this.y=y;return this;}},{key:\"copy\",value:function copy(other){this.radius=other.radius;this.theta=other.theta;this.y=other.y;return this;}},{key:\"setFromVector3\",value:function setFromVector3(v){return this.setFromCartesianCoords(v.x,v.y,v.z);}},{key:\"setFromCartesianCoords\",value:function setFromCartesianCoords(x,y,z){this.radius=Math.sqrt(x*x+z*z);this.theta=Math.atan2(x,z);this.y=y;return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Cylindrical;}();var _vector$4=/*@__PURE__*/new Vector2();var Box2=/*#__PURE__*/function(){function Box2(){var min=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector2(+Infinity,+Infinity);var max=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector2(-Infinity,-Infinity);_classCallCheck(this,Box2);this.min=min;this.max=max;}_createClass(Box2,[{key:\"set\",value:function set(min,max){this.min.copy(min);this.max.copy(max);return this;}},{key:\"setFromPoints\",value:function setFromPoints(points){this.makeEmpty();for(var _i341=0,il=points.length;_i341<il;_i341++){this.expandByPoint(points[_i341]);}return this;}},{key:\"setFromCenterAndSize\",value:function setFromCenterAndSize(center,size){var halfSize=_vector$4.copy(size).multiplyScalar(0.5);this.min.copy(center).sub(halfSize);this.max.copy(center).add(halfSize);return this;}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}},{key:\"copy\",value:function copy(box){this.min.copy(box.min);this.max.copy(box.max);return this;}},{key:\"makeEmpty\",value:function makeEmpty(){this.min.x=this.min.y=+Infinity;this.max.x=this.max.y=-Infinity;return this;}},{key:\"isEmpty\",value:function isEmpty(){// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\nreturn this.max.x<this.min.x||this.max.y<this.min.y;}},{key:\"getCenter\",value:function getCenter(target){return this.isEmpty()?target.set(0,0):target.addVectors(this.min,this.max).multiplyScalar(0.5);}},{key:\"getSize\",value:function getSize(target){return this.isEmpty()?target.set(0,0):target.subVectors(this.max,this.min);}},{key:\"expandByPoint\",value:function expandByPoint(point){this.min.min(point);this.max.max(point);return this;}},{key:\"expandByVector\",value:function expandByVector(vector){this.min.sub(vector);this.max.add(vector);return this;}},{key:\"expandByScalar\",value:function expandByScalar(scalar){this.min.addScalar(-scalar);this.max.addScalar(scalar);return this;}},{key:\"containsPoint\",value:function containsPoint(point){return point.x<this.min.x||point.x>this.max.x||point.y<this.min.y||point.y>this.max.y?false:true;}},{key:\"containsBox\",value:function containsBox(box){return this.min.x<=box.min.x&&box.max.x<=this.max.x&&this.min.y<=box.min.y&&box.max.y<=this.max.y;}},{key:\"getParameter\",value:function getParameter(point,target){// This can potentially have a divide by zero if the box\n// has a size dimension of 0.\nreturn target.set((point.x-this.min.x)/(this.max.x-this.min.x),(point.y-this.min.y)/(this.max.y-this.min.y));}},{key:\"intersectsBox\",value:function intersectsBox(box){// using 4 splitting planes to rule out intersections\nreturn box.max.x<this.min.x||box.min.x>this.max.x||box.max.y<this.min.y||box.min.y>this.max.y?false:true;}},{key:\"clampPoint\",value:function clampPoint(point,target){return target.copy(point).clamp(this.min,this.max);}},{key:\"distanceToPoint\",value:function distanceToPoint(point){var clampedPoint=_vector$4.copy(point).clamp(this.min,this.max);return clampedPoint.sub(point).length();}},{key:\"intersect\",value:function intersect(box){this.min.max(box.min);this.max.min(box.max);return this;}},{key:\"union\",value:function union(box){this.min.min(box.min);this.max.max(box.max);return this;}},{key:\"translate\",value:function translate(offset){this.min.add(offset);this.max.add(offset);return this;}},{key:\"equals\",value:function equals(box){return box.min.equals(this.min)&&box.max.equals(this.max);}}]);return Box2;}();Box2.prototype.isBox2=true;var _startP=/*@__PURE__*/new Vector3();var _startEnd=/*@__PURE__*/new Vector3();var Line3=/*#__PURE__*/function(){function Line3(){var start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3();var end=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3();_classCallCheck(this,Line3);this.start=start;this.end=end;}_createClass(Line3,[{key:\"set\",value:function set(start,end){this.start.copy(start);this.end.copy(end);return this;}},{key:\"copy\",value:function copy(line){this.start.copy(line.start);this.end.copy(line.end);return this;}},{key:\"getCenter\",value:function getCenter(target){return target.addVectors(this.start,this.end).multiplyScalar(0.5);}},{key:\"delta\",value:function delta(target){return target.subVectors(this.end,this.start);}},{key:\"distanceSq\",value:function distanceSq(){return this.start.distanceToSquared(this.end);}},{key:\"distance\",value:function distance(){return this.start.distanceTo(this.end);}},{key:\"at\",value:function at(t,target){return this.delta(target).multiplyScalar(t).add(this.start);}},{key:\"closestPointToPointParameter\",value:function closestPointToPointParameter(point,clampToLine){_startP.subVectors(point,this.start);_startEnd.subVectors(this.end,this.start);var startEnd2=_startEnd.dot(_startEnd);var startEnd_startP=_startEnd.dot(_startP);var t=startEnd_startP/startEnd2;if(clampToLine){t=clamp(t,0,1);}return t;}},{key:\"closestPointToPoint\",value:function closestPointToPoint(point,clampToLine,target){var t=this.closestPointToPointParameter(point,clampToLine);return this.delta(target).multiplyScalar(t).add(this.start);}},{key:\"applyMatrix4\",value:function applyMatrix4(matrix){this.start.applyMatrix4(matrix);this.end.applyMatrix4(matrix);return this;}},{key:\"equals\",value:function equals(line){return line.start.equals(this.start)&&line.end.equals(this.end);}},{key:\"clone\",value:function clone(){return new this.constructor().copy(this);}}]);return Line3;}();var ImmediateRenderObject=/*#__PURE__*/function(_Object3D14){_inherits(ImmediateRenderObject,_Object3D14);var _super138=_createSuper(ImmediateRenderObject);function ImmediateRenderObject(material){var _this108;_classCallCheck(this,ImmediateRenderObject);_this108=_super138.call(this);_this108.material=material;_this108.render=function/* renderCallback */(){};_this108.hasPositions=false;_this108.hasNormals=false;_this108.hasColors=false;_this108.hasUvs=false;_this108.positionArray=null;_this108.normalArray=null;_this108.colorArray=null;_this108.uvArray=null;_this108.count=0;return _this108;}return _createClass(ImmediateRenderObject);}(Object3D);ImmediateRenderObject.prototype.isImmediateRenderObject=true;var _vector$3=/*@__PURE__*/new Vector3();var SpotLightHelper=/*#__PURE__*/function(_Object3D15){_inherits(SpotLightHelper,_Object3D15);var _super139=_createSuper(SpotLightHelper);function SpotLightHelper(light,color){var _this109;_classCallCheck(this,SpotLightHelper);_this109=_super139.call(this);_this109.light=light;_this109.light.updateMatrixWorld();_this109.matrix=light.matrixWorld;_this109.matrixAutoUpdate=false;_this109.color=color;var geometry=new BufferGeometry();var positions=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(var _i342=0,j=1,l=32;_i342<l;_i342++,j++){var p1=_i342/l*Math.PI*2;var p2=j/l*Math.PI*2;positions.push(Math.cos(p1),Math.sin(p1),1,Math.cos(p2),Math.sin(p2),1);}geometry.setAttribute('position',new Float32BufferAttribute(positions,3));var material=new LineBasicMaterial({fog:false,toneMapped:false});_this109.cone=new LineSegments(geometry,material);_this109.add(_this109.cone);_this109.update();return _this109;}_createClass(SpotLightHelper,[{key:\"dispose\",value:function dispose(){this.cone.geometry.dispose();this.cone.material.dispose();}},{key:\"update\",value:function update(){this.light.updateMatrixWorld();var coneLength=this.light.distance?this.light.distance:1000;var coneWidth=coneLength*Math.tan(this.light.angle);this.cone.scale.set(coneWidth,coneWidth,coneLength);_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);this.cone.lookAt(_vector$3);if(this.color!==undefined){this.cone.material.color.set(this.color);}else{this.cone.material.color.copy(this.light.color);}}}]);return SpotLightHelper;}(Object3D);var _vector$2=/*@__PURE__*/new Vector3();var _boneMatrix=/*@__PURE__*/new Matrix4();var _matrixWorldInv=/*@__PURE__*/new Matrix4();var SkeletonHelper=/*#__PURE__*/function(_LineSegments){_inherits(SkeletonHelper,_LineSegments);var _super140=_createSuper(SkeletonHelper);function SkeletonHelper(object){var _this110;_classCallCheck(this,SkeletonHelper);var bones=getBoneList(object);var geometry=new BufferGeometry();var vertices=[];var colors=[];var color1=new Color(0,0,1);var color2=new Color(0,1,0);for(var _i343=0;_i343<bones.length;_i343++){var bone=bones[_i343];if(bone.parent&&bone.parent.isBone){vertices.push(0,0,0);vertices.push(0,0,0);colors.push(color1.r,color1.g,color1.b);colors.push(color2.r,color2.g,color2.b);}}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,depthTest:false,depthWrite:false,toneMapped:false,transparent:true});_this110=_super140.call(this,geometry,material);_this110.type='SkeletonHelper';_this110.isSkeletonHelper=true;_this110.root=object;_this110.bones=bones;_this110.matrix=object.matrixWorld;_this110.matrixAutoUpdate=false;return _this110;}_createClass(SkeletonHelper,[{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){var bones=this.bones;var geometry=this.geometry;var position=geometry.getAttribute('position');_matrixWorldInv.copy(this.root.matrixWorld).invert();for(var _i344=0,j=0;_i344<bones.length;_i344++){var bone=bones[_i344];if(bone.parent&&bone.parent.isBone){_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j,_vector$2.x,_vector$2.y,_vector$2.z);_boneMatrix.multiplyMatrices(_matrixWorldInv,bone.parent.matrixWorld);_vector$2.setFromMatrixPosition(_boneMatrix);position.setXYZ(j+1,_vector$2.x,_vector$2.y,_vector$2.z);j+=2;}}geometry.getAttribute('position').needsUpdate=true;_get(_getPrototypeOf(SkeletonHelper.prototype),\"updateMatrixWorld\",this).call(this,force);}}]);return SkeletonHelper;}(LineSegments);function getBoneList(object){var boneList=[];if(object&&object.isBone){boneList.push(object);}for(var _i345=0;_i345<object.children.length;_i345++){boneList.push.apply(boneList,getBoneList(object.children[_i345]));}return boneList;}var PointLightHelper=/*#__PURE__*/function(_Mesh3){_inherits(PointLightHelper,_Mesh3);var _super141=_createSuper(PointLightHelper);function PointLightHelper(light,sphereSize,color){var _this111;_classCallCheck(this,PointLightHelper);var geometry=new SphereGeometry(sphereSize,4,2);var material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});_this111=_super141.call(this,geometry,material);_this111.light=light;_this111.light.updateMatrixWorld();_this111.color=color;_this111.type='PointLightHelper';_this111.matrix=_this111.light.matrixWorld;_this111.matrixAutoUpdate=false;_this111.update();/*\r\n\t// TODO: delete this comment?\r\n\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\r\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tconst d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/return _this111;}_createClass(PointLightHelper,[{key:\"dispose\",value:function dispose(){this.geometry.dispose();this.material.dispose();}},{key:\"update\",value:function update(){if(this.color!==undefined){this.material.color.set(this.color);}else{this.material.color.copy(this.light.color);}/*\r\n\t\tconst d = this.light.distance;\r\n\r\n\t\tif ( d === 0.0 ) {\r\n\r\n\t\t\tthis.lightDistance.visible = false;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.lightDistance.visible = true;\r\n\t\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t\t}\r\n\t\t*/}}]);return PointLightHelper;}(Mesh);var _vector$1=/*@__PURE__*/new Vector3();var _color1=/*@__PURE__*/new Color();var _color2=/*@__PURE__*/new Color();var HemisphereLightHelper=/*#__PURE__*/function(_Object3D16){_inherits(HemisphereLightHelper,_Object3D16);var _super142=_createSuper(HemisphereLightHelper);function HemisphereLightHelper(light,size,color){var _this112;_classCallCheck(this,HemisphereLightHelper);_this112=_super142.call(this);_this112.light=light;_this112.light.updateMatrixWorld();_this112.matrix=light.matrixWorld;_this112.matrixAutoUpdate=false;_this112.color=color;var geometry=new OctahedronGeometry(size);geometry.rotateY(Math.PI*0.5);_this112.material=new MeshBasicMaterial({wireframe:true,fog:false,toneMapped:false});if(_this112.color===undefined)_this112.material.vertexColors=true;var position=geometry.getAttribute('position');var colors=new Float32Array(position.count*3);geometry.setAttribute('color',new BufferAttribute(colors,3));_this112.add(new Mesh(geometry,_this112.material));_this112.update();return _this112;}_createClass(HemisphereLightHelper,[{key:\"dispose\",value:function dispose(){this.children[0].geometry.dispose();this.children[0].material.dispose();}},{key:\"update\",value:function update(){var mesh=this.children[0];if(this.color!==undefined){this.material.color.set(this.color);}else{var colors=mesh.geometry.getAttribute('color');_color1.copy(this.light.color);_color2.copy(this.light.groundColor);for(var _i346=0,l=colors.count;_i346<l;_i346++){var color=_i346<l/2?_color1:_color2;colors.setXYZ(_i346,color.r,color.g,color.b);}colors.needsUpdate=true;}mesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());}}]);return HemisphereLightHelper;}(Object3D);var GridHelper=/*#__PURE__*/function(_LineSegments2){_inherits(GridHelper,_LineSegments2);var _super143=_createSuper(GridHelper);function GridHelper(){var _this113;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var divisions=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;var color1=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0x444444;var color2=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0x888888;_classCallCheck(this,GridHelper);color1=new Color(color1);color2=new Color(color2);var center=divisions/2;var step=size/divisions;var halfSize=size/2;var vertices=[],colors=[];for(var _i347=0,j=0,k=-halfSize;_i347<=divisions;_i347++,k+=step){vertices.push(-halfSize,0,k,halfSize,0,k);vertices.push(k,0,-halfSize,k,0,halfSize);var color=_i347===center?color1:color2;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;color.toArray(colors,j);j+=3;}var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});_this113=_super143.call(this,geometry,material);_this113.type='GridHelper';return _this113;}return _createClass(GridHelper);}(LineSegments);var PolarGridHelper=/*#__PURE__*/function(_LineSegments3){_inherits(PolarGridHelper,_LineSegments3);var _super144=_createSuper(PolarGridHelper);function PolarGridHelper(){var _this114;var radius=arguments.length>0&&arguments[0]!==undefined?arguments[0]:10;var radials=arguments.length>1&&arguments[1]!==undefined?arguments[1]:16;var circles=arguments.length>2&&arguments[2]!==undefined?arguments[2]:8;var divisions=arguments.length>3&&arguments[3]!==undefined?arguments[3]:64;var color1=arguments.length>4&&arguments[4]!==undefined?arguments[4]:0x444444;var color2=arguments.length>5&&arguments[5]!==undefined?arguments[5]:0x888888;_classCallCheck(this,PolarGridHelper);color1=new Color(color1);color2=new Color(color2);var vertices=[];var colors=[];// create the radials\nfor(var _i348=0;_i348<=radials;_i348++){var v=_i348/radials*(Math.PI*2);var x=Math.sin(v)*radius;var z=Math.cos(v)*radius;vertices.push(0,0,0);vertices.push(x,0,z);var color=_i348&1?color1:color2;colors.push(color.r,color.g,color.b);colors.push(color.r,color.g,color.b);}// create the circles\nfor(var _i349=0;_i349<=circles;_i349++){var _color=_i349&1?color1:color2;var r=radius-radius/circles*_i349;for(var j=0;j<divisions;j++){// first vertex\nvar _v=j/divisions*(Math.PI*2);var _x12=Math.sin(_v)*r;var _z3=Math.cos(_v)*r;vertices.push(_x12,0,_z3);colors.push(_color.r,_color.g,_color.b);// second vertex\n_v=(j+1)/divisions*(Math.PI*2);_x12=Math.sin(_v)*r;_z3=Math.cos(_v)*r;vertices.push(_x12,0,_z3);colors.push(_color.r,_color.g,_color.b);}}var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});_this114=_super144.call(this,geometry,material);_this114.type='PolarGridHelper';return _this114;}return _createClass(PolarGridHelper);}(LineSegments);var _v1=/*@__PURE__*/new Vector3();var _v2=/*@__PURE__*/new Vector3();var _v3=/*@__PURE__*/new Vector3();var DirectionalLightHelper=/*#__PURE__*/function(_Object3D17){_inherits(DirectionalLightHelper,_Object3D17);var _super145=_createSuper(DirectionalLightHelper);function DirectionalLightHelper(light,size,color){var _this115;_classCallCheck(this,DirectionalLightHelper);_this115=_super145.call(this);_this115.light=light;_this115.light.updateMatrixWorld();_this115.matrix=light.matrixWorld;_this115.matrixAutoUpdate=false;_this115.color=color;if(size===undefined)size=1;var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([-size,size,0,size,size,0,size,-size,0,-size,-size,0,-size,size,0],3));var material=new LineBasicMaterial({fog:false,toneMapped:false});_this115.lightPlane=new Line(geometry,material);_this115.add(_this115.lightPlane);geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,0,1],3));_this115.targetLine=new Line(geometry,material);_this115.add(_this115.targetLine);_this115.update();return _this115;}_createClass(DirectionalLightHelper,[{key:\"dispose\",value:function dispose(){this.lightPlane.geometry.dispose();this.lightPlane.material.dispose();this.targetLine.geometry.dispose();this.targetLine.material.dispose();}},{key:\"update\",value:function update(){_v1.setFromMatrixPosition(this.light.matrixWorld);_v2.setFromMatrixPosition(this.light.target.matrixWorld);_v3.subVectors(_v2,_v1);this.lightPlane.lookAt(_v2);if(this.color!==undefined){this.lightPlane.material.color.set(this.color);this.targetLine.material.color.set(this.color);}else{this.lightPlane.material.color.copy(this.light.color);this.targetLine.material.color.copy(this.light.color);}this.targetLine.lookAt(_v2);this.targetLine.scale.z=_v3.length();}}]);return DirectionalLightHelper;}(Object3D);var _vector=/*@__PURE__*/new Vector3();var _camera=/*@__PURE__*/new Camera();/**\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */var CameraHelper=/*#__PURE__*/function(_LineSegments4){_inherits(CameraHelper,_LineSegments4);var _super146=_createSuper(CameraHelper);function CameraHelper(camera){var _this116;_classCallCheck(this,CameraHelper);var geometry=new BufferGeometry();var material=new LineBasicMaterial({color:0xffffff,vertexColors:true,toneMapped:false});var vertices=[];var colors=[];var pointMap={};// colors\nvar colorFrustum=new Color(0xffaa00);var colorCone=new Color(0xff0000);var colorUp=new Color(0x00aaff);var colorTarget=new Color(0xffffff);var colorCross=new Color(0x333333);// near\naddLine('n1','n2',colorFrustum);addLine('n2','n4',colorFrustum);addLine('n4','n3',colorFrustum);addLine('n3','n1',colorFrustum);// far\naddLine('f1','f2',colorFrustum);addLine('f2','f4',colorFrustum);addLine('f4','f3',colorFrustum);addLine('f3','f1',colorFrustum);// sides\naddLine('n1','f1',colorFrustum);addLine('n2','f2',colorFrustum);addLine('n3','f3',colorFrustum);addLine('n4','f4',colorFrustum);// cone\naddLine('p','n1',colorCone);addLine('p','n2',colorCone);addLine('p','n3',colorCone);addLine('p','n4',colorCone);// up\naddLine('u1','u2',colorUp);addLine('u2','u3',colorUp);addLine('u3','u1',colorUp);// target\naddLine('c','t',colorTarget);addLine('p','c',colorCross);// cross\naddLine('cn1','cn2',colorCross);addLine('cn3','cn4',colorCross);addLine('cf1','cf2',colorCross);addLine('cf3','cf4',colorCross);function addLine(a,b,color){addPoint(a,color);addPoint(b,color);}function addPoint(id,color){vertices.push(0,0,0);colors.push(color.r,color.g,color.b);if(pointMap[id]===undefined){pointMap[id]=[];}pointMap[id].push(vertices.length/3-1);}geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));_this116=_super146.call(this,geometry,material);_this116.type='CameraHelper';_this116.camera=camera;if(_this116.camera.updateProjectionMatrix)_this116.camera.updateProjectionMatrix();_this116.matrix=camera.matrixWorld;_this116.matrixAutoUpdate=false;_this116.pointMap=pointMap;_this116.update();return _this116;}_createClass(CameraHelper,[{key:\"update\",value:function update(){var geometry=this.geometry;var pointMap=this.pointMap;var w=1,h=1;// we need just camera projection matrix inverse\n// world matrix must be identity\n_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);// center / target\nsetPoint('c',pointMap,geometry,_camera,0,0,-1);setPoint('t',pointMap,geometry,_camera,0,0,1);// near\nsetPoint('n1',pointMap,geometry,_camera,-w,-h,-1);setPoint('n2',pointMap,geometry,_camera,w,-h,-1);setPoint('n3',pointMap,geometry,_camera,-w,h,-1);setPoint('n4',pointMap,geometry,_camera,w,h,-1);// far\nsetPoint('f1',pointMap,geometry,_camera,-w,-h,1);setPoint('f2',pointMap,geometry,_camera,w,-h,1);setPoint('f3',pointMap,geometry,_camera,-w,h,1);setPoint('f4',pointMap,geometry,_camera,w,h,1);// up\nsetPoint('u1',pointMap,geometry,_camera,w*0.7,h*1.1,-1);setPoint('u2',pointMap,geometry,_camera,-w*0.7,h*1.1,-1);setPoint('u3',pointMap,geometry,_camera,0,h*2,-1);// cross\nsetPoint('cf1',pointMap,geometry,_camera,-w,0,1);setPoint('cf2',pointMap,geometry,_camera,w,0,1);setPoint('cf3',pointMap,geometry,_camera,0,-h,1);setPoint('cf4',pointMap,geometry,_camera,0,h,1);setPoint('cn1',pointMap,geometry,_camera,-w,0,-1);setPoint('cn2',pointMap,geometry,_camera,w,0,-1);setPoint('cn3',pointMap,geometry,_camera,0,-h,-1);setPoint('cn4',pointMap,geometry,_camera,0,h,-1);geometry.getAttribute('position').needsUpdate=true;}},{key:\"dispose\",value:function dispose(){this.geometry.dispose();this.material.dispose();}}]);return CameraHelper;}(LineSegments);function setPoint(point,pointMap,geometry,camera,x,y,z){_vector.set(x,y,z).unproject(camera);var points=pointMap[point];if(points!==undefined){var position=geometry.getAttribute('position');for(var _i350=0,l=points.length;_i350<l;_i350++){position.setXYZ(points[_i350],_vector.x,_vector.y,_vector.z);}}}var _box=/*@__PURE__*/new Box3();var BoxHelper=/*#__PURE__*/function(_LineSegments5){_inherits(BoxHelper,_LineSegments5);var _super147=_createSuper(BoxHelper);function BoxHelper(object){var _this117;var color=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0xffff00;_classCallCheck(this,BoxHelper);var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=new Float32Array(8*3);var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new BufferAttribute(positions,3));_this117=_super147.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));_this117.object=object;_this117.type='BoxHelper';_this117.matrixAutoUpdate=false;_this117.update();return _this117;}_createClass(BoxHelper,[{key:\"update\",value:function update(object){if(object!==undefined){console.warn('THREE.BoxHelper: .update() has no longer arguments.');}if(this.object!==undefined){_box.setFromObject(this.object);}if(_box.isEmpty())return;var min=_box.min;var max=_box.max;/*\r\n\t\t\t5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/var position=this.geometry.attributes.position;var array=position.array;array[0]=max.x;array[1]=max.y;array[2]=max.z;array[3]=min.x;array[4]=max.y;array[5]=max.z;array[6]=min.x;array[7]=min.y;array[8]=max.z;array[9]=max.x;array[10]=min.y;array[11]=max.z;array[12]=max.x;array[13]=max.y;array[14]=min.z;array[15]=min.x;array[16]=max.y;array[17]=min.z;array[18]=min.x;array[19]=min.y;array[20]=min.z;array[21]=max.x;array[22]=min.y;array[23]=min.z;position.needsUpdate=true;this.geometry.computeBoundingSphere();}},{key:\"setFromObject\",value:function setFromObject(object){this.object=object;this.update();return this;}},{key:\"copy\",value:function copy(source){LineSegments.prototype.copy.call(this,source);this.object=source.object;return this;}}]);return BoxHelper;}(LineSegments);var Box3Helper=/*#__PURE__*/function(_LineSegments6){_inherits(Box3Helper,_LineSegments6);var _super148=_createSuper(Box3Helper);function Box3Helper(box){var _this118;var color=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0xffff00;_classCallCheck(this,Box3Helper);var indices=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);var positions=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1];var geometry=new BufferGeometry();geometry.setIndex(new BufferAttribute(indices,1));geometry.setAttribute('position',new Float32BufferAttribute(positions,3));_this118=_super148.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));_this118.box=box;_this118.type='Box3Helper';_this118.geometry.computeBoundingSphere();return _this118;}_createClass(Box3Helper,[{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){var box=this.box;if(box.isEmpty())return;box.getCenter(this.position);box.getSize(this.scale);this.scale.multiplyScalar(0.5);_get(_getPrototypeOf(Box3Helper.prototype),\"updateMatrixWorld\",this).call(this,force);}}]);return Box3Helper;}(LineSegments);var PlaneHelper=/*#__PURE__*/function(_Line3){_inherits(PlaneHelper,_Line3);var _super149=_createSuper(PlaneHelper);function PlaneHelper(plane){var _this119;var size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:1;var hex=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0xffff00;_classCallCheck(this,PlaneHelper);var color=hex;var positions=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0];var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(positions,3));geometry.computeBoundingSphere();_this119=_super149.call(this,geometry,new LineBasicMaterial({color:color,toneMapped:false}));_this119.type='PlaneHelper';_this119.plane=plane;_this119.size=size;var positions2=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1];var geometry2=new BufferGeometry();geometry2.setAttribute('position',new Float32BufferAttribute(positions2,3));geometry2.computeBoundingSphere();_this119.add(new Mesh(geometry2,new MeshBasicMaterial({color:color,opacity:0.2,transparent:true,depthWrite:false,toneMapped:false})));return _this119;}_createClass(PlaneHelper,[{key:\"updateMatrixWorld\",value:function updateMatrixWorld(force){var scale=-this.plane.constant;if(Math.abs(scale)<1e-8)scale=1e-8;// sign does not matter\nthis.scale.set(0.5*this.size,0.5*this.size,scale);this.children[0].material.side=scale<0?BackSide:FrontSide;// renderer flips side when determinant < 0; flipping not wanted here\nthis.lookAt(this.plane.normal);_get(_getPrototypeOf(PlaneHelper.prototype),\"updateMatrixWorld\",this).call(this,force);}}]);return PlaneHelper;}(Line);var _axis=/*@__PURE__*/new Vector3();var _lineGeometry,_coneGeometry;var ArrowHelper=/*#__PURE__*/function(_Object3D18){_inherits(ArrowHelper,_Object3D18);var _super150=_createSuper(ArrowHelper);// dir is assumed to be normalized\nfunction ArrowHelper(){var _this120;var dir=arguments.length>0&&arguments[0]!==undefined?arguments[0]:new Vector3(0,0,1);var origin=arguments.length>1&&arguments[1]!==undefined?arguments[1]:new Vector3(0,0,0);var length=arguments.length>2&&arguments[2]!==undefined?arguments[2]:1;var color=arguments.length>3&&arguments[3]!==undefined?arguments[3]:0xffff00;var headLength=arguments.length>4&&arguments[4]!==undefined?arguments[4]:length*0.2;var headWidth=arguments.length>5&&arguments[5]!==undefined?arguments[5]:headLength*0.2;_classCallCheck(this,ArrowHelper);_this120=_super150.call(this);_this120.type='ArrowHelper';if(_lineGeometry===undefined){_lineGeometry=new BufferGeometry();_lineGeometry.setAttribute('position',new Float32BufferAttribute([0,0,0,0,1,0],3));_coneGeometry=new CylinderGeometry(0,0.5,1,5,1);_coneGeometry.translate(0,-0.5,0);}_this120.position.copy(origin);_this120.line=new Line(_lineGeometry,new LineBasicMaterial({color:color,toneMapped:false}));_this120.line.matrixAutoUpdate=false;_this120.add(_this120.line);_this120.cone=new Mesh(_coneGeometry,new MeshBasicMaterial({color:color,toneMapped:false}));_this120.cone.matrixAutoUpdate=false;_this120.add(_this120.cone);_this120.setDirection(dir);_this120.setLength(length,headLength,headWidth);return _this120;}_createClass(ArrowHelper,[{key:\"setDirection\",value:function setDirection(dir){// dir is assumed to be normalized\nif(dir.y>0.99999){this.quaternion.set(0,0,0,1);}else if(dir.y<-0.99999){this.quaternion.set(1,0,0,0);}else{_axis.set(dir.z,0,-dir.x).normalize();var radians=Math.acos(dir.y);this.quaternion.setFromAxisAngle(_axis,radians);}}},{key:\"setLength\",value:function setLength(length){var headLength=arguments.length>1&&arguments[1]!==undefined?arguments[1]:length*0.2;var headWidth=arguments.length>2&&arguments[2]!==undefined?arguments[2]:headLength*0.2;this.line.scale.set(1,Math.max(0.0001,length-headLength),1);// see #17458\nthis.line.updateMatrix();this.cone.scale.set(headWidth,headLength,headWidth);this.cone.position.y=length;this.cone.updateMatrix();}},{key:\"setColor\",value:function setColor(color){this.line.material.color.set(color);this.cone.material.color.set(color);}},{key:\"copy\",value:function copy(source){_get(_getPrototypeOf(ArrowHelper.prototype),\"copy\",this).call(this,source,false);this.line.copy(source.line);this.cone.copy(source.cone);return this;}}]);return ArrowHelper;}(Object3D);var AxesHelper=/*#__PURE__*/function(_LineSegments7){_inherits(AxesHelper,_LineSegments7);var _super151=_createSuper(AxesHelper);function AxesHelper(){var _this121;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;_classCallCheck(this,AxesHelper);var vertices=[0,0,0,size,0,0,0,0,0,0,size,0,0,0,0,0,0,size];var colors=[1,0,0,1,0.6,0,0,1,0,0.6,1,0,0,0,1,0,0.6,1];var geometry=new BufferGeometry();geometry.setAttribute('position',new Float32BufferAttribute(vertices,3));geometry.setAttribute('color',new Float32BufferAttribute(colors,3));var material=new LineBasicMaterial({vertexColors:true,toneMapped:false});_this121=_super151.call(this,geometry,material);_this121.type='AxesHelper';return _this121;}_createClass(AxesHelper,[{key:\"setColors\",value:function setColors(xAxisColor,yAxisColor,zAxisColor){var color=new Color();var array=this.geometry.attributes.color.array;color.set(xAxisColor);color.toArray(array,0);color.toArray(array,3);color.set(yAxisColor);color.toArray(array,6);color.toArray(array,9);color.set(zAxisColor);color.toArray(array,12);color.toArray(array,15);this.geometry.attributes.color.needsUpdate=true;return this;}},{key:\"dispose\",value:function dispose(){this.geometry.dispose();this.material.dispose();}}]);return AxesHelper;}(LineSegments);var ShapePath=/*#__PURE__*/function(){function ShapePath(){_classCallCheck(this,ShapePath);this.type='ShapePath';this.color=new Color();this.subPaths=[];this.currentPath=null;}_createClass(ShapePath,[{key:\"moveTo\",value:function moveTo(x,y){this.currentPath=new Path();this.subPaths.push(this.currentPath);this.currentPath.moveTo(x,y);return this;}},{key:\"lineTo\",value:function lineTo(x,y){this.currentPath.lineTo(x,y);return this;}},{key:\"quadraticCurveTo\",value:function quadraticCurveTo(aCPx,aCPy,aX,aY){this.currentPath.quadraticCurveTo(aCPx,aCPy,aX,aY);return this;}},{key:\"bezierCurveTo\",value:function bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY){this.currentPath.bezierCurveTo(aCP1x,aCP1y,aCP2x,aCP2y,aX,aY);return this;}},{key:\"splineThru\",value:function splineThru(pts){this.currentPath.splineThru(pts);return this;}},{key:\"toShapes\",value:function toShapes(isCCW,noHoles){function toShapesNoHoles(inSubpaths){var shapes=[];for(var _i351=0,l=inSubpaths.length;_i351<l;_i351++){var _tmpPath=inSubpaths[_i351];var _tmpShape=new Shape();_tmpShape.curves=_tmpPath.curves;shapes.push(_tmpShape);}return shapes;}function isPointInsidePolygon(inPt,inPolygon){var polyLen=inPolygon.length;// inPt on polygon contour => immediate success    or\n// toggling of inside/outside at every single! intersection point of an edge\n//  with the horizontal line through inPt, left of inPt\n//  not counting lowerY endpoints of edges and whole edges on that line\nvar inside=false;for(var p=polyLen-1,q=0;q<polyLen;p=q++){var edgeLowPt=inPolygon[p];var edgeHighPt=inPolygon[q];var edgeDx=edgeHighPt.x-edgeLowPt.x;var edgeDy=edgeHighPt.y-edgeLowPt.y;if(Math.abs(edgeDy)>Number.EPSILON){// not parallel\nif(edgeDy<0){edgeLowPt=inPolygon[q];edgeDx=-edgeDx;edgeHighPt=inPolygon[p];edgeDy=-edgeDy;}if(inPt.y<edgeLowPt.y||inPt.y>edgeHighPt.y)continue;if(inPt.y===edgeLowPt.y){if(inPt.x===edgeLowPt.x)return true;// inPt is on contour ?\n// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n}else{var perpEdge=edgeDy*(inPt.x-edgeLowPt.x)-edgeDx*(inPt.y-edgeLowPt.y);if(perpEdge===0)return true;// inPt is on contour ?\nif(perpEdge<0)continue;inside=!inside;// true intersection left of inPt\n}}else{// parallel or collinear\nif(inPt.y!==edgeLowPt.y)continue;// parallel\n// edge lies on the same horizontal line as inPt\nif(edgeHighPt.x<=inPt.x&&inPt.x<=edgeLowPt.x||edgeLowPt.x<=inPt.x&&inPt.x<=edgeHighPt.x)return true;// inPt: Point on contour !\n// continue;\n}}return inside;}var isClockWise=ShapeUtils.isClockWise;var subPaths=this.subPaths;if(subPaths.length===0)return[];if(noHoles===true)return toShapesNoHoles(subPaths);var solid,tmpPath,tmpShape;var shapes=[];if(subPaths.length===1){tmpPath=subPaths[0];tmpShape=new Shape();tmpShape.curves=tmpPath.curves;shapes.push(tmpShape);return shapes;}var holesFirst=!isClockWise(subPaths[0].getPoints());holesFirst=isCCW?!holesFirst:holesFirst;// console.log(\"Holes first\", holesFirst);\nvar betterShapeHoles=[];var newShapes=[];var newShapeHoles=[];var mainIdx=0;var tmpPoints;newShapes[mainIdx]=undefined;newShapeHoles[mainIdx]=[];for(var _i352=0,l=subPaths.length;_i352<l;_i352++){tmpPath=subPaths[_i352];tmpPoints=tmpPath.getPoints();solid=isClockWise(tmpPoints);solid=isCCW?!solid:solid;if(solid){if(!holesFirst&&newShapes[mainIdx])mainIdx++;newShapes[mainIdx]={s:new Shape(),p:tmpPoints};newShapes[mainIdx].s.curves=tmpPath.curves;if(holesFirst)mainIdx++;newShapeHoles[mainIdx]=[];//console.log('cw', i);\n}else{newShapeHoles[mainIdx].push({h:tmpPath,p:tmpPoints[0]});//console.log('ccw', i);\n}}// only Holes? -> probably all Shapes with wrong orientation\nif(!newShapes[0])return toShapesNoHoles(subPaths);if(newShapes.length>1){var ambiguous=false;var toChange=[];for(var sIdx=0,sLen=newShapes.length;sIdx<sLen;sIdx++){betterShapeHoles[sIdx]=[];}for(var _sIdx=0,_sLen=newShapes.length;_sIdx<_sLen;_sIdx++){var sho=newShapeHoles[_sIdx];for(var hIdx=0;hIdx<sho.length;hIdx++){var ho=sho[hIdx];var hole_unassigned=true;for(var s2Idx=0;s2Idx<newShapes.length;s2Idx++){if(isPointInsidePolygon(ho.p,newShapes[s2Idx].p)){if(_sIdx!==s2Idx)toChange.push({froms:_sIdx,tos:s2Idx,hole:hIdx});if(hole_unassigned){hole_unassigned=false;betterShapeHoles[s2Idx].push(ho);}else{ambiguous=true;}}}if(hole_unassigned){betterShapeHoles[_sIdx].push(ho);}}}// console.log(\"ambiguous: \", ambiguous);\nif(toChange.length>0){// console.log(\"to change: \", toChange);\nif(!ambiguous)newShapeHoles=betterShapeHoles;}}var tmpHoles;for(var _i353=0,il=newShapes.length;_i353<il;_i353++){tmpShape=newShapes[_i353].s;shapes.push(tmpShape);tmpHoles=newShapeHoles[_i353];for(var j=0,jl=tmpHoles.length;j<jl;j++){tmpShape.holes.push(tmpHoles[j].h);}}//console.log(\"shape\", shapes);\nreturn shapes;}}]);return ShapePath;}();var _floatView=new Float32Array(1);var _int32View=new Int32Array(_floatView.buffer);var DataUtils=/*#__PURE__*/function(){function DataUtils(){_classCallCheck(this,DataUtils);}_createClass(DataUtils,null,[{key:\"toHalfFloat\",value:// Converts float32 to float16 (stored as uint16 value).\nfunction toHalfFloat(val){if(val>65504){console.warn('THREE.DataUtils.toHalfFloat(): value exceeds 65504.');val=65504;// maximum representable value in float16\n}// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n/* This method is faster than the OpenEXR implementation (very often\r\n\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\r\n\t\t* by James Tursa?s half-precision code. */_floatView[0]=val;var x=_int32View[0];var bits=x>>16&0x8000;/* Get the sign */var m=x>>12&0x07ff;/* Keep one extra bit for rounding */var e=x>>23&0xff;/* Using int is faster here */ /* If zero, or denormal, or exponent underflows too much for a denormal\r\n\t\t\t* half, return signed zero. */if(e<103)return bits;/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */if(e>142){bits|=0x7c00;/* If exponent was 0xff and one mantissa bit was set, it means NaN,\r\n\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */bits|=(e==255?0:1)&&x&0x007fffff;return bits;}/* If exponent underflows but not too much, return a denormal */if(e<113){m|=0x0800;/* Extra rounding may overflow and set mantissa to 0 and exponent\r\n\t\t\t\t* to 1, which is OK. */bits|=(m>>114-e)+(m>>113-e&1);return bits;}bits|=e-112<<10|m>>1;/* Extra rounding. An overflow will set mantissa to 0 and increment\r\n\t\t\t* the exponent, which is OK. */bits+=m&1;return bits;}}]);return DataUtils;}();var LineStrip=0;var LinePieces=1;var NoColors=0;var FaceColors=1;var VertexColors=2;function MeshFaceMaterial(materials){console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');return materials;}function MultiMaterial(){var materials=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');materials.isMultiMaterial=true;materials.materials=materials;materials.clone=function(){return materials.slice();};return materials;}function PointCloud(geometry,material){console.warn('THREE.PointCloud has been renamed to THREE.Points.');return new Points(geometry,material);}function Particle(material){console.warn('THREE.Particle has been renamed to THREE.Sprite.');return new Sprite(material);}function ParticleSystem(geometry,material){console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');return new Points(geometry,material);}function PointCloudMaterial(parameters){console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleBasicMaterial(parameters){console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function ParticleSystemMaterial(parameters){console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');return new PointsMaterial(parameters);}function Vertex(x,y,z){console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');return new Vector3(x,y,z);}//\nfunction DynamicBufferAttribute(array,itemSize){console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');return new BufferAttribute(array,itemSize).setUsage(DynamicDrawUsage);}function Int8Attribute(array,itemSize){console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');return new Int8BufferAttribute(array,itemSize);}function Uint8Attribute(array,itemSize){console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');return new Uint8BufferAttribute(array,itemSize);}function Uint8ClampedAttribute(array,itemSize){console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');return new Uint8ClampedBufferAttribute(array,itemSize);}function Int16Attribute(array,itemSize){console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');return new Int16BufferAttribute(array,itemSize);}function Uint16Attribute(array,itemSize){console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');return new Uint16BufferAttribute(array,itemSize);}function Int32Attribute(array,itemSize){console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');return new Int32BufferAttribute(array,itemSize);}function Uint32Attribute(array,itemSize){console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');return new Uint32BufferAttribute(array,itemSize);}function Float32Attribute(array,itemSize){console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');return new Float32BufferAttribute(array,itemSize);}function Float64Attribute(array,itemSize){console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');return new Float64BufferAttribute(array,itemSize);}//\nCurve.create=function(construct,getPoint){console.log('THREE.Curve.create() has been deprecated');construct.prototype=Object.create(Curve.prototype);construct.prototype.constructor=construct;construct.prototype.getPoint=getPoint;return construct;};//\nPath.prototype.fromPoints=function(points){console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');return this.setFromPoints(points);};//\nfunction AxisHelper(size){console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');return new AxesHelper(size);}function BoundingBoxHelper(object,color){console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');return new BoxHelper(object,color);}function EdgesHelper(object,hex){console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');return new LineSegments(new EdgesGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}GridHelper.prototype.setColors=function(){console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');};SkeletonHelper.prototype.update=function(){console.error('THREE.SkeletonHelper: update() no longer needs to be called.');};function WireframeHelper(object,hex){console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');return new LineSegments(new WireframeGeometry(object.geometry),new LineBasicMaterial({color:hex!==undefined?hex:0xffffff}));}//\nLoader.prototype.extractUrlBase=function(url){console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');return LoaderUtils.extractUrlBase(url);};Loader.Handlers={add:function/* regex, loader */add(){console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');},get:function/* file */get(){console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');}};function XHRLoader(manager){console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');return new FileLoader(manager);}function BinaryTextureLoader(manager){console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');return new DataTextureLoader(manager);}//\nBox2.prototype.center=function(optionalTarget){console.warn('THREE.Box2: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box2.prototype.empty=function(){console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box2.prototype.isIntersectionBox=function(box){console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box2.prototype.size=function(optionalTarget){console.warn('THREE.Box2: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nBox3.prototype.center=function(optionalTarget){console.warn('THREE.Box3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};Box3.prototype.empty=function(){console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');return this.isEmpty();};Box3.prototype.isIntersectionBox=function(box){console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Box3.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};Box3.prototype.size=function(optionalTarget){console.warn('THREE.Box3: .size() has been renamed to .getSize().');return this.getSize(optionalTarget);};//\nSphere.prototype.empty=function(){console.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');return this.isEmpty();};//\nFrustum.prototype.setFromMatrix=function(m){console.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');return this.setFromProjectionMatrix(m);};//\nLine3.prototype.center=function(optionalTarget){console.warn('THREE.Line3: .center() has been renamed to .getCenter().');return this.getCenter(optionalTarget);};//\nMatrix3.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix3.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');return vector.applyMatrix3(this);};Matrix3.prototype.multiplyVector3Array=function/* a */(){console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');};Matrix3.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');return attribute.applyMatrix3(this);};Matrix3.prototype.applyToVector3Array=function/* array, offset, length */(){console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');};Matrix3.prototype.getInverse=function(matrix){console.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nMatrix4.prototype.extractPosition=function(m){console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');return this.copyPosition(m);};Matrix4.prototype.flattenToArrayOffset=function(array,offset){console.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');return this.toArray(array,offset);};Matrix4.prototype.getPosition=function(){console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');return new Vector3().setFromMatrixColumn(this,3);};Matrix4.prototype.setRotationFromQuaternion=function(q){console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');return this.makeRotationFromQuaternion(q);};Matrix4.prototype.multiplyToArray=function(){console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');};Matrix4.prototype.multiplyVector3=function(vector){console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector4=function(vector){console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.multiplyVector3Array=function/* a */(){console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');};Matrix4.prototype.rotateAxis=function(v){console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');v.transformDirection(this);};Matrix4.prototype.crossVector=function(vector){console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');return vector.applyMatrix4(this);};Matrix4.prototype.translate=function(){console.error('THREE.Matrix4: .translate() has been removed.');};Matrix4.prototype.rotateX=function(){console.error('THREE.Matrix4: .rotateX() has been removed.');};Matrix4.prototype.rotateY=function(){console.error('THREE.Matrix4: .rotateY() has been removed.');};Matrix4.prototype.rotateZ=function(){console.error('THREE.Matrix4: .rotateZ() has been removed.');};Matrix4.prototype.rotateByAxis=function(){console.error('THREE.Matrix4: .rotateByAxis() has been removed.');};Matrix4.prototype.applyToBufferAttribute=function(attribute){console.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');return attribute.applyMatrix4(this);};Matrix4.prototype.applyToVector3Array=function/* array, offset, length */(){console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');};Matrix4.prototype.makeFrustum=function(left,right,bottom,top,near,far){console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');return this.makePerspective(left,right,top,bottom,near,far);};Matrix4.prototype.getInverse=function(matrix){console.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');return this.copy(matrix).invert();};//\nPlane.prototype.isIntersectionLine=function(line){console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');return this.intersectsLine(line);};//\nQuaternion.prototype.multiplyVector3=function(vector){console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');return vector.applyQuaternion(this);};Quaternion.prototype.inverse=function(){console.warn('THREE.Quaternion: .inverse() has been renamed to invert().');return this.invert();};//\nRay.prototype.isIntersectionBox=function(box){console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');return this.intersectsBox(box);};Ray.prototype.isIntersectionPlane=function(plane){console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');return this.intersectsPlane(plane);};Ray.prototype.isIntersectionSphere=function(sphere){console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');return this.intersectsSphere(sphere);};//\nTriangle.prototype.area=function(){console.warn('THREE.Triangle: .area() has been renamed to .getArea().');return this.getArea();};Triangle.prototype.barycoordFromPoint=function(point,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return this.getBarycoord(point,target);};Triangle.prototype.midpoint=function(target){console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');return this.getMidpoint(target);};Triangle.prototypenormal=function(target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return this.getNormal(target);};Triangle.prototype.plane=function(target){console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');return this.getPlane(target);};Triangle.barycoordFromPoint=function(point,a,b,c,target){console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');return Triangle.getBarycoord(point,a,b,c,target);};Triangle.normal=function(a,b,c,target){console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');return Triangle.getNormal(a,b,c,target);};//\nShape.prototype.extractAllPoints=function(divisions){console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');return this.extractPoints(divisions);};Shape.prototype.extrude=function(options){console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');return new ExtrudeGeometry(this,options);};Shape.prototype.makeGeometry=function(options){console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');return new ShapeGeometry(this,options);};//\nVector2.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector2.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector2.prototype.lengthManhattan=function(){console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector3.prototype.setEulerFromRotationMatrix=function(){console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');};Vector3.prototype.setEulerFromQuaternion=function(){console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');};Vector3.prototype.getPositionFromMatrix=function(m){console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');return this.setFromMatrixPosition(m);};Vector3.prototype.getScaleFromMatrix=function(m){console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');return this.setFromMatrixScale(m);};Vector3.prototype.getColumnFromMatrix=function(index,matrix){console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');return this.setFromMatrixColumn(matrix,index);};Vector3.prototype.applyProjection=function(m){console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');return this.applyMatrix4(m);};Vector3.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector3.prototype.distanceToManhattan=function(v){console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');return this.manhattanDistanceTo(v);};Vector3.prototype.lengthManhattan=function(){console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nVector4.prototype.fromAttribute=function(attribute,index,offset){console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');return this.fromBufferAttribute(attribute,index,offset);};Vector4.prototype.lengthManhattan=function(){console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');return this.manhattanLength();};//\nObject3D.prototype.getChildByName=function(name){console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');return this.getObjectByName(name);};Object3D.prototype.renderDepth=function(){console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');};Object3D.prototype.translate=function(distance,axis){console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');return this.translateOnAxis(axis,distance);};Object3D.prototype.getWorldRotation=function(){console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');};Object3D.prototype.applyMatrix=function(matrix){console.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(Object3D.prototype,{eulerOrder:{get:function get(){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');return this.rotation.order;},set:function set(value){console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');this.rotation.order=value;}},useQuaternion:{get:function get(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');},set:function set(){console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');}}});Mesh.prototype.setDrawMode=function(){console.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');};Object.defineProperties(Mesh.prototype,{drawMode:{get:function get(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');return TrianglesDrawMode;},set:function set(){console.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');}}});SkinnedMesh.prototype.initBones=function(){console.error('THREE.SkinnedMesh: initBones() has been removed.');};//\nPerspectiveCamera.prototype.setLens=function(focalLength,filmGauge){console.warn('THREE.PerspectiveCamera.setLens is deprecated. '+'Use .setFocalLength and .filmGauge for a photographic setup.');if(filmGauge!==undefined)this.filmGauge=filmGauge;this.setFocalLength(focalLength);};//\nObject.defineProperties(Light.prototype,{onlyShadow:{set:function set(){console.warn('THREE.Light: .onlyShadow has been removed.');}},shadowCameraFov:{set:function set(value){console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');this.shadow.camera.fov=value;}},shadowCameraLeft:{set:function set(value){console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');this.shadow.camera.left=value;}},shadowCameraRight:{set:function set(value){console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');this.shadow.camera.right=value;}},shadowCameraTop:{set:function set(value){console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');this.shadow.camera.top=value;}},shadowCameraBottom:{set:function set(value){console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');this.shadow.camera.bottom=value;}},shadowCameraNear:{set:function set(value){console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');this.shadow.camera.near=value;}},shadowCameraFar:{set:function set(value){console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');this.shadow.camera.far=value;}},shadowCameraVisible:{set:function set(){console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');}},shadowBias:{set:function set(value){console.warn('THREE.Light: .shadowBias is now .shadow.bias.');this.shadow.bias=value;}},shadowDarkness:{set:function set(){console.warn('THREE.Light: .shadowDarkness has been removed.');}},shadowMapWidth:{set:function set(value){console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');this.shadow.mapSize.width=value;}},shadowMapHeight:{set:function set(value){console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');this.shadow.mapSize.height=value;}}});//\nObject.defineProperties(BufferAttribute.prototype,{length:{get:function get(){console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');return this.array.length;}},dynamic:{get:function get(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');return this.usage===DynamicDrawUsage;},set:function/* value */set(){console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');this.setUsage(DynamicDrawUsage);}}});BufferAttribute.prototype.setDynamic=function(value){console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};BufferAttribute.prototype.copyIndicesArray=function/* indices */(){console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');},BufferAttribute.prototype.setArray=function/* array */(){console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nBufferGeometry.prototype.addIndex=function(index){console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');this.setIndex(index);};BufferGeometry.prototype.addAttribute=function(name,attribute){console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');if(!(attribute&&attribute.isBufferAttribute)&&!(attribute&&attribute.isInterleavedBufferAttribute)){console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');return this.setAttribute(name,new BufferAttribute(arguments[1],arguments[2]));}if(name==='index'){console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');this.setIndex(attribute);return this;}return this.setAttribute(name,attribute);};BufferGeometry.prototype.addDrawCall=function(start,count,indexOffset){if(indexOffset!==undefined){console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');}console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');this.addGroup(start,count);};BufferGeometry.prototype.clearDrawCalls=function(){console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');this.clearGroups();};BufferGeometry.prototype.computeOffsets=function(){console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');};BufferGeometry.prototype.removeAttribute=function(name){console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');return this.deleteAttribute(name);};BufferGeometry.prototype.applyMatrix=function(matrix){console.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');return this.applyMatrix4(matrix);};Object.defineProperties(BufferGeometry.prototype,{drawcalls:{get:function get(){console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');return this.groups;}},offsets:{get:function get(){console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');return this.groups;}}});InterleavedBuffer.prototype.setDynamic=function(value){console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');this.setUsage(value===true?DynamicDrawUsage:StaticDrawUsage);return this;};InterleavedBuffer.prototype.setArray=function/* array */(){console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');};//\nExtrudeGeometry.prototype.getArrays=function(){console.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');};ExtrudeGeometry.prototype.addShapeList=function(){console.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');};ExtrudeGeometry.prototype.addShape=function(){console.error('THREE.ExtrudeGeometry: .addShape() has been removed.');};//\nScene.prototype.dispose=function(){console.error('THREE.Scene: .dispose() has been removed.');};//\nUniform.prototype.onUpdate=function(){console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');return this;};//\nObject.defineProperties(Material.prototype,{wrapAround:{get:function get(){console.warn('THREE.Material: .wrapAround has been removed.');},set:function set(){console.warn('THREE.Material: .wrapAround has been removed.');}},overdraw:{get:function get(){console.warn('THREE.Material: .overdraw has been removed.');},set:function set(){console.warn('THREE.Material: .overdraw has been removed.');}},wrapRGB:{get:function get(){console.warn('THREE.Material: .wrapRGB has been removed.');return new Color();}},shading:{get:function get(){console.error('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');},set:function set(value){console.warn('THREE.'+this.type+': .shading has been removed. Use the boolean .flatShading instead.');this.flatShading=value===FlatShading;}},stencilMask:{get:function get(){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');return this.stencilFuncMask;},set:function set(value){console.warn('THREE.'+this.type+': .stencilMask has been removed. Use .stencilFuncMask instead.');this.stencilFuncMask=value;}},vertexTangents:{get:function get(){console.warn('THREE.'+this.type+': .vertexTangents has been removed.');},set:function set(){console.warn('THREE.'+this.type+': .vertexTangents has been removed.');}}});Object.defineProperties(ShaderMaterial.prototype,{derivatives:{get:function get(){console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');return this.extensions.derivatives;},set:function set(value){console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');this.extensions.derivatives=value;}}});//\nWebGLRenderer.prototype.clearTarget=function(renderTarget,color,depth,stencil){console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');this.setRenderTarget(renderTarget);this.clear(color,depth,stencil);};WebGLRenderer.prototype.animate=function(callback){console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');this.setAnimationLoop(callback);};WebGLRenderer.prototype.getCurrentRenderTarget=function(){console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');return this.getRenderTarget();};WebGLRenderer.prototype.getMaxAnisotropy=function(){console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');return this.capabilities.getMaxAnisotropy();};WebGLRenderer.prototype.getPrecision=function(){console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');return this.capabilities.precision;};WebGLRenderer.prototype.resetGLState=function(){console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');return this.state.reset();};WebGLRenderer.prototype.supportsFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');return this.extensions.get('OES_texture_float');};WebGLRenderer.prototype.supportsHalfFloatTextures=function(){console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');return this.extensions.get('OES_texture_half_float');};WebGLRenderer.prototype.supportsStandardDerivatives=function(){console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');return this.extensions.get('OES_standard_derivatives');};WebGLRenderer.prototype.supportsCompressedTextureS3TC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');return this.extensions.get('WEBGL_compressed_texture_s3tc');};WebGLRenderer.prototype.supportsCompressedTexturePVRTC=function(){console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');return this.extensions.get('WEBGL_compressed_texture_pvrtc');};WebGLRenderer.prototype.supportsBlendMinMax=function(){console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');return this.extensions.get('EXT_blend_minmax');};WebGLRenderer.prototype.supportsVertexTextures=function(){console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');return this.capabilities.vertexTextures;};WebGLRenderer.prototype.supportsInstancedArrays=function(){console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');return this.extensions.get('ANGLE_instanced_arrays');};WebGLRenderer.prototype.enableScissorTest=function(_boolean2){console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');this.setScissorTest(_boolean2);};WebGLRenderer.prototype.initMaterial=function(){console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');};WebGLRenderer.prototype.addPrePlugin=function(){console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');};WebGLRenderer.prototype.addPostPlugin=function(){console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');};WebGLRenderer.prototype.updateShadowMap=function(){console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');};WebGLRenderer.prototype.setFaceCulling=function(){console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');};WebGLRenderer.prototype.allocTextureUnit=function(){console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');};WebGLRenderer.prototype.setTexture=function(){console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');};WebGLRenderer.prototype.setTexture2D=function(){console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');};WebGLRenderer.prototype.setTextureCube=function(){console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');};WebGLRenderer.prototype.getActiveMipMapLevel=function(){console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');return this.getActiveMipmapLevel();};Object.defineProperties(WebGLRenderer.prototype,{shadowMapEnabled:{get:function get(){return this.shadowMap.enabled;},set:function set(value){console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');this.shadowMap.enabled=value;}},shadowMapType:{get:function get(){return this.shadowMap.type;},set:function set(value){console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');this.shadowMap.type=value;}},shadowMapCullFace:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function/* value */set(){console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');}},context:{get:function get(){console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');return this.getContext();}},vr:{get:function get(){console.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');return this.xr;}},gammaInput:{get:function get(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');return false;},set:function set(){console.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');}},gammaOutput:{get:function get(){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');return false;},set:function set(value){console.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');this.outputEncoding=value===true?sRGBEncoding:LinearEncoding;}},toneMappingWhitePoint:{get:function get(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');return 1.0;},set:function set(){console.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');}}});Object.defineProperties(WebGLShadowMap.prototype,{cullFace:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');return undefined;},set:function/* cullFace */set(){console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');}},renderReverseSided:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function set(){console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');}},renderSingleSided:{get:function get(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');return undefined;},set:function set(){console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');}}});function WebGLRenderTargetCube(width,height,options){console.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');return new WebGLCubeRenderTarget(width,options);}//\nObject.defineProperties(WebGLRenderTarget.prototype,{wrapS:{get:function get(){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');return this.texture.wrapS;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');this.texture.wrapS=value;}},wrapT:{get:function get(){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');return this.texture.wrapT;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');this.texture.wrapT=value;}},magFilter:{get:function get(){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');return this.texture.magFilter;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');this.texture.magFilter=value;}},minFilter:{get:function get(){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');return this.texture.minFilter;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');this.texture.minFilter=value;}},anisotropy:{get:function get(){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');return this.texture.anisotropy;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');this.texture.anisotropy=value;}},offset:{get:function get(){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');return this.texture.offset;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');this.texture.offset=value;}},repeat:{get:function get(){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');return this.texture.repeat;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');this.texture.repeat=value;}},format:{get:function get(){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');return this.texture.format;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');this.texture.format=value;}},type:{get:function get(){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');return this.texture.type;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');this.texture.type=value;}},generateMipmaps:{get:function get(){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');return this.texture.generateMipmaps;},set:function set(value){console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');this.texture.generateMipmaps=value;}}});//\nAudio.prototype.load=function(file){console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');var scope=this;var audioLoader=new AudioLoader();audioLoader.load(file,function(buffer){scope.setBuffer(buffer);});return this;};AudioAnalyser.prototype.getData=function(){console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');return this.getFrequencyData();};//\nCubeCamera.prototype.updateCubeMap=function(renderer,scene){console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');return this.update(renderer,scene);};CubeCamera.prototype.clear=function(renderer,color,depth,stencil){console.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');return this.renderTarget.clear(renderer,color,depth,stencil);};ImageUtils.crossOrigin=undefined;ImageUtils.loadTexture=function(url,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');var loader=new TextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(url,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadTextureCube=function(urls,mapping,onLoad,onError){console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');var loader=new CubeTextureLoader();loader.setCrossOrigin(this.crossOrigin);var texture=loader.load(urls,onLoad,undefined,onError);if(mapping)texture.mapping=mapping;return texture;};ImageUtils.loadCompressedTexture=function(){console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');};ImageUtils.loadCompressedTextureCube=function(){console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');};//\nfunction CanvasRenderer(){console.error('THREE.CanvasRenderer has been removed');}//\nfunction JSONLoader(){console.error('THREE.JSONLoader has been removed.');}//\nvar SceneUtils={createMultiMaterialObject:function/* geometry, materials */createMultiMaterialObject(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},detach:function/* child, parent, scene */detach(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');},attach:function/* child, scene, parent */attach(){console.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');}};//\nfunction LensFlare(){console.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');}//\nfunction ParametricGeometry(){console.error('THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js');return new BufferGeometry();}function TextGeometry(){console.error('THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js');return new BufferGeometry();}function FontLoader(){console.error('THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js');}function Font(){console.error('THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js');}if(typeof __THREE_DEVTOOLS__!=='undefined'){/* eslint-disable no-undef */__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register',{detail:{revision:REVISION}}));/* eslint-enable no-undef */}if(typeof window!=='undefined'){if(window.__THREE__){console.warn('WARNING: Multiple instances of Three.js being imported.');}else{window.__THREE__=REVISION;}}\n\n//# sourceURL=webpack://break-the-blocks-game/./threeJS/three.module.js?")},"./threeX/THREEx-keyboard/threeX.keyboardState.js":
/*!********************************************************!*\
  !*** ./threeX/THREEx-keyboard/threeX.keyboardState.js ***!
  \********************************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ KeyboardState)\n/* harmony export */ });\n// KeyboardState.js keep the current state of the keyboard.\n// It is possible to query it at any time. No need of an event.\n// This is particularly convenient in loop driven case, like in\n// 3D demos or games.\n//\n// # Usage\n//\n// **Step 1**: Create the object\n//\n// ```var keyboard\t= new THREEx.KeyboardState();```\n//\n// **Step 2**: Query the keyboard state\n//\n// This will return true if shift and A are pressed, false otherwise\n//\n// ```keyboard.pressed(\"shift+A\")```\n//\n// **Step 3**: Stop listening to the keyboard\n//\n// ```keyboard.destroy()```\n//\n// NOTE: this library may be nice as standaline. independant from three.js\n// - rename it keyboardForGame\n//\n// # Code\n//\n\n/**\r\n * - NOTE: it would be quite easy to push event-driven too\r\n *   - microevent.js for events handling\r\n *   - in this._onkeyChange, generate a string from the DOM event\r\n *   - use this as event name\r\n */\nfunction KeyboardState(domElement) {\n  this.domElement = domElement || document; // to store the current state\n\n  this.keyCodes = {};\n  this.modifiers = {}; // create callback to bind/unbind keyboard events\n\n  var _this = this;\n\n  this._onKeyDown = function (event) {\n    _this._onKeyChange(event);\n  };\n\n  this._onKeyUp = function (event) {\n    _this._onKeyChange(event);\n  }; // bind keyEvents\n\n\n  this.domElement.addEventListener('keydown', this._onKeyDown, false);\n  this.domElement.addEventListener('keyup', this._onKeyUp, false); // create callback to bind/unbind window blur event\n\n  this._onBlur = function () {\n    for (var prop in _this.keyCodes) {\n      _this.keyCodes[prop] = false;\n    }\n\n    for (var prop in _this.modifiers) {\n      _this.modifiers[prop] = false;\n    }\n  }; // bind window blur\n\n\n  window.addEventListener('blur', this._onBlur, false);\n}\n/**\r\n * To stop listening of the keyboard events\r\n */\n\nKeyboardState.prototype.destroy = function () {\n  // unbind keyEvents\n  this.domElement.removeEventListener('keydown', this._onKeyDown, false);\n  this.domElement.removeEventListener('keyup', this._onKeyUp, false); // unbind window blur event\n\n  window.removeEventListener('blur', this._onBlur, false);\n};\n\nKeyboardState.MODIFIERS = ['shift', 'ctrl', 'alt', 'meta'];\nKeyboardState.ALIAS = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n  space: 32,\n  pageup: 33,\n  pagedown: 34,\n  tab: 9,\n  escape: 27\n};\n/**\r\n * to process the keyboard dom event\r\n */\n\nKeyboardState.prototype._onKeyChange = function (event) {\n  // log to debug\n  //console.log(\"onKeyChange\", event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n  // update this.keyCodes\n  var keyCode = event.keyCode;\n  var pressed = event.type === 'keydown' ? true : false;\n  this.keyCodes[keyCode] = pressed; // update this.modifiers\n\n  this.modifiers['shift'] = event.shiftKey;\n  this.modifiers['ctrl'] = event.ctrlKey;\n  this.modifiers['alt'] = event.altKey;\n  this.modifiers['meta'] = event.metaKey;\n};\n/**\r\n * query keyboard state to know if a key is pressed of not\r\n *\r\n * @param {String} keyDesc the description of the key. format : modifiers+key e.g shift+A\r\n * @returns {Boolean} true if the key is pressed, false otherwise\r\n */\n\n\nKeyboardState.prototype.pressed = function (keyDesc) {\n  var keys = keyDesc.split('+');\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var pressed = false;\n\n    if (KeyboardState.MODIFIERS.indexOf(key) !== -1) {\n      pressed = this.modifiers[key];\n    } else if (Object.keys(KeyboardState.ALIAS).indexOf(key) != -1) {\n      pressed = this.keyCodes[KeyboardState.ALIAS[key]];\n    } else {\n      pressed = this.keyCodes[key.toUpperCase().charCodeAt(0)];\n    }\n\n    if (!pressed) return false;\n  }\n\n  return true;\n};\n/**\r\n * return true if an event match a keyDesc\r\n * @param  {KeyboardEvent} event   keyboard event\r\n * @param  {String} keyDesc string description of the key\r\n * @return {Boolean}         true if the event match keyDesc, false otherwise\r\n */\n\n\nKeyboardState.prototype.eventMatches = function (event, keyDesc) {\n  var aliases = KeyboardState.ALIAS;\n  var aliasKeys = Object.keys(aliases);\n  var keys = keyDesc.split('+'); // log to debug\n  // console.log(\"eventMatches\", event, event.keyCode, event.shiftKey, event.ctrlKey, event.altKey, event.metaKey)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var pressed = false;\n\n    if (key === 'shift') {\n      pressed = event.shiftKey ? true : false;\n    } else if (key === 'ctrl') {\n      pressed = event.ctrlKey ? true : false;\n    } else if (key === 'alt') {\n      pressed = event.altKey ? true : false;\n    } else if (key === 'meta') {\n      pressed = event.metaKey ? true : false;\n    } else if (aliasKeys.indexOf(key) !== -1) {\n      pressed = event.keyCode === aliases[key] ? true : false;\n    } else if (event.keyCode === key.toUpperCase().charCodeAt(0)) {\n      pressed = true;\n    }\n\n    if (!pressed) return false;\n  }\n\n  return true;\n};\n\n//# sourceURL=webpack://break-the-blocks-game/./threeX/THREEx-keyboard/threeX.keyboardState.js?")},"./src/public/css/github-corner.css":
/*!******************************************!*\
  !*** ./src/public/css/github-corner.css ***!
  \******************************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://break-the-blocks-game/./src/public/css/github-corner.css?")},"./src/public/css/main.css":
/*!*********************************!*\
  !*** ./src/public/css/main.css ***!
  \*********************************/(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://break-the-blocks-game/./src/public/css/main.css?")},"./src/js/app/world/mainMenuStars.mjs":
/*!********************************************!*\
  !*** ./src/js/app/world/mainMenuStars.mjs ***!
  \********************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"particles\": () => (/* binding */ particles)\n/* harmony export */ });\n/* harmony import */ var _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../threeJS/three.module.js */ \"./threeJS/three.module.js\");\n // points\n\nvar vertices = [];\n\nfor (var i = 0; i < 10000; i++) {\n  var x = _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MathUtils.randFloatSpread(2000);\n  var y = _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MathUtils.randFloatSpread(2000);\n  var z = _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MathUtils.randFloatSpread(2000);\n  vertices.push(x, y, z);\n}\n\nvar geometry = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry(); // create a simple square shape.\n\ngeometry.setAttribute('position', new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Float32BufferAttribute(vertices, 3));\nvar textureLoader = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.TextureLoader(); // particles texture\n\nvar particlesTexture = textureLoader.load('/Images/1.png');\nvar particlesMaterials = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.PointsMaterial({\n  size: 5,\n  sizeAttenuation: true,\n  transparent: true,\n  alphaMap: particlesTexture,\n  depthWrite: false\n});\nvar particles = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Points(geometry, particlesMaterials);\n\n//# sourceURL=webpack://break-the-blocks-game/./src/js/app/world/mainMenuStars.mjs?")},"./src/js/font.mjs":
/*!*************************!*\
  !*** ./src/js/font.mjs ***!
  \*************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "back": () => (/* binding */ back),\n/* harmony export */   "creator": () => (/* binding */ creator),\n/* harmony export */   "mainMenuMusic": () => (/* binding */ mainMenuMusic),\n/* harmony export */   "minusOn": () => (/* binding */ minusOn),\n/* harmony export */   "off": () => (/* binding */ off),\n/* harmony export */   "on": () => (/* binding */ on),\n/* harmony export */   "play": () => (/* binding */ play),\n/* harmony export */   "plusOn": () => (/* binding */ plusOn),\n/* harmony export */   "settings": () => (/* binding */ settings),\n/* harmony export */   "title": () => (/* binding */ title)\n/* harmony export */ });\n/* harmony import */ var _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../threeJS/three.module.js */ "./threeJS/three.module.js");\n/* harmony import */ var _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadingResources.mjs */ "./src/js/loadingResources.mjs");\n/* harmony import */ var _textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./textGeometry.mjs */ "./src/js/textGeometry.mjs");\n\n\n\nvar titleMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.titleMatcap\n});\nvar playMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.playMatcap\n});\nvar settingsMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.settingsMatcap\n});\nvar creatorMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.creatorMatcap\n});\nvar mainMenuMusicMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.mainMenuMusicMatcap\n});\nvar backMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.backMatcap\n});\nvar onMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.onMatcap\n});\nvar plusOnMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.plusOnMatcap\n});\nvar minusOnMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.minusOnMatcap\n});\nvar offMaterial = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.MeshMatcapMaterial({\n  matcap: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.offMatcap\n});\nvar title = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.titleGeometry, titleMaterial);\nvar play = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.playGeometry, playMaterial);\nvar settings = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.settingsGeometry, settingsMaterial);\nvar creator = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.creatorGeometry, creatorMaterial); // prettier-ignore\n\nvar mainMenuMusic = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.mainMenuGeometry, mainMenuMusicMaterial);\nvar back = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.backGeometry, backMaterial);\nvar on = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.onGeometry, onMaterial);\nvar plusOn = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.plusOnGeometry, plusOnMaterial);\nvar minusOn = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.minusOnGeometry, minusOnMaterial);\nvar off = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Mesh(_textGeometry_mjs__WEBPACK_IMPORTED_MODULE_2__.offGeometry, offMaterial);\n\n//# sourceURL=webpack://break-the-blocks-game/./src/js/font.mjs?')},"./src/js/loadingResources.mjs":
/*!*************************************!*\
  !*** ./src/js/loadingResources.mjs ***!
  \*************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "backMatcap": () => (/* binding */ backMatcap),\n/* harmony export */   "blockHitSound": () => (/* binding */ blockHitSound),\n/* harmony export */   "creatorMatcap": () => (/* binding */ creatorMatcap),\n/* harmony export */   "font": () => (/* binding */ font),\n/* harmony export */   "loseSound": () => (/* binding */ loseSound),\n/* harmony export */   "mainMenuMusicMatcap": () => (/* binding */ mainMenuMusicMatcap),\n/* harmony export */   "mainMenuSound": () => (/* binding */ mainMenuSound),\n/* harmony export */   "minusOnMatcap": () => (/* binding */ minusOnMatcap),\n/* harmony export */   "offMatcap": () => (/* binding */ offMatcap),\n/* harmony export */   "onMatcap": () => (/* binding */ onMatcap),\n/* harmony export */   "playMatcap": () => (/* binding */ playMatcap),\n/* harmony export */   "playSound": () => (/* binding */ playSound),\n/* harmony export */   "plusOnMatcap": () => (/* binding */ plusOnMatcap),\n/* harmony export */   "settingsMatcap": () => (/* binding */ settingsMatcap),\n/* harmony export */   "settingsSound": () => (/* binding */ settingsSound),\n/* harmony export */   "titleMatcap": () => (/* binding */ titleMatcap),\n/* harmony export */   "winSound": () => (/* binding */ winSound)\n/* harmony export */ });\n/* harmony import */ var _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../threeJS/three.module.js */ "./threeJS/three.module.js");\n/* harmony import */ var _threeJS_examples_jsm_loaders_FontLoader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../threeJS/examples/jsm/loaders/FontLoader.js */ "./threeJS/examples/jsm/loaders/FontLoader.js");\n/* harmony import */ var _font_JetBrains_Mono_Regular_typeface_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../font/JetBrains_Mono_Regular.typeface.json */ "./font/JetBrains_Mono_Regular.typeface.json");\n\n\n // Loaders\n\nvar fontLoader = new _threeJS_examples_jsm_loaders_FontLoader_js__WEBPACK_IMPORTED_MODULE_1__.FontLoader();\nvar textureLoader = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.TextureLoader(); // fetching and loading json file\n// const response = await fetch(\'../../font/JetBrains_Mono_Regular.typeface.json\');\n// const json = await response.json();\n// loading textures and fonts\n\nvar font = fontLoader.parse(_font_JetBrains_Mono_Regular_typeface_json__WEBPACK_IMPORTED_MODULE_2__);\nvar yellowMatcap = textureLoader.load(\'../../Images/yellow.png\');\nvar titleMatcap = yellowMatcap;\nvar playMatcap = textureLoader.load(\'../../Images/cyan.png\');\nvar red_2Matcap = textureLoader.load(\'../../Images/red_2.png\');\nvar settingsMatcap = red_2Matcap;\nvar matWhiteMatcap = textureLoader.load(\'../../Images/matWhite.png\');\nvar creatorMatcap = matWhiteMatcap; // settings Matcap\n\nvar mainMenuMusicMatcap = yellowMatcap;\nvar backMatcap = red_2Matcap;\nvar onMatcap = matWhiteMatcap;\nvar plusOnMatcap = matWhiteMatcap;\nvar minusOnMatcap = matWhiteMatcap;\nvar offMatcap = matWhiteMatcap; // sounds\n\nvar playSound = new Audio(\'../../sounds/play.mp3\');\nvar settingsSound = new Audio(\'../../sounds/settings.mp3\');\nvar blockHitSound = new Audio(\'../../sounds/block-hit.mp3\');\nvar winSound = new Audio(\'../../sounds/win.mp3\');\nvar loseSound = new Audio(\'../../sounds/lose.mp3\');\nvar mainMenuSound = new Audio(\'../../sounds/bim-bom-bomp.mp3\');\nmainMenuSound.loop = true;\n\n//# sourceURL=webpack://break-the-blocks-game/./src/js/loadingResources.mjs?')},"./src/js/mainMenu.mjs":
/*!*****************************!*\
  !*** ./src/js/mainMenu.mjs ***!
  \*****************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./loadingResources.mjs */ \"./src/js/loadingResources.mjs\");\n/* harmony import */ var _public_css_main_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../public/css/main.css */ \"./src/public/css/main.css\");\n/* harmony import */ var _public_css_github_corner_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../public/css/github-corner.css */ \"./src/public/css/github-corner.css\");\n/* harmony import */ var _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../threeJS/three.module.js */ \"./threeJS/three.module.js\");\n/* harmony import */ var _threeX_THREEx_Events_threex_domevents_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../threeX/THREEx-Events/threex.domevents.mjs */ \"./threeX/THREEx-Events/threex.domevents.mjs\");\n/* harmony import */ var _threeX_THREEx_keyboard_threeX_keyboardState_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../threeX/THREEx-keyboard/threeX.keyboardState.js */ \"./threeX/THREEx-keyboard/threeX.keyboardState.js\");\n/* harmony import */ var _threeJS_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../threeJS/examples/jsm/controls/OrbitControls.js */ \"./threeJS/examples/jsm/controls/OrbitControls.js\");\n/* harmony import */ var _font_mjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./font.mjs */ \"./src/js/font.mjs\");\n/* harmony import */ var _app_world_mainMenuStars_mjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./app/world/mainMenuStars.mjs */ \"./src/js/app/world/mainMenuStars.mjs\");\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n\n\n\n\n\n\n // prettier-ignore\n\n\n // global variables\n// Cancel Animation Variable\n\nvar cancel = null; // y of on and off\n\nvar on_yAxis = 49;\nvar plusOn_yAxis = 50.5;\nvar minusOn_yAxis = 45.5;\nvar off_yAxis = 59;\nvar musicVolume = 0.1;\n_loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume = musicVolume; // making on button nonvisible\n\nTweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.material, 0, {\n  opacity: 0\n});\nTweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.material, 0, {\n  opacity: 0\n});\nTweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.material, 0, {\n  opacity: 0\n}); // for keyboard events\n\nvar keyboard = new _threeX_THREEx_keyboard_threeX_keyboardState_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](); // scene\n\nvar scene = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__.Scene();\nscene.background = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__.Color(0x000000); // geometry\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.title.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.title.geometry.center(); // centering the Mesh...\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.title.position.y = 105;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.geometry.computeBoundingBox();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.geometry.center();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.position.y = 60;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.geometry.center(); // make it at the center\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.position.y = 40;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.geometry.center(); // make it at the center\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.position.y = -40;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.position.z = -40;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.rotateX(-1.57 / 2 + 0.5); // in radian (1 radian == 57.3°)\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.geometry.computeBoundingBox();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.geometry.center();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.position.y = -30000; // must return to 60\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.geometry.center(); // make it at the center\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.position.y = -30000; // must return to 40\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.geometry.center(); // centering the Mesh...\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position.y = -30000; // must return to 59\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position.x = 28;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.material.transparent = true;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.geometry.computeBoundingBox();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.geometry.center();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position.x = 38;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position.y = -30000;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.material.transparent = true;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.geometry.computeBoundingBox();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.geometry.center();\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position.x = 38;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position.y = -30000;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.material.transparent = true;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.geometry.computeBoundingBox(); // computing the bounding box\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.geometry.center(); // centering the Mesh...\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position.y = -30000; // must return to 69\n\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position.x = 31;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.rotation.x = -0.1;\n_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.material.transparent = true; // width, height\n\nvar clientWidth = document.documentElement.clientWidth;\nvar clientHeight = document.documentElement.clientHeight;\nvar renderer = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__.WebGLRenderer({\n  antialias: true\n});\nrenderer.setSize(clientWidth, clientHeight);\ndocument.body.append(renderer.domElement); // camera\n// prettier-ignore\n\nvar camera = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__.PerspectiveCamera(45, clientWidth / clientHeight, 0.1, 1000); // THREEx\n\nvar domEvents = new _threeX_THREEx_Events_threex_domevents_mjs__WEBPACK_IMPORTED_MODULE_4__.THREEx.DomEvents(camera, renderer.domElement); // OrbitControls\n\nvar controls = new _threeJS_examples_jsm_controls_OrbitControls_js__WEBPACK_IMPORTED_MODULE_6__.OrbitControls(camera, renderer.domElement);\ncontrols.enableDamping = true; // smooth stopping\n\ncontrols.target = _font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.position.clone(); // to focus at the same as the play Object\n\ncamera.position.set(0, 100, 300);\ncontrols.update(); // Helpers\n// const AxesHelper = new THREE.AxesHelper(50);\n// scene.add(AxesHelper);\n// Clock\n\nvar clock = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_3__.Clock(); // adding to the scene\n\nscene.add(camera, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.title, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.play, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.back, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.on, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn, _font_mjs__WEBPACK_IMPORTED_MODULE_7__.off, _app_world_mainMenuStars_mjs__WEBPACK_IMPORTED_MODULE_8__.particles);\n\nfunction animate() {\n  cancel = requestAnimationFrame(animate);\n  var ElapsedTime = clock.getElapsedTime(); //Get the seconds passed since the clock started\n  // particles rotation\n\n  _app_world_mainMenuStars_mjs__WEBPACK_IMPORTED_MODULE_8__.particles.rotation.y += 0.001; // creator\n\n  _font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.position.y = -20 * Math.abs(Math.cos(ElapsedTime * 2));\n  controls.update();\n  renderer.render(scene, camera);\n}\n\nanimate(); // events\n\ndocument.addEventListener('visibilitychange', function (event) {\n  if (document.visibilityState === 'visible' && on_yAxis === 59) {\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.play();\n  } else if (document.visibilityState === 'hidden' || on_yAxis === 49) {\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.pause();\n  }\n});\nwindow.addEventListener('resize', function () {\n  clientWidth = document.documentElement.clientWidth;\n  clientHeight = document.documentElement.clientHeight;\n  camera.aspect = clientWidth / clientHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(clientWidth, clientHeight);\n});\ndocument.addEventListener('keypress', function (event) {\n  // prettier-ignore\n  if (!document.fullscreenElement && (event.key === 'f' || event.key === 'F')) {\n    document.body.requestFullscreen(); // prettier-ignore\n  } else if (!document.fullscreenElement && (event.key === 'f' || event.key === 'F')) {\n    document.exitFullscreen();\n  }\n});\ndocument.addEventListener('keydown', function (event) {\n  if (event.key === 'ArrowUp') {\n    // prettier-ignore\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume = _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume === 1.0 ? 1 : Number((_loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume + 0.1).toFixed(1));\n  } else if (event.key === 'ArrowDown') {\n    // prettier-ignore\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume = _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume === 0.1 ? 0.1 : Number((_loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume - 0.1).toFixed(1));\n  }\n});\ndomEvents.addEventListener(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play, 'click', /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(event) {\n    var _yield$import, AppRenderer;\n\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.playSound.play();\n            cancelAnimationFrame(cancel); // App render\n\n            _context.next = 4;\n            return __webpack_require__.e(/*! import() */ \"src_js_app_app_mjs\").then(__webpack_require__.bind(__webpack_require__, /*! ./app/app.mjs */ \"./src/js/app/app.mjs\"));\n\n          case 4:\n            _yield$import = _context.sent;\n            AppRenderer = _yield$import.AppRenderer;\n            document.body.append(AppRenderer.domElement);\n            renderer.domElement.remove();\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}());\ndomEvents.addEventListener(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings, 'click', function (event) {\n  // prettier-ignore\n  {\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.title.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: 30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: 30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: 30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      x: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: 60,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: 40,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: on_yAxis,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: plusOn_yAxis,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: minusOn_yAxis,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: off_yAxis,\n      overwrite: true\n    });\n  }\n});\ndomEvents.addEventListener(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back, 'click', function (event) {\n  // prettier-ignore\n  {\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.mainMenuMusic.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.back.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position, {\n      duration: 10.5,\n      ease: \"bounce.out\",\n      y: -30000,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.title.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: 105,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.play.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: 60,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.settings.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      y: 40,\n      overwrite: true\n    });\n    gsap.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.creator.position, {\n      duration: 2,\n      ease: \"power4.out\",\n      x: 0,\n      overwrite: true\n    });\n  }\n});\n\nfunction plusOnButtonFunction() {\n  // prettier-ignore\n  _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume = _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume === 1.0 ? 1 : Number((_loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume + 0.1).toFixed(1));\n}\n\nfunction minusOnButtonFunction() {\n  // prettier-ignore\n  _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume = _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume === 0.1 ? 0.1 : Number((_loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.volume - 0.1).toFixed(1));\n}\n\nfunction onButtonFunction() {\n  // prettier-ignore\n  {\n    domEvents.unbind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on, 'click', onButtonFunction);\n    domEvents.unbind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn, 'click', plusOnButtonFunction);\n    domEvents.unbind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn, 'click', minusOnButtonFunction);\n    domEvents.bind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off, 'click', offButtonFunction);\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.pause();\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position, {}, {\n      y: on_yAxis -= 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position, {}, {\n      y: plusOn_yAxis -= 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position, {}, {\n      y: minusOn_yAxis -= 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position, {}, {\n      y: off_yAxis -= 10,\n      duration: 1\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.material, 1, {\n      opacity: 0\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.material, 1, {\n      opacity: 0\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.material, 1, {\n      opacity: 0\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.material, 1, {\n      opacity: 1\n    });\n  }\n}\n\nfunction offButtonFunction() {\n  // prettier-ignore\n  {\n    domEvents.unbind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off, 'click', offButtonFunction);\n    domEvents.bind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on, 'click', onButtonFunction);\n    domEvents.bind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn, 'click', plusOnButtonFunction);\n    domEvents.bind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn, 'click', minusOnButtonFunction);\n    _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_0__.mainMenuSound.play();\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.position, {}, {\n      y: on_yAxis += 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.position, {}, {\n      y: plusOn_yAxis += 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.position, {}, {\n      y: minusOn_yAxis += 10,\n      duration: 1\n    });\n    gsap.fromTo(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.position, {}, {\n      y: off_yAxis += 10,\n      duration: 1\n    }); // in 1 second it goes to opacity=1\n\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.on.material, 1, {\n      opacity: 1\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.plusOn.material, 1, {\n      opacity: 1\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.minusOn.material, 1, {\n      opacity: 1\n    });\n    TweenMax.to(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off.material, 1, {\n      opacity: 0\n    });\n  }\n} // prettier-ignore\n\n\ndomEvents.bind(_font_mjs__WEBPACK_IMPORTED_MODULE_7__.off, 'click', offButtonFunction); // let timer = null;\n// domEvents.addEventListener(exit, 'click', (event) => {\n//     exitSound.play();\n//     document.querySelector('#overlay').style.display = 'flex';\n//     let sec = 3;\n//     document.getElementById('timer').innerHTML = '😢';\n//     timer = setInterval(function () {\n//         document.getElementById('timer').innerHTML = '' + sec;\n//         sec--;\n//         if (sec < 0) {\n//             clearInterval(timer);\n//             cancelAnimationFrame(cancel);\n//         }\n//     }, 1000);\n// });\n// window.off = function () {\n//     clearInterval(timer);\n//     document.querySelector('#overlay').style.display = 'none';\n// };\n\nwindow.playAgain = function () {\n  window.open('https://break-the-blocks-game.vercel.app', '_self');\n};\n\n//# sourceURL=webpack://break-the-blocks-game/./src/js/mainMenu.mjs?")},"./src/js/textGeometry.mjs":
/*!*********************************!*\
  !*** ./src/js/textGeometry.mjs ***!
  \*********************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "backGeometry": () => (/* binding */ backGeometry),\n/* harmony export */   "creatorGeometry": () => (/* binding */ creatorGeometry),\n/* harmony export */   "mainMenuGeometry": () => (/* binding */ mainMenuGeometry),\n/* harmony export */   "minusOnGeometry": () => (/* binding */ minusOnGeometry),\n/* harmony export */   "offGeometry": () => (/* binding */ offGeometry),\n/* harmony export */   "onGeometry": () => (/* binding */ onGeometry),\n/* harmony export */   "playGeometry": () => (/* binding */ playGeometry),\n/* harmony export */   "plusOnGeometry": () => (/* binding */ plusOnGeometry),\n/* harmony export */   "settingsGeometry": () => (/* binding */ settingsGeometry),\n/* harmony export */   "titleGeometry": () => (/* binding */ titleGeometry)\n/* harmony export */ });\n/* harmony import */ var _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../threeJS/examples/jsm/geometries/TextGeometry.js */ "./threeJS/examples/jsm/geometries/TextGeometry.js");\n/* harmony import */ var _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./loadingResources.mjs */ "./src/js/loadingResources.mjs");\n\n\nvar titleGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Break The Blocks Game\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 14,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 1,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar playGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Play\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 10,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar settingsGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Settings\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 8,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar creatorGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Created by Tariq\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 8,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n}); // settings geometry\n\nvar mainMenuGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Music: \', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 8,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar backGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'Back\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 8,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar onGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'ON\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 7,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar plusOnGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'+\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 7,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar minusOnGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'-\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 7,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\nvar offGeometry = new _threeJS_examples_jsm_geometries_TextGeometry_js__WEBPACK_IMPORTED_MODULE_0__.TextGeometry(\'OFF\', {\n  font: _loadingResources_mjs__WEBPACK_IMPORTED_MODULE_1__.font,\n  size: 7,\n  height: 5,\n  curveSegments: 5,\n  bevelEnabled: true,\n  bevelThickness: 0.1,\n  bevelSize: 0.5,\n  bevelOffset: 0,\n  bevelSegments: 5\n});\n\n//# sourceURL=webpack://break-the-blocks-game/./src/js/textGeometry.mjs?')},"./threeJS/examples/jsm/controls/OrbitControls.js":
/*!********************************************************!*\
  !*** ./threeJS/examples/jsm/controls/OrbitControls.js ***!
  \********************************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MapControls\": () => (/* binding */ MapControls),\n/* harmony export */   \"OrbitControls\": () => (/* binding */ OrbitControls)\n/* harmony export */ });\n/* harmony import */ var _three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../three.module.js */ \"./threeJS/three.module.js\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar _changeEvent = {\n  type: 'change'\n};\nvar _startEvent = {\n  type: 'start'\n};\nvar _endEvent = {\n  type: 'end'\n};\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n    if (domElement === undefined) console.warn('THREE.OrbitControls: The second parameter \"domElement\" is now mandatory.');\n    if (domElement === document) console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n    _this.object = object;\n    _this.domElement = domElement;\n    _this.domElement.style.touchAction = 'none'; // disable touch scroll\n    // Set to false to disable this control\n\n    _this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n    _this.target = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n    _this.minDistance = 0;\n    _this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n    _this.minZoom = 0;\n    _this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n\n    _this.minPolarAngle = 0; // radians\n\n    _this.maxPolarAngle = Math.PI; // radians\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n\n    _this.minAzimuthAngle = -Infinity; // radians\n\n    _this.maxAzimuthAngle = Infinity; // radians\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n\n    _this.enableDamping = false;\n    _this.dampingFactor = 0.05; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n\n    _this.enableZoom = true;\n    _this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n    _this.enableRotate = true;\n    _this.rotateSpeed = 1.0; // Set to false to disable panning\n\n    _this.enablePan = true;\n    _this.panSpeed = 1.0;\n    _this.screenSpacePanning = true; // if false, pan orthogonal to world-space direction camera.up\n\n    _this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n    _this.autoRotate = false;\n    _this.autoRotateSpeed = 2.0; // 30 seconds per orbit when fps is 60\n    // The four arrow keys\n\n    _this.keys = {\n      LEFT: 'ArrowLeft',\n      UP: 'ArrowUp',\n      RIGHT: 'ArrowRight',\n      BOTTOM: 'ArrowDown'\n    }; // Mouse buttons\n\n    _this.mouseButtons = {\n      LEFT: _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE,\n      MIDDLE: _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY,\n      RIGHT: _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN\n    }; // Touch fingers\n\n    _this.touches = {\n      ONE: _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE,\n      TWO: _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN\n    }; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object.zoom; // the target DOM element for key events\n\n    _this._domElementKeyEvents = null; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.getDistance = function () {\n      return this.object.position.distanceTo(this.target);\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object.zoom;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      scope.object.zoom = scope.zoom0;\n      scope.object.updateProjectionMatrix();\n      scope.dispatchEvent(_changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(); // so camera.up is the orbit axis\n\n      var quat = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Quaternion().setFromUnitVectors(object.up, new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      var lastQuaternion = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(_changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }();\n\n    _this.dispose = function () {\n      scope.domElement.removeEventListener('contextmenu', onContextMenu);\n      scope.domElement.removeEventListener('pointerdown', onPointerDown);\n      scope.domElement.removeEventListener('pointercancel', onPointerCancel);\n      scope.domElement.removeEventListener('wheel', onMouseWheel);\n      scope.domElement.removeEventListener('pointermove', onPointerMove);\n      scope.domElement.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    var sphericalDelta = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Spherical();\n    var scale = 1;\n    var panOffset = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n    var zoomChanged = false;\n    var rotateStart = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var rotateEnd = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var rotateDelta = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var panStart = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var panEnd = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var panDelta = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var dollyStart = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var dollyEnd = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var dollyDelta = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n    var pointers = [];\n    var pointerPositions = {};\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function\n      /*event*/\n    handleMouseUp() {// no-op\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.code) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate() {\n      if (pointers.length === 1) {\n        rotateStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan() {\n      if (pointers.length === 1) {\n        panStart.set(pointers[0].pageX, pointers[0].pageY);\n      } else {\n        var x = 0.5 * (pointers[0].pageX + pointers[1].pageX);\n        var y = 0.5 * (pointers[0].pageY + pointers[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly() {\n      var dx = pointers[0].pageX - pointers[1].pageX;\n      var dy = pointers[0].pageY - pointers[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enablePan) handleTouchStartPan();\n    }\n\n    function handleTouchStartDollyRotate() {\n      if (scope.enableZoom) handleTouchStartDolly();\n      if (scope.enableRotate) handleTouchStartRotate();\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (pointers.length == 1) {\n        rotateEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n      rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n      rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (pointers.length === 1) {\n        panEnd.set(event.pageX, event.pageY);\n      } else {\n        var position = getSecondPointerPosition(event);\n        var x = 0.5 * (event.pageX + position.x);\n        var y = 0.5 * (event.pageY + position.y);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var position = getSecondPointerPosition(event);\n      var dx = event.pageX - position.x;\n      var dy = event.pageY - position.y;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n\n    function\n      /*event*/\n    handleTouchEnd() {// no-op\n    } //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      if (pointers.length === 0) {\n        scope.domElement.setPointerCapture(event.pointerId);\n        scope.domElement.addEventListener('pointermove', onPointerMove);\n        scope.domElement.addEventListener('pointerup', onPointerUp);\n      } //\n\n\n      addPointer(event);\n\n      if (event.pointerType === 'touch') {\n        onTouchStart(event);\n      } else {\n        onMouseDown(event);\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchMove(event);\n      } else {\n        onMouseMove(event);\n      }\n    }\n\n    function onPointerUp(event) {\n      if (scope.enabled === false) return;\n\n      if (event.pointerType === 'touch') {\n        onTouchEnd();\n      } else {\n        onMouseUp(event);\n      }\n\n      removePointer(event); //\n\n      if (pointers.length === 0) {\n        scope.domElement.releasePointerCapture(event.pointerId);\n        scope.domElement.removeEventListener('pointermove', onPointerMove);\n        scope.domElement.removeEventListener('pointerup', onPointerUp);\n      }\n    }\n\n    function onPointerCancel(event) {\n      removePointer(event);\n    }\n\n    function onMouseDown(event) {\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp(event) {\n      handleMouseUp(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n      event.preventDefault();\n      scope.dispatchEvent(_startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(_endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      trackPointer(event);\n\n      switch (pointers.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate();\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan();\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan();\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate();\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(_startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      trackPointer(event);\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd(event) {\n      handleTouchEnd(event);\n      scope.dispatchEvent(_endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    }\n\n    function addPointer(event) {\n      pointers.push(event);\n    }\n\n    function removePointer(event) {\n      delete pointerPositions[event.pointerId];\n\n      for (var i = 0; i < pointers.length; i++) {\n        if (pointers[i].pointerId == event.pointerId) {\n          pointers.splice(i, 1);\n          return;\n        }\n      }\n    }\n\n    function trackPointer(event) {\n      var position = pointerPositions[event.pointerId];\n\n      if (position === undefined) {\n        position = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2();\n        pointerPositions[event.pointerId] = position;\n      }\n\n      position.set(event.pageX, event.pageY);\n    }\n\n    function getSecondPointerPosition(event) {\n      var pointer = event.pointerId === pointers[0].pointerId ? pointers[1] : pointers[0];\n      return pointerPositions[pointer.pointerId];\n    } //\n\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu);\n    scope.domElement.addEventListener('pointerdown', onPointerDown);\n    scope.domElement.addEventListener('pointercancel', onPointerCancel);\n    scope.domElement.addEventListener('wheel', onMouseWheel, {\n      passive: false\n    }); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return _createClass(OrbitControls);\n}(_three_module_js__WEBPACK_IMPORTED_MODULE_0__.EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = _three_module_js__WEBPACK_IMPORTED_MODULE_0__.MOUSE.ROTATE;\n    _this2.touches.ONE = _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.PAN;\n    _this2.touches.TWO = _three_module_js__WEBPACK_IMPORTED_MODULE_0__.TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return _createClass(MapControls);\n}(OrbitControls);\n\n\n\n//# sourceURL=webpack://break-the-blocks-game/./threeJS/examples/jsm/controls/OrbitControls.js?")},"./threeJS/examples/jsm/geometries/TextGeometry.js":
/*!*********************************************************!*\
  !*** ./threeJS/examples/jsm/geometries/TextGeometry.js ***!
  \*********************************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "TextGeometry": () => (/* binding */ TextGeometry)\n/* harmony export */ });\n/* harmony import */ var _three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../three.module.js */ "./threeJS/three.module.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n/**\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\r\n *  bevelOffset: <float> // how far from text outline does bevel start\r\n * }\r\n */\n\n\nvar TextGeometry = /*#__PURE__*/function (_ExtrudeGeometry) {\n  _inherits(TextGeometry, _ExtrudeGeometry);\n\n  var _super = _createSuper(TextGeometry);\n\n  function TextGeometry(text) {\n    var _this;\n\n    var parameters = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, TextGeometry);\n\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error(\'THREE.TextGeometry: font parameter is not an instance of THREE.Font.\');\n      return _possibleConstructorReturn(_this, new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.BufferGeometry());\n    }\n\n    var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n    parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n    if (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n    if (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n    _this = _super.call(this, shapes, parameters);\n    _this.type = \'TextGeometry\';\n    return _this;\n  }\n\n  return _createClass(TextGeometry);\n}(_three_module_js__WEBPACK_IMPORTED_MODULE_0__.ExtrudeGeometry);\n\n\n\n//# sourceURL=webpack://break-the-blocks-game/./threeJS/examples/jsm/geometries/TextGeometry.js?')},"./threeJS/examples/jsm/loaders/FontLoader.js":
/*!****************************************************!*\
  !*** ./threeJS/examples/jsm/loaders/FontLoader.js ***!
  \****************************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   "Font": () => (/* binding */ Font),\n/* harmony export */   "FontLoader": () => (/* binding */ FontLoader)\n/* harmony export */ });\n/* harmony import */ var _three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../three.module.js */ "./threeJS/three.module.js");\nfunction _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\nvar FontLoader = /*#__PURE__*/function (_Loader) {\n  _inherits(FontLoader, _Loader);\n\n  var _super = _createSuper(FontLoader);\n\n  function FontLoader(manager) {\n    _classCallCheck(this, FontLoader);\n\n    return _super.call(this, manager);\n  }\n\n  _createClass(FontLoader, [{\n    key: "load",\n    value: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(scope.withCredentials);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn(\'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.\');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n        if (onLoad) onLoad(font);\n      }, onProgress, onError);\n    }\n  }, {\n    key: "parse",\n    value: function parse(json) {\n      return new Font(json);\n    }\n  }]);\n\n  return FontLoader;\n}(_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Loader); //\n\n\nvar Font = /*#__PURE__*/function () {\n  function Font(data) {\n    _classCallCheck(this, Font);\n\n    this.type = \'Font\';\n    this.data = data;\n  }\n\n  _createClass(Font, [{\n    key: "generateShapes",\n    value: function generateShapes(text) {\n      var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  }]);\n\n  return Font;\n}();\n\nfunction createPaths(text, size, data) {\n  var chars = Array.from(text);\n  var scale = size / data.resolution;\n  var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n  var paths = [];\n  var offsetX = 0,\n      offsetY = 0;\n\n  for (var i = 0; i < chars.length; i++) {\n    var _char = chars[i];\n\n    if (_char === \'\\n\') {\n      offsetX = 0;\n      offsetY -= line_height;\n    } else {\n      var ret = createPath(_char, scale, offsetX, offsetY, data);\n      offsetX += ret.offsetX;\n      paths.push(ret.path);\n    }\n  }\n\n  return paths;\n}\n\nfunction createPath(_char2, scale, offsetX, offsetY, data) {\n  var glyph = data.glyphs[_char2] || data.glyphs[\'?\'];\n\n  if (!glyph) {\n    console.error(\'THREE.Font: character "\' + _char2 + \'" does not exists in font family \' + data.familyName + \'.\');\n    return;\n  }\n\n  var path = new _three_module_js__WEBPACK_IMPORTED_MODULE_0__.ShapePath();\n  var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n  if (glyph.o) {\n    var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(\' \'));\n\n    for (var i = 0, l = outline.length; i < l;) {\n      var action = outline[i++];\n\n      switch (action) {\n        case \'m\':\n          // moveTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.moveTo(x, y);\n          break;\n\n        case \'l\':\n          // lineTo\n          x = outline[i++] * scale + offsetX;\n          y = outline[i++] * scale + offsetY;\n          path.lineTo(x, y);\n          break;\n\n        case \'q\':\n          // quadraticCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n          break;\n\n        case \'b\':\n          // bezierCurveTo\n          cpx = outline[i++] * scale + offsetX;\n          cpy = outline[i++] * scale + offsetY;\n          cpx1 = outline[i++] * scale + offsetX;\n          cpy1 = outline[i++] * scale + offsetY;\n          cpx2 = outline[i++] * scale + offsetX;\n          cpy2 = outline[i++] * scale + offsetY;\n          path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n          break;\n      }\n    }\n  }\n\n  return {\n    offsetX: glyph.ha * scale,\n    path: path\n  };\n}\n\nFont.prototype.isFont = true;\n\n\n//# sourceURL=webpack://break-the-blocks-game/./threeJS/examples/jsm/loaders/FontLoader.js?')},"./threeX/THREEx-Events/threex.domevents.mjs":
/*!***************************************************!*\
  !*** ./threeX/THREEx-Events/threex.domevents.mjs ***!
  \***************************************************/(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"THREEx\": () => (/* binding */ THREEx)\n/* harmony export */ });\n/* harmony import */ var _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../threeJS/three.module.js */ \"./threeJS/three.module.js\");\n // This THREEx helper makes it easy to handle the mouse events in your 3D scene\n//\n// * CHANGES NEEDED\n//   * handle drag/drop\n//   * notify events not object3D - like DOM\n//     * so single object with property\n//   * DONE bubling implement bubling/capturing\n//   * DONE implement event.stopPropagation()\n//   * DONE implement event.type = \"click\" and co\n//   * DONE implement event.target\n//\n// # Lets get started\n//\n// First you include it in your page\n//\n// ```<script src='threex.domevent.js'>< /script>```\n//\n// # use the object oriented api\n//\n// You bind an event like this\n//\n// ```mesh.on('click', function(object3d){ ... })```\n//\n// To unbind an event, just do\n//\n// ```mesh.off('click', function(object3d){ ... })```\n//\n// As an alternative, there is another naming closer DOM events.\n// Pick the one you like, they are doing the same thing\n//\n// ```mesh.addEventListener('click', function(object3d){ ... })```\n// ```mesh.removeEventListener('click', function(object3d){ ... })```\n//\n// # Supported Events\n//\n// Always in a effort to stay close to usual pratices, the events name are the same as in DOM.\n// The semantic is the same too.\n// Currently, the available events are\n// [click, dblclick, mouseup, mousedown](http://www.quirksmode.org/dom/events/click.html),\n// [mouseover and mouse out](http://www.quirksmode.org/dom/events/mouseover.html).\n//\n// # use the standalone api\n//\n// The object-oriented api modifies THREE.Object3D class.\n// It is a global class, so it may be legitimatly considered unclean by some people.\n// If this bother you, simply do ```THREEx.DomEvents.noConflict()``` and use the\n// standalone API. In fact, the object oriented API is just a thin wrapper\n// on top of the standalone API.\n//\n// First, you instanciate the object\n//\n// ```var domEvent = new THREEx.DomEvent();```\n//\n// Then you bind an event like this\n//\n// ```domEvent.bind(mesh, 'click', function(object3d){ object3d.scale.x *= 2; });```\n//\n// To unbind an event, just do\n//\n// ```domEvent.unbind(mesh, 'click', callback);```\n//\n//\n// # Code\n//\n\n/** @namespace */\n\nvar THREEx = THREEx || {}; // # Constructor\n\nTHREEx.DomEvents = function (camera, domElement) {\n  this._camera = camera || null;\n  this._domElement = domElement || document;\n  this._raycaster = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Raycaster();\n  this._selected = null;\n  this._boundObjs = {}; // Bind dom event for mouse and touch\n\n  var _this = this;\n\n  this._$onClick = function () {\n    _this._onClick.apply(_this, arguments);\n  };\n\n  this._$onDblClick = function () {\n    _this._onDblClick.apply(_this, arguments);\n  };\n\n  this._$onMouseMove = function () {\n    _this._onMouseMove.apply(_this, arguments);\n  };\n\n  this._$onMouseDown = function () {\n    _this._onMouseDown.apply(_this, arguments);\n  };\n\n  this._$onMouseUp = function () {\n    _this._onMouseUp.apply(_this, arguments);\n  };\n\n  this._$onTouchMove = function () {\n    _this._onTouchMove.apply(_this, arguments);\n  };\n\n  this._$onTouchStart = function () {\n    _this._onTouchStart.apply(_this, arguments);\n  };\n\n  this._$onTouchEnd = function () {\n    _this._onTouchEnd.apply(_this, arguments);\n  };\n\n  this._$onContextmenu = function () {\n    _this._onContextmenu.apply(_this, arguments);\n  };\n\n  this._domElement.addEventListener('click', this._$onClick, false);\n\n  this._domElement.addEventListener('dblclick', this._$onDblClick, false);\n\n  this._domElement.addEventListener('mousemove', this._$onMouseMove, false);\n\n  this._domElement.addEventListener('mousedown', this._$onMouseDown, false);\n\n  this._domElement.addEventListener('mouseup', this._$onMouseUp, false);\n\n  this._domElement.addEventListener('touchmove', this._$onTouchMove, false);\n\n  this._domElement.addEventListener('touchstart', this._$onTouchStart, false);\n\n  this._domElement.addEventListener('touchend', this._$onTouchEnd, false);\n\n  this._domElement.addEventListener('contextmenu', this._$onContextmenu, false);\n}; // # Destructor\n\n\nTHREEx.DomEvents.prototype.destroy = function () {\n  // unBind dom event for mouse and touch\n  this._domElement.removeEventListener('click', this._$onClick, false);\n\n  this._domElement.removeEventListener('dblclick', this._$onDblClick, false);\n\n  this._domElement.removeEventListener('mousemove', this._$onMouseMove, false);\n\n  this._domElement.removeEventListener('mousedown', this._$onMouseDown, false);\n\n  this._domElement.removeEventListener('mouseup', this._$onMouseUp, false);\n\n  this._domElement.removeEventListener('touchmove', this._$onTouchMove, false);\n\n  this._domElement.removeEventListener('touchstart', this._$onTouchStart, false);\n\n  this._domElement.removeEventListener('touchend', this._$onTouchEnd, false);\n\n  this._domElement.removeEventListener('contextmenu', this._$onContextmenu, false);\n};\n\nTHREEx.DomEvents.eventNames = ['click', 'dblclick', 'mouseover', 'mouseout', 'mousemove', 'mousedown', 'mouseup', 'contextmenu', 'touchstart', 'touchend'];\n\nTHREEx.DomEvents.prototype._getRelativeMouseXY = function (domEvent) {\n  var element = domEvent.target || domEvent.srcElement;\n\n  if (element.nodeType === 3) {\n    element = element.parentNode; // Safari fix -- see http://www.quirksmode.org/js/events_properties.html\n  } //get the real position of an element relative to the page starting point (0, 0)\n  //credits go to brainjam on answering http://stackoverflow.com/questions/5755312/getting-mouse-position-relative-to-content-area-of-an-element\n\n\n  var elPosition = {\n    x: 0,\n    y: 0\n  };\n  var tmpElement = element; //store padding\n\n  var style = getComputedStyle(tmpElement, null);\n  elPosition.y += parseInt(style.getPropertyValue('padding-top'), 10);\n  elPosition.x += parseInt(style.getPropertyValue('padding-left'), 10); //add positions\n\n  do {\n    elPosition.x += tmpElement.offsetLeft;\n    elPosition.y += tmpElement.offsetTop;\n    style = getComputedStyle(tmpElement, null);\n    elPosition.x += parseInt(style.getPropertyValue('border-left-width'), 10);\n    elPosition.y += parseInt(style.getPropertyValue('border-top-width'), 10);\n  } while (tmpElement = tmpElement.offsetParent);\n\n  var elDimension = {\n    width: element === window ? window.innerWidth : element.offsetWidth,\n    height: element === window ? window.innerHeight : element.offsetHeight\n  };\n  return {\n    x: +((domEvent.pageX - elPosition.x) / elDimension.width) * 2 - 1,\n    y: -((domEvent.pageY - elPosition.y) / elDimension.height) * 2 + 1\n  };\n};\n/********************************************************************************/\n\n/*\t\tdomevent context\t\t\t\t\t\t*/\n\n/********************************************************************************/\n// handle domevent context in object3d instance\n\n\nTHREEx.DomEvents.prototype._objectCtxInit = function (object3d) {\n  object3d._3xDomEvent = {};\n};\n\nTHREEx.DomEvents.prototype._objectCtxDeinit = function (object3d) {\n  delete object3d._3xDomEvent;\n};\n\nTHREEx.DomEvents.prototype._objectCtxIsInit = function (object3d) {\n  return object3d._3xDomEvent ? true : false;\n};\n\nTHREEx.DomEvents.prototype._objectCtxGet = function (object3d) {\n  return object3d._3xDomEvent;\n};\n/********************************************************************************/\n\n/*\t\t\t\t\t\t\t\t\t\t*/\n\n/********************************************************************************/\n\n/**\r\n * Getter/Setter for camera\r\n */\n\n\nTHREEx.DomEvents.prototype.camera = function (value) {\n  if (value) this._camera = value;\n  return this._camera;\n};\n\nTHREEx.DomEvents.prototype.bind = function (object3d, eventName, callback, useCapture) {\n  console.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, 'not available events:' + eventName);\n  if (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\n  var objectCtx = this._objectCtxGet(object3d);\n\n  if (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n  objectCtx[eventName + 'Handlers'].push({\n    callback: callback,\n    useCapture: useCapture\n  }); // add this object in this._boundObjs\n\n  if (this._boundObjs[eventName] === undefined) {\n    this._boundObjs[eventName] = [];\n  }\n\n  this._boundObjs[eventName].push(object3d);\n};\n\nTHREEx.DomEvents.prototype.addEventListener = THREEx.DomEvents.prototype.bind;\n\nTHREEx.DomEvents.prototype.unbind = function (object3d, eventName, callback, useCapture) {\n  console.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, 'not available events:' + eventName);\n  if (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\n  var objectCtx = this._objectCtxGet(object3d);\n\n  if (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n  var handlers = objectCtx[eventName + 'Handlers'];\n\n  for (var i = 0; i < handlers.length; i++) {\n    var handler = handlers[i];\n    if (callback != handler.callback) continue;\n    if (useCapture != handler.useCapture) continue;\n    handlers.splice(i, 1);\n    break;\n  } // from this object from this._boundObjs\n\n\n  var index = this._boundObjs[eventName].indexOf(object3d);\n\n  console.assert(index !== -1);\n\n  this._boundObjs[eventName].splice(index, 1);\n};\n\nTHREEx.DomEvents.prototype.removeEventListener = THREEx.DomEvents.prototype.unbind;\n\nTHREEx.DomEvents.prototype._bound = function (eventName, object3d) {\n  var objectCtx = this._objectCtxGet(object3d);\n\n  if (!objectCtx) return false;\n  return objectCtx[eventName + 'Handlers'] ? true : false;\n};\n/********************************************************************************/\n\n/*\t\tonMove\t\t\t\t\t\t\t\t*/\n\n/********************************************************************************/\n// # handle mousemove kind of events\n\n\nTHREEx.DomEvents.prototype._onMove = function (eventName, mouseX, mouseY, origDomEvent) {\n  //console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n  // get objects bound to this event\n  var boundObjs = this._boundObjs[eventName];\n  if (boundObjs === undefined || boundObjs.length === 0) return; // compute the intersection\n\n  var vector = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2(); // update the picking ray with the camera and mouse position\n\n  vector.set(mouseX, mouseY);\n\n  this._raycaster.setFromCamera(vector, this._camera);\n\n  var intersects = this._raycaster.intersectObjects(boundObjs);\n\n  var oldSelected = this._selected;\n\n  if (intersects.length > 0) {\n    var notifyOver, notifyOut, notifyMove;\n    var intersect = intersects[0];\n    var newSelected = intersect.object;\n    this._selected = newSelected; // if newSelected bound mousemove, notify it\n\n    notifyMove = this._bound('mousemove', newSelected);\n\n    if (oldSelected != newSelected) {\n      // if newSelected bound mouseenter, notify it\n      notifyOver = this._bound('mouseover', newSelected); // if there is a oldSelect and oldSelected bound mouseleave, notify it\n\n      notifyOut = oldSelected && this._bound('mouseout', oldSelected);\n    }\n  } else {\n    // if there is a oldSelect and oldSelected bound mouseleave, notify it\n    notifyOut = oldSelected && this._bound('mouseout', oldSelected);\n    this._selected = null;\n  } // notify mouseMove - done at the end with a copy of the list to allow callback to remove handlers\n\n\n  notifyMove && this._notify('mousemove', newSelected, origDomEvent, intersect); // notify mouseEnter - done at the end with a copy of the list to allow callback to remove handlers\n\n  notifyOver && this._notify('mouseover', newSelected, origDomEvent, intersect); // notify mouseLeave - done at the end with a copy of the list to allow callback to remove handlers\n\n  notifyOut && this._notify('mouseout', oldSelected, origDomEvent, intersect);\n};\n/********************************************************************************/\n\n/*\t\tonEvent\t\t\t\t\t\t\t\t*/\n\n/********************************************************************************/\n// # handle click kind of events\n\n\nTHREEx.DomEvents.prototype._onEvent = function (eventName, mouseX, mouseY, origDomEvent) {\n  //console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n  // get objects bound to this event\n  var boundObjs = this._boundObjs[eventName];\n  if (boundObjs === undefined || boundObjs.length === 0) return; // compute the intersection\n\n  var vector = new _threeJS_three_module_js__WEBPACK_IMPORTED_MODULE_0__.Vector2(); // update the picking ray with the camera and mouse position\n\n  vector.set(mouseX, mouseY);\n\n  this._raycaster.setFromCamera(vector, this._camera);\n\n  var intersects = this._raycaster.intersectObjects(boundObjs, true); // if there are no intersections, return now\n\n\n  if (intersects.length === 0) return; // init some variables\n\n  var intersect = intersects[0];\n  var object3d = intersect.object;\n\n  var objectCtx = this._objectCtxGet(object3d);\n\n  var objectParent = object3d.parent;\n\n  while (typeof objectCtx == 'undefined' && objectParent) {\n    objectCtx = this._objectCtxGet(objectParent);\n    objectParent = objectParent.parent;\n  }\n\n  if (!objectCtx) return; // notify handlers\n\n  this._notify(eventName, object3d, origDomEvent, intersect);\n};\n\nTHREEx.DomEvents.prototype._notify = function (eventName, object3d, origDomEvent, intersect) {\n  var objectCtx = this._objectCtxGet(object3d);\n\n  var handlers = objectCtx ? objectCtx[eventName + 'Handlers'] : null; // parameter check\n\n  console.assert(arguments.length === 4); // do bubbling\n\n  if (!objectCtx || !handlers || handlers.length === 0) {\n    object3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n    return;\n  } // notify all handlers\n\n\n  var handlers = objectCtx[eventName + 'Handlers'];\n\n  for (var i = 0; i < handlers.length; i++) {\n    var handler = handlers[i];\n    var toPropagate = true;\n    handler.callback({\n      type: eventName,\n      target: object3d,\n      origDomEvent: origDomEvent,\n      intersect: intersect,\n      stopPropagation: function stopPropagation() {\n        toPropagate = false;\n      }\n    });\n    if (!toPropagate) continue; // do bubbling\n\n    if (handler.useCapture === false) {\n      object3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n    }\n  }\n};\n/********************************************************************************/\n\n/*\t\thandle mouse events\t\t\t\t\t\t*/\n\n/********************************************************************************/\n// # handle mouse events\n\n\nTHREEx.DomEvents.prototype._onMouseDown = function (event) {\n  return this._onMouseEvent('mousedown', event);\n};\n\nTHREEx.DomEvents.prototype._onMouseUp = function (event) {\n  return this._onMouseEvent('mouseup', event);\n};\n\nTHREEx.DomEvents.prototype._onMouseEvent = function (eventName, domEvent) {\n  var mouseCoords = this._getRelativeMouseXY(domEvent);\n\n  this._onEvent(eventName, mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onMouseMove = function (domEvent) {\n  var mouseCoords = this._getRelativeMouseXY(domEvent);\n\n  this._onMove('mousemove', mouseCoords.x, mouseCoords.y, domEvent);\n\n  this._onMove('mouseover', mouseCoords.x, mouseCoords.y, domEvent);\n\n  this._onMove('mouseout', mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onClick = function (event) {\n  // TODO handle touch ?\n  this._onMouseEvent('click', event);\n};\n\nTHREEx.DomEvents.prototype._onDblClick = function (event) {\n  // TODO handle touch ?\n  this._onMouseEvent('dblclick', event);\n};\n\nTHREEx.DomEvents.prototype._onContextmenu = function (event) {\n  //TODO don't have a clue about how this should work with touch..\n  this._onMouseEvent('contextmenu', event);\n};\n/********************************************************************************/\n\n/*\t\thandle touch events\t\t\t\t\t\t*/\n\n/********************************************************************************/\n// # handle touch events\n\n\nTHREEx.DomEvents.prototype._onTouchStart = function (event) {\n  return this._onTouchEvent('touchstart', event);\n};\n\nTHREEx.DomEvents.prototype._onTouchEnd = function (event) {\n  return this._onTouchEvent('touchend', event);\n};\n\nTHREEx.DomEvents.prototype._onTouchMove = function (domEvent) {\n  if (domEvent.touches.length != 1) return undefined;\n  domEvent.preventDefault();\n  var mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n  var mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\n  this._onMove('mousemove', mouseX, mouseY, domEvent);\n\n  this._onMove('mouseover', mouseX, mouseY, domEvent);\n\n  this._onMove('mouseout', mouseX, mouseY, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onTouchEvent = function (eventName, domEvent) {\n  if (domEvent.touches.length != 1) return undefined;\n  domEvent.preventDefault();\n  var mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n  var mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\n  this._onEvent(eventName, mouseX, mouseY, domEvent);\n};\n\n\n\n//# sourceURL=webpack://break-the-blocks-game/./threeX/THREEx-Events/threex.domevents.mjs?")},"./font/JetBrains_Mono_Regular.typeface.json":
/*!***************************************************!*\
  !*** ./font/JetBrains_Mono_Regular.typeface.json ***!
  \***************************************************/module=>{eval('module.exports = JSON.parse(\'{"glyphs":{"0":{"ha":833,"x_min":111,"x_max":722,"o":"m 417 -14 q 255 23 324 -14 q 149 127 186 60 q 111 285 111 194 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 285 q 685 127 722 194 q 578 23 647 60 q 417 -14 510 -14 m 417 93 q 551 147 500 93 q 601 285 601 200 l 601 729 q 551 867 601 814 q 417 921 500 921 q 283 867 333 921 q 232 729 232 814 l 232 285 q 283 147 232 200 q 417 93 333 93 m 417 425 q 356 449 379 425 q 333 511 333 472 q 356 572 333 549 q 417 594 379 594 q 477 572 454 594 q 500 511 500 549 q 477 449 500 472 q 417 425 454 425 z "},"1":{"ha":833,"x_min":125,"x_max":750,"o":"m 125 0 l 125 114 l 400 114 l 400 910 l 125 704 l 125 843 l 354 1014 l 525 1014 l 525 114 l 750 114 l 750 0 l 125 0 z "},"2":{"ha":833,"x_min":100,"x_max":731,"o":"m 128 0 l 128 128 l 438 457 q 553 608 517 542 q 589 735 589 674 q 542 868 589 819 q 415 917 496 917 q 276 867 326 917 q 225 729 225 817 l 100 729 q 142 888 103 821 q 252 992 182 956 q 415 1028 322 1028 q 574 992 507 1028 q 678 892 642 957 q 714 736 714 826 q 668 565 714 650 q 518 372 622 481 l 268 114 l 731 114 l 731 0 l 128 0 z "},"3":{"ha":833,"x_min":97,"x_max":708,"o":"m 401 -14 q 241 23 310 -14 q 135 125 172 60 q 97 278 97 190 l 222 278 q 270 145 222 193 q 403 97 318 97 q 536 147 489 97 q 583 278 583 197 l 583 350 q 536 483 583 436 q 403 531 489 531 l 299 531 l 299 656 l 550 900 l 139 900 l 139 1014 l 676 1014 l 676 889 l 406 626 l 406 642 q 626 563 544 642 q 708 350 708 483 l 708 278 q 670 125 708 190 q 563 23 632 60 q 401 -14 493 -14 z "},"4":{"ha":833,"x_min":111,"x_max":694,"o":"m 569 0 l 569 222 l 111 222 l 111 418 l 513 1014 l 649 1014 l 236 392 l 236 336 l 569 336 l 569 583 l 694 583 l 694 0 l 569 0 z "},"5":{"ha":833,"x_min":118,"x_max":715,"o":"m 414 -14 q 211 50 290 -14 q 118 222 132 114 l 243 222 q 294 130 250 163 q 415 97 339 97 q 547 144 503 97 q 590 278 590 192 l 590 376 q 547 510 590 463 q 417 557 503 557 q 322 528 363 557 q 264 453 282 500 l 139 453 l 146 1014 l 679 1014 l 679 900 l 267 900 l 263 563 l 301 563 l 263 526 q 315 629 263 592 q 454 667 367 667 q 647 591 578 668 q 715 376 715 514 l 715 278 q 636 65 715 143 q 414 -14 557 -14 z "},"6":{"ha":833,"x_min":94,"x_max":739,"o":"m 418 -14 q 248 27 321 -14 q 135 142 175 68 q 94 313 94 215 q 116 463 94 389 q 181 604 138 536 l 435 1014 l 574 1014 l 286 553 l 292 549 q 364 608 318 588 q 467 629 410 629 q 611 590 550 629 q 706 481 672 551 q 739 313 739 410 q 699 142 739 215 q 587 27 658 68 q 418 -14 515 -14 m 417 97 q 560 156 506 97 q 614 313 614 215 q 560 469 614 410 q 417 528 506 528 q 274 469 328 528 q 219 313 219 410 q 274 156 219 215 q 417 97 328 97 z "},"7":{"ha":833,"x_min":111,"x_max":743,"o":"m 257 0 l 619 900 l 236 900 l 236 750 l 111 750 l 111 1014 l 743 1014 l 743 892 l 392 0 l 257 0 z "},"8":{"ha":833,"x_min":111,"x_max":722,"o":"m 417 -14 q 255 19 324 -14 q 149 113 186 51 q 111 256 111 174 q 160 411 111 346 q 317 528 210 476 l 451 593 q 546 669 513 622 q 579 774 579 717 q 535 879 579 840 q 417 918 492 918 q 298 878 342 918 q 254 772 254 839 q 287 669 254 717 q 376 594 319 622 l 511 531 q 672 413 622 479 q 722 256 722 347 q 640 59 722 132 q 417 -14 557 -14 m 417 97 q 551 141 501 97 q 600 258 600 185 q 568 367 600 318 q 476 444 536 415 l 343 510 q 182 626 232 564 q 132 776 132 689 q 167 911 132 854 q 265 999 201 968 q 417 1029 329 1029 q 568 999 504 1029 q 667 911 632 968 q 701 776 701 854 q 651 627 701 689 q 486 508 601 565 l 353 443 q 265 367 296 415 q 233 261 233 319 q 283 142 233 186 q 417 97 332 97 z "},"9":{"ha":833,"x_min":94,"x_max":739,"o":"m 260 0 l 547 461 l 542 465 q 469 406 515 426 q 367 385 424 385 q 223 424 285 385 q 128 534 161 463 q 94 701 94 606 q 135 873 94 800 q 247 987 175 946 q 415 1028 319 1028 q 585 987 513 1028 q 699 873 658 946 q 739 701 739 800 q 717 551 739 625 q 653 410 696 478 l 399 0 l 260 0 m 417 486 q 560 545 506 486 q 614 701 614 604 q 560 858 614 799 q 417 917 506 917 q 274 858 328 917 q 219 701 219 799 q 274 545 219 604 q 417 486 328 486 z "},"A":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Á":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ă":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ắ":{"ha":833,"x_min":69,"x_max":764,"o":"m 329 1250 l 475 1417 l 608 1417 l 456 1250 l 329 1250 m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ặ":{"ha":833,"x_min":69,"x_max":764,"o":"m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ằ":{"ha":833,"x_min":69,"x_max":764,"o":"m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 378 1250 l 239 1417 l 372 1417 l 504 1250 l 378 1250 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẳ":{"ha":833,"x_min":69,"x_max":764,"o":"m 353 1222 l 418 1300 q 428 1322 428 1311 q 414 1333 428 1333 l 313 1333 l 313 1417 l 447 1417 q 503 1399 483 1417 q 524 1350 524 1382 q 518 1313 524 1332 q 501 1278 513 1293 l 457 1222 l 353 1222 m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẵ":{"ha":833,"x_min":69,"x_max":764,"o":"m 382 1083 q 240 1125 293 1083 q 188 1250 188 1167 l 285 1250 q 311 1186 285 1206 q 382 1167 338 1167 l 450 1167 q 522 1186 496 1167 q 549 1250 549 1206 l 646 1250 q 593 1125 646 1167 q 450 1083 540 1083 l 382 1083 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ǎ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Â":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ấ":{"ha":833,"x_min":69,"x_max":854,"o":"m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ậ":{"ha":833,"x_min":69,"x_max":764,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ầ":{"ha":833,"x_min":69,"x_max":764,"o":"m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẩ":{"ha":833,"x_min":69,"x_max":764,"o":"m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẫ":{"ha":833,"x_min":69,"x_max":764,"o":"m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ä":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ạ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"À":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ả":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 383 1132 l 453 1219 q 472 1264 472 1246 q 428 1292 472 1292 l 317 1292 l 317 1382 l 463 1382 q 548 1355 515 1382 q 581 1279 581 1328 q 557 1204 581 1235 l 501 1132 l 383 1132 z "},"Ā":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ą":{"ha":833,"x_min":69,"x_max":813,"o":"m 704 -282 q 581 -245 628 -282 q 535 -153 535 -208 q 561 -72 535 -112 q 653 14 588 -32 l 757 14 l 742 1 q 674 -69 694 -37 q 653 -129 653 -100 q 674 -179 653 -160 q 729 -199 694 -199 l 813 -199 l 813 -282 l 704 -282 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Å":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 417 1064 q 296 1108 342 1064 q 250 1222 250 1151 q 296 1337 250 1293 q 417 1381 342 1381 q 538 1337 492 1381 q 583 1222 583 1293 q 538 1108 583 1151 q 417 1064 492 1064 m 417 1138 q 477 1160 454 1138 q 500 1222 500 1183 q 477 1285 500 1261 q 417 1308 454 1308 q 356 1285 379 1308 q 333 1222 333 1261 q 356 1160 333 1183 q 417 1138 379 1138 z "},"Ã":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Æ":{"ha":833,"x_min":42,"x_max":792,"o":"m 42 0 l 243 1014 l 792 1014 l 792 900 l 539 900 l 539 583 l 757 583 l 757 469 l 539 469 l 539 114 l 792 114 l 792 0 l 419 0 l 419 282 l 224 282 l 168 0 l 42 0 m 243 386 l 419 386 l 419 900 l 342 900 l 243 386 z "},"Ǽ":{"ha":833,"x_min":42,"x_max":792,"o":"m 42 0 l 243 1014 l 792 1014 l 792 900 l 539 900 l 539 583 l 757 583 l 757 469 l 539 469 l 539 114 l 792 114 l 792 0 l 419 0 l 419 282 l 224 282 l 168 0 l 42 0 m 243 386 l 419 386 l 419 900 l 342 900 l 243 386 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"B":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"C":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ć":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"Č":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 367 1125 l 172 1319 l 310 1319 l 424 1211 l 535 1319 l 675 1319 l 482 1125 l 367 1125 z "},"Ç":{"ha":833,"x_min":122,"x_max":719,"o":"m 292 -282 l 292 -206 l 389 -206 q 438 -190 419 -206 q 457 -156 457 -174 q 419 -114 457 -132 q 311 -96 381 -96 l 360 36 l 439 36 l 410 -49 q 485 -67 446 -53 q 550 -106 524 -81 q 576 -167 576 -131 q 531 -248 576 -214 q 410 -282 485 -282 l 292 -282 m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ĉ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 172 1125 l 365 1319 l 481 1319 l 675 1125 l 538 1125 l 424 1233 l 313 1125 l 172 1125 z "},"Ċ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 424 1133 q 351 1158 378 1133 q 325 1222 325 1182 q 351 1287 325 1263 q 424 1311 378 1311 q 496 1287 469 1311 q 522 1222 522 1263 q 496 1158 522 1182 q 424 1133 469 1133 z "},"D":{"ha":833,"x_min":128,"x_max":711,"o":"m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"Ð":{"ha":833,"x_min":14,"x_max":711,"o":"m 14 465 l 14 569 l 403 569 l 403 465 l 14 465 m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"Ď":{"ha":833,"x_min":128,"x_max":711,"o":"m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Đ":{"ha":833,"x_min":14,"x_max":711,"o":"m 14 465 l 14 569 l 403 569 l 403 465 l 14 465 m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"E":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"É":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 364 1125 l 511 1319 l 646 1319 l 492 1125 l 364 1125 z "},"Ĕ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 1118 q 283 1174 344 1118 q 222 1319 222 1229 l 321 1319 q 354 1232 321 1265 q 443 1199 388 1199 q 534 1232 500 1199 q 568 1319 568 1265 l 667 1319 q 606 1174 667 1229 q 444 1118 544 1118 z "},"Ě":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 388 1125 l 193 1319 l 331 1319 l 444 1211 l 556 1319 l 696 1319 l 503 1125 l 388 1125 z "},"Ê":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 193 1125 l 386 1319 l 501 1319 l 696 1125 l 558 1125 l 444 1233 l 333 1125 l 193 1125 z "},"Ế":{"ha":833,"x_min":139,"x_max":854,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ệ":{"ha":833,"x_min":139,"x_max":722,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 -296 q 372 -272 399 -296 q 346 -208 346 -249 q 372 -142 346 -167 q 444 -118 399 -118 q 517 -142 490 -118 q 543 -208 543 -167 q 517 -272 543 -249 q 444 -296 490 -296 z "},"Ề":{"ha":833,"x_min":139,"x_max":750,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ể":{"ha":833,"x_min":139,"x_max":764,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ễ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 z "},"Ë":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 599 1135 q 534 1158 558 1135 q 510 1222 510 1182 q 534 1288 510 1264 q 599 1313 558 1313 q 663 1288 639 1313 q 688 1222 688 1264 q 663 1158 688 1182 q 599 1135 639 1135 m 290 1135 q 226 1158 250 1135 q 201 1222 201 1182 q 226 1288 201 1264 q 290 1313 250 1313 q 355 1288 331 1313 q 379 1222 379 1264 q 355 1158 379 1182 q 290 1135 331 1135 z "},"Ė":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 1133 q 372 1158 399 1133 q 346 1222 346 1182 q 372 1287 346 1263 q 444 1311 399 1311 q 517 1287 490 1311 q 543 1222 543 1263 q 517 1158 543 1182 q 444 1133 490 1133 z "},"Ẹ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 -296 q 372 -272 399 -296 q 346 -208 346 -249 q 372 -142 346 -167 q 444 -118 399 -118 q 517 -142 490 -118 q 543 -208 543 -167 q 517 -272 543 -249 q 444 -296 490 -296 z "},"È":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 399 1125 l 239 1319 l 378 1319 l 531 1125 l 399 1125 z "},"Ẻ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ē":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 222 1167 l 222 1271 l 667 1271 l 667 1167 l 222 1167 z "},"Ę":{"ha":833,"x_min":139,"x_max":729,"o":"m 621 -282 q 498 -245 544 -282 q 451 -153 451 -208 q 478 -72 451 -112 q 569 14 504 -32 l 674 14 l 658 1 q 590 -69 611 -37 q 569 -129 569 -100 q 590 -179 569 -160 q 646 -199 611 -199 l 729 -199 l 729 -282 l 621 -282 m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ẽ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 542 1132 q 474 1147 500 1132 q 429 1181 447 1161 q 394 1215 411 1200 q 354 1229 378 1229 q 324 1217 336 1229 q 313 1181 313 1206 l 313 1139 l 222 1139 l 222 1181 q 257 1278 222 1243 q 347 1313 292 1313 q 415 1298 389 1313 q 460 1264 442 1283 q 494 1230 478 1244 q 535 1215 511 1215 q 565 1227 554 1215 q 576 1264 576 1239 l 576 1306 l 667 1306 l 667 1264 q 633 1167 667 1201 q 542 1132 599 1132 z "},"F":{"ha":833,"x_min":132,"x_max":729,"o":"m 132 0 l 132 1015 l 729 1015 l 729 901 l 254 901 l 254 564 l 693 564 l 693 450 l 257 450 l 257 0 l 132 0 z "},"G":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ǵ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ğ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ǧ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ĝ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ģ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 269 -333 l 401 -132 l 547 -132 l 401 -333 l 269 -333 z "},"Ġ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"H":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ħ":{"ha":833,"x_min":14,"x_max":819,"o":"m 14 729 l 14 833 l 819 833 l 819 729 l 14 729 m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ĥ":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"I":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Í":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ĭ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Î":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ï":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"İ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"Ị":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ì":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỉ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 383 1111 l 446 1199 q 465 1243 465 1226 q 421 1271 465 1271 l 317 1271 l 317 1361 l 428 1361 q 533 1333 493 1361 q 574 1257 574 1304 q 550 1183 574 1218 l 501 1111 l 383 1111 z "},"Ī":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Į":{"ha":833,"x_min":146,"x_max":688,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ĩ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"J":{"ha":833,"x_min":63,"x_max":688,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 z "},"Ĵ":{"ha":833,"x_min":63,"x_max":751,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 m 249 1125 l 442 1319 l 557 1319 l 751 1125 l 614 1125 l 500 1233 l 389 1125 l 249 1125 z "},"K":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Ķ":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"L":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"Ĺ":{"ha":833,"x_min":143,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 143 1125 l 290 1319 l 425 1319 l 271 1125 l 143 1125 z "},"Ľ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 494 764 l 508 1014 l 626 1014 l 599 764 l 494 764 z "},"Ļ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 292 -333 l 424 -132 l 569 -132 l 424 -333 l 292 -333 z "},"Ŀ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"Ł":{"ha":833,"x_min":28,"x_max":743,"o":"m 28 319 l 28 431 l 542 778 l 542 667 l 28 319 m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"M":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"N":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 z "},"Ń":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ň":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ņ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"Ŋ":{"ha":833,"x_min":125,"x_max":708,"o":"m 333 -250 l 333 -136 l 424 -136 q 540 -94 497 -136 q 583 21 583 -51 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 l 125 1014 l 292 1014 l 601 251 q 595 337 599 286 q 590 444 592 388 q 588 551 588 501 l 588 1014 l 708 1014 l 708 21 q 673 -122 708 -61 q 574 -217 638 -183 q 424 -250 510 -250 l 333 -250 z "},"Ñ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"O":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ó":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŏ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ô":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ố":{"ha":833,"x_min":122,"x_max":854,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ộ":{"ha":833,"x_min":122,"x_max":711,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ồ":{"ha":833,"x_min":122,"x_max":750,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ổ":{"ha":833,"x_min":122,"x_max":764,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ỗ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 z "},"Ö":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ọ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ò":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỏ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 383 1111 l 446 1199 q 465 1243 465 1226 q 421 1271 465 1271 l 317 1271 l 317 1361 l 428 1361 q 533 1333 493 1361 q 574 1257 574 1304 q 550 1183 574 1218 l 501 1111 l 383 1111 z "},"Ơ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ớ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 322 1125 l 469 1319 l 604 1319 l 450 1125 l 322 1125 z "},"Ợ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ờ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 357 1125 l 197 1319 l 336 1319 l 489 1125 l 357 1125 z "},"Ở":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ỡ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 500 1132 q 432 1147 458 1132 q 388 1181 406 1161 q 353 1215 369 1200 q 313 1229 336 1229 q 283 1217 294 1229 q 271 1181 271 1206 l 271 1139 l 181 1139 l 181 1181 q 215 1278 181 1243 q 306 1313 250 1313 q 374 1298 347 1313 q 418 1264 400 1283 q 453 1230 436 1244 q 493 1215 469 1215 q 524 1227 513 1215 q 535 1264 535 1239 l 535 1306 l 625 1306 l 625 1264 q 591 1167 625 1201 q 500 1132 557 1132 z "},"Ő":{"ha":833,"x_min":122,"x_max":733,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 453 1125 l 606 1319 l 733 1319 l 574 1125 l 453 1125 m 204 1125 l 357 1319 l 485 1319 l 325 1125 l 204 1125 z "},"Ō":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ǫ":{"ha":833,"x_min":122,"x_max":711,"o":"m 526 -282 q 403 -245 450 -282 q 357 -153 357 -208 q 366 -110 357 -133 q 392 -62 375 -87 q 435 -14 410 -37 q 426 -14 431 -14 q 417 -14 421 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 681 133 711 196 q 597 35 651 71 l 557 1 q 493 -69 511 -37 q 475 -129 475 -100 q 496 -179 475 -160 q 551 -199 517 -199 l 635 -199 l 635 -282 l 526 -282 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ø":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -56 l 668 1042 l 785 1042 l 165 -56 l 49 -56 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ǿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -56 l 668 1042 l 785 1042 l 165 -56 l 49 -56 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Õ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Œ":{"ha":833,"x_min":56,"x_max":799,"o":"m 271 -14 q 156 18 204 -14 q 81 110 107 50 q 56 250 56 169 l 56 764 q 81 905 56 846 q 156 996 107 964 q 271 1028 204 1028 q 351 1008 319 1028 q 401 959 383 988 q 424 903 419 931 l 431 903 l 431 1014 l 799 1014 l 799 900 l 553 900 l 553 581 l 764 581 l 764 467 l 553 467 l 553 114 l 799 114 l 799 0 l 431 0 l 431 111 l 424 111 q 401 56 419 85 q 351 6 383 26 q 271 -14 319 -14 m 306 97 q 397 138 364 97 q 431 250 431 179 l 431 764 q 397 876 431 835 q 306 917 364 917 q 214 876 247 917 q 181 764 181 835 l 181 250 q 214 138 181 179 q 306 97 247 97 z "},"P":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"Þ":{"ha":833,"x_min":125,"x_max":764,"o":"m 125 0 l 125 1014 l 250 1014 l 250 806 l 463 806 q 622 771 554 806 q 726 674 689 736 q 764 528 764 611 q 682 326 764 401 q 463 250 600 250 l 250 250 l 250 0 l 125 0 m 250 361 l 463 361 q 589 406 543 361 q 635 528 635 451 q 588 650 635 606 q 463 694 542 694 l 250 694 l 250 361 z "},"Q":{"ha":833,"x_min":111,"x_max":731,"o":"m 586 -250 l 438 -4 l 451 -12 q 437 -13 446 -12 q 417 -14 428 -14 q 255 23 324 -14 q 149 127 186 60 q 111 285 111 194 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 285 q 682 122 722 192 q 568 18 642 53 l 731 -250 l 586 -250 m 417 97 q 548 149 499 97 q 597 285 597 200 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 285 q 285 149 236 200 q 417 97 335 97 z "},"R":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 z "},"Ŕ":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ř":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ŗ":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"S":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Ś":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Š":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ş":{"ha":833,"x_min":100,"x_max":733,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Ŝ":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ș":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ẞ":{"ha":833,"x_min":128,"x_max":750,"o":"m 128 0 l 128 728 q 164 878 128 814 q 266 978 200 943 q 419 1014 332 1014 l 735 1014 l 735 892 l 486 556 l 486 588 q 625 553 565 589 q 717 453 685 518 q 750 299 750 388 q 713 142 750 210 q 608 38 675 75 q 451 0 542 0 l 358 0 l 358 114 l 438 114 q 569 164 521 114 q 618 299 618 214 q 569 431 618 382 q 438 479 521 479 l 375 479 l 375 588 l 603 900 l 419 900 q 298 854 343 900 q 253 728 253 808 l 253 0 l 128 0 z "},"Ə":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 261 22 326 -14 q 160 124 196 58 q 125 278 125 190 l 125 556 l 583 556 l 583 738 q 541 870 583 824 q 417 917 499 917 q 293 869 336 917 q 250 736 250 822 l 125 736 q 160 892 125 826 q 260 992 194 957 q 417 1028 325 1028 q 574 993 510 1028 q 674 893 639 958 q 708 736 708 828 l 708 278 q 673 124 708 190 q 572 22 638 58 q 417 -14 507 -14 m 417 90 q 543 139 503 90 q 583 278 583 188 l 583 458 l 240 458 l 250 469 l 250 278 q 291 139 250 188 q 417 90 332 90 z "},"T":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ŧ":{"ha":833,"x_min":76,"x_max":757,"o":"m 153 410 l 153 514 l 681 514 l 681 410 l 153 410 m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ť":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ţ":{"ha":833,"x_min":76,"x_max":757,"o":"m 344 -282 l 344 -206 l 442 -206 q 491 -190 472 -206 q 510 -156 510 -174 q 472 -114 510 -132 q 364 -96 433 -96 l 413 36 l 479 0 l 463 -49 q 538 -67 499 -53 q 603 -106 576 -81 q 629 -167 629 -131 q 583 -248 629 -214 q 463 -282 538 -282 l 344 -282 m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ț":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 m 215 -333 l 347 -132 l 493 -132 l 347 -333 l 215 -333 z "},"U":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ú":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŭ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Û":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ü":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ụ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ù":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ủ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ư":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ứ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ự":{"ha":833,"x_min":125,"x_max":826,"o":"m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ừ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ử":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ữ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Ű":{"ha":833,"x_min":125,"x_max":733,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 453 1125 l 606 1319 l 733 1319 l 574 1125 l 453 1125 m 204 1125 l 357 1319 l 485 1319 l 325 1125 l 204 1125 z "},"Ū":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ų":{"ha":833,"x_min":125,"x_max":708,"o":"m 526 -282 q 403 -245 450 -282 q 357 -153 357 -208 q 366 -110 357 -133 q 392 -62 375 -87 q 435 -14 410 -37 q 426 -14 431 -14 q 417 -14 421 -14 q 260 21 325 -14 q 160 122 194 56 q 125 278 125 188 l 125 1014 l 250 1014 l 250 278 q 293 145 250 192 q 417 99 336 99 q 541 145 499 99 q 583 278 583 192 l 583 1014 l 708 1014 l 708 278 q 680 133 708 196 q 597 35 651 71 l 557 1 q 493 -69 511 -37 q 475 -129 475 -100 q 496 -179 475 -160 q 551 -199 517 -199 l 635 -199 l 635 -282 l 526 -282 z "},"Ů":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 1064 q 296 1108 342 1064 q 250 1222 250 1151 q 296 1337 250 1293 q 417 1381 342 1381 q 538 1337 492 1381 q 583 1222 583 1293 q 538 1108 583 1151 q 417 1064 492 1064 m 417 1138 q 477 1160 454 1138 q 500 1222 500 1183 q 477 1285 500 1261 q 417 1308 454 1308 q 356 1285 379 1308 q 333 1222 333 1261 q 356 1160 333 1183 q 417 1138 379 1138 z "},"Ũ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"V":{"ha":833,"x_min":69,"x_max":764,"o":"m 331 0 l 69 1014 l 199 1014 l 371 325 q 401 191 389 253 q 419 97 414 129 q 437 191 425 129 q 467 325 449 253 l 638 1014 l 764 1014 l 501 0 l 331 0 z "},"W":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 z "},"Ẃ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŵ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ẅ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ẁ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"X":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Y":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ý":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŷ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ÿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ỵ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ỳ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỷ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ȳ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ỹ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Z":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 z "},"Ź":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ž":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ż":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"a":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"á":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ă":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 889 q 263 944 324 889 q 201 1090 201 1000 l 300 1090 q 333 1003 300 1036 q 422 969 367 969 q 513 1003 479 969 q 547 1090 547 1036 l 646 1090 q 585 944 646 1000 q 424 889 524 889 z "},"ắ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 329 1056 l 489 1236 l 622 1236 l 456 1056 l 329 1056 z "},"ặ":{"ha":833,"x_min":90,"x_max":708,"o":"m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"ằ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 378 1056 l 211 1236 l 344 1236 l 504 1056 l 378 1056 z "},"ẳ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 351 1056 l 414 1140 q 426 1175 426 1157 q 417 1199 426 1190 q 389 1208 407 1208 l 313 1208 l 313 1292 l 403 1292 q 498 1265 463 1292 q 533 1193 533 1238 q 527 1158 533 1175 q 510 1125 521 1140 l 461 1056 l 351 1056 z "},"ẵ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 896 q 256 946 317 896 q 194 1076 194 996 l 285 1076 q 321 1006 285 1033 q 415 978 357 978 q 512 1006 475 978 q 549 1076 549 1033 l 639 1076 q 578 946 639 996 q 417 896 517 896 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 z "},"ǎ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 367 896 l 172 1090 l 310 1090 l 424 982 l 535 1090 l 675 1090 l 482 896 l 367 896 z "},"â":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 172 896 l 365 1090 l 481 1090 l 675 896 l 538 896 l 424 1004 l 313 896 l 172 896 z "},"ấ":{"ha":833,"x_min":90,"x_max":868,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ậ":{"ha":833,"x_min":90,"x_max":708,"o":"m 172 896 l 365 1090 l 481 1090 l 675 896 l 538 896 l 424 1004 l 313 896 l 172 896 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"ầ":{"ha":833,"x_min":90,"x_max":757,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ẩ":{"ha":833,"x_min":90,"x_max":764,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ẫ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ä":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 578 901 q 513 925 538 901 q 489 989 489 949 q 513 1055 489 1031 q 578 1079 538 1079 q 642 1055 618 1079 q 667 989 667 1031 q 642 925 667 949 q 578 901 618 901 m 269 901 q 205 925 229 901 q 181 989 181 949 q 205 1055 181 1031 q 269 1079 229 1079 q 334 1055 310 1079 q 358 989 358 1031 q 334 925 358 949 q 269 901 310 901 z "},"ạ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"à":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 378 896 l 218 1090 l 357 1090 l 510 896 l 378 896 z "},"ả":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 365 896 l 435 983 q 454 1028 454 1010 q 410 1056 454 1056 l 299 1056 l 299 1146 l 444 1146 q 530 1119 497 1146 q 563 1043 563 1092 q 539 968 563 999 l 483 896 l 365 896 z "},"ā":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 201 931 l 201 1035 l 646 1035 l 646 931 l 201 931 z "},"ą":{"ha":833,"x_min":90,"x_max":779,"o":"m 671 -282 q 548 -245 594 -282 q 501 -153 501 -208 q 528 -72 501 -112 q 619 14 554 -32 l 708 0 q 640 -69 661 -39 q 619 -129 619 -100 q 640 -179 619 -160 q 696 -199 661 -199 l 779 -199 l 779 -282 l 671 -282 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"å":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 844 q 303 888 349 844 q 257 1003 257 932 q 303 1117 257 1074 q 424 1161 349 1161 q 544 1117 499 1161 q 590 1003 590 1074 q 544 888 590 932 q 424 844 499 844 m 424 918 q 484 941 461 918 q 507 1003 507 964 q 484 1065 507 1042 q 424 1089 461 1089 q 363 1065 386 1089 q 340 1003 340 1042 q 363 941 340 964 q 424 918 386 918 z "},"ã":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 521 903 q 453 917 479 903 q 408 951 426 932 q 374 985 390 971 q 333 1000 357 1000 q 303 988 315 1000 q 292 951 292 976 l 292 910 l 201 910 l 201 951 q 236 1049 201 1014 q 326 1083 271 1083 q 394 1069 368 1083 q 439 1035 421 1054 q 474 1001 457 1015 q 514 986 490 986 q 544 998 533 986 q 556 1035 556 1010 l 556 1076 l 646 1076 l 646 1035 q 612 938 646 972 q 521 903 578 903 z "},"æ":{"ha":833,"x_min":49,"x_max":785,"o":"m 236 -14 q 99 39 150 -14 q 49 181 49 92 l 49 264 q 106 401 49 350 q 261 451 164 451 l 364 451 l 364 554 q 342 643 364 615 q 271 671 319 671 q 208 647 232 671 q 183 583 183 624 l 65 583 q 116 724 65 671 q 250 778 167 778 q 340 760 304 778 q 395 716 376 742 q 418 667 414 690 l 424 667 q 446 716 428 690 q 498 760 464 742 q 583 778 532 778 q 731 718 678 778 q 785 556 785 658 l 785 354 l 476 354 l 476 208 q 502 125 476 157 q 569 93 528 93 q 640 117 614 93 q 667 181 667 140 l 785 181 q 729 40 785 93 q 583 -14 674 -14 q 497 4 532 -14 q 445 48 463 22 q 424 97 428 74 l 418 97 q 393 48 414 74 q 334 4 372 22 q 236 -14 296 -14 m 264 93 q 336 125 308 93 q 364 208 364 157 l 364 354 l 264 354 q 197 330 221 354 q 174 264 174 306 l 174 181 q 198 117 174 140 q 264 93 222 93 m 476 451 l 667 451 l 667 556 q 641 640 667 608 q 569 671 615 671 q 501 640 526 671 q 476 556 476 608 l 476 451 z "},"ǽ":{"ha":833,"x_min":49,"x_max":785,"o":"m 236 -14 q 99 39 150 -14 q 49 181 49 92 l 49 264 q 106 401 49 350 q 261 451 164 451 l 364 451 l 364 554 q 342 643 364 615 q 271 671 319 671 q 208 647 232 671 q 183 583 183 624 l 65 583 q 116 724 65 671 q 250 778 167 778 q 340 760 304 778 q 395 716 376 742 q 418 667 414 690 l 424 667 q 446 716 428 690 q 498 760 464 742 q 583 778 532 778 q 731 718 678 778 q 785 556 785 658 l 785 354 l 476 354 l 476 208 q 502 125 476 157 q 569 93 528 93 q 640 117 614 93 q 667 181 667 140 l 785 181 q 729 40 785 93 q 583 -14 674 -14 q 497 4 532 -14 q 445 48 463 22 q 424 97 428 74 l 418 97 q 393 48 414 74 q 334 4 372 22 q 236 -14 296 -14 m 264 93 q 336 125 308 93 q 364 208 364 157 l 364 354 l 264 354 q 197 330 221 354 q 174 264 174 306 l 174 181 q 198 117 174 140 q 264 93 222 93 m 476 451 l 667 451 l 667 556 q 641 640 667 608 q 569 671 615 671 q 501 640 526 671 q 476 556 476 608 l 476 451 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"b":{"ha":833,"x_min":128,"x_max":715,"o":"m 461 -14 q 310 37 367 -14 q 253 175 253 88 l 278 146 l 253 146 l 253 0 l 128 0 l 128 1014 l 253 1014 l 253 792 l 250 618 l 278 618 l 253 589 q 310 726 253 675 q 461 778 368 778 q 646 701 576 778 q 715 493 715 625 l 715 269 q 646 63 715 139 q 461 -14 576 -14 m 419 94 q 544 142 499 94 q 590 278 590 189 l 590 486 q 544 622 590 575 q 419 669 499 669 q 298 621 343 669 q 253 486 253 572 l 253 278 q 298 143 253 192 q 419 94 343 94 z "},"c":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"ć":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 342 896 l 489 1090 l 624 1090 l 469 896 l 342 896 z "},"č":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 365 896 l 171 1090 l 308 1090 l 422 982 l 533 1090 l 674 1090 l 481 896 l 365 896 z "},"ç":{"ha":833,"x_min":118,"x_max":719,"o":"m 290 -282 l 290 -206 l 388 -206 q 437 -190 418 -206 q 456 -156 456 -174 q 417 -114 456 -132 q 310 -96 379 -96 l 358 36 l 438 36 l 408 -49 q 483 -67 444 -53 q 549 -106 522 -81 q 575 -167 575 -131 q 529 -248 575 -214 q 408 -282 483 -282 l 290 -282 m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"ĉ":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ċ":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"d":{"ha":833,"x_min":118,"x_max":706,"o":"m 372 -14 q 188 63 258 -14 q 118 269 118 139 l 118 493 q 188 701 118 625 q 372 778 257 778 q 524 726 467 778 q 581 589 581 675 l 556 618 l 583 618 l 581 792 l 581 1014 l 706 1014 l 706 0 l 581 0 l 581 146 l 556 146 l 581 175 q 524 37 581 88 q 372 -14 467 -14 m 414 94 q 536 143 492 94 q 581 278 581 192 l 581 486 q 536 621 581 572 q 414 669 492 669 q 289 622 335 669 q 243 486 243 575 l 243 278 q 289 142 243 189 q 414 94 335 94 z "},"ð":{"ha":833,"x_min":97,"x_max":736,"o":"m 415 -14 q 249 25 321 -14 q 137 135 176 64 q 97 299 97 206 q 134 460 97 392 q 237 567 171 529 q 390 606 303 606 q 463 593 431 606 q 517 563 494 581 q 549 528 539 544 l 568 528 q 540 578 563 542 q 479 667 518 615 l 389 793 l 163 688 l 163 799 l 329 876 l 229 1014 l 374 1014 l 435 925 l 640 1021 l 640 910 l 493 842 l 601 685 q 699 497 663 596 q 736 310 736 399 q 696 140 736 213 q 584 26 656 67 q 415 -14 513 -14 m 415 97 q 558 153 504 97 q 611 299 611 208 q 587 405 611 360 q 519 475 563 450 q 415 500 475 500 q 276 444 329 500 q 222 299 222 389 q 276 153 222 208 q 415 97 329 97 z "},"ď":{"ha":833,"x_min":88,"x_max":833,"o":"m 708 764 l 708 1014 l 833 1014 l 819 764 l 708 764 m 317 -14 q 149 61 211 -14 q 88 263 88 136 l 88 500 q 149 703 88 628 q 317 778 211 778 q 453 726 403 778 q 504 589 504 675 l 479 618 l 507 618 l 504 792 l 504 1014 l 629 1014 l 629 0 l 504 0 l 504 146 l 479 146 l 504 175 q 453 38 504 89 q 317 -14 403 -14 m 358 94 q 466 141 428 94 q 504 271 504 188 l 504 493 q 466 623 504 576 q 358 669 428 669 q 251 623 290 669 q 213 493 213 576 l 213 271 q 251 141 213 188 q 358 94 290 94 z "},"đ":{"ha":833,"x_min":125,"x_max":833,"o":"m 372 -14 q 192 63 258 -14 q 125 269 125 139 l 125 410 q 191 618 125 542 q 372 694 257 694 q 522 643 467 694 q 578 506 578 592 l 553 535 l 581 535 l 578 708 l 578 1014 l 703 1014 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 37 578 88 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 403 q 535 538 578 489 q 414 586 492 586 q 292 539 335 586 q 250 403 250 492 l 250 278 q 292 142 250 189 q 414 94 335 94 m 347 792 l 347 896 l 833 896 l 833 792 l 347 792 z "},"e":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"é":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ĕ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"ě":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"ê":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ế":{"ha":833,"x_min":118,"x_max":868,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ệ":{"ha":833,"x_min":118,"x_max":715,"o":"m 171 896 l 364 1090 l 479 1090 l 674 896 l 536 896 l 422 1004 l 311 896 l 171 896 m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"ề":{"ha":833,"x_min":118,"x_max":757,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ể":{"ha":833,"x_min":118,"x_max":764,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ễ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ë":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ė":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"ẹ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"è":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ẻ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ē":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ę":{"ha":833,"x_min":122,"x_max":711,"o":"m 518 -282 q 395 -245 442 -282 q 349 -153 349 -208 q 369 -85 349 -121 q 431 -14 390 -50 q 424 -14 428 -14 q 417 -14 419 -14 q 260 22 326 -14 q 158 124 194 58 q 122 278 122 190 l 122 486 q 158 640 122 575 q 260 742 194 706 q 417 778 326 778 q 573 742 507 778 q 675 640 639 706 q 711 486 711 575 l 711 351 l 244 351 l 244 278 q 288 140 244 188 q 417 92 332 92 q 531 117 489 92 q 583 194 574 143 l 708 194 q 667 90 701 135 q 578 19 632 46 l 556 1 q 488 -69 508 -37 q 467 -129 467 -100 q 488 -179 467 -160 q 543 -199 508 -199 l 626 -199 l 626 -282 l 518 -282 m 589 390 l 589 486 q 546 625 589 576 q 417 674 503 674 q 288 625 332 674 q 244 486 244 576 l 244 446 l 644 446 l 589 390 z "},"ẽ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"ə":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 261 22 326 -14 q 160 124 196 58 q 125 278 125 190 l 125 413 l 586 413 l 586 486 q 544 624 586 576 q 417 672 503 672 q 304 647 344 672 q 253 569 264 621 l 128 569 q 218 722 140 665 q 417 778 296 778 q 572 742 507 778 q 673 640 638 706 q 708 486 708 575 l 708 278 q 673 124 708 190 q 572 22 638 58 q 417 -14 507 -14 m 417 90 q 544 139 503 90 q 586 278 586 188 l 586 318 l 238 318 l 247 329 l 247 278 q 290 139 247 188 q 417 90 332 90 z "},"f":{"ha":833,"x_min":83,"x_max":743,"o":"m 306 0 l 306 574 l 83 574 l 83 688 l 306 688 l 306 819 q 363 962 306 910 q 519 1014 419 1014 l 743 1014 l 743 900 l 519 900 q 453 880 476 900 q 431 819 431 860 l 431 688 l 743 688 l 743 574 l 431 574 l 431 0 l 306 0 z "},"g":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 z "},"ǵ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 332 896 l 479 1090 l 614 1090 l 460 896 l 332 896 z "},"ğ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 413 889 q 251 944 313 889 q 190 1090 190 1000 l 289 1090 q 322 1003 289 1036 q 411 969 356 969 q 502 1003 468 969 q 536 1090 536 1036 l 635 1090 q 574 944 635 1000 q 413 889 513 889 z "},"ǧ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 356 896 l 161 1090 l 299 1090 l 413 982 l 524 1090 l 664 1090 l 471 896 l 356 896 z "},"ĝ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 161 896 l 354 1090 l 469 1090 l 664 896 l 526 896 l 413 1004 l 301 896 l 161 896 z "},"ģ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 572 1222 l 461 896 l 288 896 l 468 1222 l 572 1222 z "},"ġ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 413 901 q 340 925 367 901 q 314 989 314 949 q 340 1055 314 1031 q 413 1079 367 1079 q 485 1055 458 1079 q 511 989 511 1031 q 485 925 511 949 q 413 901 458 901 z "},"h":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 1014 l 253 1014 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 z "},"ħ":{"ha":833,"x_min":0,"x_max":708,"o":"m 0 792 l 0 896 l 128 896 l 128 1014 l 253 1014 l 253 896 l 486 896 l 486 792 l 253 792 l 253 681 l 253 535 l 254 535 q 317 653 264 611 q 457 694 369 694 q 640 624 572 694 q 708 431 708 553 l 708 0 l 583 0 l 583 417 q 540 544 583 499 q 421 589 496 589 q 298 540 343 589 q 253 403 253 492 l 253 0 l 128 0 l 128 792 l 0 792 z "},"ĥ":{"ha":833,"x_min":-43,"x_max":708,"o":"m 128 0 l 128 1014 l 253 1014 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 m -43 1118 l 150 1313 l 265 1313 l 460 1118 l 322 1118 l 208 1226 l 97 1118 l -43 1118 z "},"i":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ı":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 z "},"í":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 357 896 l 504 1090 l 639 1090 l 485 896 l 357 896 z "},"ĭ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 889 q 276 944 338 889 q 215 1090 215 1000 l 314 1090 q 347 1003 314 1036 q 436 969 381 969 q 527 1003 493 969 q 561 1090 561 1036 l 660 1090 q 599 944 660 1000 q 438 889 538 889 z "},"î":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 186 896 l 379 1090 l 494 1090 l 689 896 l 551 896 l 438 1004 l 326 896 l 186 896 z "},"ï":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 592 901 q 527 925 551 901 q 503 989 503 949 q 527 1055 503 1031 q 592 1079 551 1079 q 656 1055 632 1079 q 681 989 681 1031 q 656 925 681 949 q 592 901 632 901 m 283 901 q 219 925 243 901 q 194 989 194 949 q 219 1055 194 1031 q 283 1079 243 1079 q 348 1055 324 1079 q 372 989 372 1031 q 348 925 372 949 q 283 901 324 901 z "},"ị":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 m 438 -296 q 365 -272 392 -296 q 339 -208 339 -249 q 365 -142 339 -167 q 438 -118 392 -118 q 510 -142 483 -118 q 536 -208 536 -167 q 510 -272 536 -249 q 438 -296 483 -296 z "},"ì":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 392 896 l 232 1090 l 371 1090 l 524 896 l 392 896 z "},"ỉ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 383 896 l 453 983 q 472 1028 472 1010 q 428 1056 472 1056 l 317 1056 l 317 1146 l 463 1146 q 548 1119 515 1146 q 581 1043 581 1092 q 557 968 581 999 l 501 896 l 383 896 z "},"ī":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 215 931 l 215 1035 l 660 1035 l 660 931 l 215 931 z "},"į":{"ha":833,"x_min":118,"x_max":771,"o":"m 447 -282 q 324 -245 371 -282 q 278 -153 278 -208 q 304 -72 278 -112 q 396 14 331 -32 l 500 14 l 485 1 q 417 -69 438 -37 q 396 -129 396 -100 q 417 -179 396 -160 q 472 -199 438 -199 l 556 -199 l 556 -282 l 447 -282 m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ĩ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 535 903 q 467 917 493 903 q 422 951 440 932 q 388 985 404 971 q 347 1000 371 1000 q 317 988 329 1000 q 306 951 306 976 l 306 910 l 215 910 l 215 951 q 250 1049 215 1014 q 340 1083 285 1083 q 408 1069 382 1083 q 453 1035 435 1054 q 488 1001 471 1015 q 528 986 504 986 q 558 998 547 986 q 569 1035 569 1010 l 569 1076 l 660 1076 l 660 1035 q 626 938 660 972 q 535 903 592 903 z "},"j":{"ha":833,"x_min":118,"x_max":633,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 535 901 q 463 925 489 901 q 436 989 436 949 q 463 1055 436 1031 q 535 1079 489 1079 q 607 1055 581 1079 q 633 989 633 1031 q 607 925 633 949 q 535 901 581 901 z "},"ȷ":{"ha":833,"x_min":118,"x_max":604,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 z "},"ĵ":{"ha":833,"x_min":118,"x_max":703,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 200 896 l 393 1090 l 508 1090 l 703 896 l 565 896 l 451 1004 l 340 896 l 200 896 z "},"k":{"ha":833,"x_min":132,"x_max":774,"o":"m 132 0 l 132 1014 l 257 1014 l 257 449 l 404 449 l 626 764 l 769 764 l 513 400 l 774 0 l 628 0 l 406 340 l 257 340 l 257 0 l 132 0 z "},"ķ":{"ha":833,"x_min":132,"x_max":774,"o":"m 132 0 l 132 1014 l 257 1014 l 257 449 l 404 449 l 626 764 l 769 764 l 513 400 l 774 0 l 628 0 l 406 340 l 257 340 l 257 0 l 132 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ĸ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"l":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 z "},"ĺ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 267 1125 l 414 1319 l 549 1319 l 394 1125 l 267 1125 z "},"ľ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 618 764 l 632 1014 l 750 1014 l 722 764 l 618 764 z "},"ļ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 292 -333 l 424 -132 l 569 -132 l 424 -333 l 292 -333 z "},"ŀ":{"ha":833,"x_min":14,"x_max":875,"o":"m 493 0 q 376 26 426 0 q 299 101 326 53 q 271 215 271 150 l 271 900 l 14 900 l 14 1014 l 396 1014 l 396 215 q 422 141 396 168 q 493 114 449 114 l 736 114 l 736 0 l 493 0 z "},"ł":{"ha":833,"x_min":42,"x_max":764,"o":"m 139 319 l 139 431 l 653 778 l 653 667 l 139 319 m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 z "},"m":{"ha":833,"x_min":92,"x_max":742,"o":"m 92 0 l 92 764 l 201 764 l 201 672 l 226 672 l 207 639 q 241 740 207 703 q 333 778 275 778 q 432 731 397 778 q 467 597 467 683 l 429 672 l 488 672 l 461 639 q 497 740 461 703 q 590 778 532 778 q 702 724 663 778 q 742 581 742 669 l 742 0 l 626 0 l 626 582 q 606 656 626 629 q 547 682 586 682 q 488 656 510 682 q 467 583 467 631 l 467 0 l 367 0 l 367 582 q 345 656 367 631 q 285 682 324 682 q 226 656 246 682 q 207 583 207 631 l 207 0 l 92 0 z "},"n":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 z "},"ń":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ŉ":{"ha":833,"x_min":0,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 0 896 l 132 1097 l 278 1097 l 132 896 l 0 896 z "},"ň":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 367 896 l 172 1090 l 310 1090 l 424 982 l 535 1090 l 675 1090 l 482 896 l 367 896 z "},"ņ":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ŋ":{"ha":833,"x_min":131,"x_max":706,"o":"m 333 -250 l 333 -136 l 421 -136 q 538 -94 494 -136 q 581 21 581 -51 l 581 500 q 538 627 581 582 q 421 672 496 672 q 299 624 343 672 q 256 486 256 575 l 256 0 l 131 0 l 131 764 l 256 764 l 256 618 l 282 618 l 256 589 q 308 728 256 679 q 457 778 361 778 q 639 707 572 778 q 706 514 706 636 l 706 21 q 670 -122 706 -61 q 571 -217 635 -183 q 421 -250 507 -250 l 333 -250 z "},"ñ":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 521 903 q 453 917 479 903 q 408 951 426 932 q 374 985 390 971 q 333 1000 357 1000 q 303 988 315 1000 q 292 951 292 976 l 292 910 l 201 910 l 201 951 q 236 1049 201 1014 q 326 1083 271 1083 q 394 1069 368 1083 q 439 1035 421 1054 q 474 1001 457 1015 q 514 986 490 986 q 544 998 533 986 q 556 1035 556 1010 l 556 1076 l 646 1076 l 646 1035 q 612 938 646 972 q 521 903 578 903 z "},"o":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"ó":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŏ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"ô":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ố":{"ha":833,"x_min":118,"x_max":868,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ộ":{"ha":833,"x_min":118,"x_max":715,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ồ":{"ha":833,"x_min":118,"x_max":757,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ổ":{"ha":833,"x_min":118,"x_max":764,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ỗ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ö":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ọ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ò":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ỏ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ơ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"ớ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 322 896 l 469 1090 l 604 1090 l 450 896 l 322 896 z "},"ợ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ờ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 357 896 l 197 1090 l 336 1090 l 489 896 l 357 896 z "},"ở":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ỡ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 500 903 q 432 917 458 903 q 388 951 406 932 q 353 985 369 971 q 313 1000 336 1000 q 283 988 294 1000 q 271 951 271 976 l 271 910 l 181 910 l 181 951 q 215 1049 181 1014 q 306 1083 250 1083 q 374 1069 347 1083 q 418 1035 400 1054 q 453 1001 436 1015 q 493 986 469 986 q 524 998 513 986 q 535 1035 535 1010 l 535 1076 l 625 1076 l 625 1035 q 591 938 625 972 q 500 903 557 903 z "},"ő":{"ha":833,"x_min":118,"x_max":733,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ō":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ǫ":{"ha":833,"x_min":122,"x_max":711,"o":"m 517 -282 q 394 -245 440 -282 q 347 -153 347 -208 q 365 -90 347 -122 q 429 -14 382 -57 q 426 -14 428 -14 q 422 -14 424 -14 q 417 -14 419 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 679 128 711 192 q 588 29 647 65 l 554 1 q 486 -69 507 -37 q 465 -129 465 -100 q 486 -179 465 -160 q 542 -199 507 -199 l 625 -199 l 625 -282 l 517 -282 m 417 97 q 542 143 499 97 q 586 278 586 189 l 586 486 q 542 621 586 575 q 417 667 499 667 q 292 621 336 667 q 247 486 247 575 l 247 278 q 292 143 247 189 q 417 97 336 97 z "},"ø":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -42 l 658 819 l 785 819 l 174 -42 l 49 -42 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 547 145 500 97 q 593 278 593 193 l 593 486 q 547 619 593 572 q 417 667 500 667 q 287 619 333 667 q 240 486 240 572 l 240 278 q 287 145 240 193 q 417 97 333 97 z "},"ǿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -42 l 658 819 l 785 819 l 174 -42 l 49 -42 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 547 145 500 97 q 593 278 593 193 l 593 486 q 547 619 593 572 q 417 667 500 667 q 287 619 333 667 q 240 486 240 572 l 240 278 q 287 145 240 193 q 417 97 333 97 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"õ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"œ":{"ha":833,"x_min":49,"x_max":785,"o":"m 250 -14 q 103 47 157 -14 q 49 208 49 107 l 49 556 q 103 718 49 658 q 250 778 157 778 q 341 760 306 778 q 394 716 376 742 q 414 667 413 690 l 419 667 q 440 716 422 690 q 492 760 457 742 q 583 778 528 778 q 731 718 676 778 q 785 556 785 658 l 785 347 l 476 347 l 476 208 q 501 124 476 156 q 569 93 526 93 q 631 115 606 93 q 663 174 657 138 l 781 174 q 714 37 767 88 q 583 -14 661 -14 q 492 4 528 -14 q 440 48 457 22 q 419 97 422 74 l 414 97 q 394 48 413 74 q 341 4 376 22 q 250 -14 306 -14 m 264 93 q 332 124 307 93 q 357 208 357 156 l 357 556 q 332 640 357 608 q 264 671 307 671 q 193 640 219 671 q 167 556 167 608 l 167 208 q 193 124 167 156 q 264 93 219 93 m 476 449 l 667 449 l 667 556 q 640 640 667 608 q 569 671 614 671 q 501 640 526 671 q 476 556 476 608 l 476 449 z "},"p":{"ha":833,"x_min":128,"x_max":715,"o":"m 128 -250 l 128 764 l 253 764 l 253 618 l 278 618 l 253 589 q 310 727 253 676 q 463 778 368 778 q 647 702 578 778 q 715 494 715 626 l 715 271 q 684 119 715 183 q 597 21 653 56 q 463 -14 540 -14 q 311 38 369 -14 q 253 175 253 89 l 278 146 l 250 146 l 253 -28 l 253 -250 l 128 -250 m 421 94 q 545 142 500 94 q 590 278 590 189 l 590 486 q 545 622 590 575 q 421 669 500 669 q 299 621 344 669 q 253 486 253 572 l 253 278 q 299 143 253 192 q 421 94 344 94 z "},"þ":{"ha":833,"x_min":121,"x_max":708,"o":"m 121 -236 l 121 82 l 246 82 l 246 -236 l 121 -236 m 454 -14 q 303 37 360 -14 q 246 175 246 88 l 271 146 l 246 146 l 246 0 l 121 0 l 121 1014 l 246 1014 l 246 792 l 243 618 l 271 618 l 246 589 q 303 726 246 675 q 454 778 361 778 q 639 701 569 778 q 708 493 708 625 l 708 269 q 639 63 708 139 q 454 -14 569 -14 m 413 94 q 538 142 492 94 q 583 278 583 189 l 583 486 q 538 622 583 575 q 413 669 492 669 q 291 621 336 669 q 246 486 246 572 l 246 278 q 291 143 246 192 q 413 94 336 94 z "},"q":{"ha":833,"x_min":122,"x_max":706,"o":"m 581 -250 l 581 -28 l 583 146 l 556 146 l 581 175 q 524 38 581 89 q 372 -14 467 -14 q 190 63 257 -14 q 122 271 122 139 l 122 494 q 190 702 122 626 q 372 778 258 778 q 524 727 467 778 q 581 589 581 676 l 556 618 l 581 618 l 581 764 l 706 764 l 706 -250 l 581 -250 m 414 94 q 536 143 492 94 q 581 278 581 192 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 278 q 291 142 247 189 q 414 94 335 94 z "},"r":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 z "},"ŕ":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 364 896 l 511 1090 l 646 1090 l 492 896 l 364 896 z "},"ř":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 388 896 l 193 1090 l 331 1090 l 444 982 l 556 1090 l 696 1090 l 503 896 l 388 896 z "},"ŗ":{"ha":833,"x_min":35,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 35 -333 l 167 -132 l 313 -132 l 167 -333 l 35 -333 z "},"s":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"ś":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 350 896 l 497 1090 l 632 1090 l 478 896 l 350 896 z "},"š":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 374 896 l 179 1090 l 317 1090 l 431 982 l 542 1090 l 682 1090 l 489 896 l 374 896 z "},"ş":{"ha":833,"x_min":125,"x_max":722,"o":"m 299 -282 l 299 -206 l 396 -206 q 445 -190 426 -206 q 464 -156 464 -174 q 426 -114 464 -132 q 318 -96 388 -96 l 367 36 l 446 36 l 417 -49 q 492 -67 453 -53 q 557 -106 531 -81 q 583 -167 583 -131 q 538 -248 583 -214 q 417 -282 492 -282 l 299 -282 m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"ŝ":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 179 896 l 372 1090 l 488 1090 l 682 896 l 544 896 l 431 1004 l 319 896 l 179 896 z "},"ș":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 249 -333 l 381 -132 l 526 -132 l 381 -333 l 249 -333 z "},"ß":{"ha":833,"x_min":128,"x_max":736,"o":"m 128 0 l 128 742 q 164 892 128 828 q 266 992 200 957 q 421 1028 332 1028 q 576 998 510 1028 q 680 910 643 968 q 717 769 717 853 q 687 646 717 700 q 602 561 657 592 q 472 532 547 531 l 472 553 q 612 522 553 554 q 703 431 671 490 q 736 289 736 371 q 699 139 736 204 q 594 37 661 74 q 438 0 528 0 l 346 0 l 346 114 l 424 114 q 556 163 507 114 q 604 293 604 213 q 556 419 604 374 q 424 465 508 465 l 363 465 l 363 574 l 421 574 q 542 622 499 574 q 586 744 586 671 q 542 869 586 825 q 421 914 497 914 q 299 868 344 914 q 253 742 253 822 l 253 0 l 128 0 z "},"ſ":{"ha":833,"x_min":229,"x_max":708,"o":"m 229 0 l 229 793 q 294 953 229 892 q 464 1014 358 1014 l 708 1014 l 708 903 l 464 903 q 385 872 415 903 q 354 792 354 842 l 354 0 l 229 0 z "},"t":{"ha":833,"x_min":76,"x_max":722,"o":"m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ŧ":{"ha":833,"x_min":76,"x_max":722,"o":"m 118 332 l 118 436 l 660 436 l 660 332 l 118 332 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ť":{"ha":833,"x_min":76,"x_max":767,"o":"m 517 861 l 642 1078 l 767 1078 l 628 861 l 517 861 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ţ":{"ha":833,"x_min":76,"x_max":722,"o":"m 368 -282 l 368 -206 l 465 -206 q 515 -190 496 -206 q 533 -156 533 -174 q 495 -114 533 -132 q 388 -96 457 -96 l 436 36 l 515 36 l 486 -49 q 561 -67 522 -53 q 626 -106 600 -81 q 653 -167 653 -131 q 607 -248 653 -214 q 486 -282 561 -282 l 368 -282 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ț":{"ha":833,"x_min":76,"x_max":722,"o":"m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"u":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"ú":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŭ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"û":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ü":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ụ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"ù":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ủ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ư":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 z "},"ứ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ự":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 415 -296 q 343 -272 369 -296 q 317 -208 317 -249 q 343 -142 317 -167 q 415 -118 369 -118 q 488 -142 461 -118 q 514 -208 514 -167 q 488 -272 514 -249 q 415 -296 461 -296 z "},"ừ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ử":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ữ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"ű":{"ha":833,"x_min":125,"x_max":733,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ū":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ų":{"ha":833,"x_min":125,"x_max":708,"o":"m 517 -282 q 394 -245 440 -282 q 347 -153 347 -208 q 365 -90 347 -122 q 429 -14 382 -57 q 426 -14 428 -14 q 422 -14 424 -14 q 417 -14 419 -14 q 203 64 281 -14 q 125 278 125 142 l 125 764 l 250 764 l 250 278 q 293 143 250 189 q 417 97 336 97 q 541 143 499 97 q 583 278 583 189 l 583 764 l 708 764 l 708 278 q 678 128 708 192 q 588 29 647 65 l 554 1 q 486 -69 507 -37 q 465 -129 465 -100 q 486 -179 465 -160 q 542 -199 507 -199 l 625 -199 l 625 -282 l 517 -282 z "},"ů":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"ũ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"v":{"ha":833,"x_min":76,"x_max":757,"o":"m 332 0 l 76 764 l 204 764 l 374 250 q 401 162 389 204 q 419 96 414 119 q 439 162 426 119 q 465 250 451 204 l 631 764 l 757 764 l 501 0 l 332 0 z "},"w":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 z "},"ẃ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŵ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ẅ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ẁ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"x":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 340 393 l 86 764 l 233 764 l 385 528 q 403 494 394 513 q 418 465 413 476 q 431 494 422 476 q 450 528 440 513 l 603 764 l 749 764 l 494 392 l 764 0 l 617 0 l 453 250 q 434 285 443 265 q 418 318 425 306 q 402 285 413 306 q 381 250 392 265 l 215 0 l 69 0 z "},"y":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ý":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŷ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ÿ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ỵ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 639 -296 q 567 -272 593 -296 q 540 -208 540 -249 q 567 -142 540 -167 q 639 -118 593 -118 q 711 -142 685 -118 q 738 -208 738 -167 q 711 -272 738 -249 q 639 -296 685 -296 z "},"ỳ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ỷ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ȳ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ỹ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"z":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 z "},"ź":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ž":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"ż":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"ª":{"ha":833,"x_min":243,"x_max":583,"o":"m 518 632 l 518 708 l 514 708 l 514 903 q 490 953 514 935 q 424 972 465 972 q 363 957 388 972 q 333 917 338 942 l 264 917 q 313 999 271 969 q 424 1028 356 1028 q 540 994 497 1028 q 583 903 583 961 l 583 632 l 518 632 m 381 625 q 281 658 318 625 q 243 744 243 690 q 282 831 243 799 q 389 863 321 863 l 529 863 l 529 807 l 389 807 q 333 790 353 807 q 313 744 313 774 q 336 696 313 714 q 399 678 360 678 q 483 703 453 678 q 514 771 514 728 l 529 771 l 529 708 l 514 708 q 465 647 500 669 q 381 625 429 625 z "},"º":{"ha":833,"x_min":257,"x_max":576,"o":"m 417 618 q 301 658 344 618 q 257 764 257 699 l 257 875 q 301 981 257 940 q 417 1021 344 1021 q 533 981 489 1021 q 576 875 576 940 l 576 764 q 533 658 576 699 q 417 618 489 618 m 417 674 q 482 699 457 674 q 507 764 507 724 l 507 875 q 482 940 507 915 q 417 965 457 965 q 351 940 376 965 q 326 875 326 915 l 326 764 q 351 699 326 724 q 417 674 376 674 z "},"А":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Б":{"ha":833,"x_min":131,"x_max":736,"o":"m 131 0 l 131 1014 l 694 1014 l 694 900 l 256 900 l 256 594 l 424 594 q 590 558 521 594 q 698 454 660 521 q 736 297 736 388 q 698 140 736 207 q 590 37 660 74 q 424 0 521 0 l 131 0 m 256 114 l 424 114 q 558 163 510 114 q 607 297 607 213 q 558 432 607 383 q 424 481 510 481 l 256 481 l 256 114 z "},"В":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"Г":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Ѓ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"Ґ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 625 1014 l 625 1146 l 743 1146 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Д":{"ha":833,"x_min":35,"x_max":799,"o":"m 35 -194 l 35 107 l 97 107 q 129 182 113 135 q 158 289 146 229 q 172 414 171 349 l 182 1014 l 701 1014 l 701 107 l 799 107 l 799 -194 l 688 -194 l 688 0 l 146 0 l 146 -194 l 35 -194 m 228 107 l 576 107 l 576 903 l 301 903 l 294 414 q 271 225 293 307 q 228 107 249 143 z "},"Е":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ё":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 599 1135 q 534 1158 558 1135 q 510 1222 510 1182 q 534 1288 510 1264 q 599 1313 558 1313 q 663 1288 639 1313 q 688 1222 688 1264 q 663 1158 688 1182 q 599 1135 639 1135 m 290 1135 q 226 1158 250 1135 q 201 1222 201 1182 q 226 1288 201 1264 q 290 1313 250 1313 q 355 1288 331 1313 q 379 1222 379 1264 q 355 1158 379 1182 q 290 1135 331 1135 z "},"Ж":{"ha":833,"x_min":17,"x_max":817,"o":"m 17 0 l 200 522 l 31 1014 l 161 1014 l 306 564 l 364 564 l 364 1014 l 469 1014 l 469 564 l 529 564 l 672 1014 l 803 1014 l 636 521 l 817 0 l 688 0 l 532 475 l 469 475 l 469 0 l 364 0 l 364 475 l 301 475 l 144 0 l 17 0 z "},"З":{"ha":833,"x_min":74,"x_max":739,"o":"m 403 -14 q 236 19 308 -14 q 122 114 164 53 q 74 257 79 175 l 199 257 q 263 140 207 183 q 403 97 318 97 q 552 147 497 97 q 607 278 607 197 q 551 409 607 360 q 403 458 496 458 l 278 458 l 278 572 l 401 572 q 538 625 486 572 q 589 754 589 678 q 538 874 589 832 q 401 917 488 917 q 265 869 317 917 q 214 743 214 821 l 89 743 q 128 893 89 829 q 237 992 167 957 q 401 1028 307 1028 q 633 961 547 1028 q 719 771 719 894 q 690 647 719 701 q 605 561 660 592 q 475 532 550 531 l 475 553 q 615 522 556 554 q 706 428 674 489 q 739 286 739 368 q 698 131 739 199 q 581 25 657 64 q 403 -14 506 -14 z "},"И":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 246 1014 l 246 444 q 244 338 246 394 q 239 231 242 282 q 233 146 236 181 l 542 1014 l 708 1014 l 708 0 l 588 0 l 588 569 q 590 677 588 621 q 595 784 592 733 q 601 868 599 835 l 292 0 l 125 0 z "},"Й":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 246 1014 l 246 444 q 244 338 246 394 q 239 231 242 282 q 233 146 236 181 l 542 1014 l 708 1014 l 708 0 l 588 0 l 588 569 q 590 677 588 621 q 595 784 592 733 q 601 868 599 835 l 292 0 l 125 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"К":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Ќ":{"ha":833,"x_min":128,"x_max":778,"o":"m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Л":{"ha":833,"x_min":28,"x_max":703,"o":"m 28 -7 l 28 110 l 53 110 q 141 165 114 110 q 169 353 168 219 l 181 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 304 900 l 294 353 q 235 80 292 167 q 60 -7 179 -7 l 28 -7 z "},"М":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"Н":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"О":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"П":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 256 900 l 256 0 l 131 0 z "},"Р":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"С":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Т":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"У":{"ha":833,"x_min":69,"x_max":764,"o":"m 265 0 l 368 263 l 69 1014 l 206 1014 l 388 518 q 417 428 406 471 q 431 365 428 386 q 443 428 433 386 q 468 518 453 471 l 628 1014 l 764 1014 l 399 0 l 265 0 z "},"Ў":{"ha":833,"x_min":69,"x_max":764,"o":"m 265 0 l 368 263 l 69 1014 l 206 1014 l 388 518 q 417 428 406 471 q 431 365 428 386 q 443 428 433 386 q 468 518 453 471 l 628 1014 l 764 1014 l 399 0 l 265 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ф":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 -35 l 358 63 q 210 99 274 63 q 110 199 146 135 q 75 351 75 264 l 75 676 q 110 833 75 767 q 208 935 144 899 q 358 972 272 972 l 358 1069 l 475 1069 l 475 972 q 625 935 561 972 q 724 833 689 899 q 758 676 758 767 l 758 351 q 723 199 758 264 q 624 99 688 135 q 475 63 561 63 l 475 -35 l 358 -35 m 358 168 l 358 867 q 269 844 307 867 q 212 778 232 821 q 192 676 192 736 l 192 351 q 212 253 192 294 q 269 190 232 213 q 358 168 307 168 m 475 168 q 565 190 528 168 q 622 253 601 213 q 642 351 642 294 l 642 676 q 622 778 642 736 q 565 844 601 821 q 475 867 528 867 l 475 168 z "},"Х":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Ч":{"ha":833,"x_min":104,"x_max":701,"o":"m 576 0 l 576 390 q 509 381 558 386 q 389 376 460 376 q 181 456 258 376 q 104 668 104 535 l 104 1014 l 229 1014 l 229 668 q 278 537 229 586 q 410 488 328 488 q 519 492 476 488 q 576 501 563 497 l 576 1014 l 701 1014 l 701 0 l 576 0 z "},"Ц":{"ha":833,"x_min":131,"x_max":785,"o":"m 674 -194 l 674 0 l 131 0 l 131 1014 l 256 1014 l 256 111 l 556 111 l 556 1014 l 681 1014 l 681 111 l 785 111 l 785 -194 l 674 -194 z "},"Ш":{"ha":833,"x_min":89,"x_max":744,"o":"m 92 0 l 89 1014 l 206 1014 l 206 94 l 368 94 l 368 1014 l 468 1014 l 468 94 l 629 94 l 629 1014 l 744 1014 l 744 0 l 92 0 z "},"Щ":{"ha":833,"x_min":89,"x_max":799,"o":"m 688 -194 l 688 0 l 89 0 l 89 1014 l 201 1014 l 201 106 l 363 106 l 363 1014 l 460 1014 l 460 106 l 621 106 l 621 1014 l 733 1014 l 733 106 l 799 106 l 799 -194 l 688 -194 z "},"Џ":{"ha":833,"x_min":131,"x_max":703,"o":"m 354 -174 l 354 0 l 131 0 l 131 1014 l 256 1014 l 256 114 l 578 114 l 578 1014 l 703 1014 l 703 0 l 479 0 l 479 -174 l 354 -174 z "},"Ь":{"ha":833,"x_min":131,"x_max":764,"o":"m 131 0 l 131 1014 l 256 1014 l 256 597 l 458 597 q 619 560 550 597 q 726 456 688 522 q 764 299 764 389 q 726 142 764 210 q 619 38 688 75 q 458 0 550 0 l 131 0 m 256 114 l 451 114 q 584 165 533 114 q 635 299 635 215 q 584 433 635 382 q 451 483 533 483 l 256 483 l 256 114 z "},"Ъ":{"ha":833,"x_min":-7,"x_max":764,"o":"m 188 0 l 188 900 l -7 900 l -7 1014 l 313 1014 l 313 597 l 458 597 q 619 560 550 597 q 726 456 688 522 q 764 299 764 389 q 726 142 764 210 q 619 38 688 75 q 458 0 550 0 l 188 0 m 313 114 l 451 114 q 584 165 533 114 q 635 299 635 215 q 584 433 635 382 q 451 483 533 483 l 313 483 l 313 114 z "},"Ы":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 0 l 90 1014 l 207 1014 l 207 597 l 264 597 q 463 526 390 597 q 536 333 536 456 l 536 263 q 464 70 536 140 q 264 0 392 0 l 90 0 m 207 110 l 264 110 q 377 151 338 110 q 417 264 417 192 l 417 333 q 377 447 417 407 q 264 488 338 488 l 207 488 l 207 110 m 626 0 l 626 1014 l 743 1014 l 743 0 l 626 0 z "},"Љ":{"ha":833,"x_min":-7,"x_max":806,"o":"m -7 -7 l -7 104 l 18 104 q 74 149 54 104 q 96 269 94 193 l 103 1014 l 500 1014 l 500 597 l 583 597 q 744 538 683 597 q 806 382 806 479 l 806 215 q 744 59 806 118 q 583 0 683 0 l 389 0 l 389 910 l 213 910 l 206 269 q 153 67 204 142 q 14 -7 101 -7 l -7 -7 m 500 104 l 583 104 q 664 135 633 104 q 694 215 694 165 l 694 382 q 664 463 694 432 q 583 493 633 493 l 500 493 l 500 104 z "},"Њ":{"ha":833,"x_min":74,"x_max":806,"o":"m 74 0 l 74 1014 l 185 1014 l 185 597 l 389 597 l 389 1014 l 500 1014 l 500 597 l 583 597 q 746 539 686 597 q 806 382 806 481 l 806 215 q 746 58 806 117 q 583 0 686 0 l 389 0 l 389 493 l 185 493 l 185 0 l 74 0 m 500 104 l 583 104 q 665 134 636 104 q 694 215 694 164 l 694 382 q 665 464 694 435 q 583 493 636 493 l 500 493 l 500 104 z "},"Ѕ":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Є":{"ha":833,"x_min":125,"x_max":717,"o":"m 422 -14 q 264 21 331 -14 q 161 122 197 56 q 125 278 125 188 l 125 736 q 161 893 125 828 q 264 993 197 958 q 422 1028 331 1028 q 580 992 514 1028 q 681 892 646 957 q 717 736 717 826 l 592 736 q 548 869 592 822 q 422 917 504 917 q 295 870 340 917 q 250 738 250 824 l 250 568 l 563 568 l 563 454 l 250 454 l 250 278 q 295 144 250 192 q 422 97 340 97 q 548 144 504 97 q 592 278 592 192 l 717 278 q 681 123 717 189 q 580 22 646 57 q 422 -14 514 -14 z "},"Э":{"ha":833,"x_min":117,"x_max":708,"o":"m 411 -14 q 254 22 321 -14 q 152 123 188 57 q 117 278 117 189 l 242 278 q 286 144 242 192 q 411 97 331 97 q 538 144 493 97 q 583 278 583 192 l 583 454 l 271 454 l 271 568 l 583 568 l 583 738 q 538 870 583 824 q 411 917 493 917 q 286 869 331 917 q 242 736 242 822 l 117 736 q 152 892 117 826 q 254 992 188 957 q 411 1028 321 1028 q 570 993 504 1028 q 672 893 636 958 q 708 736 708 828 l 708 278 q 672 122 708 188 q 570 21 636 56 q 411 -14 504 -14 z "},"І":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ї":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ј":{"ha":833,"x_min":63,"x_max":688,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 z "},"Ћ":{"ha":833,"x_min":0,"x_max":743,"o":"m 153 0 l 153 904 l 0 904 l 0 1014 l 444 1014 l 444 904 l 278 904 l 278 550 l 300 574 q 526 688 406 688 q 684 620 625 688 q 743 439 743 553 l 743 0 l 618 0 l 618 411 q 587 539 618 496 q 497 582 556 582 q 339 496 419 582 l 278 431 l 278 0 l 153 0 z "},"Ю":{"ha":833,"x_min":83,"x_max":778,"o":"m 540 -14 q 371 57 433 -14 q 308 250 308 128 l 308 465 l 199 465 l 199 0 l 83 0 l 83 1014 l 199 1014 l 199 576 l 308 576 l 308 764 q 370 958 308 888 q 540 1028 432 1028 q 715 957 651 1028 q 778 764 778 886 l 778 250 q 715 57 778 128 q 540 -14 651 -14 m 540 94 q 631 135 600 94 q 663 250 663 175 l 663 764 q 631 879 663 839 q 540 919 600 919 q 449 879 481 919 q 418 764 418 839 l 418 250 q 449 135 418 175 q 540 94 481 94 z "},"Я":{"ha":833,"x_min":78,"x_max":701,"o":"m 78 0 l 286 444 q 142 546 194 472 q 89 722 89 619 q 126 875 89 810 q 232 977 164 940 q 390 1014 300 1014 l 701 1014 l 701 0 l 576 0 l 576 431 l 415 431 l 222 0 l 78 0 m 390 542 l 576 542 l 576 903 l 390 903 q 266 853 314 903 q 218 722 218 804 q 265 592 218 642 q 390 542 313 542 z "},"Ђ":{"ha":833,"x_min":0,"x_max":743,"o":"m 361 -250 l 361 -136 l 458 -136 q 575 -94 532 -136 q 618 21 618 -51 l 618 411 q 587 539 618 496 q 497 582 556 582 q 339 496 419 582 l 278 431 l 278 0 l 153 0 l 153 904 l 0 904 l 0 1014 l 444 1014 l 444 904 l 278 904 l 278 550 l 300 574 q 526 688 406 688 q 684 620 625 688 q 743 439 743 553 l 743 21 q 708 -122 743 -61 q 608 -217 672 -183 q 458 -250 544 -250 l 361 -250 z "},"Ү":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ө":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 203 65 281 -14 q 125 279 125 143 l 125 736 q 203 950 125 872 q 417 1028 281 1028 q 631 950 553 1028 q 708 736 708 872 l 708 279 q 673 123 708 189 q 572 22 638 57 q 417 -14 507 -14 m 417 96 q 542 143 499 96 q 585 279 585 190 l 585 464 l 249 464 l 249 279 q 292 143 249 190 q 417 96 336 96 m 249 575 l 585 575 l 585 736 q 542 872 585 825 q 417 918 499 918 q 292 872 335 918 q 249 736 249 825 l 249 575 z "},"а":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"б":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 203 66 282 -14 q 125 285 125 146 l 125 632 q 217 915 125 815 q 479 1014 308 1014 l 674 1014 l 674 889 l 479 889 q 308 823 367 889 q 250 632 250 757 l 250 542 l 269 542 l 250 514 q 306 642 251 596 q 453 688 360 688 q 641 610 574 688 q 708 396 708 532 l 708 285 q 674 125 708 192 q 574 22 639 58 q 417 -14 508 -14 m 417 97 q 540 146 497 97 q 583 285 583 194 l 583 396 q 540 535 583 486 q 417 583 497 583 q 293 535 336 583 q 250 396 250 488 l 250 285 q 293 146 250 194 q 417 97 336 97 z "},"в":{"ha":833,"x_min":131,"x_max":729,"o":"m 131 0 l 131 764 l 461 764 q 646 710 581 764 q 711 561 711 657 q 657 434 711 482 q 514 386 603 386 l 514 397 q 670 349 611 397 q 729 218 729 300 q 660 58 729 115 q 465 0 590 0 l 131 0 m 253 110 l 465 110 q 569 139 532 110 q 606 221 606 168 q 569 304 606 275 q 465 333 532 333 l 253 333 l 253 110 m 253 442 l 461 442 q 553 469 519 442 q 588 547 588 497 q 554 626 588 597 q 461 654 521 654 l 253 654 l 253 442 z "},"г":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 729 764 l 729 650 l 306 650 l 306 0 l 181 0 z "},"ѓ":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 729 764 l 729 650 l 306 650 l 306 0 l 181 0 m 378 896 l 525 1090 l 660 1090 l 506 896 l 378 896 z "},"ґ":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 611 764 l 611 910 l 729 910 l 729 650 l 306 650 l 306 0 l 181 0 z "},"д":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 -194 l 42 107 l 104 107 q 153 200 128 131 q 181 376 179 269 l 189 764 l 688 764 l 688 107 l 785 107 l 785 -194 l 674 -194 l 674 0 l 153 0 l 153 -194 l 42 -194 m 236 107 l 563 107 l 563 653 l 307 653 l 301 374 q 278 196 300 264 q 236 107 256 128 z "},"е":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"ё":{"ha":833,"x_min":118,"x_max":715,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"ж":{"ha":833,"x_min":25,"x_max":808,"o":"m 25 0 l 192 392 l 36 764 l 157 764 l 290 431 l 364 431 l 364 764 l 469 764 l 469 431 l 540 431 l 678 764 l 797 764 l 642 396 l 808 0 l 683 0 l 544 347 l 469 347 l 469 0 l 364 0 l 364 347 l 289 347 l 149 0 l 25 0 z "},"з":{"ha":833,"x_min":90,"x_max":722,"o":"m 381 -10 q 183 42 260 -10 q 90 181 106 93 l 222 181 q 274 124 232 146 q 381 101 317 101 l 446 101 q 552 133 514 101 q 590 217 590 165 q 553 304 590 272 q 446 336 517 336 l 278 336 l 278 444 l 442 444 q 539 475 506 444 q 572 556 572 506 q 558 614 572 590 q 514 650 543 638 q 443 663 485 663 l 374 663 q 278 638 318 663 q 229 576 238 613 l 97 576 q 188 718 111 663 q 374 774 264 774 l 443 774 q 583 748 525 774 q 673 675 642 722 q 704 563 704 628 q 660 451 704 494 q 535 401 615 407 l 535 396 q 678 343 633 389 q 722 211 722 297 q 647 50 722 110 q 446 -10 572 -10 l 381 -10 z "},"и":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 z "},"й":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 z "},"к":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"ќ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"л":{"ha":833,"x_min":35,"x_max":703,"o":"m 35 -10 l 35 107 l 60 107 q 149 157 124 107 q 176 336 175 207 l 185 764 l 703 764 l 703 0 l 578 0 l 578 650 l 308 650 l 301 331 q 274 135 299 210 q 199 25 250 60 q 67 -10 149 -10 l 35 -10 z "},"м":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 764 l 275 764 l 375 471 q 403 383 390 426 q 421 315 415 339 q 438 383 426 339 q 464 472 450 426 l 558 764 l 728 764 l 728 0 l 607 0 l 607 118 q 608 254 607 181 q 612 403 610 328 q 617 545 614 478 q 621 664 619 613 l 485 229 l 353 229 l 215 661 q 220 506 218 599 q 224 311 222 413 q 226 118 226 210 l 226 0 l 106 0 z "},"н":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 256 764 l 256 446 l 578 446 l 578 764 l 703 764 l 703 0 l 578 0 l 578 332 l 256 332 l 256 0 l 131 0 z "},"о":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"п":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 703 764 l 703 0 l 578 0 l 578 650 l 256 650 l 256 0 l 131 0 z "},"р":{"ha":833,"x_min":128,"x_max":715,"o":"m 128 -250 l 128 764 l 253 764 l 253 618 l 278 618 l 253 589 q 310 727 253 676 q 463 778 368 778 q 647 702 578 778 q 715 494 715 626 l 715 271 q 684 119 715 183 q 597 21 653 56 q 463 -14 540 -14 q 311 38 369 -14 q 253 175 253 89 l 278 146 l 250 146 l 253 -28 l 253 -250 l 128 -250 m 421 94 q 545 142 500 94 q 590 278 590 189 l 590 486 q 545 622 590 575 q 421 669 500 669 q 299 621 344 669 q 253 486 253 572 l 253 278 q 299 143 253 192 q 421 94 344 94 z "},"с":{"ha":833,"x_min":115,"x_max":717,"o":"m 419 -14 q 259 21 328 -14 q 153 122 190 56 q 115 278 115 188 l 115 486 q 153 643 115 578 q 259 743 190 708 q 419 778 328 778 q 632 707 551 778 q 717 514 713 636 l 592 514 q 542 627 588 588 q 419 667 497 667 q 289 620 338 667 q 240 488 240 574 l 240 278 q 289 144 240 192 q 419 97 338 97 q 542 138 497 97 q 592 250 588 178 l 717 250 q 632 57 713 128 q 419 -14 551 -14 z "},"т":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 654 l 76 654 l 76 764 l 757 764 l 757 654 l 479 654 l 479 0 l 354 0 z "},"у":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ў":{"ha":833,"x_min":76,"x_max":757,"o":"m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ф":{"ha":833,"x_min":75,"x_max":758,"o":"m 361 -250 l 361 0 q 151 75 228 0 q 75 281 75 150 l 75 486 q 152 690 75 615 q 361 764 229 764 l 361 1014 l 472 1014 l 472 764 q 682 690 606 764 q 758 486 758 615 l 758 281 q 682 75 758 150 q 472 0 606 0 l 472 -250 l 361 -250 m 364 99 l 364 665 q 238 618 283 665 q 192 486 192 571 l 192 281 q 238 147 192 196 q 364 99 283 99 m 469 99 q 597 147 551 99 q 642 281 642 196 l 642 486 q 597 618 642 571 q 469 665 551 665 l 469 99 z "},"х":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 340 393 l 86 764 l 233 764 l 385 528 q 403 494 394 513 q 418 465 413 476 q 431 494 422 476 q 450 528 440 513 l 603 764 l 749 764 l 494 392 l 764 0 l 617 0 l 453 250 q 434 285 443 265 q 418 318 425 306 q 402 285 413 306 q 381 250 392 265 l 215 0 l 69 0 z "},"ч":{"ha":833,"x_min":108,"x_max":694,"o":"m 569 0 l 569 278 q 502 267 547 272 q 407 263 457 263 q 187 331 265 261 q 108 528 108 401 l 108 764 l 233 764 l 233 528 q 281 416 233 457 q 414 375 329 375 q 513 380 472 375 q 569 389 554 385 l 569 764 l 694 764 l 694 0 l 569 0 z "},"ц":{"ha":833,"x_min":131,"x_max":785,"o":"m 674 -194 l 674 0 l 131 0 l 131 764 l 256 764 l 256 111 l 556 111 l 556 764 l 681 764 l 681 111 l 785 111 l 785 -194 l 674 -194 z "},"ш":{"ha":833,"x_min":89,"x_max":744,"o":"m 92 0 l 89 764 l 206 764 l 206 94 l 368 94 l 368 764 l 468 764 l 468 94 l 629 94 l 629 764 l 744 764 l 744 0 l 92 0 z "},"щ":{"ha":833,"x_min":89,"x_max":799,"o":"m 688 -194 l 688 0 l 89 0 l 89 764 l 201 764 l 201 106 l 363 106 l 363 764 l 460 764 l 460 106 l 621 106 l 621 764 l 733 764 l 733 106 l 799 106 l 799 -194 l 688 -194 z "},"џ":{"ha":833,"x_min":131,"x_max":703,"o":"m 354 -174 l 354 0 l 131 0 l 131 764 l 256 764 l 256 114 l 578 114 l 578 764 l 703 764 l 703 0 l 479 0 l 479 -174 l 354 -174 z "},"ь":{"ha":833,"x_min":136,"x_max":764,"o":"m 136 0 l 136 764 l 261 764 l 261 483 l 486 483 q 690 419 615 483 q 764 242 764 354 q 689 65 764 131 q 486 0 614 0 l 136 0 m 261 114 l 486 114 q 597 147 558 114 q 635 242 635 179 q 597 337 635 304 q 486 369 558 369 l 261 369 l 261 114 z "},"ъ":{"ha":833,"x_min":0,"x_max":764,"o":"m 194 0 l 194 653 l 0 653 l 0 764 l 319 764 l 319 483 l 486 483 q 690 419 615 483 q 764 242 764 354 q 689 65 764 131 q 486 0 614 0 l 194 0 m 319 114 l 486 114 q 597 147 558 114 q 635 242 635 179 q 597 337 635 304 q 486 369 558 369 l 319 369 l 319 114 z "},"ы":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 0 l 90 764 l 207 764 l 207 483 l 269 483 q 465 419 393 483 q 536 242 536 354 q 465 65 536 129 q 269 0 393 0 l 90 0 m 207 100 l 269 100 q 384 138 343 100 q 425 242 425 175 q 384 346 425 308 q 269 383 343 383 l 207 383 l 207 100 m 626 0 l 626 764 l 743 764 l 743 0 l 626 0 z "},"љ":{"ha":833,"x_min":7,"x_max":813,"o":"m 7 -7 l 7 111 l 32 111 q 88 154 67 111 q 110 269 108 197 l 115 764 l 507 764 l 507 486 l 590 486 q 751 427 690 486 q 813 272 813 368 l 813 214 q 751 59 813 118 q 590 0 690 0 l 396 0 l 396 657 l 225 657 l 221 269 q 169 68 219 143 q 28 -7 118 -7 l 7 -7 m 507 103 l 590 103 q 671 133 640 103 q 701 214 701 164 l 701 272 q 671 353 701 322 q 590 383 640 383 l 507 383 l 507 103 z "},"њ":{"ha":833,"x_min":89,"x_max":803,"o":"m 89 0 l 89 764 l 204 764 l 204 486 l 394 486 l 394 764 l 496 764 l 496 486 l 581 486 q 742 427 681 486 q 803 271 803 368 l 803 215 q 742 59 803 118 q 581 0 681 0 l 394 0 l 394 382 l 204 382 l 204 0 l 89 0 m 496 104 l 581 104 q 659 135 631 104 q 688 215 688 165 l 688 271 q 659 351 688 321 q 581 382 631 382 l 496 382 l 496 104 z "},"ѕ":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"є":{"ha":833,"x_min":125,"x_max":717,"o":"m 422 -14 q 264 21 331 -14 q 161 122 197 56 q 125 278 125 188 l 125 486 q 161 643 125 578 q 264 743 197 708 q 422 778 331 778 q 633 707 554 778 q 717 514 713 636 l 592 514 q 544 627 588 588 q 422 667 500 667 q 295 620 340 667 q 250 488 250 574 l 250 444 l 521 444 l 521 333 l 250 333 l 250 278 q 295 144 250 192 q 422 97 340 97 q 544 138 500 97 q 592 250 588 178 l 717 250 q 633 57 713 128 q 422 -14 554 -14 z "},"э":{"ha":833,"x_min":117,"x_max":708,"o":"m 411 -14 q 200 57 279 -14 q 117 250 121 128 l 242 250 q 290 138 246 178 q 411 97 335 97 q 538 144 493 97 q 583 278 583 192 l 583 333 l 313 333 l 313 444 l 583 444 l 583 488 q 538 620 583 574 q 411 667 493 667 q 290 627 335 667 q 242 514 246 588 l 117 514 q 200 707 121 636 q 411 778 279 778 q 570 743 504 778 q 672 643 636 708 q 708 486 708 578 l 708 278 q 672 122 708 188 q 570 21 636 56 q 411 -14 504 -14 z "},"і":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ї":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 592 901 q 527 925 551 901 q 503 989 503 949 q 527 1055 503 1031 q 592 1079 551 1079 q 656 1055 632 1079 q 681 989 681 1031 q 656 925 681 949 q 592 901 632 901 m 283 901 q 219 925 243 901 q 194 989 194 949 q 219 1055 194 1031 q 283 1079 243 1079 q 348 1055 324 1079 q 372 989 372 1031 q 348 925 372 949 q 283 901 324 901 z "},"ј":{"ha":833,"x_min":118,"x_max":633,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 535 901 q 463 925 489 901 q 436 989 436 949 q 463 1055 436 1031 q 535 1079 489 1079 q 607 1055 581 1079 q 633 989 633 1031 q 607 925 633 949 q 535 901 581 901 z "},"ћ":{"ha":833,"x_min":0,"x_max":708,"o":"m 0 792 l 0 896 l 128 896 l 128 1014 l 253 1014 l 253 896 l 486 896 l 486 792 l 253 792 l 253 681 l 253 535 l 254 535 q 317 653 264 611 q 457 694 369 694 q 640 624 572 694 q 708 431 708 553 l 708 0 l 583 0 l 583 417 q 540 544 583 499 q 421 589 496 589 q 298 540 343 589 q 253 403 253 492 l 253 0 l 128 0 l 128 792 l 0 792 z "},"ю":{"ha":833,"x_min":86,"x_max":764,"o":"m 536 -14 q 382 51 440 -14 q 324 222 324 117 l 324 338 l 201 338 l 201 0 l 86 0 l 86 764 l 201 764 l 201 438 l 324 438 l 324 542 q 381 713 324 649 q 536 778 439 778 q 701 713 639 778 q 764 542 764 649 l 764 222 q 701 51 764 117 q 536 -14 639 -14 m 536 83 q 619 120 589 83 q 649 222 649 157 l 649 542 q 619 644 649 607 q 536 681 589 681 q 456 644 485 681 q 426 542 426 607 l 426 222 q 456 120 426 157 q 536 83 485 83 z "},"я":{"ha":833,"x_min":83,"x_max":703,"o":"m 83 0 l 279 294 q 144 375 192 315 q 96 524 96 435 q 170 700 96 636 q 374 764 244 764 l 703 764 l 703 0 l 578 0 l 578 285 l 410 285 l 229 0 l 83 0 m 374 396 l 578 396 l 578 653 l 374 653 q 264 619 304 653 q 224 524 224 585 q 264 430 224 464 q 374 396 304 396 z "},"ђ":{"ha":833,"x_min":0,"x_max":706,"o":"m 347 -250 l 347 -135 l 399 -135 q 533 -88 485 -135 q 581 43 581 -42 l 581 417 q 538 544 581 499 q 421 589 496 589 q 299 540 343 589 q 256 403 256 492 l 256 0 l 131 0 l 131 792 l 0 792 l 0 896 l 131 896 l 131 1014 l 256 1014 l 256 896 l 486 896 l 486 792 l 256 792 l 256 681 l 256 535 l 282 535 l 256 506 q 308 645 256 596 q 457 694 361 694 q 639 624 572 694 q 706 431 706 553 l 706 43 q 622 -171 706 -92 q 399 -250 539 -250 l 347 -250 z "},"ү":{"ha":833,"x_min":83,"x_max":750,"o":"m 354 -250 l 354 0 l 83 764 l 211 764 l 378 257 q 397 195 389 224 q 410 145 404 167 q 417 111 415 124 q 419 99 419 99 q 422 111 419 99 q 430 145 425 124 q 443 195 435 167 q 461 257 451 224 l 624 764 l 750 764 l 479 0 l 479 -250 l 354 -250 z "},"ө":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 262 22 328 -14 q 160 123 196 57 q 125 279 125 189 l 125 486 q 160 642 125 576 q 262 742 196 707 q 417 778 328 778 q 571 742 506 778 q 672 641 636 706 q 708 488 708 576 l 708 279 q 672 124 708 190 q 571 22 636 58 q 417 -14 506 -14 m 417 96 q 542 143 499 96 q 586 279 586 190 l 586 333 l 247 333 l 247 279 q 292 143 247 190 q 417 96 336 96 m 247 438 l 586 438 l 586 486 q 542 621 586 574 q 417 668 499 668 q 292 621 336 668 q 247 486 247 574 l 247 438 z "},"Α":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Β":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"Γ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Δ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 467 688 q 436 823 449 760 q 417 917 424 886 q 398 824 411 886 q 367 689 385 761 l 197 0 l 69 0 m 151 0 l 151 111 l 693 111 l 693 0 l 151 0 z "},"Ε":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ζ":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 z "},"Η":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Θ":{"ha":833,"x_min":122,"x_max":711,"o":"m 285 467 l 285 581 l 549 581 l 549 467 l 285 467 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ι":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Κ":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Λ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 467 688 q 440 806 451 754 q 422 887 428 857 q 417 917 417 917 q 411 887 417 917 q 394 806 406 857 q 367 689 383 754 l 197 0 l 69 0 z "},"Μ":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"Ν":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 z "},"Ξ":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 900 l 111 1014 l 722 1014 l 722 900 l 111 900 m 111 0 l 111 114 l 722 114 l 722 0 l 111 0 m 153 457 l 153 571 l 681 571 l 681 457 l 153 457 z "},"Ο":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Π":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 256 900 l 256 0 l 131 0 z "},"Ρ":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"Σ":{"ha":833,"x_min":76,"x_max":750,"o":"m 76 0 l 76 114 l 518 508 l 76 900 l 76 1014 l 750 1014 l 750 903 l 329 903 l 229 907 l 610 574 l 610 447 l 219 107 l 319 111 l 750 111 l 750 0 l 76 0 z "},"Τ":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Υ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Φ":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 -35 l 358 63 q 210 99 274 63 q 110 199 146 135 q 75 351 75 264 l 75 676 q 110 833 75 767 q 208 935 144 899 q 358 972 272 972 l 358 1069 l 475 1069 l 475 972 q 625 935 561 972 q 724 833 689 899 q 758 676 758 767 l 758 351 q 723 199 758 264 q 624 99 688 135 q 475 63 561 63 l 475 -35 l 358 -35 m 358 168 l 358 867 q 269 844 307 867 q 212 778 232 821 q 192 676 192 736 l 192 351 q 212 253 192 294 q 269 190 232 213 q 358 168 307 168 m 475 168 q 565 190 528 168 q 622 253 601 213 q 642 351 642 294 l 642 676 q 622 778 642 736 q 565 844 601 821 q 475 867 528 867 l 475 168 z "},"Χ":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Ψ":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 0 l 358 236 q 210 272 274 236 q 110 373 146 308 q 75 525 75 438 l 75 1014 l 192 1014 l 192 525 q 212 427 192 468 q 269 364 232 386 q 358 342 307 342 l 358 1014 l 475 1014 l 475 342 q 565 364 528 342 q 622 427 601 386 q 642 525 642 468 l 642 1014 l 758 1014 l 758 525 q 723 373 758 438 q 624 272 688 308 q 475 236 561 236 l 475 0 l 358 0 z "},"Ω":{"ha":833,"x_min":69,"x_max":765,"o":"m 69 0 l 69 111 l 271 111 l 271 118 q 200 147 238 122 q 137 219 163 171 q 111 340 111 267 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 340 q 697 219 722 267 q 634 148 671 172 q 563 119 597 124 l 563 111 l 765 111 l 765 0 l 472 0 l 472 153 q 563 203 528 153 q 597 333 597 254 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 333 q 271 203 236 254 q 361 153 306 153 l 361 0 l 69 0 z "},"Ά":{"ha":833,"x_min":14,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 14 792 l 92 1014 l 222 1014 l 133 792 l 14 792 z "},"Έ":{"ha":833,"x_min":-160,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 z "},"Ή":{"ha":833,"x_min":-160,"x_max":704,"o":"m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ί":{"ha":833,"x_min":-160,"x_max":688,"o":"m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ό":{"ha":833,"x_min":-111,"x_max":711,"o":"m -111 792 l -33 1014 l 97 1014 l 8 792 l -111 792 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ύ":{"ha":833,"x_min":-174,"x_max":785,"o":"m -174 792 l -96 1014 l 35 1014 l -54 792 l -174 792 m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ώ":{"ha":833,"x_min":-111,"x_max":765,"o":"m 69 0 l 69 111 l 271 111 l 271 118 q 200 147 238 122 q 137 219 163 171 q 111 340 111 267 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 340 q 697 219 722 267 q 634 148 671 172 q 563 119 597 124 l 563 111 l 765 111 l 765 0 l 472 0 l 472 153 q 563 203 528 153 q 597 333 597 254 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 333 q 271 203 236 254 q 361 153 306 153 l 361 0 l 69 0 m -111 792 l -33 1014 l 97 1014 l 8 792 l -111 792 z "},"Ϊ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ϋ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ϗ":{"ha":833,"x_min":128,"x_max":806,"o":"m 506 -250 l 506 -140 l 546 -140 q 647 -102 608 -140 q 686 0 686 -64 l 686 99 l 806 99 l 806 0 q 740 -186 806 -122 q 546 -250 674 -250 l 506 -250 m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"α":{"ha":833,"x_min":125,"x_max":703,"o":"m 372 -14 q 191 63 257 -14 q 125 271 125 139 l 125 494 q 192 702 125 626 q 372 778 258 778 q 522 727 467 778 q 578 589 578 676 l 553 618 l 578 618 l 578 764 l 703 764 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 38 578 89 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 486 q 535 621 578 572 q 414 669 492 669 q 292 622 335 669 q 250 486 250 575 l 250 278 q 292 142 250 189 q 414 94 335 94 z "},"β":{"ha":833,"x_min":128,"x_max":736,"o":"m 128 -250 l 128 742 q 164 892 128 828 q 266 992 200 957 q 421 1028 332 1028 q 576 998 510 1028 q 680 910 643 968 q 717 769 717 853 q 674 625 717 685 q 554 543 631 565 q 688 455 639 521 q 736 289 736 389 q 699 139 736 204 q 594 37 661 74 q 438 0 528 0 l 253 0 l 253 -250 l 128 -250 m 253 114 l 424 114 q 556 163 507 114 q 604 293 604 213 q 556 419 604 374 q 424 465 508 465 l 363 465 l 363 574 l 421 574 q 542 622 499 574 q 586 744 586 671 q 542 869 586 825 q 421 914 497 914 q 299 868 344 914 q 253 742 253 822 l 253 114 z "},"γ":{"ha":833,"x_min":83,"x_max":750,"o":"m 354 -250 l 354 0 l 83 764 l 211 764 l 378 257 q 397 195 389 224 q 410 145 404 167 q 417 111 415 124 q 419 99 419 99 q 422 111 419 99 q 430 145 425 124 q 443 195 435 167 q 461 257 451 224 l 624 764 l 750 764 l 479 0 l 479 -250 l 354 -250 z "},"δ":{"ha":833,"x_min":97,"x_max":733,"o":"m 97 301 q 133 457 97 389 q 230 564 168 525 q 371 603 292 603 q 433 595 404 603 q 472 575 461 588 l 478 579 l 150 894 l 150 1014 l 667 1014 l 667 910 l 275 910 l 588 613 q 651 540 618 585 q 709 433 685 494 q 733 299 733 372 q 692 138 733 208 q 580 26 651 67 q 415 -14 508 -14 q 250 26 322 -14 q 138 138 178 67 q 97 301 97 208 m 225 306 q 249 197 225 244 q 317 124 274 150 q 415 97 360 97 q 515 124 472 97 q 583 197 558 150 q 608 306 608 244 q 583 414 608 367 q 515 488 558 461 q 415 514 472 514 q 317 488 360 514 q 249 414 274 461 q 225 306 225 367 z "},"ε":{"ha":833,"x_min":111,"x_max":743,"o":"m 453 -10 l 388 -10 q 186 50 261 -10 q 111 211 111 110 q 156 343 111 297 q 299 396 201 389 l 299 401 q 174 451 218 407 q 129 563 129 494 q 160 675 129 628 q 250 748 192 722 q 390 774 308 774 l 460 774 q 647 718 571 774 q 736 576 722 663 l 604 576 q 556 638 596 613 q 460 663 517 663 l 390 663 q 320 650 349 663 q 276 614 292 638 q 261 556 261 590 q 294 475 261 506 q 392 444 328 444 l 556 444 l 556 336 l 388 336 q 280 304 317 336 q 243 217 243 272 q 281 133 243 165 q 388 101 319 101 l 453 101 q 560 124 518 101 q 611 181 601 146 l 743 181 q 651 42 729 93 q 453 -10 574 -10 z "},"ζ":{"ha":833,"x_min":94,"x_max":751,"o":"m 94 253 q 108 346 94 300 q 154 443 122 392 q 240 559 186 494 q 376 707 294 624 q 572 900 458 790 l 125 900 l 125 1014 l 701 1014 l 701 889 l 467 647 q 350 521 397 576 q 274 419 303 465 q 232 333 244 372 q 219 253 219 293 q 258 149 219 188 q 361 111 296 111 l 551 111 q 703 71 654 111 q 743 -67 751 31 l 726 -250 l 601 -250 l 618 -67 q 551 0 625 0 l 360 0 q 164 67 233 0 q 94 253 94 133 z "},"η":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 -250 l 583 -250 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 z "},"θ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 722 q 158 879 122 814 q 259 979 193 944 q 417 1014 325 1014 q 574 979 508 1014 q 676 879 640 944 q 711 724 711 814 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 542 143 499 97 q 586 278 586 189 l 586 722 q 542 857 586 811 q 417 903 499 903 q 292 857 336 903 q 247 722 247 811 l 247 278 q 292 143 247 189 q 417 97 336 97 m 228 556 l 601 556 l 601 447 l 228 447 l 228 556 z "},"ι":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 z "},"κ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"λ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 368 751 l 265 1014 l 399 1014 l 764 0 l 628 0 l 467 496 q 441 586 451 544 q 428 649 431 628 q 415 586 425 628 q 386 496 404 544 l 206 0 l 69 0 z "},"μ":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 -250 l 129 764 l 254 764 l 254 269 q 297 142 254 188 q 415 96 339 96 q 536 142 493 96 q 579 269 579 188 l 579 764 l 704 764 l 704 269 q 631 63 704 139 q 429 -14 557 -14 q 321 3 365 -14 q 251 46 276 21 q 219 93 226 71 l 214 93 q 221 74 215 93 q 231 30 226 56 q 238 -18 236 4 l 253 -250 l 129 -250 z "},"ν":{"ha":833,"x_min":76,"x_max":757,"o":"m 332 0 l 76 764 l 204 764 l 374 250 q 401 162 389 204 q 419 96 414 119 q 439 162 426 119 q 465 250 451 204 l 631 764 l 757 764 l 501 0 l 332 0 z "},"ξ":{"ha":833,"x_min":92,"x_max":751,"o":"m 92 288 q 140 451 92 386 q 279 543 188 517 q 155 627 199 567 q 111 774 111 688 q 197 962 111 893 q 426 1031 282 1031 q 595 996 525 1031 q 703 897 665 961 q 742 746 742 833 l 617 746 q 565 872 617 824 q 429 919 514 919 q 293 877 344 919 q 242 757 242 835 q 293 628 242 681 q 429 575 344 575 l 553 575 l 553 461 l 429 461 q 277 416 331 461 q 224 288 224 371 q 277 159 224 204 q 429 114 331 114 l 551 114 q 703 74 654 114 q 743 -64 751 33 l 726 -247 l 601 -247 l 618 -64 q 551 3 625 3 l 429 3 q 178 80 265 3 q 92 288 92 157 z "},"ο":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"π":{"ha":833,"x_min":35,"x_max":771,"o":"m 744 -7 q 576 60 639 -7 q 513 236 513 126 l 513 653 l 271 653 l 271 0 l 146 0 l 146 654 l 35 654 l 35 764 l 769 764 l 769 658 l 638 658 l 638 228 q 663 140 638 171 q 738 110 689 110 l 771 110 l 771 -7 l 744 -7 z "},"ρ":{"ha":833,"x_min":131,"x_max":708,"o":"m 131 -250 l 131 494 q 166 646 131 582 q 267 744 201 710 q 421 778 332 778 q 575 744 511 778 q 674 647 639 710 q 708 494 708 583 l 708 271 q 678 119 708 183 q 594 21 649 56 q 461 -14 539 -14 q 312 38 368 -14 q 256 175 256 89 l 281 146 l 253 146 l 256 -28 l 256 -250 l 131 -250 m 419 94 q 541 142 499 94 q 583 278 583 189 l 583 486 q 541 622 583 575 q 419 669 499 669 q 298 622 340 669 q 256 486 256 575 l 256 278 q 299 143 256 192 q 419 94 343 94 z "},"ς":{"ha":833,"x_min":122,"x_max":754,"o":"m 122 286 l 122 486 q 159 643 122 578 q 263 743 196 708 q 422 778 331 778 q 578 746 511 778 q 682 655 644 714 q 719 514 719 596 l 594 514 q 547 627 594 588 q 422 667 500 667 q 294 620 340 667 q 247 488 247 574 l 247 288 q 294 156 247 200 q 422 111 340 111 l 554 111 q 706 71 657 111 q 746 -67 754 31 l 729 -250 l 604 -250 l 621 -67 q 554 0 628 0 l 422 0 q 203 75 283 0 q 122 286 122 150 z "},"σ":{"ha":833,"x_min":122,"x_max":736,"o":"m 122 278 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 l 736 778 l 736 667 l 576 667 l 576 642 l 547 669 q 602 656 574 669 q 656 617 631 642 q 696 560 681 593 q 711 488 711 526 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 m 247 278 q 292 143 247 189 q 417 97 336 97 q 542 143 499 97 q 586 278 586 189 l 586 486 q 542 621 586 575 q 417 667 499 667 q 292 621 336 667 q 247 486 247 575 l 247 278 z "},"τ":{"ha":833,"x_min":76,"x_max":722,"o":"m 535 0 q 381 53 436 0 q 326 201 326 106 l 326 650 l 76 650 l 76 764 l 722 764 l 722 650 l 451 650 l 451 201 q 535 114 451 114 l 708 114 l 708 0 l 535 0 z "},"υ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"φ":{"ha":833,"x_min":76,"x_max":757,"o":"m 360 -250 l 360 0 q 151 76 226 0 q 76 281 76 151 l 76 764 l 192 764 l 192 281 q 238 147 192 196 q 367 99 283 99 l 367 764 l 517 764 q 692 704 628 764 q 757 542 757 644 l 757 281 q 682 76 757 151 q 474 0 607 0 l 474 -250 l 360 -250 m 467 99 q 595 147 549 99 q 642 281 642 196 l 642 542 q 608 633 642 600 q 517 667 575 667 l 467 667 l 467 99 z "},"χ":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 -250 l 347 264 l 71 764 l 215 764 l 372 464 q 398 413 385 440 q 419 371 411 386 q 440 413 426 386 q 465 464 453 440 l 625 764 l 763 764 l 486 272 l 778 -250 l 635 -250 l 461 72 q 435 123 449 96 q 415 167 422 150 q 395 124 408 150 q 369 74 382 97 l 194 -250 l 56 -250 z "},"ψ":{"ha":833,"x_min":75,"x_max":758,"o":"m 360 -250 l 360 0 q 150 76 225 0 q 75 281 75 151 l 75 764 l 190 764 l 190 281 q 238 147 190 196 q 367 99 285 99 l 367 764 l 467 764 l 467 99 q 596 147 549 99 q 643 281 643 196 l 643 764 l 758 764 l 758 281 q 683 76 758 151 q 474 0 608 0 l 474 -250 l 360 -250 z "},"ω":{"ha":833,"x_min":76,"x_max":757,"o":"m 257 -14 q 125 46 174 -14 q 76 214 76 106 l 76 494 q 131 687 76 610 q 271 778 185 764 l 271 646 q 214 595 236 636 q 192 494 192 554 l 192 213 q 215 128 192 158 q 279 97 238 97 q 344 128 321 97 q 367 213 367 158 l 367 494 l 467 494 l 467 213 q 490 128 467 158 q 554 97 513 97 q 619 128 596 97 q 642 213 642 158 l 642 494 q 617 592 642 554 q 556 639 592 629 l 556 771 q 699 683 642 757 q 757 494 757 610 l 757 214 q 708 46 757 106 q 576 -14 660 -14 q 457 35 501 -14 q 413 169 413 85 l 421 169 q 376 35 421 85 q 257 -14 332 -14 z "},"ί":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"ϊ":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ΐ":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ύ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ϋ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"ΰ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ό":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ώ":{"ha":833,"x_min":76,"x_max":757,"o":"m 257 -14 q 125 46 174 -14 q 76 214 76 106 l 76 494 q 131 687 76 610 q 271 778 185 764 l 271 646 q 214 595 236 636 q 192 494 192 554 l 192 213 q 215 128 192 158 q 279 97 238 97 q 344 128 321 97 q 367 213 367 158 l 367 494 l 467 494 l 467 213 q 490 128 467 158 q 554 97 513 97 q 619 128 596 97 q 642 213 642 158 l 642 494 q 617 592 642 554 q 556 639 592 629 l 556 771 q 699 683 642 757 q 757 494 757 610 l 757 214 q 708 46 757 106 q 576 -14 660 -14 q 457 35 501 -14 q 413 169 413 85 l 421 169 q 376 35 421 85 q 257 -14 332 -14 m 322 896 l 469 1090 l 604 1090 l 450 896 l 322 896 z "},"ά":{"ha":833,"x_min":125,"x_max":703,"o":"m 372 -14 q 191 63 257 -14 q 125 271 125 139 l 125 494 q 192 702 125 626 q 372 778 258 778 q 522 727 467 778 q 578 589 578 676 l 553 618 l 578 618 l 578 764 l 703 764 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 38 578 89 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 486 q 535 621 578 572 q 414 669 492 669 q 292 622 335 669 q 250 486 250 575 l 250 278 q 292 142 250 189 q 414 94 335 94 m 328 896 l 475 1090 l 610 1090 l 456 896 l 328 896 z "},"έ":{"ha":833,"x_min":111,"x_max":743,"o":"m 453 -10 l 388 -10 q 186 50 261 -10 q 111 211 111 110 q 156 343 111 297 q 299 396 201 389 l 299 401 q 174 451 218 407 q 129 563 129 494 q 160 675 129 628 q 250 748 192 722 q 390 774 308 774 l 460 774 q 647 718 571 774 q 736 576 722 663 l 604 576 q 556 638 596 613 q 460 663 517 663 l 390 663 q 320 650 349 663 q 276 614 292 638 q 261 556 261 590 q 294 475 261 506 q 392 444 328 444 l 556 444 l 556 336 l 388 336 q 280 304 317 336 q 243 217 243 272 q 281 133 243 165 q 388 101 319 101 l 453 101 q 560 124 518 101 q 611 181 601 146 l 743 181 q 651 42 729 93 q 453 -10 574 -10 m 314 896 l 461 1090 l 596 1090 l 442 896 l 314 896 z "},"ή":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 -250 l 583 -250 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ϗ":{"ha":833,"x_min":131,"x_max":764,"o":"m 464 -250 l 464 -140 l 504 -140 q 606 -102 567 -140 q 644 0 644 -64 l 644 99 l 764 99 l 764 0 q 698 -186 764 -122 q 504 -250 632 -250 l 464 -250 m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 z "},"ℕ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 304 1014 l 646 236 q 642 326 644 272 q 640 417 640 379 l 640 1014 l 708 1014 l 708 0 l 529 0 l 188 778 q 192 690 190 743 q 193 597 193 636 l 193 0 l 125 0 m 569 54 l 661 54 l 264 960 l 172 960 l 569 54 z "},"₀":{"ha":833,"x_min":201,"x_max":632,"o":"m 417 -167 q 259 -112 317 -167 q 201 40 201 -57 l 201 246 q 259 397 201 342 q 417 451 317 451 q 574 397 517 451 q 632 246 632 342 l 632 40 q 574 -112 632 -57 q 417 -167 517 -167 m 417 -79 q 503 -47 472 -79 q 535 40 535 -15 l 535 246 q 503 333 535 301 q 417 364 472 364 q 330 333 361 364 q 299 246 299 301 l 299 40 q 330 -47 299 -15 q 417 -79 361 -79 z "},"₁":{"ha":833,"x_min":215,"x_max":639,"o":"m 215 -153 l 215 -64 l 397 -64 l 397 350 l 228 229 l 228 339 l 363 438 l 494 438 l 494 -64 l 639 -64 l 639 -153 l 215 -153 z "},"₂":{"ha":833,"x_min":210,"x_max":632,"o":"m 231 -153 l 231 -32 l 456 136 q 503 190 486 158 q 521 251 521 221 q 492 334 521 304 q 414 364 463 364 q 336 334 365 364 q 307 251 307 304 l 210 251 q 269 397 214 343 q 414 451 325 451 q 563 398 508 451 q 617 254 617 344 q 588 156 617 206 q 507 68 558 106 l 329 -64 l 632 -64 l 632 -153 l 231 -153 z "},"₃":{"ha":833,"x_min":189,"x_max":600,"o":"m 394 -167 q 244 -114 300 -167 q 189 28 189 -61 l 285 28 q 314 -50 285 -21 q 394 -79 343 -79 q 472 -50 443 -79 q 500 28 500 -21 q 472 105 500 76 q 396 133 444 133 l 354 133 l 354 226 l 483 350 l 229 350 l 229 439 l 563 439 l 563 329 l 400 175 l 400 214 q 546 164 492 214 q 600 28 600 114 q 544 -114 600 -61 q 394 -167 489 -167 z "},"₄":{"ha":833,"x_min":203,"x_max":594,"o":"m 497 -153 l 497 -25 l 203 -25 l 203 104 l 439 439 l 547 439 l 300 85 l 300 64 l 497 64 l 497 208 l 594 208 l 594 -153 l 497 -153 z "},"₅":{"ha":833,"x_min":190,"x_max":604,"o":"m 396 -167 q 256 -122 311 -167 q 190 0 200 -76 l 288 0 q 324 -58 294 -36 q 396 -79 353 -79 q 475 -49 446 -79 q 504 32 504 -19 q 474 113 504 83 q 393 143 444 143 q 341 132 365 143 q 304 101 317 121 l 214 101 l 214 438 l 578 438 l 578 349 l 311 349 l 311 124 l 296 117 q 342 191 306 164 q 432 218 379 218 q 558 168 511 218 q 604 32 604 118 q 548 -113 604 -60 q 396 -167 492 -167 z "},"₆":{"ha":833,"x_min":201,"x_max":632,"o":"m 418 -167 q 261 -112 321 -167 q 201 32 201 -58 q 217 124 201 75 q 257 213 232 174 l 406 438 l 511 438 l 338 169 l 385 169 l 333 142 q 381 197 344 176 q 465 217 418 217 q 587 167 542 217 q 632 32 632 117 q 574 -112 632 -58 q 418 -167 517 -167 m 417 -81 q 502 -50 471 -81 q 533 32 533 -19 q 502 115 533 85 q 417 144 471 144 q 332 115 364 144 q 300 32 300 85 q 332 -50 300 -19 q 417 -81 364 -81 z "},"₇":{"ha":833,"x_min":215,"x_max":618,"o":"m 293 -153 l 525 349 l 311 349 l 311 261 l 215 261 l 215 438 l 618 438 l 618 326 l 403 -153 l 293 -153 z "},"₈":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 -181 q 265 -137 321 -181 q 208 -19 208 -93 q 246 75 208 31 q 347 144 283 119 l 456 188 q 501 222 485 199 q 518 274 518 246 q 490 333 518 311 q 415 354 463 354 q 343 332 369 354 q 317 272 317 310 q 335 223 317 246 q 385 188 354 200 l 488 147 q 588 78 551 122 q 625 -19 625 33 q 569 -137 625 -93 q 417 -181 513 -181 m 417 -94 q 498 -71 468 -94 q 528 -8 528 -47 q 510 47 528 22 q 463 85 493 72 l 361 128 q 258 199 296 156 q 219 289 219 243 q 273 398 219 358 q 417 438 326 438 q 562 398 508 438 q 615 289 615 358 q 578 199 615 242 q 475 129 540 157 l 368 85 q 322 48 339 72 q 306 -7 306 24 q 335 -71 306 -47 q 417 -94 365 -94 z "},"₉":{"ha":833,"x_min":203,"x_max":633,"o":"m 322 -153 l 497 115 l 450 115 l 501 143 q 454 88 490 108 q 369 68 418 68 q 248 118 293 68 q 203 253 203 168 q 261 397 203 343 q 417 451 319 451 q 574 397 515 451 q 633 253 633 343 q 618 164 633 213 q 576 75 603 115 l 429 -153 l 322 -153 m 418 140 q 503 171 471 140 q 535 253 535 201 q 503 335 535 306 q 418 365 471 365 q 333 335 364 365 q 301 253 301 306 q 333 171 301 201 q 418 140 364 140 z "},"⁰":{"ha":833,"x_min":201,"x_max":632,"o":"m 417 549 q 259 603 317 549 q 201 756 201 658 l 201 961 q 259 1112 201 1057 q 417 1167 317 1167 q 574 1112 517 1167 q 632 961 632 1057 l 632 756 q 574 603 632 658 q 417 549 517 549 m 417 636 q 503 668 472 636 q 535 756 535 700 l 535 961 q 503 1048 535 1017 q 417 1079 472 1079 q 330 1048 361 1079 q 299 961 299 1017 l 299 756 q 330 668 299 700 q 417 636 361 636 z "},"¹":{"ha":833,"x_min":215,"x_max":639,"o":"m 215 563 l 215 651 l 397 651 l 397 1065 l 228 944 l 228 1054 l 363 1153 l 494 1153 l 494 651 l 639 651 l 639 563 l 215 563 z "},"²":{"ha":833,"x_min":210,"x_max":632,"o":"m 231 563 l 231 683 l 456 851 q 503 905 486 874 q 521 967 521 936 q 492 1049 521 1019 q 414 1079 463 1079 q 336 1049 365 1079 q 307 967 307 1019 l 210 967 q 269 1113 214 1058 q 414 1167 325 1167 q 563 1113 508 1167 q 617 969 617 1060 q 588 871 617 921 q 507 783 558 821 l 329 651 l 632 651 l 632 563 l 231 563 z "},"³":{"ha":833,"x_min":189,"x_max":600,"o":"m 394 549 q 244 601 300 549 q 189 743 189 654 l 285 743 q 314 665 285 694 q 394 636 343 636 q 472 665 443 636 q 500 743 500 694 q 472 820 500 792 q 396 849 444 849 l 354 849 l 354 942 l 483 1065 l 229 1065 l 229 1154 l 563 1154 l 563 1044 l 400 890 l 400 929 q 546 879 492 929 q 600 743 600 829 q 544 601 600 654 q 394 549 489 549 z "},"⁴":{"ha":833,"x_min":203,"x_max":594,"o":"m 497 563 l 497 690 l 203 690 l 203 819 l 439 1154 l 547 1154 l 300 800 l 300 779 l 497 779 l 497 924 l 594 924 l 594 563 l 497 563 z "},"⁵":{"ha":833,"x_min":190,"x_max":604,"o":"m 396 549 q 256 594 311 549 q 190 715 200 639 l 288 715 q 324 658 294 679 q 396 636 353 636 q 475 666 446 636 q 504 747 504 696 q 474 828 504 799 q 393 858 444 858 q 341 847 365 858 q 304 817 317 836 l 214 817 l 214 1153 l 578 1153 l 578 1064 l 311 1064 l 311 839 l 296 832 q 342 906 306 879 q 432 933 379 933 q 558 883 511 933 q 604 747 604 833 q 548 602 604 656 q 396 549 492 549 z "},"⁶":{"ha":833,"x_min":201,"x_max":632,"o":"m 418 549 q 261 603 321 549 q 201 747 201 657 q 217 840 201 790 q 257 928 232 889 l 406 1153 l 511 1153 l 338 885 l 385 885 l 333 857 q 381 912 344 892 q 465 932 418 932 q 587 882 542 932 q 632 747 632 832 q 574 603 632 657 q 418 549 517 549 m 417 635 q 502 665 471 635 q 533 747 533 696 q 502 830 533 800 q 417 860 471 860 q 332 830 364 860 q 300 747 300 800 q 332 665 300 696 q 417 635 364 635 z "},"⁷":{"ha":833,"x_min":215,"x_max":618,"o":"m 293 563 l 525 1064 l 311 1064 l 311 976 l 215 976 l 215 1153 l 618 1153 l 618 1042 l 403 563 l 293 563 z "},"⁸":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 549 q 265 592 321 549 q 208 710 208 636 q 246 804 208 760 q 347 874 283 849 l 456 917 q 501 951 485 928 q 518 1003 518 975 q 490 1062 518 1040 q 415 1083 463 1083 q 343 1061 369 1083 q 317 1001 317 1039 q 335 952 317 975 q 385 917 354 929 l 488 876 q 588 807 551 851 q 625 710 625 763 q 569 592 625 636 q 417 549 513 549 m 417 635 q 498 658 468 635 q 528 721 528 682 q 510 776 528 751 q 463 814 493 801 l 361 857 q 258 928 296 885 q 219 1018 219 972 q 273 1127 219 1088 q 417 1167 326 1167 q 562 1127 508 1167 q 615 1018 615 1088 q 578 928 615 971 q 475 858 540 886 l 368 814 q 322 777 339 801 q 306 722 306 753 q 335 658 306 682 q 417 635 365 635 z "},"⁹":{"ha":833,"x_min":203,"x_max":633,"o":"m 322 563 l 497 831 l 450 831 l 501 858 q 454 803 490 824 q 369 783 418 783 q 248 833 293 783 q 203 968 203 883 q 261 1113 203 1058 q 417 1167 319 1167 q 574 1113 515 1167 q 633 968 633 1058 q 618 879 633 928 q 576 790 603 831 l 429 563 l 322 563 m 418 856 q 503 886 471 856 q 535 968 535 917 q 503 1051 535 1021 q 418 1081 471 1081 q 333 1051 364 1081 q 301 968 301 1021 q 333 886 301 917 q 418 856 364 856 z "},"⁄":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"½":{"ha":833,"x_min":42,"x_max":792,"o":"m 438 0 l 438 89 l 604 185 q 677 241 653 213 q 701 300 701 269 q 676 365 701 340 q 611 389 651 389 q 546 365 571 389 q 521 300 521 340 l 438 300 q 488 415 440 372 q 611 458 536 458 q 737 415 689 458 q 785 303 785 372 q 753 218 785 260 q 665 144 722 176 l 536 72 l 536 58 q 581 65 551 61 q 640 69 610 69 l 792 69 l 792 0 l 438 0 m 42 563 l 42 632 l 206 632 l 206 960 q 188 935 200 950 q 160 907 175 921 l 74 832 l 74 929 l 171 1014 l 289 1014 l 289 632 l 438 632 l 438 563 l 42 563 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"¼":{"ha":833,"x_min":42,"x_max":750,"o":"m 42 563 l 42 632 l 206 632 l 206 960 q 188 935 200 950 q 160 907 175 921 l 74 832 l 74 929 l 171 1014 l 289 1014 l 289 632 l 424 632 l 424 563 l 42 563 m 667 0 l 667 97 l 424 97 l 424 208 l 599 451 l 694 451 l 507 189 l 507 167 l 667 167 l 667 290 l 750 290 l 750 0 l 667 0 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"¾":{"ha":833,"x_min":36,"x_max":750,"o":"m 667 0 l 667 97 l 424 97 l 424 208 l 599 451 l 694 451 l 507 189 l 507 167 l 667 167 l 667 290 l 750 290 l 750 0 l 667 0 m 214 556 q 85 596 133 556 q 36 701 36 636 l 119 701 q 145 646 119 667 q 214 625 171 625 q 281 646 256 625 q 307 701 307 667 q 281 757 307 736 q 215 778 256 778 l 174 778 l 174 857 l 286 944 l 69 944 l 69 1014 l 368 1014 l 368 938 l 219 822 l 219 847 q 343 807 296 847 q 390 701 390 767 q 342 596 390 636 q 214 556 293 556 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},".":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 -14 q 333 17 364 -14 q 301 99 301 47 q 333 185 301 153 q 417 217 364 217 q 501 185 469 217 q 532 99 532 153 q 501 17 532 47 q 417 -14 469 -14 z "},",":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},":":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 569 q 333 598 365 569 q 301 674 301 626 q 333 749 301 721 q 417 778 365 778 q 501 749 469 778 q 532 674 532 721 q 501 598 532 626 q 417 569 469 569 m 417 -14 q 333 15 365 -14 q 301 90 301 43 q 333 166 301 138 q 417 194 365 194 q 501 166 469 194 q 532 90 532 138 q 501 15 532 43 q 417 -14 469 -14 z "},";":{"ha":833,"x_min":236,"x_max":535,"o":"m 236 -222 l 347 210 l 528 210 l 347 -222 l 236 -222 m 403 569 q 328 599 357 569 q 299 674 299 628 q 328 748 299 718 q 403 778 358 778 l 431 778 q 505 748 475 778 q 535 674 535 718 q 506 599 535 628 q 431 569 476 569 l 403 569 z "},"…":{"ha":833,"x_min":83,"x_max":750,"o":"m 681 -14 q 631 7 650 -14 q 611 63 611 28 l 611 160 q 631 215 611 194 q 681 236 650 236 q 731 215 713 236 q 750 160 750 194 l 750 63 q 731 7 750 28 q 681 -14 713 -14 m 153 -14 q 103 7 122 -14 q 83 63 83 28 l 83 160 q 103 215 83 194 q 153 236 122 236 q 203 215 185 236 q 222 160 222 194 l 222 63 q 203 7 222 28 q 153 -14 185 -14 m 417 -14 q 367 7 386 -14 q 347 63 347 28 l 347 160 q 367 215 347 194 q 417 236 386 236 q 467 215 449 236 q 486 160 486 194 l 486 63 q 467 7 486 28 q 417 -14 449 -14 z "},"!":{"ha":833,"x_min":313,"x_max":521,"o":"m 372 299 l 343 847 l 343 1014 l 490 1014 l 490 847 l 461 299 l 372 299 m 396 -7 q 336 17 360 -7 q 313 76 313 40 q 336 136 313 113 q 396 160 360 160 l 438 160 q 499 137 478 160 q 521 78 521 114 q 497 17 521 42 q 438 -7 474 -7 l 396 -7 z "},"¡":{"ha":833,"x_min":313,"x_max":521,"o":"m 343 -250 l 343 -76 l 372 467 l 461 467 l 490 -76 l 490 -250 l 343 -250 m 403 606 q 338 629 363 606 q 313 690 313 653 q 338 750 313 728 q 403 772 363 772 l 431 772 q 496 751 471 772 q 521 692 521 729 q 496 629 521 653 q 431 606 471 606 l 403 606 z "},"?":{"ha":833,"x_min":188,"x_max":681,"o":"m 293 285 l 293 535 l 363 535 q 503 584 451 535 q 556 715 556 633 q 503 847 556 797 q 361 896 451 896 l 188 896 l 188 1014 l 361 1014 q 530 977 458 1014 q 641 874 601 940 q 681 715 681 807 q 647 573 681 636 q 555 472 614 510 q 418 431 496 435 l 418 285 l 293 285 m 333 -7 q 274 17 297 -7 q 250 76 250 40 q 274 136 250 113 q 333 160 297 160 l 375 160 q 437 137 415 160 q 458 78 458 114 q 435 17 458 42 q 375 -7 411 -7 l 333 -7 z "},"¿":{"ha":833,"x_min":153,"x_max":646,"o":"m 472 -236 q 302 -201 374 -236 q 192 -99 231 -165 q 153 56 153 -33 q 185 196 153 135 q 277 293 218 257 q 415 333 336 329 l 415 479 l 540 479 l 540 229 l 471 229 q 330 183 382 229 q 278 56 278 138 q 330 -72 278 -25 q 472 -118 382 -118 l 646 -118 l 646 -236 l 472 -236 m 465 604 q 400 628 425 604 q 375 689 375 651 q 400 749 375 726 q 465 771 425 771 l 493 771 q 558 749 533 771 q 583 690 583 728 q 558 628 583 651 q 493 604 533 604 l 465 604 z "},"·":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 361 q 333 392 364 361 q 301 474 301 422 q 333 560 301 528 q 417 592 364 592 q 501 560 469 592 q 532 474 532 528 q 501 392 532 422 q 417 361 469 361 z "},"•":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 340 q 297 388 344 340 q 250 507 250 435 q 297 627 250 581 q 417 674 344 674 q 537 627 490 674 q 583 507 583 581 q 537 388 583 435 q 417 340 490 340 z "},"*":{"ha":833,"x_min":49,"x_max":785,"o":"m 251 131 l 151 200 l 226 308 q 269 360 244 335 q 320 409 294 386 q 365 449 346 432 l 361 458 q 301 465 335 461 q 234 476 268 468 q 171 493 200 483 l 49 538 l 90 653 l 213 608 q 273 581 242 599 q 333 545 304 564 q 383 510 363 526 l 390 515 q 375 576 383 542 q 361 647 367 610 q 356 715 356 683 l 356 847 l 478 847 l 478 715 q 472 647 478 683 q 458 576 467 610 q 442 515 450 542 l 449 510 q 499 545 471 526 q 559 581 528 564 q 619 608 590 599 l 743 653 l 785 538 l 661 493 q 599 476 633 483 q 532 465 565 468 q 472 458 499 461 l 467 447 q 513 408 488 431 q 563 359 539 385 q 604 308 588 333 l 681 200 l 581 131 l 504 239 q 472 296 488 264 q 442 360 456 328 q 421 417 429 392 l 411 417 q 390 360 403 392 q 360 296 376 328 q 326 239 344 264 l 251 131 z "},"#":{"ha":833,"x_min":49,"x_max":785,"o":"m 115 0 l 167 278 l 49 278 l 49 368 l 183 368 l 233 646 l 97 646 l 97 736 l 250 736 l 301 1014 l 399 1014 l 347 736 l 569 736 l 621 1014 l 718 1014 l 667 736 l 785 736 l 785 646 l 650 646 l 600 368 l 736 368 l 736 278 l 583 278 l 532 0 l 435 0 l 486 278 l 264 278 l 213 0 l 115 0 m 281 368 l 503 368 l 553 646 l 331 646 l 281 368 z "},"․":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 -14 q 333 17 364 -14 q 301 99 301 47 q 333 185 301 153 q 417 217 364 217 q 501 185 469 217 q 532 99 532 153 q 501 17 532 47 q 417 -14 469 -14 z "},"/":{"ha":833,"x_min":104,"x_max":729,"o":"m 104 -153 l 597 1153 l 729 1153 l 236 -153 l 104 -153 z "},"\\\\\\\\":{"ha":833,"x_min":104,"x_max":729,"o":"m 597 -153 l 104 1153 l 236 1153 l 729 -153 l 597 -153 z "},"(":{"ha":833,"x_min":257,"x_max":674,"o":"m 674 -167 q 367 25 476 -118 q 257 375 257 168 l 257 625 q 308 872 257 761 q 452 1058 358 982 q 674 1167 546 1135 l 674 1049 q 519 969 585 1028 q 418 822 454 910 q 382 625 382 735 l 382 375 q 417 181 382 268 q 519 35 453 93 q 674 -43 585 -22 l 674 -167 z "},")":{"ha":833,"x_min":160,"x_max":576,"o":"m 160 -167 l 160 -43 q 315 35 250 -22 q 416 181 381 93 q 451 375 451 268 l 451 625 q 415 822 451 735 q 314 969 379 910 q 160 1049 249 1028 l 160 1167 q 382 1058 289 1135 q 526 872 475 982 q 576 625 576 761 l 576 375 q 467 25 576 168 q 160 -167 357 -118 z "},"{":{"ha":833,"x_min":118,"x_max":715,"o":"m 653 -153 q 512 -126 571 -153 q 422 -47 453 -99 q 396 78 392 6 l 410 306 q 388 412 414 379 q 271 444 361 444 l 118 444 l 118 556 l 271 556 q 388 588 361 556 q 410 694 414 621 l 396 922 q 422 1047 392 996 q 512 1126 453 1099 q 653 1153 571 1153 l 715 1153 l 715 1042 l 653 1042 q 553 1012 588 1042 q 521 922 518 982 l 535 694 q 492 551 540 604 q 354 497 443 497 l 354 504 q 491 450 442 504 q 535 306 540 396 l 521 78 q 553 -12 518 18 q 653 -42 588 -42 l 715 -42 l 715 -153 l 653 -153 z "},"}":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 -153 l 118 -42 l 181 -42 q 281 -12 246 -42 q 313 78 315 18 l 299 306 q 342 450 293 396 q 479 504 392 504 l 479 497 q 342 551 390 497 q 299 694 293 604 l 313 922 q 281 1012 315 982 q 181 1042 246 1042 l 118 1042 l 118 1153 l 181 1153 q 322 1126 263 1153 q 411 1047 381 1099 q 438 922 442 996 l 424 694 q 446 588 419 621 q 563 556 472 556 l 715 556 l 715 444 l 563 444 q 447 412 474 444 q 424 306 419 379 l 438 78 q 411 -47 442 6 q 322 -126 381 -99 q 181 -153 263 -153 l 118 -153 z "},"[":{"ha":833,"x_min":285,"x_max":625,"o":"m 285 -153 l 285 1153 l 625 1153 l 625 1042 l 410 1042 l 410 -42 l 625 -42 l 625 -153 l 285 -153 z "},"]":{"ha":833,"x_min":208,"x_max":549,"o":"m 208 -153 l 208 -42 l 424 -42 l 424 1042 l 208 1042 l 208 1153 l 549 1153 l 549 -153 l 208 -153 z "},"❰":{"ha":833,"x_min":153,"x_max":688,"o":"m 338 0 l 153 504 l 338 1014 l 688 1014 l 503 507 l 688 0 l 338 0 z "},"❮":{"ha":833,"x_min":208,"x_max":629,"o":"m 396 0 l 208 504 l 396 1014 l 629 1014 l 442 507 l 629 0 l 396 0 z "},"❱":{"ha":833,"x_min":146,"x_max":681,"o":"m 496 0 l 681 504 l 496 1014 l 146 1014 l 331 507 l 146 0 l 496 0 z "},"❯":{"ha":833,"x_min":204,"x_max":625,"o":"m 438 0 l 625 504 l 438 1014 l 204 1014 l 392 507 l 204 0 l 438 0 z "},"-":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"­":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"–":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 403 l 111 514 l 722 514 l 722 403 l 111 403 z "},"—":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 403 l 0 514 l 833 514 l 833 403 l 0 403 z "},"‐":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"_":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 -139 l 83 -35 l 750 -35 l 750 -139 l 83 -139 z "},"‚":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},"„":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 -222 l 549 210 l 729 210 l 549 -222 l 438 -222 m 118 -222 l 229 210 l 410 210 l 229 -222 l 118 -222 z "},"“":{"ha":833,"x_min":104,"x_max":715,"o":"m 424 646 l 604 1078 l 715 1078 l 604 646 l 424 646 m 104 646 l 285 1078 l 396 1078 l 285 646 l 104 646 z "},"”":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 646 l 549 1078 l 729 1078 l 549 646 l 438 646 m 118 646 l 229 1078 l 410 1078 l 229 646 l 118 646 z "},"‘":{"ha":833,"x_min":319,"x_max":611,"o":"m 611 1076 l 500 644 l 319 644 l 500 1076 l 611 1076 z "},"’":{"ha":833,"x_min":222,"x_max":514,"o":"m 222 646 l 333 1078 l 514 1078 l 333 646 l 222 646 z "},"«":{"ha":833,"x_min":42,"x_max":792,"o":"m 646 56 l 365 389 l 644 722 l 792 722 l 506 392 l 792 56 l 646 56 m 322 56 l 42 389 l 321 722 l 468 722 l 182 392 l 468 56 l 322 56 z "},"»":{"ha":833,"x_min":42,"x_max":792,"o":"m 367 56 l 647 390 l 365 722 l 511 722 l 792 389 l 513 56 l 367 56 m 43 56 l 324 390 l 42 722 l 188 722 l 468 389 l 189 56 l 43 56 z "},"‹":{"ha":833,"x_min":204,"x_max":631,"o":"m 485 56 l 204 389 l 485 722 l 626 722 l 343 392 l 631 56 l 485 56 z "},"›":{"ha":833,"x_min":204,"x_max":631,"o":"m 208 56 l 492 386 l 204 722 l 350 722 l 631 389 l 350 56 l 208 56 z "},"\\\\"":{"ha":833,"x_min":208,"x_max":625,"o":"m 507 597 l 490 889 l 490 1014 l 625 1014 l 625 889 l 610 597 l 507 597 m 225 597 l 208 889 l 208 1014 l 343 1014 l 343 889 l 328 597 l 225 597 z "},"\\\'":{"ha":833,"x_min":342,"x_max":476,"o":"m 358 597 l 342 806 l 342 1014 l 476 1014 l 476 806 l 461 597 l 358 597 z "},"⟨":{"ha":833,"x_min":174,"x_max":674,"o":"m 524 -160 l 174 403 l 174 572 l 524 1132 l 665 1132 l 276 483 l 674 -160 l 524 -160 z "},"⟩":{"ha":833,"x_min":160,"x_max":660,"o":"m 160 -160 l 557 483 l 168 1132 l 310 1132 l 660 572 l 660 403 l 310 -160 l 160 -160 z "},"·":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 361 q 333 392 364 361 q 301 474 301 422 q 333 560 301 528 q 417 592 364 592 q 501 560 469 592 q 532 474 532 528 q 501 392 532 422 q 417 361 469 361 z "},";":{"ha":833,"x_min":236,"x_max":535,"o":"m 236 -222 l 347 210 l 528 210 l 347 -222 l 236 -222 m 403 569 q 328 599 357 569 q 299 674 299 628 q 328 748 299 718 q 403 778 358 778 l 431 778 q 505 748 475 778 q 535 674 535 718 q 506 599 535 628 q 431 569 476 569 l 403 569 z "}," ":{"ha":833,"x_min":0,"x_max":0,"o":""}," ":{"ha":833,"x_min":0,"x_max":0,"o":""},"\\\\r":{"ha":833,"x_min":0,"x_max":0,"o":""},"\ufeff":{"ha":0,"x_min":0,"x_max":0,"o":""},"₿":{"ha":833,"x_min":129,"x_max":736,"o":"m 249 -194 l 249 0 l 129 0 l 129 1014 l 249 1014 l 249 1210 l 332 1210 l 332 1014 l 429 1014 l 429 1210 l 513 1210 l 513 1004 q 660 917 607 982 q 713 751 713 851 q 694 653 713 696 q 642 580 676 610 q 560 536 608 550 q 654 486 615 521 q 715 399 693 451 q 736 282 736 347 q 677 99 736 171 q 513 7 618 26 l 513 -194 l 429 -194 l 429 0 l 332 0 l 332 -194 l 249 -194 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"¢":{"ha":833,"x_min":118,"x_max":719,"o":"m 389 -194 l 389 958 l 472 958 l 472 -194 l 389 -194 m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"¤":{"ha":833,"x_min":60,"x_max":775,"o":"m 688 157 l 567 278 q 498 248 536 258 q 418 238 460 238 q 337 248 375 238 q 267 278 299 258 l 149 160 l 63 246 l 178 363 q 144 435 156 394 q 132 518 132 475 q 144 602 132 563 q 179 675 157 642 l 60 794 l 147 882 l 269 760 q 339 789 301 779 q 418 799 376 799 q 572 756 506 799 l 689 872 l 774 788 l 658 672 q 690 600 679 639 q 701 518 701 561 q 690 435 701 475 q 657 363 678 396 l 775 244 l 688 157 m 418 333 q 510 358 469 333 q 575 424 551 382 q 599 518 599 465 q 575 613 599 571 q 510 678 551 654 q 418 703 469 703 q 325 678 367 703 q 259 613 283 654 q 235 518 235 571 q 259 424 235 465 q 325 358 283 382 q 418 333 367 333 z "},"$":{"ha":833,"x_min":100,"x_max":733,"o":"m 382 -194 l 382 -12 q 177 72 251 -1 q 100 264 103 144 l 225 264 q 266 153 225 196 q 382 100 307 110 l 382 464 l 344 475 q 184 582 240 507 q 128 758 128 657 q 197 942 128 869 q 382 1025 265 1014 l 382 1208 l 465 1208 l 465 1026 q 650 943 581 1015 q 721 757 719 871 l 596 757 q 562 863 596 822 q 465 914 528 904 l 465 569 l 521 551 q 678 443 622 519 q 733 264 733 367 q 660 75 733 150 q 465 -12 588 0 l 465 -194 l 382 -194 m 465 100 q 571 153 533 111 q 608 261 608 194 q 576 368 608 322 q 482 432 543 414 l 465 438 l 465 100 m 382 540 l 382 914 q 287 867 321 904 q 253 769 253 829 q 297 648 253 697 q 425 586 342 599 l 382 540 z "},"₫":{"ha":833,"x_min":125,"x_max":833,"o":"m 372 69 q 192 146 258 69 q 125 353 125 222 l 125 410 q 191 618 125 542 q 372 694 257 694 q 522 643 467 694 q 578 506 578 592 l 553 535 l 581 535 l 578 708 l 578 1014 l 703 1014 l 703 83 l 578 83 l 578 229 l 553 229 l 578 258 q 522 120 578 171 q 372 69 467 69 m 125 -111 l 125 0 l 708 0 l 708 -111 l 125 -111 m 414 178 q 535 226 492 178 q 578 361 578 275 l 578 403 q 535 538 578 489 q 414 586 492 586 q 292 539 335 586 q 250 403 250 492 l 250 361 q 292 225 250 272 q 414 178 335 178 m 417 792 l 417 896 l 833 896 l 833 792 l 417 792 z "},"€":{"ha":833,"x_min":26,"x_max":750,"o":"m 444 -14 q 283 23 351 -14 q 176 127 214 60 q 139 285 139 194 l 139 340 l 26 340 l 26 431 l 139 431 l 139 569 l 26 569 l 26 660 l 139 660 l 139 715 q 176 874 139 807 q 283 977 214 940 q 444 1014 351 1014 q 596 981 531 1014 q 701 888 661 949 q 750 743 740 828 l 625 743 q 569 860 617 818 q 444 903 521 903 q 313 853 361 903 q 264 715 264 803 l 264 660 l 493 660 l 493 569 l 264 569 l 264 431 l 493 431 l 493 340 l 264 340 l 264 285 q 312 147 264 197 q 444 97 360 97 q 569 140 521 97 q 625 257 617 182 l 750 257 q 701 112 740 172 q 596 19 661 51 q 444 -14 531 -14 z "},"ƒ":{"ha":833,"x_min":0,"x_max":743,"o":"m 0 -250 l 0 -136 l 146 -136 q 263 -94 219 -136 q 306 21 306 -51 l 306 435 l 83 435 l 83 549 l 306 549 l 306 821 q 362 963 306 913 q 519 1014 418 1014 l 743 1014 l 743 903 l 519 903 q 453 882 475 903 q 431 819 431 861 l 431 549 l 743 549 l 743 435 l 431 435 l 431 21 q 395 -122 431 -61 q 296 -217 360 -183 q 146 -250 232 -250 l 0 -250 z "},"₽":{"ha":833,"x_min":42,"x_max":764,"o":"m 153 0 l 153 215 l 42 215 l 42 326 l 153 326 l 153 444 l 42 444 l 42 556 l 153 556 l 153 1014 l 463 1014 q 622 978 554 1014 q 726 879 689 943 q 764 729 764 815 q 726 580 764 644 q 622 480 689 515 q 463 444 554 444 l 278 444 l 278 326 l 597 326 l 597 215 l 278 215 l 278 0 l 153 0 m 278 556 l 463 556 q 588 603 542 556 q 635 729 635 650 q 588 856 635 808 q 463 903 542 903 l 278 903 l 278 556 z "},"£":{"ha":833,"x_min":104,"x_max":743,"o":"m 104 0 l 104 139 q 172 202 138 165 q 231 278 207 239 q 256 353 256 318 q 242 456 256 413 q 208 536 228 500 q 167 606 188 572 q 133 678 147 639 q 119 771 119 718 q 156 908 119 850 q 258 997 192 965 q 417 1028 325 1028 q 575 997 508 1028 q 678 906 642 965 q 715 764 714 847 l 583 764 q 538 875 583 833 q 415 917 492 917 q 290 877 335 917 q 246 764 246 838 q 260 688 246 721 q 294 625 274 656 q 334 560 314 594 q 368 478 354 525 q 382 365 382 432 q 358 255 382 306 q 298 167 333 204 q 229 111 263 131 l 743 111 l 743 0 l 104 0 m 104 424 l 104 535 l 604 535 l 604 424 l 104 424 z "},"₮":{"ha":833,"x_min":63,"x_max":771,"o":"m 356 0 l 356 254 l 111 188 l 111 292 l 356 358 l 356 497 l 111 431 l 111 535 l 356 601 l 356 904 l 63 904 l 63 1014 l 771 1014 l 771 904 l 478 904 l 478 635 l 722 701 l 722 597 l 478 531 l 478 392 l 722 458 l 722 354 l 478 288 l 478 0 l 356 0 z "},"¥":{"ha":833,"x_min":49,"x_max":785,"o":"m 83 375 l 83 479 l 750 479 l 750 375 l 83 375 m 83 167 l 83 271 l 750 271 l 750 167 l 83 167 m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"∙":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 333 q 333 364 364 333 q 301 446 301 394 q 333 532 301 500 q 417 564 364 564 q 501 532 469 564 q 532 446 532 500 q 501 364 532 394 q 417 333 469 333 z "},"∐":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 -250 l 56 -136 l 146 -136 l 146 1014 l 271 1014 l 271 -136 l 563 -136 l 563 1014 l 688 1014 l 688 -136 l 778 -136 l 778 -250 l 56 -250 z "},"∣":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 0 l 354 1014 l 479 1014 l 479 0 l 354 0 z "},"∕":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"∈":{"ha":833,"x_min":49,"x_max":792,"o":"m 368 97 q 209 137 282 97 q 92 245 136 176 q 49 400 49 314 l 49 600 q 92 755 49 686 q 209 863 136 824 q 368 903 282 903 l 792 903 l 792 792 l 368 792 q 269 765 314 792 q 199 693 225 738 q 174 597 174 649 l 174 556 l 792 556 l 792 444 l 174 444 l 174 403 q 199 307 174 351 q 269 235 225 263 q 368 208 314 208 l 792 208 l 792 97 l 368 97 z "},"≡":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 667 l 111 764 l 722 764 l 722 667 l 111 667 m 111 153 l 111 250 l 722 250 l 722 153 l 111 153 m 111 410 l 111 507 l 722 507 l 722 410 l 111 410 z "},"∃":{"ha":833,"x_min":111,"x_max":694,"o":"m 111 0 l 111 114 l 569 114 l 569 472 l 160 472 l 160 586 l 569 586 l 569 900 l 111 900 l 111 1014 l 694 1014 l 694 0 l 111 0 z "},"≉":{"ha":833,"x_min":90,"x_max":743,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 90 493 l 90 590 q 140 722 90 672 q 271 771 190 771 q 358 753 322 771 q 420 708 394 735 q 467 653 446 681 q 510 608 488 626 q 560 590 532 590 q 608 610 592 590 q 625 667 625 629 l 625 764 l 743 764 l 743 667 q 694 536 743 586 q 563 486 644 486 q 475 504 511 486 q 413 549 439 522 q 367 603 388 576 q 324 649 346 631 q 274 667 301 667 q 226 647 243 667 q 208 590 208 628 l 208 493 l 90 493 m 90 153 l 90 250 q 140 381 90 332 q 271 431 190 431 q 358 413 322 431 q 420 367 394 394 q 467 313 446 340 q 510 268 488 286 q 560 250 532 250 q 608 269 592 250 q 625 326 625 289 l 625 424 l 743 424 l 743 326 q 694 196 743 246 q 563 146 644 146 q 475 164 511 146 q 413 209 439 182 q 367 263 388 236 q 324 308 346 290 q 274 326 301 326 q 226 307 243 326 q 208 250 208 288 l 208 153 l 90 153 z "},"∌":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 49 97 l 49 208 l 472 208 q 572 235 528 208 q 641 307 615 263 q 667 403 667 351 l 667 444 l 49 444 l 49 556 l 667 556 l 667 597 q 641 693 667 649 q 572 765 615 738 q 472 792 528 792 l 49 792 l 49 903 l 472 903 q 632 863 560 903 q 748 755 704 824 q 792 600 792 686 l 792 400 q 748 245 792 314 q 632 137 704 176 q 472 97 560 97 l 49 97 z "},"∉":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 368 97 q 209 137 282 97 q 92 245 136 176 q 49 400 49 314 l 49 600 q 92 755 49 686 q 209 863 136 824 q 368 903 282 903 l 792 903 l 792 792 l 368 792 q 269 765 314 792 q 199 693 225 738 q 174 597 174 649 l 174 556 l 792 556 l 792 444 l 174 444 l 174 403 q 199 307 174 351 q 269 235 225 263 q 368 208 314 208 l 792 208 l 792 97 l 368 97 z "},"⊄":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 368 167 q 201 204 272 167 q 89 310 129 242 q 49 469 49 379 l 49 531 q 89 690 49 622 q 201 796 129 758 q 368 833 272 833 l 792 833 l 792 719 l 368 719 q 224 669 275 719 q 174 528 174 619 l 174 472 q 224 331 174 381 q 368 281 275 281 l 792 281 l 792 167 l 368 167 z "},"⊅":{"ha":833,"x_min":42,"x_max":785,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 42 167 l 42 281 l 465 281 q 609 331 558 281 q 660 472 660 381 l 660 528 q 609 669 660 619 q 465 719 558 719 l 42 719 l 42 833 l 465 833 q 633 796 561 833 q 744 690 704 758 q 785 531 785 622 l 785 469 q 744 310 785 379 q 633 204 704 242 q 465 167 561 167 l 42 167 z "},"+":{"ha":833,"x_min":90,"x_max":743,"o":"m 356 132 l 356 403 l 90 403 l 90 514 l 356 514 l 356 785 l 478 785 l 478 514 l 743 514 l 743 403 l 478 403 l 478 132 l 356 132 z "},"−":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"×":{"ha":833,"x_min":146,"x_max":686,"o":"m 217 189 l 146 261 l 342 457 l 146 654 l 217 725 l 414 529 l 615 731 l 686 658 l 485 457 l 682 261 l 610 189 l 414 386 l 217 189 z "},"÷":{"ha":833,"x_min":139,"x_max":694,"o":"m 139 410 l 139 514 l 694 514 l 694 410 l 139 410 m 403 118 q 338 140 363 118 q 313 200 313 161 q 338 261 313 238 q 403 285 363 285 l 431 285 q 496 261 471 285 q 521 200 521 238 q 496 140 521 163 q 431 118 471 118 l 403 118 m 403 639 q 338 660 363 639 q 313 721 313 682 q 338 782 313 758 q 403 806 363 806 l 431 806 q 496 782 471 806 q 521 721 521 758 q 496 661 521 683 q 431 639 471 639 l 403 639 z "},"=":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 569 l 118 681 l 715 681 l 715 569 l 118 569 m 118 236 l 118 347 l 715 347 l 715 236 l 118 236 z "},"≠":{"ha":833,"x_min":118,"x_max":715,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 118 569 l 118 681 l 715 681 l 715 569 l 118 569 m 118 236 l 118 347 l 715 347 l 715 236 l 118 236 z "},">":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 90 l 118 211 l 549 422 q 598 444 575 435 q 632 456 621 453 q 596 467 619 458 q 549 489 572 476 l 118 701 l 118 826 l 715 528 l 715 389 l 118 90 z "},"<":{"ha":833,"x_min":118,"x_max":715,"o":"m 715 90 l 118 389 l 118 528 l 715 826 l 715 706 l 285 494 q 235 473 258 482 q 201 461 213 464 q 238 449 214 458 q 285 428 261 440 l 715 215 l 715 90 z "},"≥":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 111 l 715 111 l 715 0 l 118 0 m 118 264 l 118 385 l 549 596 q 598 617 575 608 q 632 629 621 626 q 596 641 619 632 q 549 663 572 650 l 118 875 l 118 1000 l 715 701 l 715 563 l 118 264 z "},"≤":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 111 l 715 111 l 715 0 l 118 0 m 715 264 l 118 563 l 118 701 l 715 1000 l 715 879 l 285 668 q 235 647 258 656 q 201 635 213 638 q 238 623 214 632 q 285 601 261 614 l 715 389 l 715 264 z "},"±":{"ha":833,"x_min":90,"x_max":743,"o":"m 97 0 l 97 97 l 356 97 l 356 410 l 90 410 l 90 521 l 356 521 l 356 792 l 478 792 l 478 521 l 743 521 l 743 410 l 478 410 l 478 97 l 736 97 l 736 0 l 97 0 z "},"≈":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 493 l 90 590 q 140 722 90 672 q 271 771 190 771 q 358 753 322 771 q 420 708 394 735 q 467 653 446 681 q 510 608 488 626 q 560 590 532 590 q 608 610 592 590 q 625 667 625 629 l 625 764 l 743 764 l 743 667 q 694 536 743 586 q 563 486 644 486 q 475 504 511 486 q 413 549 439 522 q 367 603 388 576 q 324 649 346 631 q 274 667 301 667 q 226 647 243 667 q 208 590 208 628 l 208 493 l 90 493 m 90 153 l 90 250 q 140 381 90 332 q 271 431 190 431 q 358 413 322 431 q 420 367 394 394 q 467 313 446 340 q 510 268 488 286 q 560 250 532 250 q 608 269 592 250 q 625 326 625 289 l 625 424 l 743 424 l 743 326 q 694 196 743 246 q 563 146 644 146 q 475 164 511 146 q 413 209 439 182 q 367 263 388 236 q 324 308 346 290 q 274 326 301 326 q 226 307 243 326 q 208 250 208 288 l 208 153 l 90 153 z "},"~":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 354 l 90 451 q 140 583 90 533 q 271 632 190 632 q 358 614 322 632 q 420 569 394 596 q 467 515 446 542 q 510 469 488 488 q 560 451 532 451 q 608 471 592 451 q 625 528 625 490 l 625 625 l 743 625 l 743 528 q 694 397 743 447 q 563 347 644 347 q 475 365 511 347 q 413 410 439 383 q 367 465 388 438 q 324 510 346 492 q 274 528 301 528 q 226 508 243 528 q 208 451 208 489 l 208 354 l 90 354 z "},"¬":{"ha":833,"x_min":97,"x_max":736,"o":"m 618 285 l 618 465 l 97 465 l 97 576 l 736 576 l 736 285 l 618 285 z "},"^":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 472 l 360 1014 l 476 1014 l 722 472 l 610 472 l 454 831 q 434 884 443 858 q 421 924 425 910 q 406 884 415 910 q 383 831 396 858 l 224 472 l 111 472 z "},"∞":{"ha":833,"x_min":49,"x_max":785,"o":"m 231 222 q 99 274 149 222 q 49 410 49 325 l 49 514 q 101 650 49 599 q 239 701 154 701 q 358 666 310 701 q 431 564 407 631 l 435 564 q 462 626 442 594 q 517 679 482 657 q 603 701 553 701 q 735 650 685 701 q 785 514 785 599 l 785 410 q 733 274 785 325 q 594 222 681 222 q 475 258 524 222 q 403 360 426 293 l 399 360 q 372 299 393 331 q 317 244 351 267 q 231 222 282 222 m 243 306 q 308 322 283 306 q 348 360 333 338 q 369 401 363 382 q 378 429 376 421 l 335 546 q 243 618 304 618 q 173 590 200 618 q 146 514 146 561 l 146 410 q 173 334 146 363 q 243 306 200 306 m 590 306 q 661 334 635 306 q 688 410 688 363 l 688 514 q 661 590 688 561 q 590 618 635 618 q 526 602 551 618 q 485 564 500 586 q 464 522 471 542 q 456 494 457 503 l 499 378 q 537 324 514 342 q 590 306 560 306 z "},"∧":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 69 l 332 764 l 501 764 l 750 69 l 622 69 l 460 514 q 431 602 443 558 q 414 668 419 646 q 396 602 408 646 q 368 514 383 558 l 210 69 l 83 69 z "},"∨":{"ha":833,"x_min":83,"x_max":750,"o":"m 332 69 l 83 764 l 211 764 l 374 319 q 402 232 390 275 q 419 165 414 189 q 438 232 425 189 q 465 319 450 275 l 624 764 l 750 764 l 501 69 l 332 69 z "},"∫":{"ha":833,"x_min":0,"x_max":743,"o":"m 0 -250 l 0 -136 l 146 -136 q 263 -94 219 -136 q 306 21 306 -51 l 306 821 q 362 963 306 913 q 519 1014 418 1014 l 743 1014 l 743 903 l 519 903 q 453 882 475 903 q 431 819 431 861 l 431 21 q 395 -122 431 -61 q 296 -217 360 -183 q 146 -250 232 -250 l 0 -250 z "},"∏":{"ha":833,"x_min":56,"x_max":778,"o":"m 153 -250 l 153 900 l 56 900 l 56 1014 l 778 1014 l 778 900 l 681 900 l 681 -250 l 556 -250 l 556 900 l 278 900 l 278 -250 l 153 -250 z "},"∑":{"ha":833,"x_min":76,"x_max":750,"o":"m 76 -250 l 76 -136 l 518 381 l 76 900 l 76 1014 l 750 1014 l 750 903 l 229 903 l 610 454 l 610 311 l 221 -139 l 750 -139 l 750 -250 l 76 -250 z "},"√":{"ha":833,"x_min":42,"x_max":813,"o":"m 372 0 l 196 653 l 42 653 l 42 764 l 285 764 l 422 224 q 438 141 433 176 q 440 90 442 106 l 453 90 q 456 142 451 106 q 474 224 461 178 l 696 1014 l 813 1014 l 518 0 l 372 0 z "},"∂":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 260 22 325 -14 q 160 125 194 58 q 125 285 125 192 l 125 396 q 192 610 125 532 q 381 688 260 688 q 528 642 475 688 q 583 514 582 596 l 564 542 l 583 542 l 583 576 q 549 719 583 651 q 461 844 515 788 q 344 944 407 901 q 224 1014 282 988 l 411 1014 q 441 995 411 1014 q 515 939 471 976 q 604 847 560 901 q 678 722 649 793 q 708 563 708 650 l 708 285 q 631 66 708 146 q 417 -14 553 -14 m 417 97 q 540 146 497 97 q 583 285 583 194 l 583 396 q 541 535 583 488 q 417 583 499 583 q 293 535 336 583 q 250 396 250 486 l 250 285 q 293 146 250 194 q 417 97 336 97 z "},"µ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 -250 l 125 764 l 250 764 l 250 269 q 290 141 250 186 q 415 96 329 96 q 543 141 503 96 q 583 269 583 186 l 583 764 l 708 764 l 708 269 q 635 61 708 136 q 429 -14 561 -14 q 319 3 364 -14 q 248 46 274 21 q 215 93 222 71 l 210 93 q 217 74 211 93 q 227 30 222 56 q 233 -18 232 4 l 249 -250 l 125 -250 z "},"∥":{"ha":833,"x_min":215,"x_max":618,"o":"m 493 0 l 493 1014 l 618 1014 l 618 0 l 493 0 m 215 0 l 215 1014 l 340 1014 l 340 0 l 215 0 z "},"%":{"ha":833,"x_min":19,"x_max":814,"o":"m 19 0 l 711 1014 l 814 1014 l 122 0 l 19 0 m 618 -7 q 478 43 531 -7 q 425 181 425 93 l 425 271 q 478 408 425 358 q 618 458 531 458 q 758 408 706 458 q 811 271 811 358 l 811 181 q 758 43 811 93 q 618 -7 706 -7 m 618 89 q 708 181 708 89 l 708 271 q 618 364 708 364 q 528 271 528 364 l 528 181 q 618 89 528 89 m 215 556 q 75 606 128 556 q 22 743 22 656 l 22 833 q 75 971 22 921 q 215 1021 128 1021 q 356 971 303 1021 q 408 833 408 921 l 408 743 q 356 606 408 656 q 215 556 303 556 m 215 650 q 306 743 306 650 l 306 833 q 215 926 306 926 q 148 903 171 926 q 125 833 125 881 l 125 743 q 148 673 125 696 q 215 650 171 650 z "},"‰":{"ha":833,"x_min":-11,"x_max":833,"o":"m -11 0 l 540 1014 l 624 1014 l 72 0 l -11 0 m 450 65 q 506 86 486 65 q 525 146 525 107 l 525 271 q 506 331 525 311 q 450 351 486 351 q 397 331 415 351 q 378 271 378 310 l 378 146 q 397 86 378 107 q 450 65 415 65 m 444 -7 q 336 34 376 -7 q 296 146 296 75 l 296 271 q 336 383 296 342 q 444 424 376 424 q 533 394 506 424 q 564 335 561 364 q 596 394 567 364 q 685 424 625 424 q 794 383 754 424 q 833 271 833 342 l 833 146 q 794 34 833 75 q 685 -7 754 -7 q 597 23 625 -7 q 565 82 568 53 q 534 23 563 53 q 444 -7 506 -7 m 679 65 q 733 86 715 65 q 751 146 751 107 l 751 271 q 733 331 751 311 q 679 351 715 351 q 624 331 643 351 q 604 271 604 311 l 604 146 q 624 86 604 107 q 679 65 643 65 m 167 611 q 45 654 90 611 q 0 771 0 697 l 0 861 q 45 978 0 935 q 167 1021 90 1021 q 289 978 244 1021 q 333 861 333 935 l 333 771 q 289 654 333 697 q 167 611 244 611 m 167 693 q 225 713 206 693 q 244 771 244 732 l 244 861 q 225 919 244 900 q 167 939 206 939 q 108 919 128 939 q 89 861 89 900 l 89 771 q 108 713 89 732 q 167 693 128 693 z "},"⁺":{"ha":833,"x_min":222,"x_max":611,"o":"m 361 424 l 361 569 l 222 569 l 222 667 l 361 667 l 361 813 l 472 813 l 472 667 l 611 667 l 611 569 l 472 569 l 472 424 l 361 424 z "},"∷":{"ha":833,"x_min":76,"x_max":756,"o":"m 642 483 q 560 515 592 483 q 528 596 528 546 q 560 677 528 646 q 642 708 592 708 q 724 677 692 708 q 756 596 756 646 q 724 515 756 546 q 642 483 692 483 m 190 -14 q 108 17 140 -14 q 76 99 76 49 q 108 180 76 149 q 190 211 140 211 q 272 180 240 211 q 304 99 304 149 q 272 17 304 49 q 190 -14 240 -14 m 642 -14 q 560 17 592 -14 q 528 99 528 49 q 560 180 528 149 q 642 211 592 211 q 724 180 692 211 q 756 99 756 149 q 724 17 756 49 q 642 -14 692 -14 m 190 483 q 108 515 140 483 q 76 596 76 546 q 108 677 76 646 q 190 708 140 708 q 272 677 240 708 q 304 596 304 646 q 272 515 304 546 q 190 483 240 483 z "},"⊆":{"ha":833,"x_min":49,"x_max":792,"o":"m 69 0 l 69 114 l 792 114 l 792 0 l 69 0 m 368 278 q 201 315 272 278 q 89 422 129 353 q 49 581 49 490 l 49 642 q 89 801 49 733 q 201 907 129 869 q 368 944 272 944 l 792 944 l 792 831 l 368 831 q 224 781 275 831 q 174 639 174 731 l 174 583 q 224 442 174 492 q 368 392 275 392 l 792 392 l 792 278 l 368 278 z "},"⊇":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 0 l 42 114 l 764 114 l 764 0 l 42 0 m 42 278 l 42 392 l 465 392 q 609 442 558 392 q 660 583 660 492 l 660 639 q 609 781 660 731 q 465 831 558 831 l 42 831 l 42 944 l 465 944 q 633 907 561 944 q 744 801 704 869 q 785 642 785 733 l 785 581 q 744 422 785 490 q 633 315 704 353 q 465 278 561 278 l 42 278 z "},"∘":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 292 q 297 339 344 292 q 250 458 250 386 q 297 578 250 532 q 417 625 344 625 q 537 578 490 625 q 583 458 583 532 q 537 339 583 386 q 417 292 490 292 m 417 347 q 497 378 465 347 q 528 458 528 410 q 497 538 528 507 q 417 569 465 569 q 337 538 368 569 q 306 458 306 507 q 337 378 306 410 q 417 347 368 347 z "},"∼":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 354 l 90 451 q 140 583 90 533 q 271 632 190 632 q 358 614 322 632 q 420 569 394 596 q 467 515 446 542 q 510 469 488 488 q 560 451 532 451 q 608 471 592 451 q 625 528 625 490 l 625 625 l 743 625 l 743 528 q 694 397 743 447 q 563 347 644 347 q 475 365 511 347 q 413 410 439 383 q 367 465 388 438 q 324 510 346 492 q 274 528 301 528 q 226 508 243 528 q 208 451 208 489 l 208 354 l 90 354 z "},"⊂":{"ha":833,"x_min":49,"x_max":792,"o":"m 368 167 q 201 204 272 167 q 89 310 129 242 q 49 469 49 379 l 49 531 q 89 690 49 622 q 201 796 129 758 q 368 833 272 833 l 792 833 l 792 719 l 368 719 q 224 669 275 719 q 174 528 174 619 l 174 472 q 224 331 174 381 q 368 281 275 281 l 792 281 l 792 167 l 368 167 z "},"∋":{"ha":833,"x_min":49,"x_max":792,"o":"m 49 97 l 49 208 l 472 208 q 572 235 528 208 q 641 307 615 263 q 667 403 667 351 l 667 444 l 49 444 l 49 556 l 667 556 l 667 597 q 641 693 667 649 q 572 765 615 738 q 472 792 528 792 l 49 792 l 49 903 l 472 903 q 632 863 560 903 q 748 755 704 824 q 792 600 792 686 l 792 400 q 748 245 792 314 q 632 137 704 176 q 472 97 560 97 l 49 97 z "},"⊃":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 167 l 42 281 l 465 281 q 609 331 558 281 q 660 472 660 381 l 660 528 q 609 669 660 619 q 465 719 558 719 l 42 719 l 42 833 l 465 833 q 633 796 561 833 q 744 690 704 758 q 785 531 785 622 l 785 469 q 744 310 785 379 q 633 204 704 242 q 465 167 561 167 l 42 167 z "},"∀":{"ha":833,"x_min":69,"x_max":764,"o":"m 332 0 l 69 1014 l 196 1014 l 367 326 q 398 192 385 254 q 417 97 411 129 q 436 191 424 129 q 467 325 449 253 l 636 1014 l 764 1014 l 500 0 l 332 0 m 224 628 l 224 733 l 599 733 l 599 628 l 224 628 z "},"↑":{"ha":833,"x_min":14,"x_max":819,"o":"m 354 0 l 354 722 q 357 784 354 753 q 361 833 360 815 l 347 833 q 271 758 333 813 l 14 539 l 14 685 l 418 1028 l 819 686 l 819 540 l 561 760 q 512 806 531 786 q 486 833 493 825 l 472 833 q 477 784 475 815 q 479 722 479 753 l 479 0 l 354 0 z "},"↗":{"ha":833,"x_min":14,"x_max":771,"o":"m 96 106 l 14 192 l 504 686 q 544 723 524 706 q 578 750 565 740 l 576 760 q 531 756 561 758 q 465 753 500 753 l 194 753 l 194 861 l 771 861 l 771 285 l 660 285 l 660 561 q 663 629 660 596 q 668 681 665 663 l 658 683 q 628 646 649 669 q 589 603 608 622 l 96 106 z "},"→":{"ha":833,"x_min":56,"x_max":792,"o":"m 324 49 l 549 333 q 581 369 563 351 q 611 396 599 386 l 611 408 q 565 405 593 407 q 514 403 538 403 l 56 403 l 56 514 l 514 514 q 565 512 538 514 q 611 507 593 510 l 611 519 q 584 546 601 528 q 549 585 567 564 l 324 868 l 469 868 l 792 458 l 471 49 l 324 49 z "},"↘":{"ha":833,"x_min":14,"x_max":771,"o":"m 194 104 l 194 213 l 465 213 q 531 210 500 213 q 576 206 561 208 l 578 215 q 544 243 565 225 q 504 279 524 261 l 14 774 l 99 861 l 592 364 q 631 322 611 344 q 661 283 651 299 l 671 286 q 664 337 668 304 q 660 404 660 369 l 660 681 l 771 681 l 771 104 l 194 104 z "},"↓":{"ha":833,"x_min":14,"x_max":819,"o":"m 415 -14 l 14 328 l 14 474 l 272 254 q 322 208 303 228 q 347 181 342 189 l 361 181 q 357 230 360 199 q 354 292 354 261 l 354 1014 l 479 1014 l 479 292 q 477 230 479 261 q 472 181 475 199 l 486 181 q 563 256 500 201 l 819 475 l 819 329 l 415 -14 z "},"↙":{"ha":833,"x_min":63,"x_max":819,"o":"m 63 104 l 63 681 l 174 681 l 174 404 q 170 336 174 369 q 164 283 167 303 l 174 281 q 204 319 185 296 q 243 361 224 342 l 736 858 l 819 774 l 329 279 q 290 243 311 261 q 256 215 268 225 l 257 206 q 303 210 272 208 q 368 213 333 213 l 639 213 l 639 104 l 63 104 z "},"←":{"ha":833,"x_min":56,"x_max":792,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 792 514 l 792 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 263 371 246 389 q 299 332 281 353 l 524 49 l 378 49 z "},"↖":{"ha":833,"x_min":63,"x_max":819,"o":"m 735 104 l 242 601 q 203 644 222 621 q 172 682 183 668 l 163 679 q 169 628 165 661 q 174 561 174 596 l 174 285 l 63 285 l 63 861 l 639 861 l 639 753 l 368 753 q 303 756 333 753 q 257 760 272 758 l 256 750 q 290 723 268 740 q 329 686 311 706 l 819 192 l 735 104 z "},"↔":{"ha":833,"x_min":-111,"x_max":944,"o":"m 211 49 l -111 458 l 210 868 l 357 868 l 132 583 q 100 548 118 565 q 69 521 82 531 l 69 508 q 116 513 88 511 q 167 514 144 514 l 667 514 q 718 512 690 514 q 764 507 746 510 l 764 519 q 737 546 754 528 q 701 585 719 564 l 476 868 l 622 868 l 944 458 l 624 49 l 476 49 l 701 333 q 733 369 715 351 q 764 396 751 386 l 764 408 q 718 405 746 407 q 667 403 690 403 l 167 403 q 116 406 144 403 q 69 410 88 408 l 69 397 q 97 371 79 389 q 132 332 114 353 l 357 49 l 211 49 z "},"↕":{"ha":833,"x_min":14,"x_max":819,"o":"m 417 -236 l 14 106 l 14 251 l 272 32 q 322 -14 303 6 q 347 -42 342 -33 l 361 -42 q 357 8 360 -24 q 354 69 354 39 l 354 944 q 357 1006 354 975 q 361 1056 360 1038 l 347 1056 q 271 981 333 1035 l 14 761 l 14 907 l 417 1250 l 819 908 l 819 763 l 561 982 q 512 1028 531 1008 q 486 1056 493 1047 l 472 1056 q 477 1006 475 1038 q 479 944 479 975 l 479 69 q 477 8 479 39 q 472 -42 475 -24 l 486 -42 q 563 33 500 -21 l 819 253 l 819 107 l 417 -236 z "},"⇧":{"ha":833,"x_min":21,"x_max":813,"o":"m 194 0 l 194 471 l 306 471 l 306 0 l 194 0 m 21 371 l 21 471 l 236 471 l 236 371 l 21 371 m 528 0 l 528 471 l 639 471 l 639 0 l 528 0 m 597 371 l 597 471 l 813 471 l 813 371 l 597 371 m 194 0 l 194 106 l 639 106 l 639 0 l 194 0 m 21 471 l 349 764 l 485 764 l 811 471 l 649 471 l 414 678 l 181 471 l 21 471 z "},"⌄":{"ha":833,"x_min":14,"x_max":819,"o":"m 415 -14 l 14 328 l 14 474 l 424 128 l 819 475 l 819 329 l 415 -14 z "},"⟵":{"ha":1667,"x_min":56,"x_max":1625,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 1625 514 l 1625 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 264 372 246 389 q 299 332 282 354 l 524 49 l 378 49 z "},"⟶":{"ha":1667,"x_min":42,"x_max":1611,"o":"m 1289 49 l 1143 49 l 1368 332 q 1403 372 1385 354 q 1431 397 1421 389 l 1431 410 q 1385 406 1413 408 q 1333 403 1357 403 l 42 403 l 42 514 l 1333 514 q 1385 513 1357 514 q 1431 508 1413 511 l 1431 521 q 1400 548 1418 531 q 1368 583 1382 565 l 1143 868 l 1290 868 l 1611 458 l 1289 49 z "},"⟷":{"ha":1667,"x_min":56,"x_max":1611,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 1333 514 q 1385 512 1357 514 q 1431 507 1413 510 l 1431 519 q 1403 546 1421 528 q 1368 585 1386 564 l 1143 868 l 1289 868 l 1611 458 l 1290 49 l 1143 49 l 1368 333 q 1400 369 1382 351 q 1431 396 1418 386 l 1431 408 q 1385 405 1413 407 q 1333 403 1357 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 264 372 246 389 q 299 332 282 354 l 524 49 l 378 49 z "},"▁":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 -187 l 847 -187 l 847 -417 l -14 -417 z "},"▂":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 42 l 847 42 l 847 -417 l -14 -417 z "},"▃":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 271 l 847 271 l 847 -417 l -14 -417 z "},"▄":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 500 l 847 500 l 847 -417 l -14 -417 z "},"▅":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 729 l 847 729 l 847 -417 l -14 -417 z "},"▆":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 958 l 847 958 l 847 -417 l -14 -417 z "},"▇":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1188 l 847 1188 l 847 -417 l -14 -417 z "},"█":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 847 1417 l 847 -417 l -14 -417 z "},"▀":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 l -14 1417 l 847 1417 l 847 500 l -14 500 z "},"▔":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 1188 l -14 1417 l 847 1417 l 847 1188 l -14 1188 z "},"▏":{"ha":833,"x_min":-14,"x_max":104,"o":"m -14 -417 l -14 1417 l 104 1417 l 104 -417 l -14 -417 z "},"▎":{"ha":833,"x_min":-14,"x_max":208,"o":"m -14 -417 l -14 1417 l 208 1417 l 208 -417 l -14 -417 z "},"▍":{"ha":833,"x_min":-14,"x_max":278,"o":"m -14 -417 l -14 1417 l 278 1417 l 278 -417 l -14 -417 z "},"▌":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 -417 l -14 1417 l 417 1417 l 417 -417 l -14 -417 z "},"▋":{"ha":833,"x_min":-14,"x_max":521,"o":"m -14 -417 l -14 1417 l 521 1417 l 521 -417 l -14 -417 z "},"▊":{"ha":833,"x_min":-14,"x_max":625,"o":"m -14 -417 l -14 1417 l 625 1417 l 625 -417 l -14 -417 z "},"▉":{"ha":833,"x_min":-14,"x_max":729,"o":"m -14 -417 l -14 1417 l 729 1417 l 729 -417 l -14 -417 z "},"▐":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 -417 l 417 1417 l 847 1417 l 847 -417 l 417 -417 z "},"▕":{"ha":833,"x_min":729,"x_max":847,"o":"m 729 -417 l 729 1417 l 847 1417 l 847 -417 l 729 -417 z "},"▖":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 -417 l -14 500 l 417 500 l 417 -417 l -14 -417 z "},"▗":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 -417 l 417 500 l 847 500 l 847 -417 l 417 -417 z "},"▘":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 500 l -14 1417 l 417 1417 l 417 500 l -14 500 z "},"▙":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 417 1417 l 417 500 l 847 500 l 847 -417 l -14 -417 z "},"▚":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 l -14 1417 l 417 1417 l 417 500 l -14 500 m 417 -417 l 417 500 l 847 500 l 847 -417 l 417 -417 z "},"▛":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 847 1417 l 847 500 l 417 500 l 417 -417 l -14 -417 z "},"▜":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 -417 l 417 500 l -14 500 l -14 1417 l 847 1417 l 847 -417 l 417 -417 z "},"▝":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 500 l 417 1417 l 847 1417 l 847 500 l 417 500 z "},"▞":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 500 l 417 1417 l 847 1417 l 847 500 l 417 500 m -14 -417 l -14 500 l 417 500 l 417 -417 l -14 -417 z "},"▟":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 500 l 417 500 l 417 1417 l 847 1417 l 847 -417 l -14 -417 z "},"░":{"ha":833,"x_min":83,"x_max":833,"o":"m 750 1333 l 750 1417 l 833 1417 l 833 1333 l 750 1333 m 83 1333 l 83 1417 l 167 1417 l 167 1333 l 83 1333 m 250 1333 l 250 1417 l 333 1417 l 333 1333 l 250 1333 m 417 1333 l 417 1417 l 500 1417 l 500 1333 l 417 1333 m 583 1333 l 583 1417 l 667 1417 l 667 1333 l 583 1333 m 750 1167 l 750 1250 l 833 1250 l 833 1167 l 750 1167 m 83 1167 l 83 1250 l 167 1250 l 167 1167 l 83 1167 m 250 1167 l 250 1250 l 333 1250 l 333 1167 l 250 1167 m 417 1167 l 417 1250 l 500 1250 l 500 1167 l 417 1167 m 583 1167 l 583 1250 l 667 1250 l 667 1167 l 583 1167 m 750 1000 l 750 1083 l 833 1083 l 833 1000 l 750 1000 m 83 1000 l 83 1083 l 167 1083 l 167 1000 l 83 1000 m 250 1000 l 250 1083 l 333 1083 l 333 1000 l 250 1000 m 417 1000 l 417 1083 l 500 1083 l 500 1000 l 417 1000 m 583 1000 l 583 1083 l 667 1083 l 667 1000 l 583 1000 m 750 833 l 750 917 l 833 917 l 833 833 l 750 833 m 83 833 l 83 917 l 167 917 l 167 833 l 83 833 m 250 833 l 250 917 l 333 917 l 333 833 l 250 833 m 417 833 l 417 917 l 500 917 l 500 833 l 417 833 m 583 833 l 583 917 l 667 917 l 667 833 l 583 833 m 750 667 l 750 750 l 833 750 l 833 667 l 750 667 m 83 667 l 83 750 l 167 750 l 167 667 l 83 667 m 250 667 l 250 750 l 333 750 l 333 667 l 250 667 m 417 667 l 417 750 l 500 750 l 500 667 l 417 667 m 583 667 l 583 750 l 667 750 l 667 667 l 583 667 m 750 500 l 750 583 l 833 583 l 833 500 l 750 500 m 83 500 l 83 583 l 167 583 l 167 500 l 83 500 m 250 500 l 250 583 l 333 583 l 333 500 l 250 500 m 417 500 l 417 583 l 500 583 l 500 500 l 417 500 m 583 500 l 583 583 l 667 583 l 667 500 l 583 500 m 750 333 l 750 417 l 833 417 l 833 333 l 750 333 m 83 333 l 83 417 l 167 417 l 167 333 l 83 333 m 250 333 l 250 417 l 333 417 l 333 333 l 250 333 m 417 333 l 417 417 l 500 417 l 500 333 l 417 333 m 583 333 l 583 417 l 667 417 l 667 333 l 583 333 m 750 167 l 750 250 l 833 250 l 833 167 l 750 167 m 83 167 l 83 250 l 167 250 l 167 167 l 83 167 m 250 167 l 250 250 l 333 250 l 333 167 l 250 167 m 417 167 l 417 250 l 500 250 l 500 167 l 417 167 m 583 167 l 583 250 l 667 250 l 667 167 l 583 167 m 750 0 l 750 83 l 833 83 l 833 0 l 750 0 m 83 0 l 83 83 l 167 83 l 167 0 l 83 0 m 250 0 l 250 83 l 333 83 l 333 0 l 250 0 m 417 0 l 417 83 l 500 83 l 500 0 l 417 0 m 583 0 l 583 83 l 667 83 l 667 0 l 583 0 m 750 -167 l 750 -83 l 833 -83 l 833 -167 l 750 -167 m 83 -167 l 83 -83 l 167 -83 l 167 -167 l 83 -167 m 250 -167 l 250 -83 l 333 -83 l 333 -167 l 250 -167 m 417 -167 l 417 -83 l 500 -83 l 500 -167 l 417 -167 m 583 -167 l 583 -83 l 667 -83 l 667 -167 l 583 -167 m 750 -333 l 750 -250 l 833 -250 l 833 -333 l 750 -333 m 83 -333 l 83 -250 l 167 -250 l 167 -333 l 83 -333 m 250 -333 l 250 -250 l 333 -250 l 333 -333 l 250 -333 m 417 -333 l 417 -250 l 500 -250 l 500 -333 l 417 -333 m 583 -333 l 583 -250 l 667 -250 l 667 -333 l 583 -333 z "},"▒":{"ha":833,"x_min":0,"x_max":833,"o":"m 750 1333 l 750 1417 l 833 1417 l 833 1333 l 750 1333 m 0 -417 l 0 -333 l 83 -333 l 83 -417 l 0 -417 m 0 -250 l 0 -167 l 83 -167 l 83 -250 l 0 -250 m 83 -333 l 83 -250 l 167 -250 l 167 -333 l 83 -333 m 167 -417 l 167 -333 l 250 -333 l 250 -417 l 167 -417 m 0 -83 l 0 0 l 83 0 l 83 -83 l 0 -83 m 83 -167 l 83 -83 l 167 -83 l 167 -167 l 83 -167 m 167 -250 l 167 -167 l 250 -167 l 250 -250 l 167 -250 m 250 -333 l 250 -250 l 333 -250 l 333 -333 l 250 -333 m 333 -417 l 333 -333 l 417 -333 l 417 -417 l 333 -417 m 0 83 l 0 167 l 83 167 l 83 83 l 0 83 m 83 0 l 83 83 l 167 83 l 167 0 l 83 0 m 167 -83 l 167 0 l 250 0 l 250 -83 l 167 -83 m 250 -167 l 250 -83 l 333 -83 l 333 -167 l 250 -167 m 333 -250 l 333 -167 l 417 -167 l 417 -250 l 333 -250 m 417 -333 l 417 -250 l 500 -250 l 500 -333 l 417 -333 m 500 -417 l 500 -333 l 583 -333 l 583 -417 l 500 -417 m 0 250 l 0 333 l 83 333 l 83 250 l 0 250 m 83 167 l 83 250 l 167 250 l 167 167 l 83 167 m 167 83 l 167 167 l 250 167 l 250 83 l 167 83 m 250 0 l 250 83 l 333 83 l 333 0 l 250 0 m 333 -83 l 333 0 l 417 0 l 417 -83 l 333 -83 m 417 -167 l 417 -83 l 500 -83 l 500 -167 l 417 -167 m 500 -250 l 500 -167 l 583 -167 l 583 -250 l 500 -250 m 583 -333 l 583 -250 l 667 -250 l 667 -333 l 583 -333 m 667 -417 l 667 -333 l 750 -333 l 750 -417 l 667 -417 m 0 417 l 0 500 l 83 500 l 83 417 l 0 417 m 83 333 l 83 417 l 167 417 l 167 333 l 83 333 m 167 250 l 167 333 l 250 333 l 250 250 l 167 250 m 250 167 l 250 250 l 333 250 l 333 167 l 250 167 m 333 83 l 333 167 l 417 167 l 417 83 l 333 83 m 417 0 l 417 83 l 500 83 l 500 0 l 417 0 m 500 -83 l 500 0 l 583 0 l 583 -83 l 500 -83 m 583 -167 l 583 -83 l 667 -83 l 667 -167 l 583 -167 m 667 -250 l 667 -167 l 750 -167 l 750 -250 l 667 -250 m 750 -333 l 750 -250 l 833 -250 l 833 -333 l 750 -333 m 0 583 l 0 667 l 83 667 l 83 583 l 0 583 m 83 500 l 83 583 l 167 583 l 167 500 l 83 500 m 167 417 l 167 500 l 250 500 l 250 417 l 167 417 m 250 333 l 250 417 l 333 417 l 333 333 l 250 333 m 333 250 l 333 333 l 417 333 l 417 250 l 333 250 m 417 167 l 417 250 l 500 250 l 500 167 l 417 167 m 500 83 l 500 167 l 583 167 l 583 83 l 500 83 m 583 0 l 583 83 l 667 83 l 667 0 l 583 0 m 667 -83 l 667 0 l 750 0 l 750 -83 l 667 -83 m 750 -167 l 750 -83 l 833 -83 l 833 -167 l 750 -167 m 0 750 l 0 833 l 83 833 l 83 750 l 0 750 m 83 667 l 83 750 l 167 750 l 167 667 l 83 667 m 167 583 l 167 667 l 250 667 l 250 583 l 167 583 m 250 500 l 250 583 l 333 583 l 333 500 l 250 500 m 333 417 l 333 500 l 417 500 l 417 417 l 333 417 m 417 333 l 417 417 l 500 417 l 500 333 l 417 333 m 500 250 l 500 333 l 583 333 l 583 250 l 500 250 m 583 167 l 583 250 l 667 250 l 667 167 l 583 167 m 667 83 l 667 167 l 750 167 l 750 83 l 667 83 m 750 0 l 750 83 l 833 83 l 833 0 l 750 0 m 0 917 l 0 1000 l 83 1000 l 83 917 l 0 917 m 83 833 l 83 917 l 167 917 l 167 833 l 83 833 m 167 750 l 167 833 l 250 833 l 250 750 l 167 750 m 250 667 l 250 750 l 333 750 l 333 667 l 250 667 m 333 583 l 333 667 l 417 667 l 417 583 l 333 583 m 417 500 l 417 583 l 500 583 l 500 500 l 417 500 m 500 417 l 500 500 l 583 500 l 583 417 l 500 417 m 583 333 l 583 417 l 667 417 l 667 333 l 583 333 m 667 250 l 667 333 l 750 333 l 750 250 l 667 250 m 750 167 l 750 250 l 833 250 l 833 167 l 750 167 m 0 1083 l 0 1167 l 83 1167 l 83 1083 l 0 1083 m 83 1000 l 83 1083 l 167 1083 l 167 1000 l 83 1000 m 167 917 l 167 1000 l 250 1000 l 250 917 l 167 917 m 250 833 l 250 917 l 333 917 l 333 833 l 250 833 m 333 750 l 333 833 l 417 833 l 417 750 l 333 750 m 417 667 l 417 750 l 500 750 l 500 667 l 417 667 m 500 583 l 500 667 l 583 667 l 583 583 l 500 583 m 583 500 l 583 583 l 667 583 l 667 500 l 583 500 m 667 417 l 667 500 l 750 500 l 750 417 l 667 417 m 750 333 l 750 417 l 833 417 l 833 333 l 750 333 m 0 1250 l 0 1333 l 83 1333 l 83 1250 l 0 1250 m 83 1167 l 83 1250 l 167 1250 l 167 1167 l 83 1167 m 167 1083 l 167 1167 l 250 1167 l 250 1083 l 167 1083 m 250 1000 l 250 1083 l 333 1083 l 333 1000 l 250 1000 m 333 917 l 333 1000 l 417 1000 l 417 917 l 333 917 m 417 833 l 417 917 l 500 917 l 500 833 l 417 833 m 500 750 l 500 833 l 583 833 l 583 750 l 500 750 m 583 667 l 583 750 l 667 750 l 667 667 l 583 667 m 667 583 l 667 667 l 750 667 l 750 583 l 667 583 m 750 500 l 750 583 l 833 583 l 833 500 l 750 500 m 83 1333 l 83 1417 l 167 1417 l 167 1333 l 83 1333 m 167 1250 l 167 1333 l 250 1333 l 250 1250 l 167 1250 m 250 1167 l 250 1250 l 333 1250 l 333 1167 l 250 1167 m 333 1083 l 333 1167 l 417 1167 l 417 1083 l 333 1083 m 417 1000 l 417 1083 l 500 1083 l 500 1000 l 417 1000 m 500 917 l 500 1000 l 583 1000 l 583 917 l 500 917 m 583 833 l 583 917 l 667 917 l 667 833 l 583 833 m 667 750 l 667 833 l 750 833 l 750 750 l 667 750 m 750 667 l 750 750 l 833 750 l 833 667 l 750 667 m 250 1333 l 250 1417 l 333 1417 l 333 1333 l 250 1333 m 333 1250 l 333 1333 l 417 1333 l 417 1250 l 333 1250 m 417 1167 l 417 1250 l 500 1250 l 500 1167 l 417 1167 m 500 1083 l 500 1167 l 583 1167 l 583 1083 l 500 1083 m 583 1000 l 583 1083 l 667 1083 l 667 1000 l 583 1000 m 667 917 l 667 1000 l 750 1000 l 750 917 l 667 917 m 750 833 l 750 917 l 833 917 l 833 833 l 750 833 m 417 1333 l 417 1417 l 500 1417 l 500 1333 l 417 1333 m 500 1250 l 500 1333 l 583 1333 l 583 1250 l 500 1250 m 583 1167 l 583 1250 l 667 1250 l 667 1167 l 583 1167 m 667 1083 l 667 1167 l 750 1167 l 750 1083 l 667 1083 m 750 1000 l 750 1083 l 833 1083 l 833 1000 l 750 1000 m 583 1333 l 583 1417 l 667 1417 l 667 1333 l 583 1333 m 667 1250 l 667 1333 l 750 1333 l 750 1250 l 667 1250 m 750 1167 l 750 1250 l 833 1250 l 833 1167 l 750 1167 z "},"▓":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -417 l 0 -333 l 83 -333 l 83 -250 l 0 -250 l 0 -167 l 83 -167 l 83 -83 l 0 -83 l 0 0 l 83 0 l 83 83 l 0 83 l 0 167 l 83 167 l 83 250 l 0 250 l 0 333 l 83 333 l 83 417 l 0 417 l 0 500 l 83 500 l 83 583 l 0 583 l 0 667 l 83 667 l 83 750 l 0 750 l 0 833 l 83 833 l 83 917 l 0 917 l 0 1000 l 83 1000 l 83 1083 l 0 1083 l 0 1167 l 83 1167 l 83 1250 l 0 1250 l 0 1333 l 83 1333 l 83 1417 l 167 1417 l 167 1333 l 250 1333 l 250 1417 l 333 1417 l 333 1333 l 417 1333 l 417 1417 l 500 1417 l 500 1333 l 583 1333 l 583 1417 l 667 1417 l 667 1333 l 750 1333 l 750 1417 l 833 1417 l 833 -417 l 0 -417 m 167 -333 l 250 -333 l 250 -250 l 167 -250 l 167 -333 m 167 -167 l 250 -167 l 250 -83 l 167 -83 l 167 -167 m 333 -333 l 417 -333 l 417 -250 l 333 -250 l 333 -333 m 167 0 l 250 0 l 250 83 l 167 83 l 167 0 m 333 -167 l 417 -167 l 417 -83 l 333 -83 l 333 -167 m 500 -333 l 583 -333 l 583 -250 l 500 -250 l 500 -333 m 167 167 l 250 167 l 250 250 l 167 250 l 167 167 m 333 0 l 417 0 l 417 83 l 333 83 l 333 0 m 500 -167 l 583 -167 l 583 -83 l 500 -83 l 500 -167 m 667 -333 l 750 -333 l 750 -250 l 667 -250 l 667 -333 m 167 333 l 250 333 l 250 417 l 167 417 l 167 333 m 333 167 l 417 167 l 417 250 l 333 250 l 333 167 m 500 0 l 583 0 l 583 83 l 500 83 l 500 0 m 667 -167 l 750 -167 l 750 -83 l 667 -83 l 667 -167 m 167 500 l 250 500 l 250 583 l 167 583 l 167 500 m 333 333 l 417 333 l 417 417 l 333 417 l 333 333 m 500 167 l 583 167 l 583 250 l 500 250 l 500 167 m 667 0 l 750 0 l 750 83 l 667 83 l 667 0 m 167 667 l 250 667 l 250 750 l 167 750 l 167 667 m 333 500 l 417 500 l 417 583 l 333 583 l 333 500 m 500 333 l 583 333 l 583 417 l 500 417 l 500 333 m 667 167 l 750 167 l 750 250 l 667 250 l 667 167 m 167 833 l 250 833 l 250 917 l 167 917 l 167 833 m 333 667 l 417 667 l 417 750 l 333 750 l 333 667 m 500 500 l 583 500 l 583 583 l 500 583 l 500 500 m 667 333 l 750 333 l 750 417 l 667 417 l 667 333 m 167 1000 l 250 1000 l 250 1083 l 167 1083 l 167 1000 m 333 833 l 417 833 l 417 917 l 333 917 l 333 833 m 500 667 l 583 667 l 583 750 l 500 750 l 500 667 m 667 500 l 750 500 l 750 583 l 667 583 l 667 500 m 167 1167 l 250 1167 l 250 1250 l 167 1250 l 167 1167 m 333 1000 l 417 1000 l 417 1083 l 333 1083 l 333 1000 m 500 833 l 583 833 l 583 917 l 500 917 l 500 833 m 667 667 l 750 667 l 750 750 l 667 750 l 667 667 m 333 1167 l 417 1167 l 417 1250 l 333 1250 l 333 1167 m 500 1000 l 583 1000 l 583 1083 l 500 1083 l 500 1000 m 667 833 l 750 833 l 750 917 l 667 917 l 667 833 m 500 1167 l 583 1167 l 583 1250 l 500 1250 l 500 1167 m 667 1000 l 750 1000 l 750 1083 l 667 1083 l 667 1000 m 667 1167 l 750 1167 l 750 1250 l 667 1250 l 667 1167 z "},"●":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 z "},"◯":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 731 685 778 603 q 601 814 683 767 q 417 861 519 861 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 z "},"◔":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 644 500 715 500 q 512 500 574 500 q 417 500 450 500 q 417 567 417 521 q 417 669 417 613 q 417 776 417 725 q 417 861 417 828 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 z "},"◕":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 56 500 q 216 500 154 500 q 324 500 278 500 q 417 500 369 500 q 417 651 417 553 q 417 861 417 750 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 z "},"◌":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 q 0 613 -14 561 l 67 594 q 58 549 61 572 q 56 500 56 525 q 58 452 56 475 q 67 406 61 429 l 0 388 q -14 500 -14 439 m 40 283 l 101 318 q 235 185 150 233 l 200 124 q 40 283 97 181 m 40 717 q 200 876 97 819 l 235 815 q 101 682 150 767 l 40 717 m 304 917 q 417 931 356 931 q 529 917 478 931 l 511 850 q 465 858 489 856 q 417 861 442 861 q 369 858 392 861 q 322 850 346 856 l 304 917 m 304 83 l 322 150 q 369 142 346 144 q 417 139 392 139 q 465 142 442 139 q 511 150 489 144 l 529 83 q 417 69 478 69 q 304 83 356 69 m 599 815 l 633 876 q 793 717 736 819 l 732 682 q 599 815 683 767 m 599 185 q 732 318 683 233 l 793 283 q 633 124 736 181 l 599 185 m 767 406 q 775 452 772 429 q 778 500 778 475 q 775 549 778 525 q 767 594 772 572 l 833 613 q 847 500 847 561 q 833 388 847 439 l 767 406 z "},"◎":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 731 685 778 603 q 601 814 683 767 q 417 861 519 861 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 m 417 324 q 291 374 342 324 q 240 500 240 425 q 291 626 240 575 q 417 676 342 676 q 542 626 492 676 q 593 500 593 575 q 542 374 593 425 q 417 324 492 324 m 417 388 q 497 420 465 388 q 529 500 529 453 q 497 581 529 549 q 417 613 465 613 q 337 581 369 613 q 304 500 304 549 q 337 420 304 453 q 417 388 369 388 z "},"◆":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 500 l 417 932 l 847 500 l 417 69 z "},"◇":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 500 l 417 932 l 847 500 l 417 69 m 417 178 l 739 500 l 417 824 l 94 500 l 417 178 z "},"◊":{"ha":833,"x_min":83,"x_max":750,"o":"m 333 0 l 83 450 l 83 549 l 333 1000 l 508 1000 l 750 549 l 750 450 l 508 0 l 333 0 m 415 83 l 421 83 q 449 140 431 103 q 489 218 468 178 l 625 478 l 625 521 l 489 782 q 449 860 468 822 q 421 917 431 897 l 415 917 q 386 860 406 897 q 346 782 367 822 l 208 521 l 208 478 l 346 218 q 387 140 368 176 q 415 83 406 103 z "},"■":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 z "},"□":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 847 l 69 153 z "},"▪":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 208 708 l 625 708 l 625 292 l 208 292 z "},"▫":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 208 708 l 625 708 l 625 292 l 208 292 m 278 361 l 556 361 l 556 639 l 278 639 l 278 361 z "},"◧":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 83 l 833 917 l 0 917 l 0 83 l 833 83 m 764 153 l 403 153 l 403 847 l 764 847 l 764 153 z "},"◨":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 431 153 l 431 847 l 69 847 l 69 153 z "},"◩":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 153 z "},"◪":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 917 l 833 83 l 0 83 l 0 917 l 833 917 m 764 847 l 69 847 l 69 153 l 764 847 z "},"◫":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 847 l 69 153 m 382 97 l 382 903 l 451 903 l 451 97 l 382 97 z "},"▲":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 83 l 417 931 l 847 83 l -14 83 z "},"▶":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 69 l 0 931 l 847 500 l 0 69 z "},"▼":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 917 l 847 917 l 417 69 z "},"◀":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 68 l -14 500 l 833 931 l 833 68 z "},"△":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 83 l 417 931 l 847 83 l -14 83 m 101 153 l 732 153 l 417 774 l 101 153 z "},"▷":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 69 l 0 931 l 847 500 l 0 69 m 69 185 l 692 500 l 69 815 l 69 185 z "},"▽":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 917 l 847 917 l 417 69 m 417 226 l 732 847 l 101 847 l 417 226 z "},"◁":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 69 l -14 500 l 833 931 l 833 69 m 764 185 l 764 815 l 142 500 l 764 185 z "},"►":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 292 l 0 708 l 847 500 l 0 292 z "},"◄":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 292 l 833 708 l -14 500 l 833 292 z "},"▻":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 292 l 0 708 l 847 500 l 0 292 m 69 381 l 622 500 l 69 619 l 69 381 z "},"◅":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 292 l 833 708 l -14 500 l 833 292 m 764 381 l 211 500 l 764 619 l 764 381 z "},"▴":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 417 722 l 625 292 l 208 292 z "},"▸":{"ha":833,"x_min":208,"x_max":639,"o":"m 208 292 l 639 500 l 208 708 l 208 292 z "},"▾":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 708 l 417 278 l 625 708 l 208 708 z "},"◂":{"ha":833,"x_min":194,"x_max":625,"o":"m 625 708 l 194 500 l 625 292 l 625 708 z "},"▵":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 417 722 l 625 292 l 208 292 m 297 347 l 536 347 l 417 594 l 297 347 z "},"▹":{"ha":833,"x_min":208,"x_max":639,"o":"m 208 292 l 208 708 l 639 500 l 208 292 m 264 381 l 511 500 l 264 619 l 264 381 z "},"▿":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 278 l 208 708 l 625 708 l 417 278 m 417 406 l 536 653 l 297 653 l 417 406 z "},"◃":{"ha":833,"x_min":194,"x_max":625,"o":"m 625 292 l 194 500 l 625 708 l 625 292 m 569 381 l 569 619 l 322 500 l 569 381 z "},"╦":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 z "},"╗":{"ha":833,"x_min":-28,"x_max":625,"o":"m 486 -417 l 486 583 l -28 583 l -28 722 l 625 722 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 z "},"╔":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 -417 l 208 722 l 861 722 l 861 583 l 347 583 l 347 -417 l 208 -417 m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 z "},"═":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 z "},"╩":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╝":{"ha":833,"x_min":-28,"x_max":625,"o":"m -28 306 l -28 444 l 486 444 l 486 1417 l 625 1417 l 625 306 l -28 306 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╚":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 306 l 208 1417 l 347 1417 l 347 444 l 861 444 l 861 306 l 208 306 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"║":{"ha":833,"x_min":208,"x_max":625,"o":"m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 z "},"╬":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"╣":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╠":{"ha":833,"x_min":208,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"╥":{"ha":833,"x_min":-28,"x_max":861,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╖":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 625 583 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╓":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 -417 l 208 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"┰":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┒":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 556 583 l 556 -417 l 278 -417 z "},"┧":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 556 583 l 556 -417 l 278 -417 z "},"┎":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┟":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"╁":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┯":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┑":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 486 653 l 486 -417 l 347 -417 z "},"┩":{"ha":833,"x_min":-28,"x_max":556,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 375 l 486 375 l 486 -417 l 347 -417 z "},"┍":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┡":{"ha":833,"x_min":278,"x_max":861,"o":"m 347 -417 l 347 375 l 278 375 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╇":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╤":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 z "},"╕":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 486 722 l 486 -417 l 347 -417 z "},"╒":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"╍":{"ha":833,"x_min":104,"x_max":729,"o":"m 521 375 l 521 653 l 729 653 l 729 375 l 521 375 m 104 375 l 104 653 l 313 653 l 313 375 l 104 375 z "},"╏":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -201 l 278 375 l 556 375 l 556 -201 l 278 -201 m 278 639 l 278 1213 l 556 1213 l 556 639 l 278 639 z "},"╻":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 583 l 556 583 l 556 -417 l 278 -417 z "},"┳":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┓":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 556 653 l 556 -417 l 278 -417 z "},"┏":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"━":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 861 653 l 861 375 l -28 375 z "},"╸":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 375 l -28 653 l 486 653 l 486 375 l -28 375 z "},"╾":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 486 653 l 486 583 l 861 583 l 861 444 l 486 444 l 486 375 l -28 375 z "},"┉":{"ha":833,"x_min":35,"x_max":799,"o":"m 660 375 l 660 653 l 799 653 l 799 375 l 660 375 m 35 375 l 35 653 l 174 653 l 174 375 l 35 375 m 243 375 l 243 653 l 382 653 l 382 375 l 243 375 m 451 375 l 451 653 l 590 653 l 590 375 l 451 375 z "},"┋":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 1000 l 278 1299 l 556 1299 l 556 1000 l 278 1000 m 278 -271 l 278 28 l 556 28 l 556 -271 l 278 -271 m 278 153 l 278 451 l 556 451 l 556 153 l 278 153 m 278 576 l 278 875 l 556 875 l 556 576 l 278 576 z "},"╺":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 375 l 347 653 l 861 653 l 861 375 l 347 375 z "},"┅":{"ha":833,"x_min":51,"x_max":782,"o":"m 607 375 l 607 653 l 782 653 l 782 375 l 607 375 m 51 375 l 51 653 l 226 653 l 226 375 l 51 375 m 329 375 l 329 653 l 504 653 l 504 375 l 329 375 z "},"┇":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 253 l 278 749 l 556 749 l 556 253 l 278 253 m 278 -304 l 278 149 l 556 149 l 556 -304 l 278 -304 m 278 850 l 278 1303 l 556 1303 l 556 850 l 278 850 z "},"╹":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 444 l 278 1417 l 556 1417 l 556 444 l 278 444 z "},"┻":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l -28 375 z "},"┛":{"ha":833,"x_min":-28,"x_max":556,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 375 l -28 375 z "},"╿":{"ha":833,"x_min":278,"x_max":556,"o":"m 347 -417 l 347 444 l 278 444 l 278 1417 l 556 1417 l 556 444 l 486 444 l 486 -417 l 347 -417 z "},"┗":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 375 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 278 375 z "},"┃":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"╋":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┫":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"┣":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"╅":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 556 653 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┭":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 486 653 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┵":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 375 l -28 375 z "},"┽":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┲":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┺":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 375 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 278 375 z "},"╊":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"╃":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 375 l 486 375 l 486 -417 l 347 -417 z "},"╮":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 111 q 307 288 347 213 q 194 403 267 363 q 21 444 121 444 l -28 444 l -28 583 l 21 583 q 267 525 163 583 q 428 360 371 467 q 486 111 486 254 l 486 -417 l 347 -417 z "},"╭":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 111 q 405 360 347 254 q 567 525 463 467 q 813 583 672 583 l 861 583 l 861 444 l 813 444 q 640 403 714 444 q 526 288 567 363 q 486 111 486 213 l 486 -417 l 347 -417 z "},"╯":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 21 583 q 194 624 121 583 q 307 740 267 665 q 347 917 347 815 l 347 1417 l 486 1417 l 486 917 q 428 667 486 774 q 267 503 371 561 q 21 444 163 444 l -28 444 z "},"╰":{"ha":833,"x_min":347,"x_max":861,"o":"m 813 444 q 567 503 672 444 q 405 667 463 561 q 347 917 347 774 l 347 1417 l 486 1417 l 486 917 q 526 740 486 815 q 640 624 567 665 q 813 583 714 583 l 861 583 l 861 444 l 813 444 z "},"╳":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 -222 l -28 -167 l 346 500 l -28 1167 l -28 1222 l 83 1222 l 417 632 l 750 1222 l 861 1222 l 861 1167 l 488 500 l 861 -167 l 861 -222 l 750 -222 l 417 368 l 83 -222 l -28 -222 z "},"╲":{"ha":833,"x_min":-28,"x_max":861,"o":"m 750 -222 l -28 1167 l -28 1222 l 83 1222 l 861 -167 l 861 -222 l 750 -222 z "},"╱":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 -222 l -28 -167 l 750 1222 l 861 1222 l 861 1167 l 83 -222 l -28 -222 z "},"╌":{"ha":833,"x_min":97,"x_max":736,"o":"m 514 444 l 514 583 l 736 583 l 736 444 l 514 444 m 97 444 l 97 583 l 319 583 l 319 444 l 97 444 z "},"╎":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -229 l 347 403 l 486 403 l 486 -229 l 347 -229 m 347 611 l 347 1240 l 486 1240 l 486 611 l 347 611 z "},"╷":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -417 l 347 583 l 486 583 l 486 -417 l 347 -417 z "},"┬":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┐":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 486 583 l 486 -417 l 347 -417 z "},"┌":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"─":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 861 583 l 861 444 l -28 444 z "},"╴":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 486 583 l 486 444 l -28 444 z "},"╼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 375 l 347 444 l -28 444 l -28 583 l 347 583 l 347 653 l 861 653 l 861 375 l 347 375 z "},"┈":{"ha":833,"x_min":35,"x_max":799,"o":"m 660 444 l 660 583 l 799 583 l 799 444 l 660 444 m 35 444 l 35 583 l 174 583 l 174 444 l 35 444 m 243 444 l 243 583 l 382 583 l 382 444 l 243 444 m 451 444 l 451 583 l 590 583 l 590 444 l 451 444 z "},"┊":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 1000 l 347 1299 l 486 1299 l 486 1000 l 347 1000 m 347 -271 l 347 28 l 486 28 l 486 -271 l 347 -271 m 347 153 l 347 451 l 486 451 l 486 153 l 347 153 m 347 576 l 347 875 l 486 875 l 486 576 l 347 576 z "},"╶":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 444 l 347 583 l 861 583 l 861 444 l 347 444 z "},"┄":{"ha":833,"x_min":51,"x_max":782,"o":"m 607 444 l 607 583 l 782 583 l 782 444 l 607 444 m 51 444 l 51 583 l 226 583 l 226 444 l 51 444 m 329 444 l 329 583 l 504 583 l 504 444 l 329 444 z "},"┆":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 833 l 347 1303 l 486 1303 l 486 833 l 347 833 m 347 -304 l 347 164 l 486 164 l 486 -304 l 347 -304 m 347 268 l 347 732 l 486 732 l 486 268 l 347 268 z "},"╵":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 444 l 347 1417 l 486 1417 l 486 444 l 347 444 z "},"╽":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 556 583 l 556 -417 l 278 -417 z "},"┴":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l -28 444 z "},"┘":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 444 l -28 444 z "},"└":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 444 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 347 444 z "},"│":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"┼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┤":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"├":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"╆":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┮":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┶":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 375 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 347 375 z "},"┾":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┱":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 556 653 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┹":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 375 l -28 375 z "},"╉":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"╄":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l 278 375 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╨":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l -28 444 z "},"╜":{"ha":833,"x_min":-28,"x_max":625,"o":"m -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 444 l -28 444 z "},"╙":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 444 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 208 444 z "},"╀":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┸":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l -28 444 z "},"┦":{"ha":833,"x_min":-28,"x_max":556,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 444 l 486 444 l 486 -417 l 347 -417 z "},"┚":{"ha":833,"x_min":-28,"x_max":556,"o":"m -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 444 l -28 444 z "},"┞":{"ha":833,"x_min":278,"x_max":861,"o":"m 347 -417 l 347 444 l 278 444 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┖":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 444 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 278 444 z "},"╈":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┷":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l -28 375 z "},"┪":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 556 653 l 556 -417 l 278 -417 z "},"┙":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 375 l -28 375 z "},"┢":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┕":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 375 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 347 375 z "},"╧":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l -28 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 z "},"╛":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 306 l -28 306 z "},"╘":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 306 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 347 306 z "},"╫":{"ha":833,"x_min":-28,"x_max":861,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╢":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 -417 l 208 -417 m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 z "},"╟":{"ha":833,"x_min":208,"x_max":861,"o":"m 486 -417 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 z "},"╂":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┨":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"┠":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┿":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┥":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"┝":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╪":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"╡":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"╞":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"⍴":{"ha":833,"x_min":131,"x_max":708,"o":"m 131 -250 l 131 494 q 166 646 131 582 q 267 744 201 710 q 421 778 332 778 q 575 744 511 778 q 674 647 639 710 q 708 494 708 583 l 708 271 q 678 119 708 183 q 594 21 649 56 q 461 -14 539 -14 q 312 38 368 -14 q 256 175 256 89 l 281 146 l 253 146 l 256 -28 l 256 -250 l 131 -250 m 419 94 q 541 142 499 94 q 583 278 583 189 l 583 486 q 541 622 583 575 q 419 669 499 669 q 298 622 340 669 q 256 486 256 575 l 256 278 q 299 143 256 192 q 419 94 343 94 z "},"⚠":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 133 q 371 181 371 133 q 417 228 371 228 l 419 228 q 465 181 465 228 q 419 133 465 133 l 417 133 m 403 283 l 382 432 l 382 511 l 451 511 l 451 432 l 431 283 l 403 283 m -14 0 l 417 847 l 847 0 l -14 0 m 101 69 l 732 69 l 417 690 l 101 69 z "},"⚡":{"ha":833,"x_min":28,"x_max":806,"o":"m 653 1167 l 403 611 l 806 611 l 69 -153 l 410 431 l 28 431 l 653 1167 z "},"✕":{"ha":833,"x_min":92,"x_max":742,"o":"m 171 140 l 93 218 l 338 463 l 92 708 l 172 789 l 418 543 l 663 788 l 740 710 l 496 465 l 742 219 l 661 139 l 415 385 l 171 140 z "},"@":{"ha":833,"x_min":63,"x_max":778,"o":"m 451 -250 q 246 -201 333 -250 q 110 -60 158 -151 q 63 153 63 31 l 63 625 q 108 840 63 750 q 237 979 153 931 q 438 1028 321 1028 q 619 987 543 1028 q 737 869 696 946 q 778 688 778 793 l 778 90 l 679 90 l 679 167 l 640 167 l 667 194 q 626 109 667 142 q 519 76 586 76 q 381 131 429 76 q 333 292 333 186 l 333 458 q 381 619 333 564 q 519 674 429 674 q 626 641 586 674 q 667 554 667 608 l 647 583 l 681 583 l 667 681 l 667 688 q 640 821 667 767 q 563 903 614 875 q 438 931 513 931 q 243 850 313 931 q 174 625 174 769 l 174 153 q 248 -66 174 14 q 451 -146 322 -146 l 549 -146 l 549 -250 l 451 -250 m 556 164 q 640 199 613 164 q 667 306 667 233 l 667 460 q 640 556 667 525 q 556 586 613 586 q 472 555 500 586 q 444 458 444 524 l 444 292 q 472 195 444 226 q 556 164 500 164 z "},"&":{"ha":833,"x_min":76,"x_max":786,"o":"m 319 -14 q 141 47 206 -14 q 76 215 76 108 l 76 389 q 115 513 76 463 q 224 585 153 564 l 214 599 q 151 707 171 657 q 132 807 132 757 q 163 924 132 874 q 251 1001 194 974 q 382 1028 307 1028 q 522 999 463 1028 q 613 917 581 969 q 644 790 644 864 l 519 790 q 503 860 519 831 q 456 904 486 889 q 382 919 425 919 q 316 906 344 919 q 272 866 288 892 q 257 804 257 840 q 272 729 257 769 q 313 653 286 689 l 551 324 l 650 500 l 781 500 l 624 224 l 786 0 l 649 0 l 561 121 q 319 -14 458 -14 m 326 97 q 417 128 374 97 q 492 215 461 160 l 288 497 q 223 463 244 490 q 201 389 201 435 l 201 215 q 234 128 201 160 q 326 97 267 97 z "},"¶":{"ha":833,"x_min":90,"x_max":701,"o":"m 354 -250 l 354 431 q 163 496 236 431 q 90 667 90 561 l 90 778 q 163 949 90 885 q 354 1014 236 1014 l 465 1014 l 465 -250 l 354 -250 m 590 -250 l 590 1014 l 701 1014 l 701 -250 l 590 -250 z "},"§":{"ha":833,"x_min":107,"x_max":726,"o":"m 396 -214 q 259 -187 321 -214 q 158 -112 197 -160 q 107 0 118 -64 l 239 0 q 294 -74 251 -46 q 396 -103 338 -103 l 438 -103 q 558 -70 517 -103 q 600 17 600 -37 q 565 99 600 67 q 460 146 529 132 l 332 172 q 178 253 236 192 q 119 396 119 315 q 171 532 119 475 q 299 596 222 589 l 299 606 q 221 624 261 606 q 153 687 181 643 q 125 804 125 731 q 198 967 125 907 q 401 1028 271 1028 l 443 1028 q 628 972 553 1028 q 718 826 704 917 l 586 826 q 537 892 576 867 q 443 917 497 917 l 401 917 q 291 886 331 917 q 251 803 251 856 q 287 726 251 758 q 386 679 322 693 l 511 653 q 667 572 610 632 q 724 428 724 513 q 673 292 724 347 q 539 236 622 236 l 539 226 q 623 203 579 225 q 697 136 667 181 q 726 21 726 92 q 650 -151 726 -87 q 438 -214 574 -214 l 396 -214 m 458 257 q 531 268 500 249 q 580 327 563 288 q 597 415 597 367 q 567 501 597 464 q 488 547 536 538 l 385 568 q 312 558 343 576 q 263 501 281 539 q 246 417 246 464 q 276 326 246 364 q 353 278 306 288 l 458 257 z "},"©":{"ha":833,"x_min":63,"x_max":771,"o":"m 417 153 q 231 194 311 153 q 107 311 151 236 q 63 486 63 386 l 63 694 q 107 869 63 794 q 231 986 151 944 q 417 1028 311 1028 q 603 986 524 1028 q 726 869 682 944 q 771 694 771 794 l 771 486 q 726 311 771 386 q 603 194 682 236 q 417 153 524 153 m 417 222 q 563 255 500 222 q 660 347 625 288 q 694 486 694 407 l 694 694 q 660 833 694 774 q 563 925 625 892 q 417 958 500 958 q 271 925 333 958 q 174 833 208 892 q 139 694 139 774 l 139 486 q 174 347 139 407 q 271 255 208 288 q 417 222 333 222 m 424 340 q 298 384 346 340 q 250 500 250 428 l 250 681 q 298 797 250 753 q 424 840 346 840 q 549 797 501 840 q 596 681 596 753 l 506 681 q 483 741 506 718 q 424 764 460 764 q 363 741 386 764 q 340 681 340 718 l 340 500 q 363 440 340 463 q 424 417 386 417 q 483 440 460 417 q 506 500 506 463 l 596 500 q 549 384 596 428 q 424 340 501 340 z "},"®":{"ha":833,"x_min":63,"x_max":771,"o":"m 417 153 q 231 194 311 153 q 107 311 151 236 q 63 486 63 386 l 63 694 q 107 869 63 794 q 231 986 151 944 q 417 1028 311 1028 q 603 986 524 1028 q 726 869 682 944 q 771 694 771 794 l 771 486 q 726 311 771 386 q 603 194 682 236 q 417 153 524 153 m 504 347 l 415 560 l 500 560 l 593 347 l 504 347 m 417 222 q 563 255 500 222 q 660 347 625 288 q 694 486 694 407 l 694 694 q 660 833 694 774 q 563 925 625 892 q 417 958 500 958 q 271 925 333 958 q 174 833 208 892 q 139 694 139 774 l 139 486 q 174 347 139 407 q 271 255 208 288 q 417 222 333 222 m 264 347 l 264 833 l 422 833 q 541 794 497 833 q 585 688 585 754 q 541 581 585 621 q 422 542 497 542 l 347 542 l 347 347 l 264 347 m 347 611 l 422 611 q 479 631 458 611 q 500 688 500 651 q 479 744 500 724 q 422 764 458 764 l 347 764 l 347 611 z "},"™":{"ha":833,"x_min":21,"x_max":785,"o":"m 160 514 l 160 944 l 21 944 l 21 1014 l 382 1014 l 382 944 l 243 944 l 243 514 l 160 514 m 431 514 l 431 1014 l 542 1014 l 589 872 q 602 823 596 853 q 611 774 608 793 q 619 823 614 793 q 631 872 624 853 l 676 1014 l 785 1014 l 785 514 l 708 514 l 708 821 q 710 876 708 847 q 714 930 711 904 q 718 972 717 956 q 700 909 710 944 q 686 861 690 874 l 644 718 l 574 718 l 528 863 q 514 910 524 875 q 496 972 504 944 q 501 930 499 956 q 505 876 503 904 q 507 821 507 847 l 507 514 l 431 514 z "},"°":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 625 q 266 681 324 625 q 208 826 208 736 q 266 972 208 917 q 417 1028 324 1028 q 568 972 511 1028 q 625 826 625 917 q 568 681 625 736 q 417 625 511 625 m 415 696 q 507 732 472 696 q 542 826 542 768 q 507 922 542 886 q 415 958 472 958 q 326 922 360 958 q 292 826 292 886 q 326 732 292 768 q 415 696 360 696 z "},"′":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 646 l 340 1078 l 521 1078 l 340 646 l 229 646 z "},"″":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 646 l 549 1078 l 729 1078 l 549 646 l 438 646 m 118 646 l 229 1078 l 410 1078 l 229 646 l 118 646 z "},"|":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 -153 l 354 1153 l 479 1153 l 479 -153 l 354 -153 z "},"¦":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 625 l 354 1153 l 479 1153 l 479 625 l 354 625 m 354 -153 l 354 375 l 479 375 l 479 -153 l 354 -153 z "},"†":{"ha":833,"x_min":111,"x_max":722,"o":"m 354 -153 l 354 722 l 111 722 l 111 833 l 354 833 l 354 1153 l 479 1153 l 479 833 l 722 833 l 722 722 l 479 722 l 479 -153 l 354 -153 z "},"ℓ":{"ha":833,"x_min":97,"x_max":694,"o":"m 468 0 q 345 27 397 0 q 265 104 293 54 q 236 222 236 154 l 236 813 q 297 969 236 910 q 458 1028 358 1028 q 620 969 560 1028 q 681 813 681 911 l 681 694 q 626 526 681 601 q 474 415 571 451 l 139 288 l 97 400 l 435 524 q 524 590 493 546 q 556 694 556 635 l 556 813 q 531 888 556 861 q 458 914 506 914 q 387 888 413 914 q 361 813 361 861 l 361 222 q 390 142 361 171 q 468 114 418 114 q 526 128 500 114 q 571 161 551 142 q 600 199 590 181 l 694 140 q 651 78 682 111 q 574 23 619 46 q 468 0 528 0 z "},"‡":{"ha":833,"x_min":111,"x_max":722,"o":"m 354 -153 l 354 194 l 111 194 l 111 306 l 354 306 l 354 708 l 111 708 l 111 819 l 354 819 l 354 1153 l 479 1153 l 479 819 l 722 819 l 722 708 l 479 708 l 479 306 l 722 306 l 722 194 l 479 194 l 479 -153 l 354 -153 z "},"№":{"ha":833,"x_min":42,"x_max":819,"o":"m 42 0 l 42 1014 l 174 1014 l 336 385 q 356 308 344 356 q 378 210 367 261 q 399 118 390 158 q 393 186 396 149 q 388 264 390 224 q 383 340 385 304 q 382 403 382 376 l 382 1014 l 479 1014 l 479 0 l 347 0 l 189 631 q 170 710 182 663 q 147 808 158 757 q 125 897 135 858 q 130 831 128 868 q 134 753 132 793 q 138 677 136 714 q 139 611 139 640 l 139 0 l 42 0 m 688 417 q 594 457 632 417 q 556 563 556 497 l 556 882 q 594 988 556 947 q 688 1028 632 1028 q 782 988 744 1028 q 819 882 819 947 l 819 563 q 782 457 819 497 q 688 417 744 417 m 688 493 q 722 506 707 493 q 736 549 736 518 l 736 896 q 722 936 736 921 q 688 951 707 951 q 654 936 669 951 q 639 896 639 921 l 639 549 q 654 506 639 518 q 688 493 669 493 z "},"℮":{"ha":833,"x_min":83,"x_max":750,"o":"m 417 -14 q 242 31 318 -14 q 125 158 167 76 q 83 347 83 240 l 83 667 q 125 856 83 775 q 242 983 167 938 q 417 1028 318 1028 q 592 983 518 1028 q 708 857 667 938 q 750 667 750 776 l 750 499 l 181 499 l 181 568 l 621 568 l 611 557 l 611 875 q 544 935 594 904 q 417 965 494 965 q 290 935 340 965 q 222 875 239 904 l 222 139 q 290 79 239 110 q 417 49 340 49 q 567 91 499 49 q 663 201 635 133 l 732 201 q 663 89 710 138 q 552 13 615 40 q 417 -14 489 -14 z "},"⌃":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 514 l 347 764 l 486 764 l 750 514 l 596 514 l 414 678 l 236 514 l 83 514 z "},"⌂":{"ha":833,"x_min":113,"x_max":721,"o":"m 113 0 l 113 482 l 417 778 l 721 482 l 721 0 l 113 0 m 182 69 l 651 69 l 651 449 l 417 678 l 182 449 l 182 69 z "},"⌥":{"ha":833,"x_min":14,"x_max":819,"o":"m 510 0 l 240 653 l 14 653 l 14 764 l 324 764 l 593 111 l 819 111 l 819 0 l 510 0 m 536 653 l 536 764 l 819 764 l 819 653 l 536 653 z "},"⌘":{"ha":833,"x_min":21,"x_max":813,"o":"m 658 471 l 658 564 q 703 581 686 564 q 719 625 719 597 q 703 669 719 653 q 658 685 686 685 q 615 669 632 685 q 599 625 599 653 l 506 625 q 548 736 506 694 q 658 778 590 778 q 770 736 728 778 q 813 625 813 694 q 770 513 813 556 q 658 471 728 471 m 174 -14 q 63 28 106 -14 q 21 140 21 71 q 63 251 21 210 q 174 293 106 293 l 174 200 q 131 184 147 200 q 114 140 114 168 q 131 96 114 113 q 174 79 147 79 q 218 96 201 79 q 235 140 235 113 l 328 140 q 285 28 328 71 q 174 -14 243 -14 m 235 140 l 235 625 l 328 625 l 328 140 l 235 140 m 174 200 l 174 293 l 658 293 l 658 200 l 174 200 m 658 -14 q 548 28 590 -14 q 506 140 506 71 l 599 140 q 615 96 599 113 q 658 79 632 79 q 703 96 686 79 q 719 140 719 113 q 703 184 719 168 q 658 200 686 200 l 658 293 q 770 251 728 293 q 813 140 813 210 q 770 28 813 71 q 658 -14 728 -14 m 174 471 q 63 513 106 471 q 21 625 21 556 q 63 736 21 694 q 174 778 106 778 q 285 736 243 778 q 328 625 328 694 l 235 625 q 218 669 235 653 q 174 685 201 685 q 131 669 147 685 q 114 625 114 653 q 131 581 114 597 q 174 564 147 564 l 174 471 m 174 471 l 174 564 l 658 564 l 658 471 l 174 471 m 506 140 l 506 625 l 599 625 l 599 140 l 506 140 z "},"⏻":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 7 593 -28 514 q 100 732 42 672 q 165 767 129 763 q 222 749 200 772 q 240 693 244 726 q 207 628 235 660 q 152 537 172 589 q 132 424 132 485 q 168 273 132 339 q 269 169 204 207 q 417 132 333 132 q 565 169 500 132 q 665 273 629 207 q 701 424 701 339 q 682 537 701 485 q 626 628 663 589 q 594 693 599 660 q 611 749 589 726 q 669 767 635 772 q 733 732 704 763 q 827 594 793 674 q 861 424 861 514 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 313 q 363 337 386 313 q 340 396 340 361 l 340 924 q 363 983 340 958 q 417 1007 386 1007 q 471 983 449 1007 q 493 924 493 958 l 493 396 q 471 337 493 361 q 417 313 449 313 z "},"⏼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 6 594 -28 515 q 101 734 40 674 q 243 828 163 794 q 417 861 324 861 q 590 828 510 861 q 732 734 671 794 q 827 594 793 674 q 861 424 861 515 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 118 q 568 159 500 118 q 676 269 636 200 q 715 424 715 339 q 676 578 715 508 q 568 688 636 647 q 417 729 500 729 q 266 688 333 729 q 158 578 199 647 q 118 424 118 508 q 158 269 118 339 q 266 159 199 200 q 417 118 333 118 m 417 215 q 363 240 386 215 q 340 299 340 264 l 340 549 q 363 608 340 583 q 417 632 386 632 q 471 608 449 632 q 493 549 493 583 l 493 299 q 471 240 493 264 q 417 215 449 215 z "},"⭘":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 6 594 -28 515 q 101 734 40 674 q 243 828 163 794 q 417 861 324 861 q 590 828 510 861 q 732 734 671 794 q 827 594 793 674 q 861 424 861 515 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 118 q 568 159 500 118 q 676 269 636 200 q 715 424 715 339 q 676 578 715 508 q 568 688 636 647 q 417 729 500 729 q 266 688 333 729 q 158 578 199 647 q 118 424 118 508 q 158 269 118 339 q 266 159 199 200 q 417 118 333 118 z "},"⏽":{"ha":833,"x_min":340,"x_max":493,"o":"m 417 -7 q 363 17 386 -7 q 340 76 340 42 l 340 771 q 363 830 340 806 q 417 854 386 854 q 471 830 449 854 q 493 771 493 806 l 493 76 q 471 17 493 42 q 417 -7 449 -7 z "},"⏾":{"ha":833,"x_min":8,"x_max":853,"o":"m 139 118 q 41 265 74 183 q 9 432 8 346 q 43 599 10 518 q 143 747 76 681 q 257 832 197 801 q 212 657 215 753 q 240 471 208 561 q 336 317 272 381 q 492 219 401 251 q 677 191 582 188 q 853 236 772 194 q 768 122 822 176 q 620 22 701 56 q 453 -12 539 -11 q 285 20 367 -12 q 139 118 204 53 z "},"⌅":{"ha":833,"x_min":83,"x_max":750,"o":"m 118 653 l 118 764 l 715 764 l 715 653 l 118 653 m 83 319 l 347 569 l 486 569 l 750 319 l 596 319 l 414 483 l 236 319 l 83 319 z "},"˳":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 -347 q 296 -309 342 -347 q 250 -208 250 -271 q 296 -108 250 -146 q 417 -69 342 -69 q 538 -108 492 -69 q 583 -208 583 -146 q 538 -309 583 -271 q 417 -347 492 -347 m 415 -276 q 477 -258 454 -276 q 500 -208 500 -239 q 478 -156 500 -172 q 415 -139 456 -139 q 356 -158 379 -139 q 333 -208 333 -176 q 356 -258 333 -239 q 415 -276 379 -276 z "},"˷":{"ha":833,"x_min":194,"x_max":639,"o":"m 514 -292 q 446 -277 472 -292 q 401 -243 419 -262 q 367 -209 383 -224 q 326 -194 350 -194 q 297 -206 308 -194 q 285 -243 285 -218 l 285 -285 l 194 -285 l 194 -243 q 229 -146 194 -181 q 319 -111 264 -111 q 388 -126 361 -111 q 432 -160 414 -140 q 467 -194 450 -179 q 507 -208 483 -208 q 538 -197 526 -208 q 549 -160 549 -185 l 549 -118 l 639 -118 l 639 -160 q 605 -257 639 -222 q 514 -292 571 -292 z "},"ʹ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 569 l 340 1001 l 521 1001 l 340 569 l 229 569 z "},"͵":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},"ʼ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 646 l 340 1078 l 521 1078 l 340 646 l 229 646 z "},"ʺ":{"ha":833,"x_min":76,"x_max":750,"o":"m 458 568 l 569 1000 l 750 1000 l 569 568 l 458 568 m 76 568 l 188 1000 l 368 1000 l 188 568 l 76 568 z "},"ˉ":{"ha":833,"x_min":194,"x_max":639,"o":"z "},"ʹ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 569 l 340 1001 l 521 1001 l 340 569 l 229 569 z "},"̈":{"ha":0,"x_min":174,"x_max":660,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"̇":{"ha":0,"x_min":318,"x_max":515,"o":"m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"̀":{"ha":0,"x_min":253,"x_max":544,"o":"m 413 896 l 253 1090 l 392 1090 l 544 896 l 413 896 z "},"́":{"ha":0,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"̋":{"ha":0,"x_min":204,"x_max":733,"o":"m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"̂":{"ha":0,"x_min":165,"x_max":668,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"̌":{"ha":0,"x_min":165,"x_max":668,"o":"m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"̆":{"ha":0,"x_min":194,"x_max":639,"o":"m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"̊":{"ha":0,"x_min":250,"x_max":583,"o":"m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"̃":{"ha":0,"x_min":194,"x_max":639,"o":"m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"̄":{"ha":0,"x_min":194,"x_max":639,"o":"m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"̉":{"ha":0,"x_min":292,"x_max":556,"o":"m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"̏":{"ha":0,"x_min":100,"x_max":629,"o":"m 381 896 l 260 896 l 100 1090 l 228 1090 l 381 896 m 629 896 l 508 896 l 349 1090 l 476 1090 l 629 896 z "},"̒":{"ha":0,"x_min":292,"x_max":576,"o":"m 576 1222 l 465 896 l 292 896 l 472 1222 l 576 1222 z "},"̛":{"ha":0,"x_min":-133,"x_max":56,"o":"m -133 674 l -133 764 l -97 764 q -61 776 -74 764 q -49 813 -49 789 l -49 917 l 56 917 l 56 806 q 15 710 56 746 q -90 674 -25 674 l -133 674 z "},"̣":{"ha":0,"x_min":318,"x_max":515,"o":"m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"̥":{"ha":0,"x_min":250,"x_max":583,"o":"m 417 -347 q 296 -309 342 -347 q 250 -208 250 -271 q 296 -108 250 -146 q 417 -69 342 -69 q 538 -108 492 -69 q 583 -208 583 -146 q 538 -309 583 -271 q 417 -347 492 -347 m 415 -276 q 477 -258 454 -276 q 500 -208 500 -239 q 478 -156 500 -172 q 415 -139 456 -139 q 356 -158 379 -139 q 333 -208 333 -176 q 356 -258 333 -239 q 415 -276 379 -276 z "},"̦":{"ha":0,"x_min":264,"x_max":542,"o":"m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"̧":{"ha":0,"x_min":285,"x_max":569,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 z "},"̨":{"ha":0,"x_min":257,"x_max":535,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 z "},"̶":{"ha":0,"x_min":-875,"x_max":42,"o":"m -875 403 l -875 500 l 42 500 l 42 403 l -875 403 z "},"̸":{"ha":0,"x_min":167,"x_max":667,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 z "},"¨":{"ha":833,"x_min":174,"x_max":660,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"˙":{"ha":833,"x_min":318,"x_max":515,"o":"m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"`":{"ha":833,"x_min":253,"x_max":544,"o":"m 413 896 l 253 1090 l 392 1090 l 544 896 l 413 896 z "},"´":{"ha":833,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"˝":{"ha":833,"x_min":204,"x_max":733,"o":"m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ˆ":{"ha":833,"x_min":165,"x_max":668,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ˇ":{"ha":833,"x_min":165,"x_max":668,"o":"m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"˘":{"ha":833,"x_min":194,"x_max":639,"o":"m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"˚":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"˜":{"ha":833,"x_min":194,"x_max":639,"o":"m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"¯":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"¸":{"ha":833,"x_min":285,"x_max":569,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 z "},"˛":{"ha":833,"x_min":257,"x_max":535,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 z "},"΄":{"ha":833,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"΅":{"ha":833,"x_min":174,"x_max":660,"o":"m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 -375 l 125 154 q 156 277 125 215 q 238 376 186 339 l 439 526 q 494 583 474 551 q 514 640 514 614 l 514 876 l 361 876 l 597 1113 l 833 876 l 681 876 l 681 626 q 653 523 681 575 q 581 438 625 471 l 365 278 q 311 215 331 251 q 292 139 292 179 l 292 -375 l 125 -375 m 125 506 l 125 1347 l 292 1347 l 292 629 l 125 506 z "},"":{"ha":833,"x_min":146,"x_max":688,"o":"m 229 -264 l 229 417 l 358 417 l 538 10 q 569 -78 554 -29 q 590 -160 583 -128 l 604 -160 q 600 -126 606 -160 q 589 -48 594 -93 q 583 35 583 -3 l 583 417 l 688 417 l 688 -264 l 560 -264 l 382 143 q 349 231 365 182 q 325 313 333 281 l 311 313 q 326 219 318 275 q 333 118 333 163 l 333 -264 l 229 -264 m 146 556 l 146 1236 l 257 1236 l 257 660 l 564 660 l 564 556 l 146 556 z "},"":{"ha":833,"x_min":69,"x_max":764,"o":"m 153 -111 q 94 -87 118 -111 q 69 -28 69 -62 l 69 575 q 94 634 69 610 q 153 658 118 658 l 167 658 l 167 979 q 200 1103 167 1050 q 290 1186 233 1157 q 417 1215 346 1215 q 547 1185 490 1215 q 635 1101 603 1154 q 667 979 667 1049 l 667 658 l 681 658 q 740 634 715 658 q 764 575 764 610 l 764 -28 q 740 -87 764 -62 q 681 -111 715 -111 l 153 -111 m 354 69 l 478 69 l 478 292 q 529 329 503 301 q 556 404 556 357 q 517 494 556 460 q 417 528 479 528 q 316 494 354 528 q 278 404 278 460 q 303 329 278 357 q 354 292 329 301 l 354 69 m 278 660 l 556 660 l 556 979 q 517 1080 556 1042 q 417 1118 479 1118 q 316 1080 354 1118 q 278 979 278 1042 l 278 660 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -375 l 0 1347 l 833 486 l 0 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -375 l 669 483 l 8 1347 l 164 1347 l 833 486 l 164 -375 l 0 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 -375 l 0 486 l 833 1347 l 833 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 669 -375 l 0 486 l 669 1347 l 825 1347 l 164 483 l 833 -375 l 669 -375 z "}},"familyName":"JetBrains Mono","ascender":1417,"descender":-417,"underlinePosition":-215,"underlineThickness":69,"boundingBox":{"yMin":-417,"xMin":-2410,"yMax":1417,"xMax":1625},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyright 2020 The JetBrains Mono Project Authors (https://github.com/JetBrains/JetBrainsMono)","fontFamily":"JetBrains Mono","fontSubfamily":"Regular","uniqueID":"2.211;JB;JetBrainsMono-Regular","fullName":"JetBrains Mono Regular","version":"Version 2.211","postScriptName":"JetBrainsMono-Regular","trademark":"JetBrains Mono is a trademark of JetBrains s.r.o.","manufacturer":"JetBrains","designer":"Philipp Nurullin, Konstantin Bulenkov","manufacturerURL":"https://www.jetbrains.com","designerURL":"https://www.jetbrains.com","licence":"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL","licenceURL":"https://scripts.sil.org/OFL","unknown1":"JetBrainsMonoRoman","unknown2":"Weight","unknown3":"Thin","unknown4":"ExtraLight","unknown5":"Light","unknown6":"Regular","unknown7":"Medium","unknown8":"Bold","unknown9":"ExtraBold","unknown10":"JetBrainsMonoRoman-Thin","unknown11":"JetBrainsMonoRoman-ExtraLight","unknown12":"JetBrainsMonoRoman-Light","unknown13":"JetBrainsMonoRoman-Regular","unknown14":"JetBrainsMonoRoman-Medium","unknown15":"JetBrainsMonoRoman-Bold","unknown16":"JetBrainsMonoRoman-ExtraBold","unknown17":"Italic","unknown18":"Roman"},"cssFontWeight":"normal","cssFontStyle":"normal"}\');\n\n//# sourceURL=webpack://break-the-blocks-game/./font/JetBrains_Mono_Regular.typeface.json?')}}]);