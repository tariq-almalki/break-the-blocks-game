(self.webpackChunkbreak_the_blocks_game=self.webpackChunkbreak_the_blocks_game||[]).push([[179],{902:function(e,t,n){function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}e=n.nmd(e),function(t){"use strict";var n,r=Object.prototype.hasOwnProperty,a="function"==typeof Symbol&&Symbol.iterator||"@@iterator",l="object"===i(e),o=t.regeneratorRuntime;if(o)l&&(e.exports=o);else{(o=t.regeneratorRuntime=l?e.exports:{}).wrap=p;var s="suspendedStart",u="suspendedYield",h="executing",c="completed",m={},d=x.prototype=f.prototype;v.prototype=d.constructor=x,x.constructor=v,v.displayName="GeneratorFunction",o.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===v||"GeneratorFunction"===(t.displayName||t.name))},o.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,x):e.__proto__=x,e.prototype=Object.create(d),e},o.awrap=function(e){return new _(e)},g(y.prototype),o.async=function(e,t,n,i){var r=new y(p(e,t,n,i));return o.isGeneratorFunction(t)?r:r.next().then((function(e){return e.done?e.value:r.next()}))},g(d),d[a]=function(){return this},d.toString=function(){return"[object Generator]"},o.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},o.values=S,M.prototype={constructor:M,reset:function(e){if(this.prev=0,this.next=0,this.sent=n,this.done=!1,this.delegate=null,this.tryEntries.forEach(w),!e)for(var t in this)"t"===t.charAt(0)&&r.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function n(n,i){return l.type="throw",l.arg=e,t.next=n,!!i}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],l=a.completion;if("root"===a.tryLoc)return n("end");if(a.tryLoc<=this.prev){var o=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(o&&s){if(this.prev<a.catchLoc)return n(a.catchLoc,!0);if(this.prev<a.finallyLoc)return n(a.finallyLoc)}else if(o){if(this.prev<a.catchLoc)return n(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return n(a.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&r.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var a=i;break}}a&&("break"===e||"continue"===e)&&a.tryLoc<=t&&t<=a.finallyLoc&&(a=null);var l=a?a.completion:{};return l.type=e,l.arg=t,a?this.next=a.finallyLoc:this.complete(l),m},complete:function(e,t){if("throw"===e.type)throw e.arg;"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=e.arg,this.next="end"):"normal"===e.type&&t&&(this.next=t)},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),w(n),m}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var r=i.arg;w(n)}return r}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,n){return this.delegate={iterator:S(e),resultName:t,nextLoc:n},m}}}function p(e,t,i,r){var a=Object.create((t||f).prototype),l=new M(r||[]);return a._invoke=function(e,t,i){var r=s;return function(a,l){if(r===h)throw new Error("Generator is already running");if(r===c){if("throw"===a)throw l;return T()}for(;;){var o=i.delegate;if(o){if("return"===a||"throw"===a&&o.iterator[a]===n){i.delegate=null;var d=o.iterator.return;if(d)if("throw"===(p=q(d,o.iterator,l)).type){a="throw",l=p.arg;continue}if("return"===a)continue}var p;if("throw"===(p=q(o.iterator[a],o.iterator,l)).type){i.delegate=null,a="throw",l=p.arg;continue}if(a="next",l=n,!(f=p.arg).done)return r=u,f;i[o.resultName]=f.value,i.next=o.nextLoc,i.delegate=null}if("next"===a)i._sent=l,i.sent=r===u?l:n;else if("throw"===a){if(r===s)throw r=c,l;i.dispatchException(l)&&(a="next",l=n)}else"return"===a&&i.abrupt("return",l);if(r=h,"normal"===(p=q(e,t,i)).type){r=i.done?c:u;var f={value:p.arg,done:i.done};if(p.arg!==m)return f;i.delegate&&"next"===a&&(l=n)}else"throw"===p.type&&(r=c,a="throw",l=p.arg)}}}(e,i,l),a}function q(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function f(){}function v(){}function x(){}function g(e){["next","throw","return"].forEach((function(t){e[t]=function(e){return this._invoke(t,e)}}))}function _(e){this.arg=e}function y(e){function t(t,n){var i=e[t](n),l=i.value;return l instanceof _?Promise.resolve(l.arg).then(r,a):Promise.resolve(l).then((function(e){return i.value=e,i}))}"object"===("undefined"==typeof process?"undefined":i(process))&&process.domain&&(t=process.domain.bind(t));var n,r=t.bind(e,"next"),a=t.bind(e,"throw");t.bind(e,"return");this._invoke=function(e,i){function r(){return t(e,i)}return n=n?n.then(r,r):new Promise((function(e){e(r())}))}}function b(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function w(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function M(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(b,this),this.reset(!0)}function S(e){if(e){var t=e[a];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,l=function t(){for(;++i<e.length;)if(r.call(e,i))return t.value=e[i],t.done=!1,t;return t.value=n,t.done=!0,t};return l.next=l}}return{next:T}}function T(){return{value:n,done:!0}}}("object"===(void 0===n.g?"undefined":i(n.g))?n.g:"object"===("undefined"==typeof window?"undefined":i(window))?window:"object"===("undefined"==typeof self?"undefined":i(self))?self:this)},736:(e,t,n)=>{"use strict";function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}var r;function a(e,t,n,i,r,a,l){try{var o=e[a](l),s=o.value}catch(e){return void n(e)}o.done?t(s):Promise.resolve(s).then(i,r)}function l(e){return function(){var t=this,n=arguments;return new Promise((function(i,r){var l=e.apply(t,n);function o(e){a(l,i,r,o,s,"next",e)}function s(e){a(l,i,r,o,s,"throw",e)}o(void 0)}))}}function o(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var i,r,a=[],l=!0,o=!1;try{for(n=n.call(e);!(l=(i=n.next()).done)&&(a.push(i.value),!t||a.length!==t);l=!0);}catch(e){o=!0,r=e}finally{try{l||null==n.return||n.return()}finally{if(o)throw r}}return a}(e,t)||s(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,i=new Array(t);n<t;n++)i[n]=e[n];return i}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var i=c(e,t);if(i){var r=Object.getOwnPropertyDescriptor(i,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},h.apply(this,arguments)}function c(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}function m(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function d(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}function q(e,t){return q=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},q(e,t)}function f(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=g(e);if(t){var r=g(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return v(this,n)}}function v(e,t){if(t&&("object"===i(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return x(e)}function x(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function _(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function y(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function b(e,t,n){return t&&y(e.prototype,t),n&&y(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}
/**
 * @license
 * Copyright 2010-2021 Three.js Authors
 * SPDX-License-Identifier: MIT
 */n.d(t,{$V:()=>Mu,CP7:()=>Ya,DvJ:()=>Vn,FM8:()=>Ee,Ilk:()=>un,JOQ:()=>ri,Kj0:()=>Hn,M8C:()=>Te,O7d:()=>Zo,Pa4:()=>Fe,QmN:()=>M,RsA:()=>w,SUY:()=>nu,T_1:()=>Nu,UY4:()=>Hl,ZAu:()=>Ha,_fP:()=>Be,a$l:()=>fn,aNw:()=>Ts,cPb:()=>Jn,dpR:()=>Ls,hH6:()=>zs,iMs:()=>yu,kaV:()=>ls,pBf:()=>me,u9r:()=>Mn,woe:()=>Xl,xo$:()=>Qo,xsS:()=>Ka,y8_:()=>Iu,yGw:()=>vt});for(var w={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},M={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},S=100,T=301,E=302,z=303,k=304,A=306,L=307,R=1e3,P=1001,C=1002,D=1003,I=1004,N=1005,O=1006,B=1008,F=1009,U=1012,H=1014,G=1015,V=1016,W=1020,j=1022,X=1023,Y=1026,Z=1027,J=2300,K=2301,Q=2302,$=2400,ee=2401,te=2402,ne=2500,ie=2501,re=3e3,ae=3001,le=3007,oe=3002,se=7680,ue=35044,he=35048,ce="300 es",me=function(){function e(){_(this,e)}return b(e,[{key:"addEventListener",value:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}},{key:"hasEventListener",value:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}},{key:"removeEventListener",value:function(e,t){if(void 0!==this._listeners){var n=this._listeners[e];if(void 0!==n){var i=n.indexOf(t);-1!==i&&n.splice(i,1)}}}},{key:"dispatchEvent",value:function(e){if(void 0!==this._listeners){var t=this._listeners[e.type];if(void 0!==t){e.target=this;for(var n=t.slice(0),i=0,r=n.length;i<r;i++)n[i].call(this,e);e.target=null}}}}]),e}(),de=1234567,pe=Math.PI/180,qe=180/Math.PI,fe=[],ve=0;ve<256;ve++)fe[ve]=(ve<16?"0":"")+ve.toString(16);var xe="undefined"!=typeof crypto&&"randomUUID"in crypto;function ge(){if(xe)return crypto.randomUUID().toUpperCase();var e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(fe[255&e]+fe[e>>8&255]+fe[e>>16&255]+fe[e>>24&255]+"-"+fe[255&t]+fe[t>>8&255]+"-"+fe[t>>16&15|64]+fe[t>>24&255]+"-"+fe[63&n|128]+fe[n>>8&255]+"-"+fe[n>>16&255]+fe[n>>24&255]+fe[255&i]+fe[i>>8&255]+fe[i>>16&255]+fe[i>>24&255]).toUpperCase()}function _e(e,t,n){return Math.max(t,Math.min(n,e))}function ye(e,t){return(e%t+t)%t}function be(e,t,n){return(1-n)*e+n*t}function we(e){return 0==(e&e-1)&&0!==e}function Me(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))}function Se(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}var Te=Object.freeze({__proto__:null,DEG2RAD:pe,RAD2DEG:qe,generateUUID:ge,clamp:_e,euclideanModulo:ye,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:be,damp:function(e,t,n,i){return be(e,t,1-Math.exp(-n*i))},pingpong:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return t-Math.abs(ye(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){return void 0!==e&&(de=e%2147483647),((de=16807*de%2147483647)-1)/2147483646},degToRad:function(e){return e*pe},radToDeg:function(e){return e*qe},isPowerOfTwo:we,ceilPowerOfTwo:Me,floorPowerOfTwo:Se,setQuaternionFromProperEuler:function(e,t,n,i,r){var a=Math.cos,l=Math.sin,o=a(n/2),s=l(n/2),u=a((t+i)/2),h=l((t+i)/2),c=a((t-i)/2),m=l((t-i)/2),d=a((i-t)/2),p=l((i-t)/2);switch(r){case"XYX":e.set(o*h,s*c,s*m,o*u);break;case"YZY":e.set(s*m,o*h,s*c,o*u);break;case"ZXZ":e.set(s*c,s*m,o*h,o*u);break;case"XZX":e.set(o*h,s*p,s*d,o*u);break;case"YXY":e.set(s*d,o*h,s*p,o*u);break;case"ZYZ":e.set(s*p,s*d,o*h,o*u);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}}}),Ee=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_(this,t),this.x=e,this.y=n}return b(t,[{key:"width",get:function(){return this.x},set:function(e){this.x=e}},{key:"height",get:function(){return this.y},set:function(e){this.y=e}},{key:"set",value:function(e,t){return this.x=e,this.y=t,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y}},{key:"cross",value:function(e){return this.x*e.y-this.y*e.x}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"angle",value:function(){var e=Math.atan2(-this.y,-this.x)+Math.PI;return e}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}},{key:"rotateAround",value:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this}},{key:Symbol.iterator,value:regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:case"end":return e.stop()}}),e,this)}))}]),t}();Ee.prototype.isVector2=!0;var ze=function(){function e(){_(this,e),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}return b(e,[{key:"set",value:function(e,t,n,i,r,a,l,o,s){var u=this.elements;return u[0]=e,u[1]=i,u[2]=l,u[3]=t,u[4]=r,u[5]=o,u[6]=n,u[7]=a,u[8]=s,this}},{key:"identity",value:function(){return this.set(1,0,0,0,1,0,0,0,1),this}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}},{key:"setFromMatrix4",value:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}},{key:"multiply",value:function(e){return this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[3],o=n[6],s=n[1],u=n[4],h=n[7],c=n[2],m=n[5],d=n[8],p=i[0],q=i[3],f=i[6],v=i[1],x=i[4],g=i[7],_=i[2],y=i[5],b=i[8];return r[0]=a*p+l*v+o*_,r[3]=a*q+l*x+o*y,r[6]=a*f+l*g+o*b,r[1]=s*p+u*v+h*_,r[4]=s*q+u*x+h*y,r[7]=s*f+u*g+h*b,r[2]=c*p+m*v+d*_,r[5]=c*q+m*x+d*y,r[8]=c*f+m*g+d*b,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],u=e[8];return t*a*u-t*l*s-n*r*u+n*l*o+i*r*s-i*a*o}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],u=e[8],h=u*a-l*s,c=l*o-u*r,m=s*r-a*o,d=t*h+n*c+i*m;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);var p=1/d;return e[0]=h*p,e[1]=(i*s-u*n)*p,e[2]=(l*n-i*a)*p,e[3]=c*p,e[4]=(u*t-i*o)*p,e[5]=(i*r-l*t)*p,e[6]=m*p,e[7]=(n*o-s*t)*p,e[8]=(a*t-n*r)*p,this}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}},{key:"getNormalMatrix",value:function(e){return this.setFromMatrix4(e).invert().transpose()}},{key:"transposeIntoArray",value:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}},{key:"setUvTransform",value:function(e,t,n,i,r,a,l){var o=Math.cos(r),s=Math.sin(r);return this.set(n*o,n*s,-n*(o*a+s*l)+a+e,-i*s,i*o,-i*(-s*a+o*l)+l+t,0,0,1),this}},{key:"scale",value:function(e,t){var n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}},{key:"rotate",value:function(e){var t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],l=i[6],o=i[1],s=i[4],u=i[7];return i[0]=t*r+n*o,i[3]=t*a+n*s,i[6]=t*l+n*u,i[1]=-n*r+t*o,i[4]=-n*a+t*s,i[7]=-n*l+t*u,this}},{key:"translate",value:function(e,t){var n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<9;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}},{key:"clone",value:function(){return(new this.constructor).fromArray(this.elements)}}]),e}();function ke(e){if(0===e.length)return-1/0;for(var t=e[0],n=1,i=e.length;n<i;++n)e[n]>t&&(t=e[n]);return t}ze.prototype.isMatrix3=!0;var Ae;Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;function Le(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}var Re=function(){function e(){_(this,e)}return b(e,null,[{key:"getDataURL",value:function(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;var t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Ae&&(Ae=Le("canvas")),Ae.width=e.width,Ae.height=e.height;var n=Ae.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ae}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}}]),e}(),Pe=0,Ce=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:n.DEFAULT_IMAGE,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n.DEFAULT_MAPPING,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:P,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:P,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:O,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:B,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:X,h=arguments.length>7&&void 0!==arguments[7]?arguments[7]:F,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:1,m=arguments.length>9&&void 0!==arguments[9]?arguments[9]:re;return _(this,n),e=t.call(this),Object.defineProperty(x(e),"id",{value:Pe++}),e.uuid=ge(),e.name="",e.image=i,e.mipmaps=[],e.mapping=r,e.wrapS=a,e.wrapT=l,e.magFilter=o,e.minFilter=s,e.anisotropy=c,e.format=u,e.internalFormat=null,e.type=h,e.offset=new Ee(0,0),e.repeat=new Ee(1,1),e.center=new Ee(0,0),e.rotation=0,e.matrixAutoUpdate=!0,e.matrix=new ze,e.generateMipmaps=!0,e.premultiplyAlpha=!1,e.flipY=!0,e.unpackAlignment=4,e.encoding=m,e.version=0,e.onUpdate=null,e.isRenderTargetTexture=!1,e}return b(n,[{key:"updateMatrix",value:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.name=e.name,this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this}},{key:"toJSON",value:function(e){var t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){var i=this.image;if(void 0===i.uuid&&(i.uuid=ge()),!t&&void 0===e.images[i.uuid]){var r;if(Array.isArray(i)){r=[];for(var a=0,l=i.length;a<l;a++)i[a].isDataTexture?r.push(De(i[a].image)):r.push(De(i[a]))}else r=De(i);e.images[i.uuid]={uuid:i.uuid,url:r}}n.image=i.uuid}return t||(e.textures[this.uuid]=n),n}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"transformUv",value:function(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case R:e.x=e.x-Math.floor(e.x);break;case P:e.x=e.x<0?0:1;break;case C:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case R:e.y=e.y-Math.floor(e.y);break;case P:e.y=e.y<0?0:1;break;case C:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(me);function De(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Re.getDataURL(e):e.data?{data:Array.prototype.slice.call(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Ce.DEFAULT_IMAGE=void 0,Ce.DEFAULT_MAPPING=300,Ce.prototype.isTexture=!0;var Ie=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;_(this,t),this.x=e,this.y=n,this.z=i,this.w=r}return b(t,[{key:"width",get:function(){return this.z},set:function(e){this.z=e}},{key:"height",get:function(){return this.w},set:function(e){this.w=e}},{key:"set",value:function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setW",value:function(e){return this.w=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z,this.w)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}},{key:"multiply",value:function(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"setAxisAngleFromQuaternion",value:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}},{key:"setAxisAngleFromRotationMatrix",value:function(e){var t,n,i,r,a=.01,l=.1,o=e.elements,s=o[0],u=o[4],h=o[8],c=o[1],m=o[5],d=o[9],p=o[2],q=o[6],f=o[10];if(Math.abs(u-c)<a&&Math.abs(h-p)<a&&Math.abs(d-q)<a){if(Math.abs(u+c)<l&&Math.abs(h+p)<l&&Math.abs(d+q)<l&&Math.abs(s+m+f-3)<l)return this.set(1,0,0,0),this;t=Math.PI;var v=(s+1)/2,x=(m+1)/2,g=(f+1)/2,_=(u+c)/4,y=(h+p)/4,b=(d+q)/4;return v>x&&v>g?v<a?(n=0,i=.707106781,r=.707106781):(i=_/(n=Math.sqrt(v)),r=y/n):x>g?x<a?(n=.707106781,i=0,r=.707106781):(n=_/(i=Math.sqrt(x)),r=b/i):g<a?(n=.707106781,i=.707106781,r=0):(n=y/(r=Math.sqrt(g)),i=b/r),this.set(n,i,r,t),this}var w=Math.sqrt((q-d)*(q-d)+(h-p)*(h-p)+(c-u)*(c-u));return Math.abs(w)<.001&&(w=1),this.x=(q-d)/w,this.y=(h-p)/w,this.z=(c-u)/w,this.w=Math.acos((s+m+f-1)/2),this}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}},{key:Symbol.iterator,value:regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:return e.next=8,this.w;case 8:case"end":return e.stop()}}),e,this)}))}]),t}();Ie.prototype.isVector4=!0;var Ne=function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};return _(this,n),(r=t.call(this)).width=e,r.height=i,r.depth=1,r.scissor=new Ie(0,0,e,i),r.scissorTest=!1,r.viewport=new Ie(0,0,e,i),r.texture=new Ce(void 0,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type,a.anisotropy,a.encoding),r.texture.isRenderTargetTexture=!0,r.texture.image={width:e,height:i,depth:1},r.texture.generateMipmaps=void 0!==a.generateMipmaps&&a.generateMipmaps,r.texture.internalFormat=void 0!==a.internalFormat?a.internalFormat:null,r.texture.minFilter=void 0!==a.minFilter?a.minFilter:O,r.depthBuffer=void 0===a.depthBuffer||a.depthBuffer,r.stencilBuffer=void 0!==a.stencilBuffer&&a.stencilBuffer,r.depthTexture=void 0!==a.depthTexture?a.depthTexture:null,r}return b(n,[{key:"setTexture",value:function(e){e.image={width:this.width,height:this.height,depth:this.depth},this.texture=e}},{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.image=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?m(Object(n),!0).forEach((function(t){d(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):m(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},this.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(me);Ne.prototype.isWebGLRenderTarget=!0,function(e){p(n,e);var t=f(n);function n(e,i,r){var a;_(this,n);var l=(a=t.call(this,e,i)).texture;a.texture=[];for(var o=0;o<r;o++)a.texture[o]=l.clone();return a}return b(n,[{key:"setSize",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(var i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}},{key:"copy",value:function(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(var t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}]),n}(Ne).prototype.isWebGLMultipleRenderTargets=!0;var Oe=function(e){p(n,e);var t=f(n);function n(e,i,r){var a;return _(this,n),(a=t.call(this,e,i,r)).samples=4,a}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.samples=e.samples,this}}]),n}(Ne);Oe.prototype.isWebGLMultisampleRenderTarget=!0;var Be=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;_(this,e),this._x=t,this._y=n,this._z=i,this._w=r}return b(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"w",get:function(){return this._w},set:function(e){this._w=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._w)}},{key:"copy",value:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}},{key:"setFromEuler",value:function(e,t){if(!e||!e.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=e._x,i=e._y,r=e._z,a=e._order,l=Math.cos,o=Math.sin,s=l(n/2),u=l(i/2),h=l(r/2),c=o(n/2),m=o(i/2),d=o(r/2);switch(a){case"XYZ":this._x=c*u*h+s*m*d,this._y=s*m*h-c*u*d,this._z=s*u*d+c*m*h,this._w=s*u*h-c*m*d;break;case"YXZ":this._x=c*u*h+s*m*d,this._y=s*m*h-c*u*d,this._z=s*u*d-c*m*h,this._w=s*u*h+c*m*d;break;case"ZXY":this._x=c*u*h-s*m*d,this._y=s*m*h+c*u*d,this._z=s*u*d+c*m*h,this._w=s*u*h-c*m*d;break;case"ZYX":this._x=c*u*h-s*m*d,this._y=s*m*h+c*u*d,this._z=s*u*d-c*m*h,this._w=s*u*h+c*m*d;break;case"YZX":this._x=c*u*h+s*m*d,this._y=s*m*h+c*u*d,this._z=s*u*d-c*m*h,this._w=s*u*h-c*m*d;break;case"XZY":this._x=c*u*h-s*m*d,this._y=s*m*h-c*u*d,this._z=s*u*d+c*m*h,this._w=s*u*h+c*m*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}},{key:"setFromAxisAngle",value:function(e,t){var n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],l=t[5],o=t[9],s=t[2],u=t[6],h=t[10],c=n+l+h;if(c>0){var m=.5/Math.sqrt(c+1);this._w=.25/m,this._x=(u-o)*m,this._y=(r-s)*m,this._z=(a-i)*m}else if(n>l&&n>h){var d=2*Math.sqrt(1+n-l-h);this._w=(u-o)/d,this._x=.25*d,this._y=(i+a)/d,this._z=(r+s)/d}else if(l>h){var p=2*Math.sqrt(1+l-n-h);this._w=(r-s)/p,this._x=(i+a)/p,this._y=.25*p,this._z=(o+u)/p}else{var q=2*Math.sqrt(1+h-n-l);this._w=(a-i)/q,this._x=(r+s)/q,this._y=(o+u)/q,this._z=.25*q}return this._onChangeCallback(),this}},{key:"setFromUnitVectors",value:function(e,t){var n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}},{key:"angleTo",value:function(e){return 2*Math.acos(Math.abs(_e(this.dot(e),-1,1)))}},{key:"rotateTowards",value:function(e,t){var n=this.angleTo(e);if(0===n)return this;var i=Math.min(1,t/n);return this.slerp(e,i),this}},{key:"identity",value:function(){return this.set(0,0,0,1)}},{key:"invert",value:function(){return this.conjugate()}},{key:"conjugate",value:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}},{key:"dot",value:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}},{key:"lengthSq",value:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}},{key:"length",value:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}},{key:"normalize",value:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}},{key:"premultiply",value:function(e){return this.multiplyQuaternions(e,this)}},{key:"multiplyQuaternions",value:function(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,l=t._x,o=t._y,s=t._z,u=t._w;return this._x=n*u+a*l+i*s-r*o,this._y=i*u+a*o+r*l-n*s,this._z=r*u+a*s+n*o-i*l,this._w=a*u-n*l-i*o-r*s,this._onChangeCallback(),this}},{key:"slerp",value:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,i=this._y,r=this._z,a=this._w,l=a*e._w+n*e._x+i*e._y+r*e._z;if(l<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,l=-l):this.copy(e),l>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;var o=1-l*l;if(o<=Number.EPSILON){var s=1-t;return this._w=s*a+t*this._w,this._x=s*n+t*this._x,this._y=s*i+t*this._y,this._z=s*r+t*this._z,this.normalize(),this._onChangeCallback(),this}var u=Math.sqrt(o),h=Math.atan2(u,l),c=Math.sin((1-t)*h)/u,m=Math.sin(t*h)/u;return this._w=a*c+this._w*m,this._x=n*c+this._x*m,this._y=i*c+this._y*m,this._z=r*c+this._z*m,this._onChangeCallback(),this}},{key:"slerpQuaternions",value:function(e,t,n){this.copy(e).slerp(t,n)}},{key:"random",value:function(){var e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}},{key:"fromBufferAttribute",value:function(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}}],[{key:"slerp",value:function(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}},{key:"slerpFlat",value:function(e,t,n,i,r,a,l){var o=n[i+0],s=n[i+1],u=n[i+2],h=n[i+3],c=r[a+0],m=r[a+1],d=r[a+2],p=r[a+3];if(0===l)return e[t+0]=o,e[t+1]=s,e[t+2]=u,void(e[t+3]=h);if(1===l)return e[t+0]=c,e[t+1]=m,e[t+2]=d,void(e[t+3]=p);if(h!==p||o!==c||s!==m||u!==d){var q=1-l,f=o*c+s*m+u*d+h*p,v=f>=0?1:-1,x=1-f*f;if(x>Number.EPSILON){var g=Math.sqrt(x),_=Math.atan2(g,f*v);q=Math.sin(q*_)/g,l=Math.sin(l*_)/g}var y=l*v;if(o=o*q+c*y,s=s*q+m*y,u=u*q+d*y,h=h*q+p*y,q===1-l){var b=1/Math.sqrt(o*o+s*s+u*u+h*h);o*=b,s*=b,u*=b,h*=b}}e[t]=o,e[t+1]=s,e[t+2]=u,e[t+3]=h}},{key:"multiplyQuaternionsFlat",value:function(e,t,n,i,r,a){var l=n[i],o=n[i+1],s=n[i+2],u=n[i+3],h=r[a],c=r[a+1],m=r[a+2],d=r[a+3];return e[t]=l*d+u*h+o*m-s*c,e[t+1]=o*d+u*c+s*h-l*m,e[t+2]=s*d+u*m+l*c-o*h,e[t+3]=u*d-l*h-o*c-s*m,e}}]),e}();Be.prototype.isQuaternion=!0;var Fe=function(e){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;_(this,t),this.x=e,this.y=n,this.z=i}return b(t,[{key:"set",value:function(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}},{key:"setScalar",value:function(e){return this.x=e,this.y=e,this.z=e,this}},{key:"setX",value:function(e){return this.x=e,this}},{key:"setY",value:function(e){return this.y=e,this}},{key:"setZ",value:function(e){return this.z=e,this}},{key:"setComponent",value:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}},{key:"getComponent",value:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}},{key:"clone",value:function(){return new this.constructor(this.x,this.y,this.z)}},{key:"copy",value:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}},{key:"add",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}},{key:"addScalar",value:function(e){return this.x+=e,this.y+=e,this.z+=e,this}},{key:"addVectors",value:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}},{key:"addScaledVector",value:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}},{key:"sub",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}},{key:"subScalar",value:function(e){return this.x-=e,this.y-=e,this.z-=e,this}},{key:"subVectors",value:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}},{key:"multiplyScalar",value:function(e){return this.x*=e,this.y*=e,this.z*=e,this}},{key:"multiplyVectors",value:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}},{key:"applyEuler",value:function(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(He.setFromEuler(e))}},{key:"applyAxisAngle",value:function(e,t){return this.applyQuaternion(He.setFromAxisAngle(e,t))}},{key:"applyMatrix3",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}},{key:"applyNormalMatrix",value:function(e){return this.applyMatrix3(e).normalize()}},{key:"applyMatrix4",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}},{key:"applyQuaternion",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,l=e.z,o=e.w,s=o*t+a*i-l*n,u=o*n+l*t-r*i,h=o*i+r*n-a*t,c=-r*t-a*n-l*i;return this.x=s*o+c*-r+u*-l-h*-a,this.y=u*o+c*-a+h*-r-s*-l,this.z=h*o+c*-l+s*-a-u*-r,this}},{key:"project",value:function(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}},{key:"unproject",value:function(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}},{key:"transformDirection",value:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}},{key:"divide",value:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}},{key:"divideScalar",value:function(e){return this.multiplyScalar(1/e)}},{key:"min",value:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}},{key:"max",value:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}},{key:"clamp",value:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}},{key:"clampScalar",value:function(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}},{key:"clampLength",value:function(e,t){var n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}},{key:"floor",value:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}},{key:"ceil",value:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}},{key:"round",value:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}},{key:"roundToZero",value:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}},{key:"negate",value:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}},{key:"dot",value:function(e){return this.x*e.x+this.y*e.y+this.z*e.z}},{key:"lengthSq",value:function(){return this.x*this.x+this.y*this.y+this.z*this.z}},{key:"length",value:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}},{key:"manhattanLength",value:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}},{key:"normalize",value:function(){return this.divideScalar(this.length()||1)}},{key:"setLength",value:function(e){return this.normalize().multiplyScalar(e)}},{key:"lerp",value:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}},{key:"lerpVectors",value:function(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}},{key:"cross",value:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}},{key:"crossVectors",value:function(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,l=t.y,o=t.z;return this.x=i*o-r*l,this.y=r*a-n*o,this.z=n*l-i*a,this}},{key:"projectOnVector",value:function(e){var t=e.lengthSq();if(0===t)return this.set(0,0,0);var n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}},{key:"projectOnPlane",value:function(e){return Ue.copy(this).projectOnVector(e),this.sub(Ue)}},{key:"reflect",value:function(e){return this.sub(Ue.copy(e).multiplyScalar(2*this.dot(e)))}},{key:"angleTo",value:function(e){var t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;var n=this.dot(e)/t;return Math.acos(_e(n,-1,1))}},{key:"distanceTo",value:function(e){return Math.sqrt(this.distanceToSquared(e))}},{key:"distanceToSquared",value:function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}},{key:"manhattanDistanceTo",value:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}},{key:"setFromSpherical",value:function(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}},{key:"setFromSphericalCoords",value:function(e,t,n){var i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}},{key:"setFromCylindrical",value:function(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}},{key:"setFromCylindricalCoords",value:function(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}},{key:"setFromMatrixPosition",value:function(e){var t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}},{key:"setFromMatrixScale",value:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}},{key:"setFromMatrixColumn",value:function(e,t){return this.fromArray(e.elements,4*t)}},{key:"setFromMatrix3Column",value:function(e,t){return this.fromArray(e.elements,3*t)}},{key:"equals",value:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}},{key:"fromBufferAttribute",value:function(e,t,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}},{key:"random",value:function(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}},{key:"randomDirection",value:function(){var e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-Math.pow(e,2));return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}},{key:Symbol.iterator,value:regeneratorRuntime.mark((function e(){return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,this.x;case 2:return e.next=4,this.y;case 4:return e.next=6,this.z;case 6:case"end":return e.stop()}}),e,this)}))}]),t}();Fe.prototype.isVector3=!0;var Ue=new Fe,He=new Be,Ge=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe(1/0,1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe(-1/0,-1/0,-1/0);_(this,e),this.min=t,this.max=n}return b(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromArray",value:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,l=-1/0,o=0,s=e.length;o<s;o+=3){var u=e[o],h=e[o+1],c=e[o+2];u<t&&(t=u),h<n&&(n=h),c<i&&(i=c),u>r&&(r=u),h>a&&(a=h),c>l&&(l=c)}return this.min.set(t,n,i),this.max.set(r,a,l),this}},{key:"setFromBufferAttribute",value:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,l=-1/0,o=0,s=e.count;o<s;o++){var u=e.getX(o),h=e.getY(o),c=e.getZ(o);u<t&&(t=u),h<n&&(n=h),c<i&&(i=c),u>r&&(r=u),h>a&&(a=h),c>l&&(l=c)}return this.min.set(t,n,i),this.max.set(r,a,l),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=We.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"setFromObject",value:function(e){return this.makeEmpty(),this.expandByObject(e)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"expandByObject",value:function(e){e.updateWorldMatrix(!1,!1);var t=e.geometry;void 0!==t&&(null===t.boundingBox&&t.computeBoundingBox(),je.copy(t.boundingBox),je.applyMatrix4(e.matrixWorld),this.union(je));for(var n=e.children,i=0,r=n.length;i<r;i++)this.expandByObject(n[i]);return this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}},{key:"intersectsSphere",value:function(e){return this.clampPoint(e.center,We),We.distanceToSquared(e.center)<=e.radius*e.radius}},{key:"intersectsPlane",value:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}},{key:"intersectsTriangle",value:function(e){if(this.isEmpty())return!1;this.getCenter($e),et.subVectors(this.max,$e),Xe.subVectors(e.a,$e),Ye.subVectors(e.b,$e),Ze.subVectors(e.c,$e),Je.subVectors(Ye,Xe),Ke.subVectors(Ze,Ye),Qe.subVectors(Xe,Ze);var t=[0,-Je.z,Je.y,0,-Ke.z,Ke.y,0,-Qe.z,Qe.y,Je.z,0,-Je.x,Ke.z,0,-Ke.x,Qe.z,0,-Qe.x,-Je.y,Je.x,0,-Ke.y,Ke.x,0,-Qe.y,Qe.x,0];return!!it(t,Xe,Ye,Ze,et)&&(!!it(t=[1,0,0,0,1,0,0,0,1],Xe,Ye,Ze,et)&&(tt.crossVectors(Je,Ke),it(t=[tt.x,tt.y,tt.z],Xe,Ye,Ze,et)))}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return We.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"getBoundingSphere",value:function(e){return this.getCenter(e.center),e.radius=.5*this.getSize(We).length(),e}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"applyMatrix4",value:function(e){return this.isEmpty()||(Ve[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ve[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ve[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ve[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ve[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ve[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ve[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ve[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ve)),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}();Ge.prototype.isBox3=!0;var Ve=[new Fe,new Fe,new Fe,new Fe,new Fe,new Fe,new Fe,new Fe],We=new Fe,je=new Ge,Xe=new Fe,Ye=new Fe,Ze=new Fe,Je=new Fe,Ke=new Fe,Qe=new Fe,$e=new Fe,et=new Fe,tt=new Fe,nt=new Fe;function it(e,t,n,i,r){for(var a=0,l=e.length-3;a<=l;a+=3){nt.fromArray(e,a);var o=r.x*Math.abs(nt.x)+r.y*Math.abs(nt.y)+r.z*Math.abs(nt.z),s=t.dot(nt),u=n.dot(nt),h=i.dot(nt);if(Math.max(-Math.max(s,u,h),Math.min(s,u,h))>o)return!1}return!0}var rt=new Ge,at=new Fe,lt=new Fe,ot=new Fe,st=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1;_(this,e),this.center=t,this.radius=n}return b(e,[{key:"set",value:function(e,t){return this.center.copy(e),this.radius=t,this}},{key:"setFromPoints",value:function(e,t){var n=this.center;void 0!==t?n.copy(t):rt.setFromPoints(e).getCenter(n);for(var i=0,r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}},{key:"copy",value:function(e){return this.center.copy(e.center),this.radius=e.radius,this}},{key:"isEmpty",value:function(){return this.radius<0}},{key:"makeEmpty",value:function(){return this.center.set(0,0,0),this.radius=-1,this}},{key:"containsPoint",value:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}},{key:"distanceToPoint",value:function(e){return e.distanceTo(this.center)-this.radius}},{key:"intersectsSphere",value:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}},{key:"intersectsBox",value:function(e){return e.intersectsSphere(this)}},{key:"intersectsPlane",value:function(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}},{key:"clampPoint",value:function(e,t){var n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}},{key:"getBoundingBox",value:function(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}},{key:"applyMatrix4",value:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}},{key:"translate",value:function(e){return this.center.add(e),this}},{key:"expandByPoint",value:function(e){ot.subVectors(e,this.center);var t=ot.lengthSq();if(t>this.radius*this.radius){var n=Math.sqrt(t),i=.5*(n-this.radius);this.center.add(ot.multiplyScalar(i/n)),this.radius+=i}return this}},{key:"union",value:function(e){return lt.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(at.copy(e.center).add(lt)),this.expandByPoint(at.copy(e.center).sub(lt)),this}},{key:"equals",value:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),ut=new Fe,ht=new Fe,ct=new Fe,mt=new Fe,dt=new Fe,pt=new Fe,qt=new Fe,ft=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe(0,0,-1);_(this,e),this.origin=t,this.direction=n}return b(e,[{key:"set",value:function(e,t){return this.origin.copy(e),this.direction.copy(t),this}},{key:"copy",value:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}},{key:"at",value:function(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}},{key:"lookAt",value:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this}},{key:"recast",value:function(e){return this.origin.copy(this.at(e,ut)),this}},{key:"closestPointToPoint",value:function(e,t){t.subVectors(e,this.origin);var n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}},{key:"distanceToPoint",value:function(e){return Math.sqrt(this.distanceSqToPoint(e))}},{key:"distanceSqToPoint",value:function(e){var t=ut.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ut.copy(this.direction).multiplyScalar(t).add(this.origin),ut.distanceToSquared(e))}},{key:"distanceSqToSegment",value:function(e,t,n,i){ht.copy(e).add(t).multiplyScalar(.5),ct.copy(t).sub(e).normalize(),mt.copy(this.origin).sub(ht);var r,a,l,o,s=.5*e.distanceTo(t),u=-this.direction.dot(ct),h=mt.dot(this.direction),c=-mt.dot(ct),m=mt.lengthSq(),d=Math.abs(1-u*u);if(d>0)if(a=u*h-c,o=s*d,(r=u*c-h)>=0)if(a>=-o)if(a<=o){var p=1/d;l=(r*=p)*(r+u*(a*=p)+2*h)+a*(u*r+a+2*c)+m}else a=s,l=-(r=Math.max(0,-(u*a+h)))*r+a*(a+2*c)+m;else a=-s,l=-(r=Math.max(0,-(u*a+h)))*r+a*(a+2*c)+m;else a<=-o?l=-(r=Math.max(0,-(-u*s+h)))*r+(a=r>0?-s:Math.min(Math.max(-s,-c),s))*(a+2*c)+m:a<=o?(r=0,l=(a=Math.min(Math.max(-s,-c),s))*(a+2*c)+m):l=-(r=Math.max(0,-(u*s+h)))*r+(a=r>0?s:Math.min(Math.max(-s,-c),s))*(a+2*c)+m;else a=u>0?-s:s,l=-(r=Math.max(0,-(u*a+h)))*r+a*(a+2*c)+m;return n&&n.copy(this.direction).multiplyScalar(r).add(this.origin),i&&i.copy(ct).multiplyScalar(a).add(ht),l}},{key:"intersectSphere",value:function(e,t){ut.subVectors(e.center,this.origin);var n=ut.dot(this.direction),i=ut.dot(ut)-n*n,r=e.radius*e.radius;if(i>r)return null;var a=Math.sqrt(r-i),l=n-a,o=n+a;return l<0&&o<0?null:l<0?this.at(o,t):this.at(l,t)}},{key:"intersectsSphere",value:function(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}},{key:"distanceToPlane",value:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}},{key:"intersectPlane",value:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}},{key:"intersectsPlane",value:function(e){var t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}},{key:"intersectBox",value:function(e,t){var n,i,r,a,l,o,s=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,c=this.origin;return s>=0?(n=(e.min.x-c.x)*s,i=(e.max.x-c.x)*s):(n=(e.max.x-c.x)*s,i=(e.min.x-c.x)*s),u>=0?(r=(e.min.y-c.y)*u,a=(e.max.y-c.y)*u):(r=(e.max.y-c.y)*u,a=(e.min.y-c.y)*u),n>a||r>i?null:((r>n||n!=n)&&(n=r),(a<i||i!=i)&&(i=a),h>=0?(l=(e.min.z-c.z)*h,o=(e.max.z-c.z)*h):(l=(e.max.z-c.z)*h,o=(e.min.z-c.z)*h),n>o||l>i?null:((l>n||n!=n)&&(n=l),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,t)))}},{key:"intersectsBox",value:function(e){return null!==this.intersectBox(e,ut)}},{key:"intersectTriangle",value:function(e,t,n,i,r){dt.subVectors(t,e),pt.subVectors(n,e),qt.crossVectors(dt,pt);var a,l=this.direction.dot(qt);if(l>0){if(i)return null;a=1}else{if(!(l<0))return null;a=-1,l=-l}mt.subVectors(this.origin,e);var o=a*this.direction.dot(pt.crossVectors(mt,pt));if(o<0)return null;var s=a*this.direction.dot(dt.cross(mt));if(s<0)return null;if(o+s>l)return null;var u=-a*mt.dot(qt);return u<0?null:this.at(u/l,r)}},{key:"applyMatrix4",value:function(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}},{key:"equals",value:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),vt=function(){function e(){_(this,e),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}return b(e,[{key:"set",value:function(e,t,n,i,r,a,l,o,s,u,h,c,m,d,p,q){var f=this.elements;return f[0]=e,f[4]=t,f[8]=n,f[12]=i,f[1]=r,f[5]=a,f[9]=l,f[13]=o,f[2]=s,f[6]=u,f[10]=h,f[14]=c,f[3]=m,f[7]=d,f[11]=p,f[15]=q,this}},{key:"identity",value:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}},{key:"clone",value:function(){return(new e).fromArray(this.elements)}},{key:"copy",value:function(e){var t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}},{key:"copyPosition",value:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}},{key:"setFromMatrix3",value:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}},{key:"extractBasis",value:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}},{key:"makeBasis",value:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}},{key:"extractRotation",value:function(e){var t=this.elements,n=e.elements,i=1/xt.setFromMatrixColumn(e,0).length(),r=1/xt.setFromMatrixColumn(e,1).length(),a=1/xt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromEuler",value:function(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),l=Math.sin(n),o=Math.cos(i),s=Math.sin(i),u=Math.cos(r),h=Math.sin(r);if("XYZ"===e.order){var c=a*u,m=a*h,d=l*u,p=l*h;t[0]=o*u,t[4]=-o*h,t[8]=s,t[1]=m+d*s,t[5]=c-p*s,t[9]=-l*o,t[2]=p-c*s,t[6]=d+m*s,t[10]=a*o}else if("YXZ"===e.order){var q=o*u,f=o*h,v=s*u,x=s*h;t[0]=q+x*l,t[4]=v*l-f,t[8]=a*s,t[1]=a*h,t[5]=a*u,t[9]=-l,t[2]=f*l-v,t[6]=x+q*l,t[10]=a*o}else if("ZXY"===e.order){var g=o*u,_=o*h,y=s*u,b=s*h;t[0]=g-b*l,t[4]=-a*h,t[8]=y+_*l,t[1]=_+y*l,t[5]=a*u,t[9]=b-g*l,t[2]=-a*s,t[6]=l,t[10]=a*o}else if("ZYX"===e.order){var w=a*u,M=a*h,S=l*u,T=l*h;t[0]=o*u,t[4]=S*s-M,t[8]=w*s+T,t[1]=o*h,t[5]=T*s+w,t[9]=M*s-S,t[2]=-s,t[6]=l*o,t[10]=a*o}else if("YZX"===e.order){var E=a*o,z=a*s,k=l*o,A=l*s;t[0]=o*u,t[4]=A-E*h,t[8]=k*h+z,t[1]=h,t[5]=a*u,t[9]=-l*u,t[2]=-s*u,t[6]=z*h+k,t[10]=E-A*h}else if("XZY"===e.order){var L=a*o,R=a*s,P=l*o,C=l*s;t[0]=o*u,t[4]=-h,t[8]=s*u,t[1]=L*h+C,t[5]=a*u,t[9]=R*h-P,t[2]=P*h-R,t[6]=l*u,t[10]=C*h+L}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}},{key:"makeRotationFromQuaternion",value:function(e){return this.compose(_t,e,yt)}},{key:"lookAt",value:function(e,t,n){var i=this.elements;return Mt.subVectors(e,t),0===Mt.lengthSq()&&(Mt.z=1),Mt.normalize(),bt.crossVectors(n,Mt),0===bt.lengthSq()&&(1===Math.abs(n.z)?Mt.x+=1e-4:Mt.z+=1e-4,Mt.normalize(),bt.crossVectors(n,Mt)),bt.normalize(),wt.crossVectors(Mt,bt),i[0]=bt.x,i[4]=wt.x,i[8]=Mt.x,i[1]=bt.y,i[5]=wt.y,i[9]=Mt.y,i[2]=bt.z,i[6]=wt.z,i[10]=Mt.z,this}},{key:"multiply",value:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}},{key:"premultiply",value:function(e){return this.multiplyMatrices(e,this)}},{key:"multiplyMatrices",value:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],l=n[4],o=n[8],s=n[12],u=n[1],h=n[5],c=n[9],m=n[13],d=n[2],p=n[6],q=n[10],f=n[14],v=n[3],x=n[7],g=n[11],_=n[15],y=i[0],b=i[4],w=i[8],M=i[12],S=i[1],T=i[5],E=i[9],z=i[13],k=i[2],A=i[6],L=i[10],R=i[14],P=i[3],C=i[7],D=i[11],I=i[15];return r[0]=a*y+l*S+o*k+s*P,r[4]=a*b+l*T+o*A+s*C,r[8]=a*w+l*E+o*L+s*D,r[12]=a*M+l*z+o*R+s*I,r[1]=u*y+h*S+c*k+m*P,r[5]=u*b+h*T+c*A+m*C,r[9]=u*w+h*E+c*L+m*D,r[13]=u*M+h*z+c*R+m*I,r[2]=d*y+p*S+q*k+f*P,r[6]=d*b+p*T+q*A+f*C,r[10]=d*w+p*E+q*L+f*D,r[14]=d*M+p*z+q*R+f*I,r[3]=v*y+x*S+g*k+_*P,r[7]=v*b+x*T+g*A+_*C,r[11]=v*w+x*E+g*L+_*D,r[15]=v*M+x*z+g*R+_*I,this}},{key:"multiplyScalar",value:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}},{key:"determinant",value:function(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],l=e[5],o=e[9],s=e[13],u=e[2],h=e[6],c=e[10],m=e[14];return e[3]*(+r*o*h-i*s*h-r*l*c+n*s*c+i*l*m-n*o*m)+e[7]*(+t*o*m-t*s*c+r*a*c-i*a*m+i*s*u-r*o*u)+e[11]*(+t*s*h-t*l*m-r*a*h+n*a*m+r*l*u-n*s*u)+e[15]*(-i*l*u-t*o*h+t*l*c+i*a*h-n*a*c+n*o*u)}},{key:"transpose",value:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}},{key:"setPosition",value:function(e,t,n){var i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}},{key:"invert",value:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],l=e[5],o=e[6],s=e[7],u=e[8],h=e[9],c=e[10],m=e[11],d=e[12],p=e[13],q=e[14],f=e[15],v=h*q*s-p*c*s+p*o*m-l*q*m-h*o*f+l*c*f,x=d*c*s-u*q*s-d*o*m+a*q*m+u*o*f-a*c*f,g=u*p*s-d*h*s+d*l*m-a*p*m-u*l*f+a*h*f,_=d*h*o-u*p*o-d*l*c+a*p*c+u*l*q-a*h*q,y=t*v+n*x+i*g+r*_;if(0===y)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);var b=1/y;return e[0]=v*b,e[1]=(p*c*r-h*q*r-p*i*m+n*q*m+h*i*f-n*c*f)*b,e[2]=(l*q*r-p*o*r+p*i*s-n*q*s-l*i*f+n*o*f)*b,e[3]=(h*o*r-l*c*r-h*i*s+n*c*s+l*i*m-n*o*m)*b,e[4]=x*b,e[5]=(u*q*r-d*c*r+d*i*m-t*q*m-u*i*f+t*c*f)*b,e[6]=(d*o*r-a*q*r-d*i*s+t*q*s+a*i*f-t*o*f)*b,e[7]=(a*c*r-u*o*r+u*i*s-t*c*s-a*i*m+t*o*m)*b,e[8]=g*b,e[9]=(d*h*r-u*p*r-d*n*m+t*p*m+u*n*f-t*h*f)*b,e[10]=(a*p*r-d*l*r+d*n*s-t*p*s-a*n*f+t*l*f)*b,e[11]=(u*l*r-a*h*r-u*n*s+t*h*s+a*n*m-t*l*m)*b,e[12]=_*b,e[13]=(u*p*i-d*h*i+d*n*c-t*p*c-u*n*q+t*h*q)*b,e[14]=(d*l*i-a*p*i-d*n*o+t*p*o+a*n*q-t*l*q)*b,e[15]=(a*h*i-u*l*i+u*n*o-t*h*o-a*n*c+t*l*c)*b,this}},{key:"scale",value:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}},{key:"getMaxScaleOnAxis",value:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}},{key:"makeTranslation",value:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}},{key:"makeRotationX",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}},{key:"makeRotationY",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}},{key:"makeRotationZ",value:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}},{key:"makeRotationAxis",value:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,l=e.y,o=e.z,s=r*a,u=r*l;return this.set(s*a+n,s*l-i*o,s*o+i*l,0,s*l+i*o,u*l+n,u*o-i*a,0,s*o-i*l,u*o+i*a,r*o*o+n,0,0,0,0,1),this}},{key:"makeScale",value:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}},{key:"makeShear",value:function(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}},{key:"compose",value:function(e,t,n){var i=this.elements,r=t._x,a=t._y,l=t._z,o=t._w,s=r+r,u=a+a,h=l+l,c=r*s,m=r*u,d=r*h,p=a*u,q=a*h,f=l*h,v=o*s,x=o*u,g=o*h,_=n.x,y=n.y,b=n.z;return i[0]=(1-(p+f))*_,i[1]=(m+g)*_,i[2]=(d-x)*_,i[3]=0,i[4]=(m-g)*y,i[5]=(1-(c+f))*y,i[6]=(q+v)*y,i[7]=0,i[8]=(d+x)*b,i[9]=(q-v)*b,i[10]=(1-(c+p))*b,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}},{key:"decompose",value:function(e,t,n){var i=this.elements,r=xt.set(i[0],i[1],i[2]).length(),a=xt.set(i[4],i[5],i[6]).length(),l=xt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],gt.copy(this);var o=1/r,s=1/a,u=1/l;return gt.elements[0]*=o,gt.elements[1]*=o,gt.elements[2]*=o,gt.elements[4]*=s,gt.elements[5]*=s,gt.elements[6]*=s,gt.elements[8]*=u,gt.elements[9]*=u,gt.elements[10]*=u,t.setFromRotationMatrix(gt),n.x=r,n.y=a,n.z=l,this}},{key:"makePerspective",value:function(e,t,n,i,r,a){void 0===a&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");var l=this.elements,o=2*r/(t-e),s=2*r/(n-i),u=(t+e)/(t-e),h=(n+i)/(n-i),c=-(a+r)/(a-r),m=-2*a*r/(a-r);return l[0]=o,l[4]=0,l[8]=u,l[12]=0,l[1]=0,l[5]=s,l[9]=h,l[13]=0,l[2]=0,l[6]=0,l[10]=c,l[14]=m,l[3]=0,l[7]=0,l[11]=-1,l[15]=0,this}},{key:"makeOrthographic",value:function(e,t,n,i,r,a){var l=this.elements,o=1/(t-e),s=1/(n-i),u=1/(a-r),h=(t+e)*o,c=(n+i)*s,m=(a+r)*u;return l[0]=2*o,l[4]=0,l[8]=0,l[12]=-h,l[1]=0,l[5]=2*s,l[9]=0,l[13]=-c,l[2]=0,l[6]=0,l[10]=-2*u,l[14]=-m,l[3]=0,l[7]=0,l[11]=0,l[15]=1,this}},{key:"equals",value:function(e){for(var t=this.elements,n=e.elements,i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=0;n<16;n++)this.elements[n]=e[n+t];return this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}]),e}();vt.prototype.isMatrix4=!0;var xt=new Fe,gt=new vt,_t=new Fe(0,0,0),yt=new Fe(1,1,1),bt=new Fe,wt=new Fe,Mt=new Fe,St=new vt,Tt=new Be,Et=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e.DefaultOrder;_(this,e),this._x=t,this._y=n,this._z=i,this._order=r}return b(e,[{key:"x",get:function(){return this._x},set:function(e){this._x=e,this._onChangeCallback()}},{key:"y",get:function(){return this._y},set:function(e){this._y=e,this._onChangeCallback()}},{key:"z",get:function(){return this._z},set:function(e){this._z=e,this._onChangeCallback()}},{key:"order",get:function(){return this._order},set:function(e){this._order=e,this._onChangeCallback()}},{key:"set",value:function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:this._order;return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}},{key:"clone",value:function(){return new this.constructor(this._x,this._y,this._z,this._order)}},{key:"copy",value:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}},{key:"setFromRotationMatrix",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],i=e.elements,r=i[0],a=i[4],l=i[8],o=i[1],s=i[5],u=i[9],h=i[2],c=i[6],m=i[10];switch(t){case"XYZ":this._y=Math.asin(_e(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,m),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(c,s),this._z=0);break;case"YXZ":this._x=Math.asin(-_e(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(l,m),this._z=Math.atan2(o,s)):(this._y=Math.atan2(-h,r),this._z=0);break;case"ZXY":this._x=Math.asin(_e(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(-h,m),this._z=Math.atan2(-a,s)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-_e(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(c,m),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,s));break;case"YZX":this._z=Math.asin(_e(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-u,s),this._y=Math.atan2(-h,r)):(this._x=0,this._y=Math.atan2(l,m));break;case"XZY":this._z=Math.asin(-_e(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(c,s),this._y=Math.atan2(l,r)):(this._x=Math.atan2(-u,m),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}},{key:"setFromQuaternion",value:function(e,t,n){return St.makeRotationFromQuaternion(e),this.setFromRotationMatrix(St,t,n)}},{key:"setFromVector3",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this._order;return this.set(e.x,e.y,e.z,t)}},{key:"reorder",value:function(e){return Tt.setFromEuler(this),this.setFromQuaternion(Tt,e)}},{key:"equals",value:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}},{key:"fromArray",value:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}},{key:"toVector3",value:function(e){return e?e.set(this._x,this._y,this._z):new Fe(this._x,this._y,this._z)}},{key:"_onChange",value:function(e){return this._onChangeCallback=e,this}},{key:"_onChangeCallback",value:function(){}}]),e}();Et.prototype.isEuler=!0,Et.DefaultOrder="XYZ",Et.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];var zt=function(){function e(){_(this,e),this.mask=1}return b(e,[{key:"set",value:function(e){this.mask=1<<e|0}},{key:"enable",value:function(e){this.mask|=1<<e|0}},{key:"enableAll",value:function(){this.mask=-1}},{key:"toggle",value:function(e){this.mask^=1<<e|0}},{key:"disable",value:function(e){this.mask&=~(1<<e|0)}},{key:"disableAll",value:function(){this.mask=0}},{key:"test",value:function(e){return 0!=(this.mask&e.mask)}}]),e}(),kt=0,At=new Fe,Lt=new Be,Rt=new vt,Pt=new Fe,Ct=new Fe,Dt=new Fe,It=new Be,Nt=new Fe(1,0,0),Ot=new Fe(0,1,0),Bt=new Fe(0,0,1),Ft={type:"added"},Ut={type:"removed"},Ht=function(e){p(n,e);var t=f(n);function n(){var e;_(this,n),e=t.call(this),Object.defineProperty(x(e),"id",{value:kt++}),e.uuid=ge(),e.name="",e.type="Object3D",e.parent=null,e.children=[],e.up=n.DefaultUp.clone();var i=new Fe,r=new Et,a=new Be,l=new Fe(1,1,1);return r._onChange((function(){a.setFromEuler(r,!1)})),a._onChange((function(){r.setFromQuaternion(a,void 0,!1)})),Object.defineProperties(x(e),{position:{configurable:!0,enumerable:!0,value:i},rotation:{configurable:!0,enumerable:!0,value:r},quaternion:{configurable:!0,enumerable:!0,value:a},scale:{configurable:!0,enumerable:!0,value:l},modelViewMatrix:{value:new vt},normalMatrix:{value:new ze}}),e.matrix=new vt,e.matrixWorld=new vt,e.matrixAutoUpdate=n.DefaultMatrixAutoUpdate,e.matrixWorldNeedsUpdate=!1,e.layers=new zt,e.visible=!0,e.castShadow=!1,e.receiveShadow=!1,e.frustumCulled=!0,e.renderOrder=0,e.animations=[],e.userData={},e}return b(n,[{key:"onBeforeRender",value:function(){}},{key:"onAfterRender",value:function(){}},{key:"applyMatrix4",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}},{key:"applyQuaternion",value:function(e){return this.quaternion.premultiply(e),this}},{key:"setRotationFromAxisAngle",value:function(e,t){this.quaternion.setFromAxisAngle(e,t)}},{key:"setRotationFromEuler",value:function(e){this.quaternion.setFromEuler(e,!0)}},{key:"setRotationFromMatrix",value:function(e){this.quaternion.setFromRotationMatrix(e)}},{key:"setRotationFromQuaternion",value:function(e){this.quaternion.copy(e)}},{key:"rotateOnAxis",value:function(e,t){return Lt.setFromAxisAngle(e,t),this.quaternion.multiply(Lt),this}},{key:"rotateOnWorldAxis",value:function(e,t){return Lt.setFromAxisAngle(e,t),this.quaternion.premultiply(Lt),this}},{key:"rotateX",value:function(e){return this.rotateOnAxis(Nt,e)}},{key:"rotateY",value:function(e){return this.rotateOnAxis(Ot,e)}},{key:"rotateZ",value:function(e){return this.rotateOnAxis(Bt,e)}},{key:"translateOnAxis",value:function(e,t){return At.copy(e).applyQuaternion(this.quaternion),this.position.add(At.multiplyScalar(t)),this}},{key:"translateX",value:function(e){return this.translateOnAxis(Nt,e)}},{key:"translateY",value:function(e){return this.translateOnAxis(Ot,e)}},{key:"translateZ",value:function(e){return this.translateOnAxis(Bt,e)}},{key:"localToWorld",value:function(e){return e.applyMatrix4(this.matrixWorld)}},{key:"worldToLocal",value:function(e){return e.applyMatrix4(Rt.copy(this.matrixWorld).invert())}},{key:"lookAt",value:function(e,t,n){e.isVector3?Pt.copy(e):Pt.set(e,t,n);var i=this.parent;this.updateWorldMatrix(!0,!1),Ct.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Rt.lookAt(Ct,Pt,this.up):Rt.lookAt(Pt,Ct,this.up),this.quaternion.setFromRotationMatrix(Rt),i&&(Rt.extractRotation(i.matrixWorld),Lt.setFromRotationMatrix(Rt),this.quaternion.premultiply(Lt.invert()))}},{key:"add",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Ft)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}},{key:"remove",value:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}var n=this.children.indexOf(e);return-1!==n&&(e.parent=null,this.children.splice(n,1),e.dispatchEvent(Ut)),this}},{key:"removeFromParent",value:function(){var e=this.parent;return null!==e&&e.remove(this),this}},{key:"clear",value:function(){for(var e=0;e<this.children.length;e++){var t=this.children[e];t.parent=null,t.dispatchEvent(Ut)}return this.children.length=0,this}},{key:"attach",value:function(e){return this.updateWorldMatrix(!0,!1),Rt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Rt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Rt),this.add(e),e.updateWorldMatrix(!1,!0),this}},{key:"getObjectById",value:function(e){return this.getObjectByProperty("id",e)}},{key:"getObjectByName",value:function(e){return this.getObjectByProperty("name",e)}},{key:"getObjectByProperty",value:function(e,t){if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n].getObjectByProperty(e,t);if(void 0!==r)return r}}},{key:"getWorldPosition",value:function(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}},{key:"getWorldQuaternion",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,e,Dt),e}},{key:"getWorldScale",value:function(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ct,It,e),e}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}},{key:"raycast",value:function(){}},{key:"traverse",value:function(e){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverse(e)}},{key:"traverseVisible",value:function(e){if(!1!==this.visible){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}}},{key:"traverseAncestors",value:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}},{key:"updateMatrix",value:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}},{key:"updateMatrixWorld",value:function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}},{key:"updateWorldMatrix",value:function(e,t){var n=this.parent;if(!0===e&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t)for(var i=this.children,r=0,a=i.length;r<a;r++)i[r].updateWorldMatrix(!1,!0)}},{key:"toJSON",value:function(e){var t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});var i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);var a=this.geometry.parameters;if(void 0!==a&&void 0!==a.shapes){var l=a.shapes;if(Array.isArray(l))for(var o=0,s=l.length;o<s;o++){var u=l[o];r(e.shapes,u)}else r(e.shapes,l)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){for(var h=[],c=0,m=this.material.length;c<m;c++)h.push(r(e.materials,this.material[c]));i.material=h}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(var d=0;d<this.children.length;d++)i.children.push(this.children[d].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(var p=0;p<this.animations.length;p++){var q=this.animations[p];i.animations.push(r(e.animations,q))}}if(t){var f=w(e.geometries),v=w(e.materials),x=w(e.textures),g=w(e.images),_=w(e.shapes),y=w(e.skeletons),b=w(e.animations);f.length>0&&(n.geometries=f),v.length>0&&(n.materials=v),x.length>0&&(n.textures=x),g.length>0&&(n.images=g),_.length>0&&(n.shapes=_),y.length>0&&(n.skeletons=y),b.length>0&&(n.animations=b)}return n.object=i,n;function w(e){var t=[];for(var n in e){var i=e[n];delete i.metadata,t.push(i)}return t}}},{key:"clone",value:function(e){return(new this.constructor).copy(this,e)}},{key:"copy",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(var n=0;n<e.children.length;n++){var i=e.children[n];this.add(i.clone())}return this}}]),n}(me);Ht.DefaultUp=new Fe(0,1,0),Ht.DefaultMatrixAutoUpdate=!0,Ht.prototype.isObject3D=!0;var Gt=new Fe,Vt=new Fe,Wt=new Fe,jt=new Fe,Xt=new Fe,Yt=new Fe,Zt=new Fe,Jt=new Fe,Kt=new Fe,Qt=new Fe,$t=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Fe;_(this,e),this.a=t,this.b=n,this.c=i}return b(e,[{key:"set",value:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}},{key:"setFromPointsAndIndices",value:function(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}},{key:"setFromAttributeAndIndices",value:function(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}},{key:"getArea",value:function(){return Gt.subVectors(this.c,this.b),Vt.subVectors(this.a,this.b),.5*Gt.cross(Vt).length()}},{key:"getMidpoint",value:function(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}},{key:"getNormal",value:function(t){return e.getNormal(this.a,this.b,this.c,t)}},{key:"getPlane",value:function(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}},{key:"getBarycoord",value:function(t,n){return e.getBarycoord(t,this.a,this.b,this.c,n)}},{key:"getUV",value:function(t,n,i,r,a){return e.getUV(t,this.a,this.b,this.c,n,i,r,a)}},{key:"containsPoint",value:function(t){return e.containsPoint(t,this.a,this.b,this.c)}},{key:"isFrontFacing",value:function(t){return e.isFrontFacing(this.a,this.b,this.c,t)}},{key:"intersectsBox",value:function(e){return e.intersectsTriangle(this)}},{key:"closestPointToPoint",value:function(e,t){var n,i,r=this.a,a=this.b,l=this.c;Xt.subVectors(a,r),Yt.subVectors(l,r),Jt.subVectors(e,r);var o=Xt.dot(Jt),s=Yt.dot(Jt);if(o<=0&&s<=0)return t.copy(r);Kt.subVectors(e,a);var u=Xt.dot(Kt),h=Yt.dot(Kt);if(u>=0&&h<=u)return t.copy(a);var c=o*h-u*s;if(c<=0&&o>=0&&u<=0)return n=o/(o-u),t.copy(r).addScaledVector(Xt,n);Qt.subVectors(e,l);var m=Xt.dot(Qt),d=Yt.dot(Qt);if(d>=0&&m<=d)return t.copy(l);var p=m*s-o*d;if(p<=0&&s>=0&&d<=0)return i=s/(s-d),t.copy(r).addScaledVector(Yt,i);var q=u*d-m*h;if(q<=0&&h-u>=0&&m-d>=0)return Zt.subVectors(l,a),i=(h-u)/(h-u+(m-d)),t.copy(a).addScaledVector(Zt,i);var f=1/(q+p+c);return n=p*f,i=c*f,t.copy(r).addScaledVector(Xt,n).addScaledVector(Yt,i)}},{key:"equals",value:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}],[{key:"getNormal",value:function(e,t,n,i){i.subVectors(n,t),Gt.subVectors(e,t),i.cross(Gt);var r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}},{key:"getBarycoord",value:function(e,t,n,i,r){Gt.subVectors(i,t),Vt.subVectors(n,t),Wt.subVectors(e,t);var a=Gt.dot(Gt),l=Gt.dot(Vt),o=Gt.dot(Wt),s=Vt.dot(Vt),u=Vt.dot(Wt),h=a*s-l*l;if(0===h)return r.set(-2,-1,-1);var c=1/h,m=(s*o-l*u)*c,d=(a*u-l*o)*c;return r.set(1-m-d,d,m)}},{key:"containsPoint",value:function(e,t,n,i){return this.getBarycoord(e,t,n,i,jt),jt.x>=0&&jt.y>=0&&jt.x+jt.y<=1}},{key:"getUV",value:function(e,t,n,i,r,a,l,o){return this.getBarycoord(e,t,n,i,jt),o.set(0,0),o.addScaledVector(r,jt.x),o.addScaledVector(a,jt.y),o.addScaledVector(l,jt.z),o}},{key:"isFrontFacing",value:function(e,t,n,i){return Gt.subVectors(n,t),Vt.subVectors(e,t),Gt.cross(Vt).dot(i)<0}}]),e}(),en=0,tn=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),e=t.call(this),Object.defineProperty(x(e),"id",{value:en++}),e.uuid=ge(),e.name="",e.type="Material",e.fog=!0,e.blending=1,e.side=0,e.vertexColors=!1,e.opacity=1,e.format=X,e.transparent=!1,e.blendSrc=204,e.blendDst=205,e.blendEquation=S,e.blendSrcAlpha=null,e.blendDstAlpha=null,e.blendEquationAlpha=null,e.depthFunc=3,e.depthTest=!0,e.depthWrite=!0,e.stencilWriteMask=255,e.stencilFunc=519,e.stencilRef=0,e.stencilFuncMask=255,e.stencilFail=se,e.stencilZFail=se,e.stencilZPass=se,e.stencilWrite=!1,e.clippingPlanes=null,e.clipIntersection=!1,e.clipShadows=!1,e.shadowSide=null,e.colorWrite=!0,e.precision=null,e.polygonOffset=!1,e.polygonOffsetFactor=0,e.polygonOffsetUnits=0,e.dithering=!1,e.alphaToCoverage=!1,e.premultipliedAlpha=!1,e.visible=!0,e.toneMapped=!0,e.userData={},e.version=0,e._alphaTest=0,e}return b(n,[{key:"alphaTest",get:function(){return this._alphaTest},set:function(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}},{key:"onBuild",value:function(){}},{key:"onBeforeRender",value:function(){}},{key:"onBeforeCompile",value:function(){}},{key:"customProgramCacheKey",value:function(){return this.onBeforeCompile.toString()}},{key:"setValues",value:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n)if("shading"!==t){var i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}}},{key:"toJSON",value:function(e){var t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});var n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){var t=[];for(var n in e){var i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenTint&&this.sheenTint.isColor&&(n.sheenTint=this.sheenTint.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularTint&&this.specularTint.isColor&&(n.specularTint=this.specularTint.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularTintMap&&this.specularTintMap.isTexture&&(n.specularTintMap=this.specularTintMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationTint&&(n.attenuationTint=this.attenuationTint.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.format!==X&&(n.format=this.format),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),t){var r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.format=e.format,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;var t=e.clippingPlanes,n=null;if(null!==t){var i=t.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}}]),n}(me);tn.prototype.isMaterial=!0;var nn={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},rn={h:0,s:0,l:0},an={h:0,s:0,l:0};function ln(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}function on(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function sn(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}var un=function(){function e(t,n,i){return _(this,e),void 0===n&&void 0===i?this.set(t):this.setRGB(t,n,i)}return b(e,[{key:"set",value:function(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}},{key:"setScalar",value:function(e){return this.r=e,this.g=e,this.b=e,this}},{key:"setHex",value:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this}},{key:"setRGB",value:function(e,t,n){return this.r=e,this.g=t,this.b=n,this}},{key:"setHSL",value:function(e,t,n){if(e=ye(e,1),t=_e(t,0,1),n=_e(n,0,1),0===t)this.r=this.g=this.b=n;else{var i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=ln(r,i,e+1/3),this.g=ln(r,i,e),this.b=ln(r,i,e-1/3)}return this}},{key:"setStyle",value:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){var i,r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[4]),this;if(i=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[4]),this;break;case"hsl":case"hsla":if(i=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){var l=parseFloat(i[1])/360,o=parseInt(i[2],10)/100,s=parseInt(i[3],10)/100;return t(i[4]),this.setHSL(l,o,s)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){var u=n[1],h=u.length;if(3===h)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(6===h)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}return e&&e.length>0?this.setColorName(e):this}},{key:"setColorName",value:function(e){var t=nn[e.toLowerCase()];return void 0!==t?this.setHex(t):console.warn("THREE.Color: Unknown color "+e),this}},{key:"clone",value:function(){return new this.constructor(this.r,this.g,this.b)}},{key:"copy",value:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}},{key:"copyGammaToLinear",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2;return this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this}},{key:"copyLinearToGamma",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2,n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this}},{key:"convertGammaToLinear",value:function(e){return this.copyGammaToLinear(this,e),this}},{key:"convertLinearToGamma",value:function(e){return this.copyLinearToGamma(this,e),this}},{key:"copySRGBToLinear",value:function(e){return this.r=on(e.r),this.g=on(e.g),this.b=on(e.b),this}},{key:"copyLinearToSRGB",value:function(e){return this.r=sn(e.r),this.g=sn(e.g),this.b=sn(e.b),this}},{key:"convertSRGBToLinear",value:function(){return this.copySRGBToLinear(this),this}},{key:"convertLinearToSRGB",value:function(){return this.copyLinearToSRGB(this),this}},{key:"getHex",value:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}},{key:"getHexString",value:function(){return("000000"+this.getHex().toString(16)).slice(-6)}},{key:"getHSL",value:function(e){var t,n,i=this.r,r=this.g,a=this.b,l=Math.max(i,r,a),o=Math.min(i,r,a),s=(o+l)/2;if(o===l)t=0,n=0;else{var u=l-o;switch(n=s<=.5?u/(l+o):u/(2-l-o),l){case i:t=(r-a)/u+(r<a?6:0);break;case r:t=(a-i)/u+2;break;case a:t=(i-r)/u+4}t/=6}return e.h=t,e.s=n,e.l=s,e}},{key:"getStyle",value:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}},{key:"offsetHSL",value:function(e,t,n){return this.getHSL(rn),rn.h+=e,rn.s+=t,rn.l+=n,this.setHSL(rn.h,rn.s,rn.l),this}},{key:"add",value:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}},{key:"addColors",value:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}},{key:"addScalar",value:function(e){return this.r+=e,this.g+=e,this.b+=e,this}},{key:"sub",value:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}},{key:"multiply",value:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}},{key:"multiplyScalar",value:function(e){return this.r*=e,this.g*=e,this.b*=e,this}},{key:"lerp",value:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}},{key:"lerpColors",value:function(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}},{key:"lerpHSL",value:function(e,t){this.getHSL(rn),e.getHSL(an);var n=be(rn.h,an.h,t),i=be(rn.s,an.s,t),r=be(rn.l,an.l,t);return this.setHSL(n,i,r),this}},{key:"equals",value:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}},{key:"fromArray",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}},{key:"toArray",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},{key:"fromBufferAttribute",value:function(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),!0===e.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}},{key:"toJSON",value:function(){return this.getHex()}}]),e}();un.NAMES=nn,un.prototype.isColor=!0,un.prototype.r=1,un.prototype.g=1,un.prototype.b=1;var hn=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshBasicMaterial",i.color=new un(16777215),i.map=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.specularMap=null,i.alphaMap=null,i.envMap=null,i.combine=0,i.reflectivity=1,i.refractionRatio=.98,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(tn);hn.prototype.isMeshBasicMaterial=!0;var cn=new Fe,mn=new Ee,dn=function(){function e(t,n,i){if(_(this,e),Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=n,this.count=void 0!==t?t.length/n:0,this.normalized=!0===i,this.usage=ue,this.updateRange={offset:0,count:-1},this.version=0}return b(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}},{key:"copyArray",value:function(e){return this.array.set(e),this}},{key:"copyColorsArray",value:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new un),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this}},{key:"copyVector2sArray",value:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new Ee),t[n++]=a.x,t[n++]=a.y}return this}},{key:"copyVector3sArray",value:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new Fe),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this}},{key:"copyVector4sArray",value:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];void 0===a&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Ie),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this}},{key:"applyMatrix3",value:function(e){if(2===this.itemSize)for(var t=0,n=this.count;t<n;t++)mn.fromBufferAttribute(this,t),mn.applyMatrix3(e),this.setXY(t,mn.x,mn.y);else if(3===this.itemSize)for(var i=0,r=this.count;i<r;i++)cn.fromBufferAttribute(this,i),cn.applyMatrix3(e),this.setXYZ(i,cn.x,cn.y,cn.z);return this}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.count;t<n;t++)cn.x=this.getX(t),cn.y=this.getY(t),cn.z=this.getZ(t),cn.applyMatrix4(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)cn.x=this.getX(t),cn.y=this.getY(t),cn.z=this.getZ(t),cn.applyNormalMatrix(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)cn.x=this.getX(t),cn.y=this.getY(t),cn.z=this.getZ(t),cn.transformDirection(e),this.setXYZ(t,cn.x,cn.y,cn.z);return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"getX",value:function(e){return this.array[e*this.itemSize]}},{key:"setX",value:function(e,t){return this.array[e*this.itemSize]=t,this}},{key:"getY",value:function(e){return this.array[e*this.itemSize+1]}},{key:"setY",value:function(e,t){return this.array[e*this.itemSize+1]=t,this}},{key:"getZ",value:function(e){return this.array[e*this.itemSize+2]}},{key:"setZ",value:function(e,t){return this.array[e*this.itemSize+2]=t,this}},{key:"getW",value:function(e){return this.array[e*this.itemSize+3]}},{key:"setW",value:function(e,t){return this.array[e*this.itemSize+3]=t,this}},{key:"setXY",value:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}},{key:"setXYZW",value:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"clone",value:function(){return new this.constructor(this.array,this.itemSize).copy(this)}},{key:"toJSON",value:function(){var e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ue&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}}]),e}();dn.prototype.isBufferAttribute=!0;var pn=function(e){p(n,e);var t=f(n);function n(e,i,r){return _(this,n),t.call(this,new Uint16Array(e),i,r)}return b(n)}(dn),qn=function(e){p(n,e);var t=f(n);function n(e,i,r){return _(this,n),t.call(this,new Uint32Array(e),i,r)}return b(n)}(dn);(function(e){p(n,e);var t=f(n);function n(e,i,r){return _(this,n),t.call(this,new Uint16Array(e),i,r)}return b(n)})(dn).prototype.isFloat16BufferAttribute=!0;var fn=function(e){p(n,e);var t=f(n);function n(e,i,r){return _(this,n),t.call(this,new Float32Array(e),i,r)}return b(n)}(dn),vn=0,xn=new vt,gn=new Ht,_n=new Fe,yn=new Ge,bn=new Ge,wn=new Fe,Mn=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),e=t.call(this),Object.defineProperty(x(e),"id",{value:vn++}),e.uuid=ge(),e.name="",e.type="BufferGeometry",e.index=null,e.attributes={},e.morphAttributes={},e.morphTargetsRelative=!1,e.groups=[],e.boundingBox=null,e.boundingSphere=null,e.drawRange={start:0,count:1/0},e.userData={},e}return b(n,[{key:"getIndex",value:function(){return this.index}},{key:"setIndex",value:function(e){return Array.isArray(e)?this.index=new(ke(e)>65535?qn:pn)(e,1):this.index=e,this}},{key:"getAttribute",value:function(e){return this.attributes[e]}},{key:"setAttribute",value:function(e,t){return this.attributes[e]=t,this}},{key:"deleteAttribute",value:function(e){return delete this.attributes[e],this}},{key:"hasAttribute",value:function(e){return void 0!==this.attributes[e]}},{key:"addGroup",value:function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;this.groups.push({start:e,count:t,materialIndex:n})}},{key:"clearGroups",value:function(){this.groups=[]}},{key:"setDrawRange",value:function(e,t){this.drawRange.start=e,this.drawRange.count=t}},{key:"applyMatrix4",value:function(e){var t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var i=(new ze).getNormalMatrix(e);n.applyNormalMatrix(i),n.needsUpdate=!0}var r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(e),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}},{key:"applyQuaternion",value:function(e){return xn.makeRotationFromQuaternion(e),this.applyMatrix4(xn),this}},{key:"rotateX",value:function(e){return xn.makeRotationX(e),this.applyMatrix4(xn),this}},{key:"rotateY",value:function(e){return xn.makeRotationY(e),this.applyMatrix4(xn),this}},{key:"rotateZ",value:function(e){return xn.makeRotationZ(e),this.applyMatrix4(xn),this}},{key:"translate",value:function(e,t,n){return xn.makeTranslation(e,t,n),this.applyMatrix4(xn),this}},{key:"scale",value:function(e,t,n){return xn.makeScale(e,t,n),this.applyMatrix4(xn),this}},{key:"lookAt",value:function(e){return gn.lookAt(e),gn.updateMatrix(),this.applyMatrix4(gn.matrix),this}},{key:"center",value:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(_n).negate(),this.translate(_n.x,_n.y,_n.z),this}},{key:"setFromPoints",value:function(e){for(var t=[],n=0,i=e.length;n<i;n++){var r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new fn(t,3)),this}},{key:"computeBoundingBox",value:function(){null===this.boundingBox&&(this.boundingBox=new Ge);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new Fe(-1/0,-1/0,-1/0),new Fe(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(var n=0,i=t.length;n<i;n++){var r=t[n];yn.setFromBufferAttribute(r),this.morphTargetsRelative?(wn.addVectors(this.boundingBox.min,yn.min),this.boundingBox.expandByPoint(wn),wn.addVectors(this.boundingBox.max,yn.max),this.boundingBox.expandByPoint(wn)):(this.boundingBox.expandByPoint(yn.min),this.boundingBox.expandByPoint(yn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}},{key:"computeBoundingSphere",value:function(){null===this.boundingSphere&&(this.boundingSphere=new st);var e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new Fe,1/0);if(e){var n=this.boundingSphere.center;if(yn.setFromBufferAttribute(e),t)for(var i=0,r=t.length;i<r;i++){var a=t[i];bn.setFromBufferAttribute(a),this.morphTargetsRelative?(wn.addVectors(yn.min,bn.min),yn.expandByPoint(wn),wn.addVectors(yn.max,bn.max),yn.expandByPoint(wn)):(yn.expandByPoint(bn.min),yn.expandByPoint(bn.max))}yn.getCenter(n);for(var l=0,o=0,s=e.count;o<s;o++)wn.fromBufferAttribute(e,o),l=Math.max(l,n.distanceToSquared(wn));if(t)for(var u=0,h=t.length;u<h;u++)for(var c=t[u],m=this.morphTargetsRelative,d=0,p=c.count;d<p;d++)wn.fromBufferAttribute(c,d),m&&(_n.fromBufferAttribute(e,d),wn.add(_n)),l=Math.max(l,n.distanceToSquared(wn));this.boundingSphere.radius=Math.sqrt(l),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}},{key:"computeTangents",value:function(){var e=this.index,t=this.attributes;if(null!==e&&void 0!==t.position&&void 0!==t.normal&&void 0!==t.uv){var n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,l=i.length/3;void 0===t.tangent&&this.setAttribute("tangent",new dn(new Float32Array(4*l),4));for(var o=t.tangent.array,s=[],u=[],h=0;h<l;h++)s[h]=new Fe,u[h]=new Fe;var c=new Fe,m=new Fe,d=new Fe,p=new Ee,q=new Ee,f=new Ee,v=new Fe,x=new Fe,g=this.groups;0===g.length&&(g=[{start:0,count:n.length}]);for(var _=0,y=g.length;_<y;++_)for(var b=g[_],w=b.start,M=w,S=w+b.count;M<S;M+=3)I(n[M+0],n[M+1],n[M+2]);for(var T=new Fe,E=new Fe,z=new Fe,k=new Fe,A=0,L=g.length;A<L;++A)for(var R=g[A],P=R.start,C=P,D=P+R.count;C<D;C+=3)N(n[C+0]),N(n[C+1]),N(n[C+2])}else console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");function I(e,t,n){c.fromArray(i,3*e),m.fromArray(i,3*t),d.fromArray(i,3*n),p.fromArray(a,2*e),q.fromArray(a,2*t),f.fromArray(a,2*n),m.sub(c),d.sub(c),q.sub(p),f.sub(p);var r=1/(q.x*f.y-f.x*q.y);isFinite(r)&&(v.copy(m).multiplyScalar(f.y).addScaledVector(d,-q.y).multiplyScalar(r),x.copy(d).multiplyScalar(q.x).addScaledVector(m,-f.x).multiplyScalar(r),s[e].add(v),s[t].add(v),s[n].add(v),u[e].add(x),u[t].add(x),u[n].add(x))}function N(e){z.fromArray(r,3*e),k.copy(z);var t=s[e];T.copy(t),T.sub(z.multiplyScalar(z.dot(t))).normalize(),E.crossVectors(k,t);var n=E.dot(u[e])<0?-1:1;o[4*e]=T.x,o[4*e+1]=T.y,o[4*e+2]=T.z,o[4*e+3]=n}}},{key:"computeVertexNormals",value:function(){var e=this.index,t=this.getAttribute("position");if(void 0!==t){var n=this.getAttribute("normal");if(void 0===n)n=new dn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(var i=0,r=n.count;i<r;i++)n.setXYZ(i,0,0,0);var a=new Fe,l=new Fe,o=new Fe,s=new Fe,u=new Fe,h=new Fe,c=new Fe,m=new Fe;if(e)for(var d=0,p=e.count;d<p;d+=3){var q=e.getX(d+0),f=e.getX(d+1),v=e.getX(d+2);a.fromBufferAttribute(t,q),l.fromBufferAttribute(t,f),o.fromBufferAttribute(t,v),c.subVectors(o,l),m.subVectors(a,l),c.cross(m),s.fromBufferAttribute(n,q),u.fromBufferAttribute(n,f),h.fromBufferAttribute(n,v),s.add(c),u.add(c),h.add(c),n.setXYZ(q,s.x,s.y,s.z),n.setXYZ(f,u.x,u.y,u.z),n.setXYZ(v,h.x,h.y,h.z)}else for(var x=0,g=t.count;x<g;x+=3)a.fromBufferAttribute(t,x+0),l.fromBufferAttribute(t,x+1),o.fromBufferAttribute(t,x+2),c.subVectors(o,l),m.subVectors(a,l),c.cross(m),n.setXYZ(x+0,c.x,c.y,c.z),n.setXYZ(x+1,c.x,c.y,c.z),n.setXYZ(x+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}}},{key:"merge",value:function(e,t){if(e&&e.isBufferGeometry){void 0===t&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));var n=this.attributes;for(var i in n)if(void 0!==e.attributes[i])for(var r=n[i].array,a=e.attributes[i],l=a.array,o=a.itemSize*t,s=Math.min(l.length,r.length-o),u=0,h=o;u<s;u++,h++)r[h]=l[u];return this}console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e)}},{key:"normalizeNormals",value:function(){for(var e=this.attributes.normal,t=0,n=e.count;t<n;t++)wn.fromBufferAttribute(e,t),wn.normalize(),e.setXYZ(t,wn.x,wn.y,wn.z)}},{key:"toNonIndexed",value:function(){function e(e,t){for(var n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i),l=0,o=0,s=0,u=t.length;s<u;s++){l=e.isInterleavedBufferAttribute?t[s]*e.data.stride+e.offset:t[s]*i;for(var h=0;h<i;h++)a[o++]=n[l++]}return new dn(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;var t=new n,i=this.index.array,r=this.attributes;for(var a in r){var l=e(r[a],i);t.setAttribute(a,l)}var o=this.morphAttributes;for(var s in o){for(var u=[],h=o[s],c=0,m=h.length;c<m;c++){var d=e(h[c],i);u.push(d)}t.morphAttributes[s]=u}t.morphTargetsRelative=this.morphTargetsRelative;for(var p=this.groups,q=0,f=p.length;q<f;q++){var v=p[q];t.addGroup(v.start,v.count,v.materialIndex)}return t}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var i=this.index;null!==i&&(e.data.index={type:i.array.constructor.name,array:Array.prototype.slice.call(i.array)});var r=this.attributes;for(var a in r){var l=r[a];e.data.attributes[a]=l.toJSON(e.data)}var o={},s=!1;for(var u in this.morphAttributes){for(var h=this.morphAttributes[u],c=[],m=0,d=h.length;m<d;m++){var p=h[m];c.push(p.toJSON(e.data))}c.length>0&&(o[u]=c,s=!0)}s&&(e.data.morphAttributes=o,e.data.morphTargetsRelative=this.morphTargetsRelative);var q=this.groups;q.length>0&&(e.data.groups=JSON.parse(JSON.stringify(q)));var f=this.boundingSphere;return null!==f&&(e.data.boundingSphere={center:f.center.toArray(),radius:f.radius}),e}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;var t={};this.name=e.name;var n=e.index;null!==n&&this.setIndex(n.clone(t));var i=e.attributes;for(var r in i){var a=i[r];this.setAttribute(r,a.clone(t))}var l=e.morphAttributes;for(var o in l){for(var s=[],u=l[o],h=0,c=u.length;h<c;h++)s.push(u[h].clone(t));this.morphAttributes[o]=s}this.morphTargetsRelative=e.morphTargetsRelative;for(var m=e.groups,d=0,p=m.length;d<p;d++){var q=m[d];this.addGroup(q.start,q.count,q.materialIndex)}var f=e.boundingBox;null!==f&&(this.boundingBox=f.clone());var v=e.boundingSphere;return null!==v&&(this.boundingSphere=v.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,void 0!==e.parameters&&(this.parameters=Object.assign({},e.parameters)),this}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(me);Mn.prototype.isBufferGeometry=!0;var Sn=new vt,Tn=new ft,En=new st,zn=new Fe,kn=new Fe,An=new Fe,Ln=new Fe,Rn=new Fe,Pn=new Fe,Cn=new Fe,Dn=new Fe,In=new Fe,Nn=new Ee,On=new Ee,Bn=new Ee,Fn=new Fe,Un=new Fe,Hn=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Mn,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new hn;return _(this,n),(e=t.call(this)).type="Mesh",e.geometry=i,e.material=r,e.updateMorphTargets(),e}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=i.length;r<a;r++){var l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{var o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"raycast",value:function(e,t){var n,i=this.geometry,r=this.material,a=this.matrixWorld;if(void 0!==r&&(null===i.boundingSphere&&i.computeBoundingSphere(),En.copy(i.boundingSphere),En.applyMatrix4(a),!1!==e.ray.intersectsSphere(En)&&(Sn.copy(a).invert(),Tn.copy(e.ray).applyMatrix4(Sn),null===i.boundingBox||!1!==Tn.intersectsBox(i.boundingBox))))if(i.isBufferGeometry){var l=i.index,o=i.attributes.position,s=i.morphAttributes.position,u=i.morphTargetsRelative,h=i.attributes.uv,c=i.attributes.uv2,m=i.groups,d=i.drawRange;if(null!==l)if(Array.isArray(r))for(var p=0,q=m.length;p<q;p++)for(var f=m[p],v=r[f.materialIndex],x=Math.max(f.start,d.start),g=Math.min(l.count,Math.min(f.start+f.count,d.start+d.count));x<g;x+=3){var _=l.getX(x),y=l.getX(x+1),b=l.getX(x+2);(n=Gn(this,v,e,Tn,o,s,u,h,c,_,y,b))&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=f.materialIndex,t.push(n))}else for(var w=Math.max(0,d.start),M=Math.min(l.count,d.start+d.count);w<M;w+=3){var S=l.getX(w),T=l.getX(w+1),E=l.getX(w+2);(n=Gn(this,r,e,Tn,o,s,u,h,c,S,T,E))&&(n.faceIndex=Math.floor(w/3),t.push(n))}else if(void 0!==o)if(Array.isArray(r))for(var z=0,k=m.length;z<k;z++)for(var A=m[z],L=r[A.materialIndex],R=Math.max(A.start,d.start),P=Math.min(o.count,Math.min(A.start+A.count,d.start+d.count));R<P;R+=3){(n=Gn(this,L,e,Tn,o,s,u,h,c,R,R+1,R+2))&&(n.faceIndex=Math.floor(R/3),n.face.materialIndex=A.materialIndex,t.push(n))}else for(var C=Math.max(0,d.start),D=Math.min(o.count,d.start+d.count);C<D;C+=3){(n=Gn(this,r,e,Tn,o,s,u,h,c,C,C+1,C+2))&&(n.faceIndex=Math.floor(C/3),t.push(n))}}else i.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}]),n}(Ht);function Gn(e,t,n,i,r,a,l,o,s,u,h,c){zn.fromBufferAttribute(r,u),kn.fromBufferAttribute(r,h),An.fromBufferAttribute(r,c);var m=e.morphTargetInfluences;if(a&&m){Cn.set(0,0,0),Dn.set(0,0,0),In.set(0,0,0);for(var d=0,p=a.length;d<p;d++){var q=m[d],f=a[d];0!==q&&(Ln.fromBufferAttribute(f,u),Rn.fromBufferAttribute(f,h),Pn.fromBufferAttribute(f,c),l?(Cn.addScaledVector(Ln,q),Dn.addScaledVector(Rn,q),In.addScaledVector(Pn,q)):(Cn.addScaledVector(Ln.sub(zn),q),Dn.addScaledVector(Rn.sub(kn),q),In.addScaledVector(Pn.sub(An),q)))}zn.add(Cn),kn.add(Dn),An.add(In)}e.isSkinnedMesh&&(e.boneTransform(u,zn),e.boneTransform(h,kn),e.boneTransform(c,An));var v=function(e,t,n,i,r,a,l,o){if(null===(1===t.side?i.intersectTriangle(l,a,r,!0,o):i.intersectTriangle(r,a,l,2!==t.side,o)))return null;Un.copy(o),Un.applyMatrix4(e.matrixWorld);var s=n.ray.origin.distanceTo(Un);return s<n.near||s>n.far?null:{distance:s,point:Un.clone(),object:e}}(e,t,n,i,zn,kn,An,Fn);if(v){o&&(Nn.fromBufferAttribute(o,u),On.fromBufferAttribute(o,h),Bn.fromBufferAttribute(o,c),v.uv=$t.getUV(Fn,zn,kn,An,Nn,On,Bn,new Ee)),s&&(Nn.fromBufferAttribute(s,u),On.fromBufferAttribute(s,h),Bn.fromBufferAttribute(s,c),v.uv2=$t.getUV(Fn,zn,kn,An,Nn,On,Bn,new Ee));var x={a:u,b:h,c,normal:new Fe,materialIndex:0};$t.getNormal(zn,kn,An,x.normal),v.face=x}return v}Hn.prototype.isMesh=!0;var Vn=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;_(this,n),(e=t.call(this)).type="BoxGeometry",e.parameters={width:i,height:r,depth:a,widthSegments:l,heightSegments:o,depthSegments:s};var u=x(e);l=Math.floor(l),o=Math.floor(o),s=Math.floor(s);var h=[],c=[],m=[],d=[],p=0,q=0;function f(e,t,n,i,r,a,l,o,s,f,v){for(var x=a/s,g=l/f,_=a/2,y=l/2,b=o/2,w=s+1,M=f+1,S=0,T=0,E=new Fe,z=0;z<M;z++)for(var k=z*g-y,A=0;A<w;A++){var L=A*x-_;E[e]=L*i,E[t]=k*r,E[n]=b,c.push(E.x,E.y,E.z),E[e]=0,E[t]=0,E[n]=o>0?1:-1,m.push(E.x,E.y,E.z),d.push(A/s),d.push(1-z/f),S+=1}for(var R=0;R<f;R++)for(var P=0;P<s;P++){var C=p+P+w*R,D=p+P+w*(R+1),I=p+(P+1)+w*(R+1),N=p+(P+1)+w*R;h.push(C,D,N),h.push(D,I,N),T+=6}u.addGroup(q,T,v),q+=T,p+=S}return f("z","y","x",-1,-1,a,r,i,s,o,0),f("z","y","x",1,-1,a,r,-i,s,o,1),f("x","z","y",1,1,i,a,r,l,s,2),f("x","z","y",1,-1,i,a,-r,l,s,3),f("x","y","z",1,-1,i,r,a,l,o,4),f("x","y","z",-1,-1,i,r,-a,l,o,5),e.setIndex(h),e.setAttribute("position",new fn(c,3)),e.setAttribute("normal",new fn(m,3)),e.setAttribute("uv",new fn(d,2)),e}return b(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}]),n}(Mn);function Wn(e){var t={};for(var n in e)for(var i in t[n]={},e[n]){var r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}return t}function jn(e){for(var t={},n=0;n<e.length;n++){var i=Wn(e[n]);for(var r in i)t[r]=i[r]}return t}var Xn={clone:Wn,merge:jn},Yn=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="ShaderMaterial",i.defines={},i.uniforms={},i.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",i.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",i.linewidth=1,i.wireframe=!1,i.wireframeLinewidth=1,i.fog=!1,i.lights=!1,i.clipping=!1,i.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},i.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},i.index0AttributeName=void 0,i.uniformsNeedUpdate=!1,i.glslVersion=null,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),i.setValues(e)),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Wn(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);for(var i in t.glslVersion=this.glslVersion,t.uniforms={},this.uniforms){var r=this.uniforms[i].value;r&&r.isTexture?t.uniforms[i]={type:"t",value:r.toJSON(e).uuid}:r&&r.isColor?t.uniforms[i]={type:"c",value:r.getHex()}:r&&r.isVector2?t.uniforms[i]={type:"v2",value:r.toArray()}:r&&r.isVector3?t.uniforms[i]={type:"v3",value:r.toArray()}:r&&r.isVector4?t.uniforms[i]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?t.uniforms[i]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?t.uniforms[i]={type:"m4",value:r.toArray()}:t.uniforms[i]={value:r}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;var a={};for(var l in this.extensions)!0===this.extensions[l]&&(a[l]=!0);return Object.keys(a).length>0&&(t.extensions=a),t}}]),n}(tn);Yn.prototype.isShaderMaterial=!0;var Zn=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="Camera",e.matrixWorldInverse=new vt,e.projectionMatrix=new vt,e.projectionMatrixInverse=new vt,e}return b(n,[{key:"copy",value:function(e,t){return h(g(n.prototype),"copy",this).call(this,e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}},{key:"getWorldDirection",value:function(e){this.updateWorldMatrix(!0,!1);var t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}},{key:"updateMatrixWorld",value:function(e){h(g(n.prototype),"updateMatrixWorld",this).call(this,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"updateWorldMatrix",value:function(e,t){h(g(n.prototype),"updateWorldMatrix",this).call(this,e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),n}(Ht);Zn.prototype.isCamera=!0;var Jn=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:50,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:2e3;return _(this,n),(e=t.call(this)).type="PerspectiveCamera",e.fov=i,e.zoom=1,e.near=a,e.far=l,e.focus=10,e.aspect=r,e.view=null,e.filmGauge=35,e.filmOffset=0,e.updateProjectionMatrix(),e}return b(n,[{key:"copy",value:function(e,t){return h(g(n.prototype),"copy",this).call(this,e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}},{key:"setFocalLength",value:function(e){var t=.5*this.getFilmHeight()/e;this.fov=2*qe*Math.atan(t),this.updateProjectionMatrix()}},{key:"getFocalLength",value:function(){var e=Math.tan(.5*pe*this.fov);return.5*this.getFilmHeight()/e}},{key:"getEffectiveFOV",value:function(){return 2*qe*Math.atan(Math.tan(.5*pe*this.fov)/this.zoom)}},{key:"getFilmWidth",value:function(){return this.filmGauge*Math.min(this.aspect,1)}},{key:"getFilmHeight",value:function(){return this.filmGauge/Math.max(this.aspect,1)}},{key:"setViewOffset",value:function(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=this.near,t=e*Math.tan(.5*pe*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,a=this.view;if(null!==this.view&&this.view.enabled){var l=a.fullWidth,o=a.fullHeight;r+=a.offsetX*i/l,t-=a.offsetY*n/o,i*=a.width/l,n*=a.height/o}var s=this.filmOffset;0!==s&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}]),n}(Zn);Jn.prototype.isPerspectiveCamera=!0;var Kn=90,Qn=function(e){p(n,e);var t=f(n);function n(e,i,r){var a;if(_(this,n),(a=t.call(this)).type="CubeCamera",!0!==r.isWebGLCubeRenderTarget)return console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter."),v(a);a.renderTarget=r;var l=new Jn(Kn,1,e,i);l.layers=a.layers,l.up.set(0,-1,0),l.lookAt(new Fe(1,0,0)),a.add(l);var o=new Jn(Kn,1,e,i);o.layers=a.layers,o.up.set(0,-1,0),o.lookAt(new Fe(-1,0,0)),a.add(o);var s=new Jn(Kn,1,e,i);s.layers=a.layers,s.up.set(0,0,1),s.lookAt(new Fe(0,1,0)),a.add(s);var u=new Jn(Kn,1,e,i);u.layers=a.layers,u.up.set(0,0,-1),u.lookAt(new Fe(0,-1,0)),a.add(u);var h=new Jn(Kn,1,e,i);h.layers=a.layers,h.up.set(0,-1,0),h.lookAt(new Fe(0,0,1)),a.add(h);var c=new Jn(Kn,1,e,i);return c.layers=a.layers,c.up.set(0,-1,0),c.lookAt(new Fe(0,0,-1)),a.add(c),a}return b(n,[{key:"update",value:function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,i=o(this.children,6),r=i[0],a=i[1],l=i[2],s=i[3],u=i[4],h=i[5],c=e.xr.enabled,m=e.getRenderTarget();e.xr.enabled=!1;var d=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,r),e.setRenderTarget(n,1),e.render(t,a),e.setRenderTarget(n,2),e.render(t,l),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=d,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(m),e.xr.enabled=c}}]),n}(Ht),$n=function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o,s,u,h,c){var m;return _(this,n),e=void 0!==e?e:[],i=void 0!==i?i:T,(m=t.call(this,e,i,r,a,l,o,s,u,h,c)).flipY=!1,m}return b(n,[{key:"images",get:function(){return this.image},set:function(e){this.image=e}}]),n}(Ce);$n.prototype.isCubeTexture=!0;var ei=function(e){p(n,e);var t=f(n);function n(e,i,r){var a;return _(this,n),Number.isInteger(i)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),i=r),a=t.call(this,e,e,i),i=i||{},a.texture=new $n(void 0,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.encoding),a.texture.isRenderTargetTexture=!0,a.texture.generateMipmaps=void 0!==i.generateMipmaps&&i.generateMipmaps,a.texture.minFilter=void 0!==i.minFilter?i.minFilter:O,a.texture._needsFlipEnvMap=!1,a}return b(n,[{key:"fromEquirectangularTexture",value:function(e,t){this.texture.type=t.type,this.texture.format=X,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;var n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new Vn(5,5,5),l=new Yn({name:"CubemapFromEquirect",uniforms:Wn(n),vertexShader:i,fragmentShader:r,side:1,blending:0});l.uniforms.tEquirect.value=t;var o=new Hn(a,l),s=t.minFilter;return t.minFilter===B&&(t.minFilter=O),new Qn(1,10,this).update(e,o),t.minFilter=s,o.geometry.dispose(),o.material.dispose(),this}},{key:"clear",value:function(e,t,n,i){for(var r=e.getRenderTarget(),a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}]),n}(Ne);ei.prototype.isWebGLCubeRenderTarget=!0;var ti=new Fe,ni=new Fe,ii=new ze,ri=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe(1,0,0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;_(this,e),this.normal=t,this.constant=n}return b(e,[{key:"set",value:function(e,t){return this.normal.copy(e),this.constant=t,this}},{key:"setComponents",value:function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}},{key:"setFromNormalAndCoplanarPoint",value:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}},{key:"setFromCoplanarPoints",value:function(e,t,n){var i=ti.subVectors(n,t).cross(ni.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}},{key:"copy",value:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this}},{key:"normalize",value:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}},{key:"negate",value:function(){return this.constant*=-1,this.normal.negate(),this}},{key:"distanceToPoint",value:function(e){return this.normal.dot(e)+this.constant}},{key:"distanceToSphere",value:function(e){return this.distanceToPoint(e.center)-e.radius}},{key:"projectPoint",value:function(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}},{key:"intersectLine",value:function(e,t){var n=e.delta(ti),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;var r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}},{key:"intersectsLine",value:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}},{key:"intersectsBox",value:function(e){return e.intersectsPlane(this)}},{key:"intersectsSphere",value:function(e){return e.intersectsPlane(this)}},{key:"coplanarPoint",value:function(e){return e.copy(this.normal).multiplyScalar(-this.constant)}},{key:"applyMatrix4",value:function(e,t){var n=t||ii.getNormalMatrix(e),i=this.coplanarPoint(ti).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}},{key:"translate",value:function(e){return this.constant-=e.dot(this.normal),this}},{key:"equals",value:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();ri.prototype.isPlane=!0;var ai=new st,li=new Fe,oi=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new ri,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new ri,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new ri,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new ri,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new ri,l=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new ri;_(this,e),this.planes=[t,n,i,r,a,l]}return b(e,[{key:"set",value:function(e,t,n,i,r,a){var l=this.planes;return l[0].copy(e),l[1].copy(t),l[2].copy(n),l[3].copy(i),l[4].copy(r),l[5].copy(a),this}},{key:"copy",value:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this}},{key:"setFromProjectionMatrix",value:function(e){var t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],l=n[3],o=n[4],s=n[5],u=n[6],h=n[7],c=n[8],m=n[9],d=n[10],p=n[11],q=n[12],f=n[13],v=n[14],x=n[15];return t[0].setComponents(l-i,h-o,p-c,x-q).normalize(),t[1].setComponents(l+i,h+o,p+c,x+q).normalize(),t[2].setComponents(l+r,h+s,p+m,x+f).normalize(),t[3].setComponents(l-r,h-s,p-m,x-f).normalize(),t[4].setComponents(l-a,h-u,p-d,x-v).normalize(),t[5].setComponents(l+a,h+u,p+d,x+v).normalize(),this}},{key:"intersectsObject",value:function(e){var t=e.geometry;return null===t.boundingSphere&&t.computeBoundingSphere(),ai.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(ai)}},{key:"intersectsSprite",value:function(e){return ai.center.set(0,0,0),ai.radius=.7071067811865476,ai.applyMatrix4(e.matrixWorld),this.intersectsSphere(ai)}},{key:"intersectsSphere",value:function(e){for(var t=this.planes,n=e.center,i=-e.radius,r=0;r<6;r++){if(t[r].distanceToPoint(n)<i)return!1}return!0}},{key:"intersectsBox",value:function(e){for(var t=this.planes,n=0;n<6;n++){var i=t[n];if(li.x=i.normal.x>0?e.max.x:e.min.x,li.y=i.normal.y>0?e.max.y:e.min.y,li.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(li)<0)return!1}return!0}},{key:"containsPoint",value:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();function si(){var e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function ui(e,t){var n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);var n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){var a=i.get(t);(!a||a.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version})}else{t.isInterleavedBufferAttribute&&(t=t.data);var l=i.get(t);void 0===l?i.set(t,function(t,i){var r=t.array,a=t.usage,l=e.createBuffer();e.bindBuffer(i,l),e.bufferData(i,r,a),t.onUploadCallback();var o=5126;return r instanceof Float32Array?o=5126:r instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):r instanceof Uint16Array?t.isFloat16BufferAttribute?n?o=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):o=5123:r instanceof Int16Array?o=5122:r instanceof Uint32Array?o=5125:r instanceof Int32Array?o=5124:r instanceof Int8Array?o=5120:(r instanceof Uint8Array||r instanceof Uint8ClampedArray)&&(o=5121),{buffer:l,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):l.version<t.version&&(!function(t,i,r){var a=i.array,l=i.updateRange;e.bindBuffer(r,t),-1===l.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,l.offset*a.BYTES_PER_ELEMENT,a,l.offset,l.count):e.bufferSubData(r,l.offset*a.BYTES_PER_ELEMENT,a.subarray(l.offset,l.offset+l.count)),l.count=-1)}(l.buffer,t,r),l.version=t.version)}}}}var hi=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;_(this,n),(e=t.call(this)).type="PlaneGeometry",e.parameters={width:i,height:r,widthSegments:a,heightSegments:l};for(var o=i/2,s=r/2,u=Math.floor(a),h=Math.floor(l),c=u+1,m=h+1,d=i/u,p=r/h,q=[],f=[],v=[],x=[],g=0;g<m;g++)for(var y=g*p-s,b=0;b<c;b++){var w=b*d-o;f.push(w,-y,0),v.push(0,0,1),x.push(b/u),x.push(1-g/h)}for(var M=0;M<h;M++)for(var S=0;S<u;S++){var T=S+c*M,E=S+c*(M+1),z=S+1+c*(M+1),k=S+1+c*M;q.push(T,E,k),q.push(E,z,k)}return e.setIndex(q),e.setAttribute("position",new fn(f,3)),e.setAttribute("normal",new fn(v,3)),e.setAttribute("uv",new fn(x,2)),e}return b(n,null,[{key:"fromJSON",value:function(e){return new n(e.width,e.height,e.widthSegments,e.heightSegments)}}]),n}(Mn),ci={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenTint, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenTint * ( D * V );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec;\n\t\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\t\treflectVec = reflect( - viewDir, normal );\n\t\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\t#else\n\t\t\t\treflectVec = refract( - viewDir, normal, refractionRatio );\n\t\t\t#endif\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tlightMapIrradiance *= PI;\n\t#endif\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointLightInfo( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotLightInfo( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalLightInfo( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( - dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#else\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\t#ifdef SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularTintFactor = specularTint;\n\t\t#ifdef USE_SPECULARINTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;\n\t\t#endif\n\t\t#ifdef USE_SPECULARTINTMAP\n\t\t\tspecularTintFactor *= specularTintMapTexelToLinear( texture2D( specularTintMap, vUv ) ).rgb;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularTintFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularTintFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenTint = sheenTint;\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenTint;\n\t\tfloat sheenRoughness;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\tvec3 FssEss = specularColor * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenTint, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1, 2 ) * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform vec2 morphTargetsTextureSize;\n\t\tvec3 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset, const in int stride ) {\n\t\t\tfloat texelIndex = float( vertexIndex * stride + offset );\n\t\t\tfloat y = floor( texelIndex / morphTargetsTextureSize.x );\n\t\t\tfloat x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tvec3 morphUV = vec3( ( x + 0.5 ) / morphTargetsTextureSize.x, y / morphTargetsTextureSize.y, morphTargetIndex );\n\t\t\treturn texture( morphTargetsTexture, morphUV ).xyz;\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\t#ifndef USE_MORPHNORMALS\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 1 ) * morphTargetInfluences[ i ];\n\t\t\t#else\n\t\t\t\tif ( morphTargetInfluences[ i ] > 0.0 ) transformed += getMorph( gl_VertexID, i, 0, 2 ) * morphTargetInfluences[ i ];\n\t\t\t#endif\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * faceDirection;\n\t\t\tbitangent = bitangent * faceDirection;\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\n\t\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tfloat transmissionAlpha = 1.0;\n\tfloat transmissionFactor = transmission;\n\tfloat thicknessFactor = thickness;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\ttransmissionFactor *= texture2D( transmissionMap, vUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\n\t\tattenuationTint, attenuationDistance );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );\n\ttransmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationTint;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tvec3 getVolumeTransmissionRay( vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( float roughness, float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( vec2 fragCoord, float roughness, float ior ) {\n\t\tfloat framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\treturn texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#else\n\t\t\treturn texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );\n\t\t#endif\n\t}\n\tvec3 applyVolumeAttenuation( vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance ) {\n\t\tif ( attenuationDistance == 0.0 ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( vec3 n, vec3 v, float roughness, vec3 diffuseColor, vec3 specularColor, float specularF90,\n\t\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness,\n\t\tvec3 attenuationColor, float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularTint;\n\t#ifdef USE_SPECULARINTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n\t#ifdef USE_SPECULARTINTMAP\n\t\tuniform sampler2D specularTintMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenTint;\n\tuniform float sheenRoughness;\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - clearcoat * Fcc ) + clearcoatSpecular * clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},mi={common:{diffuse:{value:new un(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new ze},uv2Transform:{value:new ze},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ee(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new un(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new un(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ze}},sprite:{diffuse:{value:new un(16777215)},opacity:{value:1},center:{value:new Ee(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new ze}}},di={basic:{uniforms:jn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.fog]),vertexShader:ci.meshbasic_vert,fragmentShader:ci.meshbasic_frag},lambert:{uniforms:jn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.fog,mi.lights,{emissive:{value:new un(0)}}]),vertexShader:ci.meshlambert_vert,fragmentShader:ci.meshlambert_frag},phong:{uniforms:jn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,mi.lights,{emissive:{value:new un(0)},specular:{value:new un(1118481)},shininess:{value:30}}]),vertexShader:ci.meshphong_vert,fragmentShader:ci.meshphong_frag},standard:{uniforms:jn([mi.common,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.roughnessmap,mi.metalnessmap,mi.fog,mi.lights,{emissive:{value:new un(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ci.meshphysical_vert,fragmentShader:ci.meshphysical_frag},toon:{uniforms:jn([mi.common,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.gradientmap,mi.fog,mi.lights,{emissive:{value:new un(0)}}]),vertexShader:ci.meshtoon_vert,fragmentShader:ci.meshtoon_frag},matcap:{uniforms:jn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,{matcap:{value:null}}]),vertexShader:ci.meshmatcap_vert,fragmentShader:ci.meshmatcap_frag},points:{uniforms:jn([mi.points,mi.fog]),vertexShader:ci.points_vert,fragmentShader:ci.points_frag},dashed:{uniforms:jn([mi.common,mi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ci.linedashed_vert,fragmentShader:ci.linedashed_frag},depth:{uniforms:jn([mi.common,mi.displacementmap]),vertexShader:ci.depth_vert,fragmentShader:ci.depth_frag},normal:{uniforms:jn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,{opacity:{value:1}}]),vertexShader:ci.meshnormal_vert,fragmentShader:ci.meshnormal_frag},sprite:{uniforms:jn([mi.sprite,mi.fog]),vertexShader:ci.sprite_vert,fragmentShader:ci.sprite_frag},background:{uniforms:{uvTransform:{value:new ze},t2D:{value:null}},vertexShader:ci.background_vert,fragmentShader:ci.background_frag},cube:{uniforms:jn([mi.envmap,{opacity:{value:1}}]),vertexShader:ci.cube_vert,fragmentShader:ci.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ci.equirect_vert,fragmentShader:ci.equirect_frag},distanceRGBA:{uniforms:jn([mi.common,mi.displacementmap,{referencePosition:{value:new Fe},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ci.distanceRGBA_vert,fragmentShader:ci.distanceRGBA_frag},shadow:{uniforms:jn([mi.lights,mi.fog,{color:{value:new un(0)},opacity:{value:1}}]),vertexShader:ci.shadow_vert,fragmentShader:ci.shadow_frag}};function pi(e,t,n,i,r){var a,l,o=new un(0),s=0,u=null,h=0,c=null;function m(e,t){n.buffers.color.setClear(e.r,e.g,e.b,t,r)}return{getClearColor:function(){return o},setClearColor:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;o.set(e),m(o,s=t)},getClearAlpha:function(){return s},setClearAlpha:function(e){m(o,s=e)},render:function(n,r){var d=!1,p=!0===r.isScene?r.background:null;p&&p.isTexture&&(p=t.get(p));var q=e.xr,f=q.getSession&&q.getSession();f&&"additive"===f.environmentBlendMode&&(p=null),null===p?m(o,s):p&&p.isColor&&(m(p,1),d=!0),(e.autoClear||d)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),p&&(p.isCubeTexture||p.mapping===A)?(void 0===l&&((l=new Hn(new Vn(1,1,1),new Yn({name:"BackgroundCubeMaterial",uniforms:Wn(di.cube.uniforms),vertexShader:di.cube.vertexShader,fragmentShader:di.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),i.update(l)),l.material.uniforms.envMap.value=p,l.material.uniforms.flipEnvMap.value=p.isCubeTexture&&!1===p.isRenderTargetTexture?-1:1,u===p&&h===p.version&&c===e.toneMapping||(l.material.needsUpdate=!0,u=p,h=p.version,c=e.toneMapping),n.unshift(l,l.geometry,l.material,0,0,null)):p&&p.isTexture&&(void 0===a&&((a=new Hn(new hi(2,2),new Yn({name:"BackgroundMaterial",uniforms:Wn(di.background.uniforms),vertexShader:di.background.vertexShader,fragmentShader:di.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1}))).geometry.deleteAttribute("normal"),Object.defineProperty(a.material,"map",{get:function(){return this.uniforms.t2D.value}}),i.update(a)),a.material.uniforms.t2D.value=p,!0===p.matrixAutoUpdate&&p.updateMatrix(),a.material.uniforms.uvTransform.value.copy(p.matrix),u===p&&h===p.version&&c===e.toneMapping||(a.material.needsUpdate=!0,u=p,h=p.version,c=e.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null))}}}function qi(e,t,n,i){var r=e.getParameter(34921),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),l=i.isWebGL2||null!==a,o={},s=m(null),u=s;function h(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function c(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function m(e){for(var t=[],n=[],i=[],a=0;a<r;a++)t[a]=0,n[a]=0,i[a]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function d(){for(var e=u.newAttributes,t=0,n=e.length;t<n;t++)e[t]=0}function p(e){q(e,0)}function q(n,r){var a=u.newAttributes,l=u.enabledAttributes,o=u.attributeDivisors;(a[n]=1,0===l[n]&&(e.enableVertexAttribArray(n),l[n]=1),o[n]!==r)&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r)}function f(){for(var t=u.newAttributes,n=u.enabledAttributes,i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function v(t,n,r,a,l,o){!0!==i.isWebGL2||5124!==r&&5125!==r?e.vertexAttribPointer(t,n,r,a,l,o):e.vertexAttribIPointer(t,n,r,l,o)}function x(){g(),u!==s&&h((u=s).object)}function g(){s.geometry=null,s.program=null,s.wireframe=!1}return{setup:function(r,s,c,x,g){var _=!1;if(l){var y=function(t,n,r){var l=!0===r.wireframe,s=o[t.id];void 0===s&&(s={},o[t.id]=s);var u=s[n.id];void 0===u&&(u={},s[n.id]=u);var h=u[l];void 0===h&&(h=m(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),u[l]=h);return h}(x,c,s);u!==y&&h((u=y).object),_=function(e,t){var n=u.attributes,i=e.attributes,r=0;for(var a in i){var l=n[a],o=i[a];if(void 0===l)return!0;if(l.attribute!==o)return!0;if(l.data!==o.data)return!0;r++}return u.attributesNum!==r||u.index!==t}(x,g),_&&function(e,t){var n={},i=e.attributes,r=0;for(var a in i){var l=i[a],o={};o.attribute=l,l.data&&(o.data=l.data),n[a]=o,r++}u.attributes=n,u.attributesNum=r,u.index=t}(x,g)}else{var b=!0===s.wireframe;u.geometry===x.id&&u.program===c.id&&u.wireframe===b||(u.geometry=x.id,u.program=c.id,u.wireframe=b,_=!0)}!0===r.isInstancedMesh&&(_=!0),null!==g&&n.update(g,34963),_&&(!function(r,a,l,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;d();var s=o.attributes,u=l.getAttributes(),h=a.defaultAttributeValues;for(var c in u){var m=u[c];if(m.location>=0){var x=s[c];if(void 0===x&&("instanceMatrix"===c&&r.instanceMatrix&&(x=r.instanceMatrix),"instanceColor"===c&&r.instanceColor&&(x=r.instanceColor)),void 0!==x){var g=x.normalized,_=x.itemSize,y=n.get(x);if(void 0===y)continue;var b=y.buffer,w=y.type,M=y.bytesPerElement;if(x.isInterleavedBufferAttribute){var S=x.data,T=S.stride,E=x.offset;if(S&&S.isInstancedInterleavedBuffer){for(var z=0;z<m.locationSize;z++)q(m.location+z,S.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=S.meshPerAttribute*S.count)}else for(var k=0;k<m.locationSize;k++)p(m.location+k);e.bindBuffer(34962,b);for(var A=0;A<m.locationSize;A++)v(m.location+A,_/m.locationSize,w,g,T*M,(E+_/m.locationSize*A)*M)}else{if(x.isInstancedBufferAttribute){for(var L=0;L<m.locationSize;L++)q(m.location+L,x.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=x.meshPerAttribute*x.count)}else for(var R=0;R<m.locationSize;R++)p(m.location+R);e.bindBuffer(34962,b);for(var P=0;P<m.locationSize;P++)v(m.location+P,_/m.locationSize,w,g,_*M,_/m.locationSize*P*M)}}else if(void 0!==h){var C=h[c];if(void 0!==C)switch(C.length){case 2:e.vertexAttrib2fv(m.location,C);break;case 3:e.vertexAttrib3fv(m.location,C);break;case 4:e.vertexAttrib4fv(m.location,C);break;default:e.vertexAttrib1fv(m.location,C)}}}}f()}(r,s,c,x),null!==g&&e.bindBuffer(34963,n.get(g).buffer))},reset:x,resetDefaultState:g,dispose:function(){for(var e in x(),o){var t=o[e];for(var n in t){var i=t[n];for(var r in i)c(i[r].object),delete i[r];delete t[n]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0!==o[e.id]){var t=o[e.id];for(var n in t){var i=t[n];for(var r in i)c(i[r].object),delete i[r];delete t[n]}delete o[e.id]}},releaseStatesOfProgram:function(e){for(var t in o){var n=o[t];if(void 0!==n[e.id]){var i=n[e.id];for(var r in i)c(i[r].object),delete i[r];delete n[e.id]}}},initAttributes:d,enableAttribute:p,disableUnusedAttributes:f}}function fi(e,t,n,i){var r,a=i.isWebGL2;this.setMode=function(e){r=e},this.render=function(t,i){e.drawArrays(r,t,i),n.update(i,r,1)},this.renderInstances=function(i,l,o){if(0!==o){var s,u;if(a)s=e,u="drawArraysInstanced";else if(u="drawArraysInstancedANGLE",null===(s=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");s[u](r,i,l,o),n.update(l,r,o)}}}function vi(e,t,n){var i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(35633,36338).precision>0&&e.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(35633,36337).precision>0&&e.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}var a="undefined"!=typeof WebGL2RenderingContext&&e instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&e instanceof WebGL2ComputeRenderingContext,l=void 0!==n.precision?n.precision:"highp",o=r(l);o!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",o,"instead."),l=o);var s=a||t.has("WEBGL_draw_buffers"),u=!0===n.logarithmicDepthBuffer,h=e.getParameter(34930),c=e.getParameter(35660),m=e.getParameter(3379),d=e.getParameter(34076),p=e.getParameter(34921),q=e.getParameter(36347),f=e.getParameter(36348),v=e.getParameter(36349),x=c>0,g=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:s,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){var n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:l,logarithmicDepthBuffer:u,maxTextures:h,maxVertexTextures:c,maxTextureSize:m,maxCubemapSize:d,maxAttributes:p,maxVertexUniforms:q,maxVaryings:f,maxFragmentUniforms:v,vertexTextures:x,floatFragmentTextures:g,floatVertexTextures:x&&g,maxSamples:a?e.getParameter(36183):0}}function xi(e){var t=this,n=null,i=0,r=!1,a=!1,l=new ri,o=new ze,s={value:null,needsUpdate:!1};function u(){s.value!==n&&(s.value=n,s.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function h(e,n,i,r){var a=null!==e?e.length:0,u=null;if(0!==a){if(u=s.value,!0!==r||null===u){var h=i+4*a,c=n.matrixWorldInverse;o.getNormalMatrix(c),(null===u||u.length<h)&&(u=new Float32Array(h));for(var m=0,d=i;m!==a;++m,d+=4)l.copy(e[m]).applyMatrix4(c,o),l.normal.toArray(u,d),u[d+3]=l.constant}s.value=u,s.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,u}this.uniform=s,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t,a){var l=0!==e.length||t||0!==i||r;return r=t,n=h(e,a,0),i=e.length,l},this.beginShadows=function(){a=!0,h(null)},this.endShadows=function(){a=!1,u()},this.setState=function(t,l,o){var c=t.clippingPlanes,m=t.clipIntersection,d=t.clipShadows,p=e.get(t);if(!r||null===c||0===c.length||a&&!d)a?h(null):u();else{var q=a?0:i,f=4*q,v=p.clippingState||null;s.value=v,v=h(c,l,f,o);for(var x=0;x!==f;++x)v[x]=n[x];p.clippingState=v,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=q}}}function gi(e){var t=new WeakMap;function n(e,t){return t===z?e.mapping=T:t===k&&(e.mapping=E),e}function i(e){var n=e.target;n.removeEventListener("dispose",i);var r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){var a=r.mapping;if(a===z||a===k){if(t.has(r))return n(t.get(r).texture,r.mapping);var l=r.image;if(l&&l.height>0){var o=e.getRenderTarget(),s=new ei(l.height/2);return s.fromEquirectangularTexture(e,r),t.set(r,s),e.setRenderTarget(o),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}return r},dispose:function(){t=new WeakMap}}}di.physical={uniforms:jn([di.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ee(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenTint:{value:new un(0)},sheenRoughness:{value:0},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new Ee},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationTint:{value:new un(0)},specularIntensity:{value:0},specularIntensityMap:{value:null},specularTint:{value:new un(1,1,1)},specularTintMap:{value:null}}]),vertexShader:ci.meshphysical_vert,fragmentShader:ci.meshphysical_frag};var _i=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:-1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.1,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2e3;return _(this,n),(e=t.call(this)).type="OrthographicCamera",e.zoom=1,e.view=null,e.left=i,e.right=r,e.top=a,e.bottom=l,e.near=o,e.far=s,e.updateProjectionMatrix(),e}return b(n,[{key:"copy",value:function(e,t){return h(g(n.prototype),"copy",this).call(this,e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}},{key:"setViewOffset",value:function(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}},{key:"clearViewOffset",value:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}},{key:"updateProjectionMatrix",value:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-e,a=n+e,l=i+t,o=i-t;if(null!==this.view&&this.view.enabled){var s=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a=(r+=s*this.view.offsetX)+s*this.view.width,o=(l-=u*this.view.offsetY)-u*this.view.height}this.projectionMatrix.makeOrthographic(r,a,l,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}]),n}(Zn);_i.prototype.isOrthographicCamera=!0;var yi=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this,e)).type="RawShaderMaterial",i}return b(n)}(Yn);yi.prototype.isRawShaderMaterial=!0;var bi=Math.pow(2,8),wi=[.125,.215,.35,.446,.526,.582],Mi=5+wi.length,Si=20,Ti=(d(r={},re,0),d(r,ae,1),d(r,oe,2),d(r,3004,3),d(r,3005,4),d(r,3006,5),d(r,le,6),r),Ei=new _i,zi=Bi(),ki=zi._lodPlanes,Ai=zi._sizeLods,Li=zi._sigmas,Ri=new un,Pi=null,Ci=(1+Math.sqrt(5))/2,Di=1/Ci,Ii=[new Fe(1,1,1),new Fe(-1,1,1),new Fe(1,1,-1),new Fe(-1,1,-1),new Fe(0,Ci,Di),new Fe(0,Ci,-Di),new Fe(Di,0,Ci),new Fe(-Di,0,Ci),new Fe(Ci,Di,0),new Fe(-Ci,Di,0)],Ni=function(){function e(t){var n,i,r;_(this,e),this._renderer=t,this._pingPongRenderTarget=null,this._blurMaterial=(n=Si,i=new Float32Array(n),r=new Fe(0,1,0),new yi({name:"SphericalGaussianBlur",defines:{n},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r},inputEncoding:{value:Ti[3e3]},outputEncoding:{value:Ti[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})),this._equirectShader=null,this._cubemapShader=null,this._compileMaterial(this._blurMaterial)}return b(e,[{key:"fromScene",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.1,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:100;Pi=this._renderer.getRenderTarget();var r=this._allocateTargets();return this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}},{key:"fromEquirectangular",value:function(e){return this._fromTexture(e)}},{key:"fromCubemap",value:function(e){return this._fromTexture(e)}},{key:"compileCubemapShader",value:function(){null===this._cubemapShader&&(this._cubemapShader=Gi(),this._compileMaterial(this._cubemapShader))}},{key:"compileEquirectangularShader",value:function(){null===this._equirectShader&&(this._equirectShader=Hi(),this._compileMaterial(this._equirectShader))}},{key:"dispose",value:function(){this._blurMaterial.dispose(),null!==this._cubemapShader&&this._cubemapShader.dispose(),null!==this._equirectShader&&this._equirectShader.dispose();for(var e=0;e<ki.length;e++)ki[e].dispose()}},{key:"_cleanup",value:function(e){this._pingPongRenderTarget.dispose(),this._renderer.setRenderTarget(Pi),e.scissorTest=!1,Ui(e,0,0,e.width,e.height)}},{key:"_fromTexture",value:function(e){Pi=this._renderer.getRenderTarget();var t=this._allocateTargets(e);return this._textureToCubeUV(e,t),this._applyPMREM(t),this._cleanup(t),t}},{key:"_allocateTargets",value:function(e){var t={magFilter:D,minFilter:D,generateMipmaps:!1,type:F,format:1023,encoding:Oi(e)?e.encoding:oe,depthBuffer:!1},n=Fi(t);return n.depthBuffer=!e,this._pingPongRenderTarget=Fi(t),n}},{key:"_compileMaterial",value:function(e){var t=new Hn(ki[0],e);this._renderer.compile(t,Ei)}},{key:"_sceneToCubeUV",value:function(e,t,n,i){var r=new Jn(90,1,t,n),a=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],o=this._renderer,s=o.autoClear,u=o.outputEncoding,h=o.toneMapping;o.getClearColor(Ri),o.toneMapping=0,o.outputEncoding=re,o.autoClear=!1;var c=new hn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),m=new Hn(new Vn,c),d=!1,p=e.background;p?p.isColor&&(c.color.copy(p),e.background=null,d=!0):(c.color.copy(Ri),d=!0);for(var q=0;q<6;q++){var f=q%3;0==f?(r.up.set(0,a[q],0),r.lookAt(l[q],0,0)):1==f?(r.up.set(0,0,a[q]),r.lookAt(0,l[q],0)):(r.up.set(0,a[q],0),r.lookAt(0,0,l[q])),Ui(i,f*bi,q>2?bi:0,bi,bi),o.setRenderTarget(i),d&&o.render(m,r),o.render(e,r)}m.geometry.dispose(),m.material.dispose(),o.toneMapping=h,o.outputEncoding=u,o.autoClear=s,e.background=p}},{key:"_setEncoding",value:function(e,t){!0===this._renderer.capabilities.isWebGL2&&t.format===X&&t.type===F&&t.encoding===ae?e.value=Ti[3e3]:e.value=Ti[t.encoding]}},{key:"_textureToCubeUV",value:function(e,t){var n=this._renderer;e.isCubeTexture?null==this._cubemapShader&&(this._cubemapShader=Gi()):null==this._equirectShader&&(this._equirectShader=Hi());var i=e.isCubeTexture?this._cubemapShader:this._equirectShader,r=new Hn(ki[0],i),a=i.uniforms;a.envMap.value=e,e.isCubeTexture||a.texelSize.value.set(1/e.image.width,1/e.image.height),this._setEncoding(a.inputEncoding,e),this._setEncoding(a.outputEncoding,t.texture),Ui(t,0,0,3*bi,2*bi),n.setRenderTarget(t),n.render(r,Ei)}},{key:"_applyPMREM",value:function(e){var t=this._renderer,n=t.autoClear;t.autoClear=!1;for(var i=1;i<Mi;i++){var r=Math.sqrt(Li[i]*Li[i]-Li[i-1]*Li[i-1]),a=Ii[(i-1)%Ii.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}},{key:"_blur",value:function(e,t,n,i,r){var a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}},{key:"_halfBlur",value:function(e,t,n,i,r,a,l){var o=this._renderer,s=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");var u=new Hn(ki[i],s),h=s.uniforms,c=Ai[n]-1,m=isFinite(r)?Math.PI/(2*c):2*Math.PI/39,d=r/m,p=isFinite(r)?1+Math.floor(3*d):Si;p>Si&&console.warn("sigmaRadians, ".concat(r,", is too large and will clip, as it requested ").concat(p," samples when the maximum is set to ").concat(Si));for(var q=[],f=0,v=0;v<Si;++v){var x=v/d,g=Math.exp(-x*x/2);q.push(g),0==v?f+=g:v<p&&(f+=2*g)}for(var _=0;_<q.length;_++)q[_]=q[_]/f;h.envMap.value=e.texture,h.samples.value=p,h.weights.value=q,h.latitudinal.value="latitudinal"===a,l&&(h.poleAxis.value=l),h.dTheta.value=m,h.mipInt.value=8-n,this._setEncoding(h.inputEncoding,e.texture),this._setEncoding(h.outputEncoding,e.texture);var y=Ai[i];Ui(t,3*Math.max(0,bi-2*y),(0===i?0:2*bi)+2*y*(i>4?i-8+4:0),3*y,2*y),o.setRenderTarget(t),o.render(u,Ei)}}]),e}();function Oi(e){return void 0!==e&&e.type===F&&(e.encoding===re||e.encoding===ae||e.encoding===le)}function Bi(){for(var e=[],t=[],n=[],i=8,r=0;r<Mi;r++){var a=Math.pow(2,i);t.push(a);var l=1/a;r>4?l=wi[r-8+4-1]:0==r&&(l=0),n.push(l);for(var o=1/(a-1),s=-o/2,u=1+o/2,h=[s,s,u,s,u,u,s,s,u,u,s,u],c=new Float32Array(108),m=new Float32Array(72),d=new Float32Array(36),p=0;p<6;p++){var q=p%3*2/3-1,f=p>2?0:-1,v=[q,f,0,q+2/3,f,0,q+2/3,f+1,0,q,f,0,q+2/3,f+1,0,q,f+1,0];c.set(v,18*p),m.set(h,12*p);var x=[p,p,p,p,p,p];d.set(x,6*p)}var g=new Mn;g.setAttribute("position",new dn(c,3)),g.setAttribute("uv",new dn(m,2)),g.setAttribute("faceIndex",new dn(d,1)),e.push(g),i>4&&i--}return{_lodPlanes:e,_sizeLods:t,_sigmas:n}}function Fi(e){var t=new Ne(3*bi,3*bi,e);return t.texture.mapping=A,t.texture.name="PMREM.cubeUv",t.scissorTest=!0,t}function Ui(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Hi(){var e=new Ee(1,1);return new yi({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null},texelSize:{value:e},inputEncoding:{value:Ti[3e3]},outputEncoding:{value:Ti[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})}function Gi(){return new yi({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},inputEncoding:{value:Ti[3e3]},outputEncoding:{value:Ti[3e3]}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t".concat("\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t","\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t"),blending:0,depthTest:!1,depthWrite:!1})}function Vi(e){var t=new WeakMap,n=null;function i(e){var n=e.target;n.removeEventListener("dispose",i);var r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){var a=r.mapping,l=a===z||a===k,o=a===T||a===E;if(l||o){if(t.has(r))return t.get(r).texture;var s=r.image;if(l&&s&&s.height>0||o&&s&&function(e){for(var t=0,n=6,i=0;i<n;i++)void 0!==e[i]&&t++;return t===n}(s)){var u=e.getRenderTarget();null===n&&(n=new Ni(e));var h=l?n.fromEquirectangular(r):n.fromCubemap(r);return t.set(r,h),e.setRenderTarget(u),r.addEventListener("dispose",i),h.texture}return null}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function Wi(e){var t={};function n(n){if(void 0!==t[n])return t[n];var i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("EXT_multisampled_render_to_texture")},get:function(e){var t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function ji(e,t,n,i){var r={},a=new WeakMap;function l(e){var o=e.target;for(var s in null!==o.index&&t.remove(o.index),o.attributes)t.remove(o.attributes[s]);o.removeEventListener("dispose",l),delete r[o.id];var u=a.get(o);u&&(t.remove(u),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){var n=[],i=e.index,r=e.attributes.position,l=0;if(null!==i){var o=i.array;l=i.version;for(var s=0,u=o.length;s<u;s+=3){var h=o[s+0],c=o[s+1],m=o[s+2];n.push(h,c,c,m,m,h)}}else{var d=r.array;l=r.version;for(var p=0,q=d.length/3-1;p<q;p+=3){var f=p+0,v=p+1,x=p+2;n.push(f,v,v,x,x,f)}}var g=new(ke(n)>65535?qn:pn)(n,1);g.version=l;var _=a.get(e);_&&t.remove(_),a.set(e,g)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",l),r[t.id]=!0,n.memory.geometries++),t},update:function(e){var n=e.attributes;for(var i in n)t.update(n[i],34962);var r=e.morphAttributes;for(var a in r)for(var l=r[a],o=0,s=l.length;o<s;o++)t.update(l[o],34962)},getWireframeAttribute:function(e){var t=a.get(e);if(t){var n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function Xi(e,t,n,i){var r,a,l,o=i.isWebGL2;this.setMode=function(e){r=e},this.setIndex=function(e){a=e.type,l=e.bytesPerElement},this.render=function(t,i){e.drawElements(r,i,a,t*l),n.update(i,r,1)},this.renderInstances=function(i,s,u){if(0!==u){var h,c;if(o)h=e,c="drawElementsInstanced";else if(c="drawElementsInstancedANGLE",null===(h=t.get("ANGLE_instanced_arrays")))return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");h[c](r,s,a,i*l,u),n.update(s,r,u)}}}function Yi(e){var t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(e,n,i){switch(t.calls++,n){case 4:t.triangles+=i*(e/3);break;case 1:t.lines+=i*(e/2);break;case 3:t.lines+=i*(e-1);break;case 2:t.lines+=i*e;break;case 0:t.points+=i*e;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}var Zi=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _(this,n),(e=t.call(this,null)).image={data:i,width:r,height:a,depth:l},e.magFilter=D,e.minFilter=D,e.wrapR=P,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return b(n)}(Ce);function Ji(e,t){return e[0]-t[0]}function Ki(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Qi(e,t){var n=1,i=t.isInterleavedBufferAttribute?t.data.array:t.array;i instanceof Int8Array?n=127:i instanceof Int16Array?n=32767:i instanceof Int32Array?n=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",i),e.divideScalar(n)}function $i(e,t,n){for(var i={},r=new Float32Array(8),a=new WeakMap,l=new Fe,o=[],s=0;s<8;s++)o[s]=[s,0];return{update:function(s,u,h,c){var m=s.morphTargetInfluences;if(!0===t.isWebGL2){var d=u.morphAttributes.position.length,p=a.get(u);if(void 0===p||p.count!==d){void 0!==p&&p.texture.dispose();var q=void 0!==u.morphAttributes.normal,f=u.morphAttributes.position,v=u.morphAttributes.normal||[],x=!0===q?2:1,g=u.attributes.position.count*x,_=1;g>t.maxTextureSize&&(_=Math.ceil(g/t.maxTextureSize),g=t.maxTextureSize);var y=new Float32Array(g*_*4*d),b=new Zi(y,g,_,d);b.format=X,b.type=G;for(var w=4*x,M=0;M<d;M++)for(var S=f[M],T=v[M],E=g*_*4*M,z=0;z<S.count;z++){l.fromBufferAttribute(S,z),!0===S.normalized&&Qi(l,S);var k=z*w;y[E+k+0]=l.x,y[E+k+1]=l.y,y[E+k+2]=l.z,y[E+k+3]=0,!0===q&&(l.fromBufferAttribute(T,z),!0===T.normalized&&Qi(l,T),y[E+k+4]=l.x,y[E+k+5]=l.y,y[E+k+6]=l.z,y[E+k+7]=0)}p={count:d,texture:b,size:new Ee(g,_)},a.set(u,p)}for(var A=0,L=0;L<m.length;L++)A+=m[L];var R=u.morphTargetsRelative?1:1-A;c.getUniforms().setValue(e,"morphTargetBaseInfluence",R),c.getUniforms().setValue(e,"morphTargetInfluences",m),c.getUniforms().setValue(e,"morphTargetsTexture",p.texture,n),c.getUniforms().setValue(e,"morphTargetsTextureSize",p.size)}else{var P=void 0===m?0:m.length,C=i[u.id];if(void 0===C||C.length!==P){C=[];for(var D=0;D<P;D++)C[D]=[D,0];i[u.id]=C}for(var I=0;I<P;I++){var N=C[I];N[0]=I,N[1]=m[I]}C.sort(Ki);for(var O=0;O<8;O++)O<P&&C[O][1]?(o[O][0]=C[O][0],o[O][1]=C[O][1]):(o[O][0]=Number.MAX_SAFE_INTEGER,o[O][1]=0);o.sort(Ji);for(var B=u.morphAttributes.position,F=u.morphAttributes.normal,U=0,H=0;H<8;H++){var V=o[H],W=V[0],j=V[1];W!==Number.MAX_SAFE_INTEGER&&j?(B&&u.getAttribute("morphTarget"+H)!==B[W]&&u.setAttribute("morphTarget"+H,B[W]),F&&u.getAttribute("morphNormal"+H)!==F[W]&&u.setAttribute("morphNormal"+H,F[W]),r[H]=j,U+=j):(B&&!0===u.hasAttribute("morphTarget"+H)&&u.deleteAttribute("morphTarget"+H),F&&!0===u.hasAttribute("morphNormal"+H)&&u.deleteAttribute("morphNormal"+H),r[H]=0)}var Y=u.morphTargetsRelative?1:1-U;c.getUniforms().setValue(e,"morphTargetBaseInfluence",Y),c.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function er(e,t,n,i){var r=new WeakMap;function a(e){var t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(e){var l=i.render.frame,o=e.geometry,s=t.get(e,o);return r.get(s)!==l&&(t.update(s),r.set(s,l)),e.isInstancedMesh&&(!1===e.hasEventListener("dispose",a)&&e.addEventListener("dispose",a),n.update(e.instanceMatrix,34962),null!==e.instanceColor&&n.update(e.instanceColor,34962)),s},dispose:function(){r=new WeakMap}}}Zi.prototype.isDataTexture2DArray=!0;var tr=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _(this,n),(e=t.call(this,null)).image={data:i,width:r,height:a,depth:l},e.magFilter=D,e.minFilter=D,e.wrapR=P,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return b(n)}(Ce);tr.prototype.isDataTexture3D=!0;var nr=new Ce,ir=new Zi,rr=new tr,ar=new $n,lr=[],or=[],sr=new Float32Array(16),ur=new Float32Array(9),hr=new Float32Array(4);function cr(e,t,n){var i=e[0];if(i<=0||i>0)return e;var r=t*n,a=lr[r];if(void 0===a&&(a=new Float32Array(r),lr[r]=a),0!==t){i.toArray(a,0);for(var l=1,o=0;l!==t;++l)o+=n,e[l].toArray(a,o)}return a}function mr(e,t){if(e.length!==t.length)return!1;for(var n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function dr(e,t){for(var n=0,i=t.length;n<i;n++)e[n]=t[n]}function pr(e,t){var n=or[t];void 0===n&&(n=new Int32Array(t),or[t]=n);for(var i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function qr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function fr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(mr(n,t))return;e.uniform2fv(this.addr,t),dr(n,t)}}function vr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(mr(n,t))return;e.uniform3fv(this.addr,t),dr(n,t)}}function xr(e,t){var n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(mr(n,t))return;e.uniform4fv(this.addr,t),dr(n,t)}}function gr(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(mr(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),dr(n,t)}else{if(mr(n,i))return;hr.set(i),e.uniformMatrix2fv(this.addr,!1,hr),dr(n,i)}}function _r(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(mr(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),dr(n,t)}else{if(mr(n,i))return;ur.set(i),e.uniformMatrix3fv(this.addr,!1,ur),dr(n,i)}}function yr(e,t){var n=this.cache,i=t.elements;if(void 0===i){if(mr(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),dr(n,t)}else{if(mr(n,i))return;sr.set(i),e.uniformMatrix4fv(this.addr,!1,sr),dr(n,i)}}function br(e,t){var n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function wr(e,t){var n=this.cache;mr(n,t)||(e.uniform2iv(this.addr,t),dr(n,t))}function Mr(e,t){var n=this.cache;mr(n,t)||(e.uniform3iv(this.addr,t),dr(n,t))}function Sr(e,t){var n=this.cache;mr(n,t)||(e.uniform4iv(this.addr,t),dr(n,t))}function Tr(e,t){var n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function Er(e,t){var n=this.cache;mr(n,t)||(e.uniform2uiv(this.addr,t),dr(n,t))}function zr(e,t){var n=this.cache;mr(n,t)||(e.uniform3uiv(this.addr,t),dr(n,t))}function kr(e,t){var n=this.cache;mr(n,t)||(e.uniform4uiv(this.addr,t),dr(n,t))}function Ar(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTexture2D(t||nr,r)}function Lr(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||rr,r)}function Rr(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.safeSetTextureCube(t||ar,r)}function Pr(e,t,n){var i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||ir,r)}function Cr(e,t){e.uniform1fv(this.addr,t)}function Dr(e,t){var n=cr(t,this.size,2);e.uniform2fv(this.addr,n)}function Ir(e,t){var n=cr(t,this.size,3);e.uniform3fv(this.addr,n)}function Nr(e,t){var n=cr(t,this.size,4);e.uniform4fv(this.addr,n)}function Or(e,t){var n=cr(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Br(e,t){var n=cr(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Fr(e,t){var n=cr(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Ur(e,t){e.uniform1iv(this.addr,t)}function Hr(e,t){e.uniform2iv(this.addr,t)}function Gr(e,t){e.uniform3iv(this.addr,t)}function Vr(e,t){e.uniform4iv(this.addr,t)}function Wr(e,t){e.uniform1uiv(this.addr,t)}function jr(e,t){e.uniform2uiv(this.addr,t)}function Xr(e,t){e.uniform3uiv(this.addr,t)}function Yr(e,t){e.uniform4uiv(this.addr,t)}function Zr(e,t,n){var i=t.length,r=pr(n,i);e.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.safeSetTexture2D(t[a]||nr,r[a])}function Jr(e,t,n){var i=t.length,r=pr(n,i);e.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.safeSetTextureCube(t[a]||ar,r[a])}function Kr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return qr;case 35664:return fr;case 35665:return vr;case 35666:return xr;case 35674:return gr;case 35675:return _r;case 35676:return yr;case 5124:case 35670:return br;case 35667:case 35671:return wr;case 35668:case 35672:return Mr;case 35669:case 35673:return Sr;case 5125:return Tr;case 36294:return Er;case 36295:return zr;case 36296:return kr;case 35678:case 36198:case 36298:case 36306:case 35682:return Ar;case 35679:case 36299:case 36307:return Lr;case 35680:case 36300:case 36308:case 36293:return Rr;case 36289:case 36303:case 36311:case 36292:return Pr}}(t.type)}function Qr(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Cr;case 35664:return Dr;case 35665:return Ir;case 35666:return Nr;case 35674:return Or;case 35675:return Br;case 35676:return Fr;case 5124:case 35670:return Ur;case 35667:case 35671:return Hr;case 35668:case 35672:return Gr;case 35669:case 35673:return Vr;case 5125:return Wr;case 36294:return jr;case 36295:return Xr;case 36296:return Yr;case 35678:case 36198:case 36298:case 36306:case 35682:return Zr;case 35680:case 36300:case 36308:case 36293:return Jr}}(t.type)}function $r(e){this.id=e,this.seq=[],this.map={}}Qr.prototype.updateCache=function(e){var t=this.cache;e instanceof Float32Array&&t.length!==e.length&&(this.cache=new Float32Array(e.length)),dr(t,e)},$r.prototype.setValue=function(e,t,n){for(var i=this.seq,r=0,a=i.length;r!==a;++r){var l=i[r];l.setValue(e,t[l.id],n)}};var ea=/(\w+)(\])?(\[|\.)?/g;function ta(e,t){e.seq.push(t),e.map[t.id]=t}function na(e,t,n){var i=e.name,r=i.length;for(ea.lastIndex=0;;){var a=ea.exec(i),l=ea.lastIndex,o=a[1],s="]"===a[2],u=a[3];if(s&&(o|=0),void 0===u||"["===u&&l+2===r){ta(n,void 0===u?new Kr(o,e,t):new Qr(o,e,t));break}var h=n.map[o];void 0===h&&ta(n,h=new $r(o)),n=h}}function ia(e,t){this.seq=[],this.map={};for(var n=e.getProgramParameter(t,35718),i=0;i<n;++i){var r=e.getActiveUniform(t,i);na(r,e.getUniformLocation(t,r.name),this)}}function ra(e,t,n){var i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}ia.prototype.setValue=function(e,t,n,i){var r=this.map[t];void 0!==r&&r.setValue(e,n,i)},ia.prototype.setOptional=function(e,t,n){var i=t[n];void 0!==i&&this.setValue(e,n,i)},ia.upload=function(e,t,n,i){for(var r=0,a=t.length;r!==a;++r){var l=t[r],o=n[l.id];!1!==o.needsUpdate&&l.setValue(e,o.value,i)}},ia.seqWithValue=function(e,t){for(var n=[],i=0,r=e.length;i!==r;++i){var a=e[i];a.id in t&&n.push(a)}return n};var aa=0;function la(e){switch(e){case re:return["Linear","( value )"];case ae:return["sRGB","( value )"];case oe:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case le:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",e),["Linear","( value )"]}}function oa(e,t,n){var i=e.getShaderParameter(t,35713),r=e.getShaderInfoLog(t).trim();return i&&""===r?"":n.toUpperCase()+"\n\n"+r+"\n\n"+function(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}(e.getShaderSource(t))}function sa(e,t){var n=la(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function ua(e,t){var n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function ha(e){return""!==e}function ca(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ma(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}var da=/^[ \t]*#include +<([\w\d./]+)>/gm;function pa(e){return e.replace(da,qa)}function qa(e,t){var n=ci[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return pa(n)}var fa=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,va=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function xa(e){return e.replace(va,_a).replace(fa,ga)}function ga(e,t,n,i){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),_a(e,t,n,i)}function _a(e,t,n,i){for(var r="",a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function ya(e){var t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ba(e,t,n,i){var r,a,l,o,s,u=e.getContext(),h=n.defines,c=n.vertexShader,m=n.fragmentShader,d=function(e){var t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),p=function(e){var t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case T:case E:t="ENVMAP_TYPE_CUBE";break;case A:case L:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),q=function(e){var t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case E:case L:t="ENVMAP_MODE_REFRACTION"}return t}(n),f=function(e){var t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),v=e.gammaFactor>0?e.gammaFactor:1,x=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUV||e.bumpMap||e.tangentSpaceNormalMap||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ha).join("\n")}(n),g=function(e){var t=[];for(var n in e){var i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(h),_=u.createProgram(),y=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?((r=[g].filter(ha).join("\n")).length>0&&(r+="\n"),(a=[x,g].filter(ha).join("\n")).length>0&&(a+="\n")):(r=[ya(n),"#define SHADER_NAME "+n.shaderName,g,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+v,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+q:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargets&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(ha).join("\n"),a=[x,ya(n),"#define SHADER_NAME "+n.shaderName,g,"#define GAMMA_FACTOR "+v,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+p:"",n.envMap?"#define "+q:"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",n.specularTintMap?"#define USE_SPECULARTINTMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+d:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?ci.tonemapping_pars_fragment:"",0!==n.toneMapping?ua("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.format===j?"#define OPAQUE":"",ci.encodings_pars_fragment,n.map?sa("mapTexelToLinear",n.mapEncoding):"",n.matcap?sa("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?sa("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?sa("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.specularTintMap?sa("specularTintMapTexelToLinear",n.specularTintMapEncoding):"",n.lightMap?sa("lightMapTexelToLinear",n.lightMapEncoding):"",(l="linearToOutputTexel",o=n.outputEncoding,s=la(o),"vec4 "+l+"( vec4 value ) { return LinearTo"+s[0]+s[1]+"; }"),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(ha).join("\n")),c=ma(c=ca(c=pa(c),n),n),m=ma(m=ca(m=pa(m),n),n),c=xa(c),m=xa(m),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(y="#version 300 es\n",r=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+r,a=["#define varying in",n.glslVersion===ce?"":"out highp vec4 pc_fragColor;",n.glslVersion===ce?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+a);var b,w,M=y+a+m,S=ra(u,35633,y+r+c),z=ra(u,35632,M);if(u.attachShader(_,S),u.attachShader(_,z),void 0!==n.index0AttributeName?u.bindAttribLocation(_,0,n.index0AttributeName):!0===n.morphTargets&&u.bindAttribLocation(_,0,"position"),u.linkProgram(_),e.debug.checkShaderErrors){var k=u.getProgramInfoLog(_).trim(),R=u.getShaderInfoLog(S).trim(),P=u.getShaderInfoLog(z).trim(),C=!0,D=!0;if(!1===u.getProgramParameter(_,35714)){C=!1;var I=oa(u,S,"vertex"),N=oa(u,z,"fragment");console.error("THREE.WebGLProgram: Shader Error "+u.getError()+" - VALIDATE_STATUS "+u.getProgramParameter(_,35715)+"\n\nProgram Info Log: "+k+"\n"+I+"\n"+N)}else""!==k?console.warn("THREE.WebGLProgram: Program Info Log:",k):""!==R&&""!==P||(D=!1);D&&(this.diagnostics={runnable:C,programLog:k,vertexShader:{log:R,prefix:r},fragmentShader:{log:P,prefix:a}})}return u.deleteShader(S),u.deleteShader(z),this.getUniforms=function(){return void 0===b&&(b=new ia(u,_)),b},this.getAttributes=function(){return void 0===w&&(w=function(e,t){for(var n={},i=e.getProgramParameter(t,35721),r=0;r<i;r++){var a=e.getActiveAttrib(t,r),l=a.name,o=1;35674===a.type&&(o=2),35675===a.type&&(o=3),35676===a.type&&(o=4),n[l]={type:a.type,location:e.getAttribLocation(t,l),locationSize:o}}return n}(u,_)),w},this.destroy=function(){i.releaseStatesOfProgram(this),u.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=aa++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=z,this}function wa(e,t,n,i,r,a,l){var o=[],s=r.isWebGL2,u=r.logarithmicDepthBuffer,h=r.floatVertexTextures,c=r.maxVertexUniforms,m=r.vertexTextures,d=r.precision,p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},q=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoat","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","specularIntensityMap","specularTintMap","specularTintMapEncoding","roughnessMap","metalnessMap","gradientMap","alphaMap","alphaTest","combine","vertexColors","vertexAlphas","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","morphTargetsCount","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","format","sheen","transmission","transmissionMap","thicknessMap"];function f(e){var t;return e&&e.isTexture?t=e.encoding:e&&e.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),t=e.texture.encoding):t=re,s&&e&&e.isTexture&&e.format===X&&e.type===F&&e.encoding===ae&&(t=re),t}return{getParameters:function(a,o,q,v,x){var g,_,y=v.fog,b=a.isMeshStandardMaterial?v.environment:null,w=(a.isMeshStandardMaterial?n:t).get(a.envMap||b),M=p[a.type],S=x.isSkinnedMesh?function(e){var t=e.skeleton.bones;if(h)return 1024;var n=c,i=Math.floor((n-20)/4),r=Math.min(i,t.length);return r<t.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+t.length+" bones. This GPU supports "+r+"."),0):r}(x):0;if(null!==a.precision&&(d=r.getMaxPrecision(a.precision))!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",d,"instead."),M){var T=di[M];g=T.vertexShader,_=T.fragmentShader}else g=a.vertexShader,_=a.fragmentShader;var E=e.getRenderTarget(),z=a.alphaTest>0,k=a.clearcoat>0;return{isWebGL2:s,shaderID:M,shaderName:a.type,vertexShader:g,fragmentShader:_,defines:a.defines,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:d,instancing:!0===x.isInstancedMesh,instancingColor:!0===x.isInstancedMesh&&null!==x.instanceColor,supportsVertexTextures:m,outputEncoding:null!==E?f(E.texture):e.outputEncoding,map:!!a.map,mapEncoding:f(a.map),matcap:!!a.matcap,matcapEncoding:f(a.matcap),envMap:!!w,envMapMode:w&&w.mapping,envMapEncoding:f(w),envMapCubeUV:!!w&&(w.mapping===A||w.mapping===L),lightMap:!!a.lightMap,lightMapEncoding:f(a.lightMap),aoMap:!!a.aoMap,emissiveMap:!!a.emissiveMap,emissiveMapEncoding:f(a.emissiveMap),bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,objectSpaceNormalMap:1===a.normalMapType,tangentSpaceNormalMap:0===a.normalMapType,clearcoat:k,clearcoatMap:k&&!!a.clearcoatMap,clearcoatRoughnessMap:k&&!!a.clearcoatRoughnessMap,clearcoatNormalMap:k&&!!a.clearcoatNormalMap,displacementMap:!!a.displacementMap,roughnessMap:!!a.roughnessMap,metalnessMap:!!a.metalnessMap,specularMap:!!a.specularMap,specularIntensityMap:!!a.specularIntensityMap,specularTintMap:!!a.specularTintMap,specularTintMapEncoding:f(a.specularTintMap),alphaMap:!!a.alphaMap,alphaTest:z,gradientMap:!!a.gradientMap,sheen:a.sheen>0,transmission:a.transmission>0,transmissionMap:!!a.transmissionMap,thicknessMap:!!a.thicknessMap,combine:a.combine,vertexTangents:!!a.normalMap&&!!x.geometry&&!!x.geometry.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!x.geometry&&!!x.geometry.attributes.color&&4===x.geometry.attributes.color.itemSize,vertexUvs:!!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatMap||a.clearcoatRoughnessMap||a.clearcoatNormalMap||a.displacementMap||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularTintMap),uvsVertexOnly:!(a.map||a.bumpMap||a.normalMap||a.specularMap||a.alphaMap||a.emissiveMap||a.roughnessMap||a.metalnessMap||a.clearcoatNormalMap||a.transmission>0||a.transmissionMap||a.thicknessMap||a.specularIntensityMap||a.specularTintMap||!a.displacementMap),fog:!!y,useFog:a.fog,fogExp2:y&&y.isFogExp2,flatShading:!!a.flatShading,sizeAttenuation:a.sizeAttenuation,logarithmicDepthBuffer:u,skinning:!0===x.isSkinnedMesh&&S>0,maxBones:S,useVertexTexture:h,morphTargets:!!x.geometry&&!!x.geometry.morphAttributes.position,morphNormals:!!x.geometry&&!!x.geometry.morphAttributes.normal,morphTargetsCount:x.geometry&&x.geometry.morphAttributes.position?x.geometry.morphAttributes.position.length:0,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numClippingPlanes:l.numPlanes,numClipIntersection:l.numIntersection,format:a.format,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&q.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:0,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:2===a.side,flipSided:1===a.side,depthPacking:void 0!==a.depthPacking&&a.depthPacking,index0AttributeName:a.index0AttributeName,extensionDerivatives:a.extensions&&a.extensions.derivatives,extensionFragDepth:a.extensions&&a.extensions.fragDepth,extensionDrawBuffers:a.extensions&&a.extensions.drawBuffers,extensionShaderTextureLOD:a.extensions&&a.extensions.shaderTextureLOD,rendererExtensionFragDepth:s||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:s||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:s||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.fragmentShader),n.push(t.vertexShader)),void 0!==t.defines)for(var i in t.defines)n.push(i),n.push(t.defines[i]);if(!1===t.isRawShaderMaterial){for(var r=0;r<q.length;r++)n.push(t[q[r]]);n.push(e.outputEncoding),n.push(e.gammaFactor)}return n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){var t,n=p[e.type];if(n){var i=di[n];t=Xn.clone(i.uniforms)}else t=e.uniforms;return t},acquireProgram:function(t,n){for(var i,r=0,l=o.length;r<l;r++){var s=o[r];if(s.cacheKey===n){++(i=s).usedTimes;break}}return void 0===i&&(i=new ba(e,n,t,a),o.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){var t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},programs:o}}function Ma(){var e=new WeakMap;return{get:function(t){var n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function Sa(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.program!==t.program?e.program.id-t.program.id:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function Ta(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function Ea(e){var t=[],n=0,i=[],r=[],a=[],l={id:-1};function o(i,r,a,o,s,u){var h=t[n],c=e.get(a);return void 0===h?(h={id:i.id,object:i,geometry:r,material:a,program:c.program||l,groupOrder:o,renderOrder:i.renderOrder,z:s,group:u},t[n]=h):(h.id=i.id,h.object=i,h.geometry=r,h.material=a,h.program=c.program||l,h.groupOrder=o,h.renderOrder=i.renderOrder,h.z=s,h.group=u),n++,h}return{opaque:i,transmissive:r,transparent:a,init:function(){n=0,i.length=0,r.length=0,a.length=0},push:function(e,t,n,l,s,u){var h=o(e,t,n,l,s,u);n.transmission>0?r.push(h):!0===n.transparent?a.push(h):i.push(h)},unshift:function(e,t,n,l,s,u){var h=o(e,t,n,l,s,u);n.transmission>0?r.unshift(h):!0===n.transparent?a.unshift(h):i.unshift(h)},finish:function(){for(var e=n,i=t.length;e<i;e++){var r=t[e];if(null===r.id)break;r.id=null,r.object=null,r.geometry=null,r.material=null,r.program=null,r.group=null}},sort:function(e,t){i.length>1&&i.sort(e||Sa),r.length>1&&r.sort(t||Ta),a.length>1&&a.sort(t||Ta)}}}function za(e){var t=new WeakMap;return{get:function(n,i){var r;return!1===t.has(n)?(r=new Ea(e),t.set(n,[r])):i>=t.get(n).length?(r=new Ea(e),t.get(n).push(r)):r=t.get(n)[i],r},dispose:function(){t=new WeakMap}}}function ka(){var e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new Fe,color:new un};break;case"SpotLight":n={position:new Fe,direction:new Fe,color:new un,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new Fe,color:new un,distance:0,decay:0};break;case"HemisphereLight":n={direction:new Fe,skyColor:new un,groundColor:new un};break;case"RectAreaLight":n={color:new un,position:new Fe,halfWidth:new Fe,halfHeight:new Fe}}return e[t.id]=n,n}}}var Aa=0;function La(e,t){return(t.castShadow?1:0)-(e.castShadow?1:0)}function Ra(e,t){for(var n,i=new ka,r=(n={},{get:function(e){if(void 0!==n[e.id])return n[e.id];var t;switch(e.type){case"DirectionalLight":case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ee,shadowCameraNear:1,shadowCameraFar:1e3}}return n[e.id]=t,t}}),a={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]},l=0;l<9;l++)a.probe.push(new Fe);var o=new Fe,s=new vt,u=new vt;return{setup:function(n,l){for(var o=0,s=0,u=0,h=0;h<9;h++)a.probe[h].set(0,0,0);var c=0,m=0,d=0,p=0,q=0,f=0,v=0,x=0;n.sort(La);for(var g=!0!==l?Math.PI:1,_=0,y=n.length;_<y;_++){var b=n[_],w=b.color,M=b.intensity,S=b.distance,T=b.shadow&&b.shadow.map?b.shadow.map.texture:null;if(b.isAmbientLight)o+=w.r*M*g,s+=w.g*M*g,u+=w.b*M*g;else if(b.isLightProbe)for(var E=0;E<9;E++)a.probe[E].addScaledVector(b.sh.coefficients[E],M);else if(b.isDirectionalLight){var z=i.get(b);if(z.color.copy(b.color).multiplyScalar(b.intensity*g),b.castShadow){var k=b.shadow,A=r.get(b);A.shadowBias=k.bias,A.shadowNormalBias=k.normalBias,A.shadowRadius=k.radius,A.shadowMapSize=k.mapSize,a.directionalShadow[c]=A,a.directionalShadowMap[c]=T,a.directionalShadowMatrix[c]=b.shadow.matrix,f++}a.directional[c]=z,c++}else if(b.isSpotLight){var L=i.get(b);if(L.position.setFromMatrixPosition(b.matrixWorld),L.color.copy(w).multiplyScalar(M*g),L.distance=S,L.coneCos=Math.cos(b.angle),L.penumbraCos=Math.cos(b.angle*(1-b.penumbra)),L.decay=b.decay,b.castShadow){var R=b.shadow,P=r.get(b);P.shadowBias=R.bias,P.shadowNormalBias=R.normalBias,P.shadowRadius=R.radius,P.shadowMapSize=R.mapSize,a.spotShadow[d]=P,a.spotShadowMap[d]=T,a.spotShadowMatrix[d]=b.shadow.matrix,x++}a.spot[d]=L,d++}else if(b.isRectAreaLight){var C=i.get(b);C.color.copy(w).multiplyScalar(M),C.halfWidth.set(.5*b.width,0,0),C.halfHeight.set(0,.5*b.height,0),a.rectArea[p]=C,p++}else if(b.isPointLight){var D=i.get(b);if(D.color.copy(b.color).multiplyScalar(b.intensity*g),D.distance=b.distance,D.decay=b.decay,b.castShadow){var I=b.shadow,N=r.get(b);N.shadowBias=I.bias,N.shadowNormalBias=I.normalBias,N.shadowRadius=I.radius,N.shadowMapSize=I.mapSize,N.shadowCameraNear=I.camera.near,N.shadowCameraFar=I.camera.far,a.pointShadow[m]=N,a.pointShadowMap[m]=T,a.pointShadowMatrix[m]=b.shadow.matrix,v++}a.point[m]=D,m++}else if(b.isHemisphereLight){var O=i.get(b);O.skyColor.copy(b.color).multiplyScalar(M*g),O.groundColor.copy(b.groundColor).multiplyScalar(M*g),a.hemi[q]=O,q++}}p>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(a.rectAreaLTC1=mi.LTC_FLOAT_1,a.rectAreaLTC2=mi.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(a.rectAreaLTC1=mi.LTC_HALF_1,a.rectAreaLTC2=mi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),a.ambient[0]=o,a.ambient[1]=s,a.ambient[2]=u;var B=a.hash;B.directionalLength===c&&B.pointLength===m&&B.spotLength===d&&B.rectAreaLength===p&&B.hemiLength===q&&B.numDirectionalShadows===f&&B.numPointShadows===v&&B.numSpotShadows===x||(a.directional.length=c,a.spot.length=d,a.rectArea.length=p,a.point.length=m,a.hemi.length=q,a.directionalShadow.length=f,a.directionalShadowMap.length=f,a.pointShadow.length=v,a.pointShadowMap.length=v,a.spotShadow.length=x,a.spotShadowMap.length=x,a.directionalShadowMatrix.length=f,a.pointShadowMatrix.length=v,a.spotShadowMatrix.length=x,B.directionalLength=c,B.pointLength=m,B.spotLength=d,B.rectAreaLength=p,B.hemiLength=q,B.numDirectionalShadows=f,B.numPointShadows=v,B.numSpotShadows=x,a.version=Aa++)},setupView:function(e,t){for(var n=0,i=0,r=0,l=0,h=0,c=t.matrixWorldInverse,m=0,d=e.length;m<d;m++){var p=e[m];if(p.isDirectionalLight){var q=a.directional[n];q.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),q.direction.sub(o),q.direction.transformDirection(c),n++}else if(p.isSpotLight){var f=a.spot[r];f.position.setFromMatrixPosition(p.matrixWorld),f.position.applyMatrix4(c),f.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),f.direction.sub(o),f.direction.transformDirection(c),r++}else if(p.isRectAreaLight){var v=a.rectArea[l];v.position.setFromMatrixPosition(p.matrixWorld),v.position.applyMatrix4(c),u.identity(),s.copy(p.matrixWorld),s.premultiply(c),u.extractRotation(s),v.halfWidth.set(.5*p.width,0,0),v.halfHeight.set(0,.5*p.height,0),v.halfWidth.applyMatrix4(u),v.halfHeight.applyMatrix4(u),l++}else if(p.isPointLight){var x=a.point[i];x.position.setFromMatrixPosition(p.matrixWorld),x.position.applyMatrix4(c),i++}else if(p.isHemisphereLight){var g=a.hemi[h];g.direction.setFromMatrixPosition(p.matrixWorld),g.direction.transformDirection(c),g.direction.normalize(),h++}}},state:a}}function Pa(e,t){var n=new Ra(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function Ca(e,t){var n=new WeakMap;return{get:function(i){var r,a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return!1===n.has(i)?(r=new Pa(e,t),n.set(i,[r])):a>=n.get(i).length?(r=new Pa(e,t),n.get(i).push(r)):r=n.get(i)[a],r},dispose:function(){n=new WeakMap}}}var Da=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshDepthMaterial",i.depthPacking=3200,i.map=null,i.alphaMap=null,i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.wireframe=!1,i.wireframeLinewidth=1,i.fog=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}]),n}(tn);Da.prototype.isMeshDepthMaterial=!0;var Ia=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshDistanceMaterial",i.referencePosition=new Fe,i.nearDistance=1,i.farDistance=1e3,i.map=null,i.alphaMap=null,i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.fog=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}]),n}(tn);Ia.prototype.isMeshDistanceMaterial=!0;function Na(e,t,n){var i=new oi,r=new Ee,a=new Ee,l=new Ie,o=new Da({depthPacking:3201}),s=new Ia,u={},h=n.maxTextureSize,c={0:1,1:0,2:2},m=new Yn({uniforms:{shadow_pass:{value:null},resolution:{value:new Ee},radius:{value:4},samples:{value:8}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\nuniform float samples;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),d=m.clone();d.defines.HORIZONTAL_PASS=1;var p=new Mn;p.setAttribute("position",new dn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));var q=new Hn(p,m),f=this;function v(n,i){var r=t.update(q);m.uniforms.shadow_pass.value=n.map.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,m.uniforms.samples.value=n.blurSamples,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,r,m,q,null),d.uniforms.shadow_pass.value=n.mapPass.texture,d.uniforms.resolution.value=n.mapSize,d.uniforms.radius.value=n.radius,d.uniforms.samples.value=n.blurSamples,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,r,d,q,null)}function x(t,n,i,r,a,l,h){var m=null,d=!0===r.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(m=void 0!==d?d:!0===r.isPointLight?s:o,e.localClippingEnabled&&!0===i.clipShadows&&0!==i.clippingPlanes.length||i.displacementMap&&0!==i.displacementScale||i.alphaMap&&i.alphaTest>0){var p=m.uuid,q=i.uuid,f=u[p];void 0===f&&(f={},u[p]=f);var v=f[q];void 0===v&&(v=m.clone(),f[q]=v),m=v}return m.visible=i.visible,m.wireframe=i.wireframe,m.side=3===h?null!==i.shadowSide?i.shadowSide:i.side:null!==i.shadowSide?i.shadowSide:c[i.side],m.alphaMap=i.alphaMap,m.alphaTest=i.alphaTest,m.clipShadows=i.clipShadows,m.clippingPlanes=i.clippingPlanes,m.clipIntersection=i.clipIntersection,m.displacementMap=i.displacementMap,m.displacementScale=i.displacementScale,m.displacementBias=i.displacementBias,m.wireframeLinewidth=i.wireframeLinewidth,m.linewidth=i.linewidth,!0===r.isPointLight&&!0===m.isMeshDistanceMaterial&&(m.referencePosition.setFromMatrixPosition(r.matrixWorld),m.nearDistance=a,m.farDistance=l),m}function g(n,r,a,l,o){if(!1!==n.visible){if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);var s=t.update(n),u=n.material;if(Array.isArray(u))for(var h=s.groups,c=0,m=h.length;c<m;c++){var d=h[c],p=u[d.materialIndex];if(p&&p.visible){var q=x(n,0,p,l,a.near,a.far,o);e.renderBufferDirect(a,null,s,q,n,d)}}else if(u.visible){var f=x(n,0,u,l,a.near,a.far,o);e.renderBufferDirect(a,null,s,f,n,null)}}for(var v=n.children,_=0,y=v.length;_<y;_++)g(v[_],r,a,l,o)}}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(t,n,o){if(!1!==f.enabled&&(!1!==f.autoUpdate||!1!==f.needsUpdate)&&0!==t.length){var s=e.getRenderTarget(),u=e.getActiveCubeFace(),c=e.getActiveMipmapLevel(),m=e.state;m.setBlending(0),m.buffers.color.setClear(1,1,1,1),m.buffers.depth.setTest(!0),m.setScissorTest(!1);for(var d=0,p=t.length;d<p;d++){var q=t[d],x=q.shadow;if(void 0!==x){if(!1!==x.autoUpdate||!1!==x.needsUpdate){r.copy(x.mapSize);var _=x.getFrameExtents();if(r.multiply(_),a.copy(x.mapSize),(r.x>h||r.y>h)&&(r.x>h&&(a.x=Math.floor(h/_.x),r.x=a.x*_.x,x.mapSize.x=a.x),r.y>h&&(a.y=Math.floor(h/_.y),r.y=a.y*_.y,x.mapSize.y=a.y)),null===x.map&&!x.isPointLightShadow&&3===this.type){var y={minFilter:O,magFilter:O,format:X};x.map=new Ne(r.x,r.y,y),x.map.texture.name=q.name+".shadowMap",x.mapPass=new Ne(r.x,r.y,y),x.camera.updateProjectionMatrix()}if(null===x.map){var b={minFilter:D,magFilter:D,format:X};x.map=new Ne(r.x,r.y,b),x.map.texture.name=q.name+".shadowMap",x.camera.updateProjectionMatrix()}e.setRenderTarget(x.map),e.clear();for(var w=x.getViewportCount(),M=0;M<w;M++){var S=x.getViewport(M);l.set(a.x*S.x,a.y*S.y,a.x*S.z,a.y*S.w),m.viewport(l),x.updateMatrices(q,M),i=x.getFrustum(),g(n,o,x.camera,q,this.type)}x.isPointLightShadow||3!==this.type||v(x,o),x.needsUpdate=!1}}else console.warn("THREE.WebGLShadowMap:",q,"has no shadow.")}f.needsUpdate=!1,e.setRenderTarget(s,u,c)}}}function Oa(e,t,n){var i,r,a=n.isWebGL2;var l=new function(){var t=!1,n=new Ie,i=null,r=new Ie(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,l,o){!0===o&&(t*=l,i*=l,a*=l),n.set(t,i,a,l),!1===r.equals(n)&&(e.clearColor(t,i,a,l),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},o=new function(){var t=!1,n=null,i=null,r=null;return{setTest:function(e){e?U(2929):H(2929)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){if(t)switch(t){case 0:e.depthFunc(512);break;case 1:e.depthFunc(519);break;case 2:e.depthFunc(513);break;case 3:default:e.depthFunc(515);break;case 4:e.depthFunc(514);break;case 5:e.depthFunc(518);break;case 6:e.depthFunc(516);break;case 7:e.depthFunc(517)}else e.depthFunc(515);i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},s=new function(){var t=!1,n=null,i=null,r=null,a=null,l=null,o=null,s=null,u=null;return{setTest:function(e){t||(e?U(2960):H(2960))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,l){i===t&&r===n&&a===l||(e.stencilFunc(t,n,l),i=t,r=n,a=l)},setOp:function(t,n,i){l===t&&o===n&&s===i||(e.stencilOp(t,n,i),l=t,o=n,s=i)},setLocked:function(e){t=e},setClear:function(t){u!==t&&(e.clearStencil(t),u=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,l=null,o=null,s=null,u=null}}},u={},h=null,c={},m=null,p=!1,q=null,f=null,v=null,x=null,g=null,_=null,y=null,b=!1,w=null,M=null,T=null,E=null,z=null,k=e.getParameter(35661),A=!1,L=0,R=e.getParameter(7938);-1!==R.indexOf("WebGL")?(L=parseFloat(/^WebGL (\d)/.exec(R)[1]),A=L>=1):-1!==R.indexOf("OpenGL ES")&&(L=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),A=L>=2);var P=null,C={},D=e.getParameter(3088),I=e.getParameter(2978),N=(new Ie).fromArray(D),O=(new Ie).fromArray(I);function B(t,n,i){var r=new Uint8Array(4),a=e.createTexture();e.bindTexture(t,a),e.texParameteri(t,10241,9728),e.texParameteri(t,10240,9728);for(var l=0;l<i;l++)e.texImage2D(n+l,0,6408,1,1,0,6408,5121,r);return a}var F={};function U(t){!0!==u[t]&&(e.enable(t),u[t]=!0)}function H(t){!1!==u[t]&&(e.disable(t),u[t]=!1)}F[3553]=B(3553,3553,1),F[34067]=B(34067,34069,6),l.setClear(0,0,0,1),o.setClear(1),s.setClear(0),U(2929),o.setFunc(3),X(!1),Y(1),U(2884),j(0);var G=(d(i={},S,32774),d(i,101,32778),d(i,102,32779),i);if(a)G[103]=32775,G[104]=32776;else{var V=t.get("EXT_blend_minmax");null!==V&&(G[103]=V.MIN_EXT,G[104]=V.MAX_EXT)}var W=(d(r={},200,0),d(r,201,1),d(r,202,768),d(r,204,770),d(r,210,776),d(r,208,774),d(r,206,772),d(r,203,769),d(r,205,771),d(r,209,775),d(r,207,773),r);function j(t,n,i,r,a,l,o,s){if(0!==t){if(!1===p&&(U(3042),p=!0),5===t)a=a||n,l=l||i,o=o||r,n===f&&a===g||(e.blendEquationSeparate(G[n],G[a]),f=n,g=a),i===v&&r===x&&l===_&&o===y||(e.blendFuncSeparate(W[i],W[r],W[l],W[o]),v=i,x=r,_=l,y=o),q=t,b=null;else if(t!==q||s!==b){if(f===S&&g===S||(e.blendEquation(32774),f=S,g=S),s)switch(t){case 1:e.blendFuncSeparate(1,771,1,771);break;case 2:e.blendFunc(1,1);break;case 3:e.blendFuncSeparate(0,0,769,771);break;case 4:e.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(770,771,1,771);break;case 2:e.blendFunc(770,1);break;case 3:e.blendFunc(0,769);break;case 4:e.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}v=null,x=null,_=null,y=null,q=t,b=s}}else!0===p&&(H(3042),p=!1)}function X(t){w!==t&&(t?e.frontFace(2304):e.frontFace(2305),w=t)}function Y(t){0!==t?(U(2884),t!==M&&(1===t?e.cullFace(1029):2===t?e.cullFace(1028):e.cullFace(1032))):H(2884),M=t}function Z(t,n,i){t?(U(32823),E===n&&z===i||(e.polygonOffset(n,i),E=n,z=i)):H(32823)}function J(t){void 0===t&&(t=33984+k-1),P!==t&&(e.activeTexture(t),P=t)}return{buffers:{color:l,depth:o,stencil:s},enable:U,disable:H,bindFramebuffer:function(t,n){return null===n&&null!==h&&(n=h),c[t]!==n&&(e.bindFramebuffer(t,n),c[t]=n,a&&(36009===t&&(c[36160]=n),36160===t&&(c[36009]=n)),!0)},bindXRFramebuffer:function(t){t!==h&&(e.bindFramebuffer(36160,t),h=t)},useProgram:function(t){return m!==t&&(e.useProgram(t),m=t,!0)},setBlending:j,setMaterial:function(e,t){2===e.side?H(2884):U(2884);var n=1===e.side;t&&(n=!n),X(n),1===e.blending&&!1===e.transparent?j(0):j(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),o.setFunc(e.depthFunc),o.setTest(e.depthTest),o.setMask(e.depthWrite),l.setMask(e.colorWrite);var i=e.stencilWrite;s.setTest(i),i&&(s.setMask(e.stencilWriteMask),s.setFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),s.setOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),Z(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),!0===e.alphaToCoverage?U(32926):H(32926)},setFlipSided:X,setCullFace:Y,setLineWidth:function(t){t!==T&&(A&&e.lineWidth(t),T=t)},setPolygonOffset:Z,setScissorTest:function(e){e?U(3089):H(3089)},activeTexture:J,bindTexture:function(t,n){null===P&&J();var i=C[P];void 0===i&&(i={type:void 0,texture:void 0},C[P]=i),i.type===t&&i.texture===n||(e.bindTexture(t,n||F[t]),i.type=t,i.texture=n)},unbindTexture:function(){var t=C[P];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===N.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),N.copy(t))},viewport:function(t){!1===O.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),O.copy(t))},reset:function(){e.disable(3042),e.disable(2884),e.disable(2929),e.disable(32823),e.disable(3089),e.disable(2960),e.disable(32926),e.blendEquation(32774),e.blendFunc(1,0),e.blendFuncSeparate(1,0,1,0),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(513),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(519,0,4294967295),e.stencilOp(7680,7680,7680),e.clearStencil(0),e.cullFace(1029),e.frontFace(2305),e.polygonOffset(0,0),e.activeTexture(33984),e.bindFramebuffer(36160,null),!0===a&&(e.bindFramebuffer(36009,null),e.bindFramebuffer(36008,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),u={},P=null,C={},h=null,c={},m=null,p=!1,q=null,f=null,v=null,x=null,g=null,_=null,y=null,b=!1,w=null,M=null,T=null,E=null,z=null,N.set(0,0,e.canvas.width,e.canvas.height),O.set(0,0,e.canvas.width,e.canvas.height),l.reset(),o.reset(),s.reset()}}}function Ba(e,t,n,i,r,a,l){var o,s,u,h=r.isWebGL2,c=r.maxTextures,m=r.maxCubemapSize,p=r.maxTextureSize,q=r.maxSamples,f=new WeakMap,v=!1;try{v="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function x(e,t){return v?new OffscreenCanvas(e,t):Le("canvas")}function g(e,t,n,i){var r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){var a=t?Se:Math.floor,l=a(r*e.width),o=a(r*e.height);void 0===u&&(u=x(l,o));var s=n?x(l,o):u;return s.width=l,s.height=o,s.getContext("2d").drawImage(e,0,0,l,o),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+l+"x"+o+")."),s}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function _(e){return we(e.width)&&we(e.height)}function y(e,t){return e.generateMipmaps&&t&&e.minFilter!==D&&e.minFilter!==O}function b(t,n,r,a){var l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:1;e.generateMipmap(t);var o=i.get(n);o.__maxMipLevel=Math.log2(Math.max(r,a,l))}function w(n,i,r,a){if(!1===h)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}var l=i;return 6403===i&&(5126===r&&(l=33326),5131===r&&(l=33325),5121===r&&(l=33321)),6407===i&&(5126===r&&(l=34837),5131===r&&(l=34843),5121===r&&(l=32849)),6408===i&&(5126===r&&(l=34836),5131===r&&(l=34842),5121===r&&(l=a===ae?35907:32856)),33325!==l&&33326!==l&&34842!==l&&34836!==l||t.get("EXT_color_buffer_float"),l}function M(e){return e===D||e===I||e===N?9728:9729}function S(t){var n=t.target;n.removeEventListener("dispose",S),function(t){var n=i.get(t);if(void 0===n.__webglInit)return;e.deleteTexture(n.__webglTexture),i.remove(t)}(n),n.isVideoTexture&&f.delete(n),l.memory.textures--}function T(t){var n=t.target;n.removeEventListener("dispose",T),function(t){var n=t.texture,r=i.get(t),a=i.get(n);if(!t)return;void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),l.memory.textures--);t.depthTexture&&t.depthTexture.dispose();if(t.isWebGLCubeRenderTarget)for(var o=0;o<6;o++)e.deleteFramebuffer(r.__webglFramebuffer[o]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[o]);else e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer&&e.deleteRenderbuffer(r.__webglColorRenderbuffer),r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer);if(t.isWebGLMultipleRenderTargets)for(var s=0,u=n.length;s<u;s++){var h=i.get(n[s]);h.__webglTexture&&(e.deleteTexture(h.__webglTexture),l.memory.textures--),i.remove(n[s])}i.remove(n),i.remove(t)}(n)}var E=0;function z(e,t){var r=i.get(e);if(e.isVideoTexture&&function(e){var t=l.render.frame;f.get(e)!==t&&(f.set(e,t),e.update())}(e),e.version>0&&r.__version!==e.version){var a=e.image;if(void 0===a)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==a.complete)return void K(r,e,t);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+t),n.bindTexture(3553,r.__webglTexture)}function k(t,r){var l=i.get(t);t.version>0&&l.__version!==t.version?function(t,i,r){if(6!==i.image.length)return;J(t,i),n.activeTexture(33984+r),n.bindTexture(34067,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);for(var l=i&&(i.isCompressedTexture||i.image[0].isCompressedTexture),o=i.image[0]&&i.image[0].isDataTexture,s=[],u=0;u<6;u++)s[u]=l||o?o?i.image[u].image:i.image[u]:g(i.image[u],!1,!0,m);var c,d=s[0],p=_(d)||h,q=a.convert(i.format),f=a.convert(i.type),v=w(i.internalFormat,q,f,i.encoding);if(F(34067,i,p),l){for(var x=0;x<6;x++){c=s[x].mipmaps;for(var M=0;M<c.length;M++){var S=c[M];i.format!==X&&i.format!==j?null!==q?n.compressedTexImage2D(34069+x,M,v,S.width,S.height,0,S.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+x,M,v,S.width,S.height,0,q,f,S.data)}}t.__maxMipLevel=c.length-1}else{c=i.mipmaps;for(var T=0;T<6;T++)if(o){n.texImage2D(34069+T,0,v,s[T].width,s[T].height,0,q,f,s[T].data);for(var E=0;E<c.length;E++){var z=c[E].image[T].image;n.texImage2D(34069+T,E+1,v,z.width,z.height,0,q,f,z.data)}}else{n.texImage2D(34069+T,0,v,q,f,s[T]);for(var k=0;k<c.length;k++){var A=c[k];n.texImage2D(34069+T,k+1,v,q,f,A.image[T])}}t.__maxMipLevel=c.length}y(i,p)&&b(34067,i,d.width,d.height);t.__version=i.version,i.onUpdate&&i.onUpdate(i)}(l,t,r):(n.activeTexture(33984+r),n.bindTexture(34067,l.__webglTexture))}var A=(d(o={},R,10497),d(o,P,33071),d(o,C,33648),o),L=(d(s={},D,9728),d(s,I,9984),d(s,N,9986),d(s,O,9729),d(s,1007,9985),d(s,B,9987),s);function F(n,a,l){if(l?(e.texParameteri(n,10242,A[a.wrapS]),e.texParameteri(n,10243,A[a.wrapT]),32879!==n&&35866!==n||e.texParameteri(n,32882,A[a.wrapR]),e.texParameteri(n,10240,L[a.magFilter]),e.texParameteri(n,10241,L[a.minFilter])):(e.texParameteri(n,10242,33071),e.texParameteri(n,10243,33071),32879!==n&&35866!==n||e.texParameteri(n,32882,33071),a.wrapS===P&&a.wrapT===P||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,10240,M(a.magFilter)),e.texParameteri(n,10241,M(a.minFilter)),a.minFilter!==D&&a.minFilter!==O&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){var o=t.get("EXT_texture_filter_anisotropic");if(a.type===G&&!1===t.has("OES_texture_float_linear"))return;if(!1===h&&a.type===V&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,o.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function J(t,n){void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",S),t.__webglTexture=e.createTexture(),l.memory.textures++)}function K(t,i,r){var l=3553;i.isDataTexture2DArray&&(l=35866),i.isDataTexture3D&&(l=32879),J(t,i),n.activeTexture(33984+r),n.bindTexture(l,t.__webglTexture),e.pixelStorei(37440,i.flipY),e.pixelStorei(37441,i.premultiplyAlpha),e.pixelStorei(3317,i.unpackAlignment),e.pixelStorei(37443,0);var o,s=function(e){return!h&&(e.wrapS!==P||e.wrapT!==P||e.minFilter!==D&&e.minFilter!==O)}(i)&&!1===_(i.image),u=g(i.image,s,!1,p),c=_(u)||h,m=a.convert(i.format),d=a.convert(i.type),q=w(i.internalFormat,m,d,i.encoding);F(l,i,c);var f=i.mipmaps;if(i.isDepthTexture)q=6402,h?q=i.type===G?36012:i.type===H?33190:i.type===W?35056:33189:i.type===G&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),i.format===Y&&6402===q&&i.type!==U&&i.type!==H&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),i.type=U,d=a.convert(i.type)),i.format===Z&&6402===q&&(q=34041,i.type!==W&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),i.type=W,d=a.convert(i.type))),n.texImage2D(3553,0,q,u.width,u.height,0,m,d,null);else if(i.isDataTexture)if(f.length>0&&c){for(var v=0,x=f.length;v<x;v++)o=f[v],n.texImage2D(3553,v,q,o.width,o.height,0,m,d,o.data);i.generateMipmaps=!1,t.__maxMipLevel=f.length-1}else n.texImage2D(3553,0,q,u.width,u.height,0,m,d,u.data),t.__maxMipLevel=0;else if(i.isCompressedTexture){for(var M=0,S=f.length;M<S;M++)o=f[M],i.format!==X&&i.format!==j?null!==m?n.compressedTexImage2D(3553,M,q,o.width,o.height,0,o.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,M,q,o.width,o.height,0,m,d,o.data);t.__maxMipLevel=f.length-1}else if(i.isDataTexture2DArray)n.texImage3D(35866,0,q,u.width,u.height,u.depth,0,m,d,u.data),t.__maxMipLevel=0;else if(i.isDataTexture3D)n.texImage3D(32879,0,q,u.width,u.height,u.depth,0,m,d,u.data),t.__maxMipLevel=0;else if(f.length>0&&c){for(var T=0,E=f.length;T<E;T++)o=f[T],n.texImage2D(3553,T,q,m,d,o);i.generateMipmaps=!1,t.__maxMipLevel=f.length-1}else n.texImage2D(3553,0,q,m,d,u),t.__maxMipLevel=0;y(i,c)&&b(l,i,u.width,u.height),t.__version=i.version,i.onUpdate&&i.onUpdate(i)}function Q(t,r,l,o,s){var u=a.convert(l.format),h=a.convert(l.type),c=w(l.internalFormat,u,h,l.encoding);32879===s||35866===s?n.texImage3D(s,0,c,r.width,r.height,r.depth,0,u,h,null):n.texImage2D(s,0,c,r.width,r.height,0,u,h,null),n.bindFramebuffer(36160,t),e.framebufferTexture2D(36160,o,s,i.get(l).__webglTexture,0),n.bindFramebuffer(36160,null)}function $(t,n,i){if(e.bindRenderbuffer(36161,t),n.depthBuffer&&!n.stencilBuffer){var r=33189;if(i){var l=n.depthTexture;l&&l.isDepthTexture&&(l.type===G?r=36012:l.type===H&&(r=33190));var o=te(n);e.renderbufferStorageMultisample(36161,o,r,n.width,n.height)}else e.renderbufferStorage(36161,r,n.width,n.height);e.framebufferRenderbuffer(36160,36096,36161,t)}else if(n.depthBuffer&&n.stencilBuffer){if(i){var s=te(n);e.renderbufferStorageMultisample(36161,s,35056,n.width,n.height)}else e.renderbufferStorage(36161,34041,n.width,n.height);e.framebufferRenderbuffer(36160,33306,36161,t)}else{var u=!0===n.isWebGLMultipleRenderTargets?n.texture[0]:n.texture,h=a.convert(u.format),c=a.convert(u.type),m=w(u.internalFormat,h,c,u.encoding);if(i){var d=te(n);e.renderbufferStorageMultisample(36161,d,m,n.width,n.height)}else e.renderbufferStorage(36161,m,n.width,n.height)}e.bindRenderbuffer(36161,null)}function ee(t){var r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(36160,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),z(r.depthTexture,0);var a=i.get(r.depthTexture).__webglTexture;if(r.depthTexture.format===Y)e.framebufferTexture2D(36160,36096,3553,a,0);else{if(r.depthTexture.format!==Z)throw new Error("Unknown depthTexture format");e.framebufferTexture2D(36160,33306,3553,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(var l=0;l<6;l++)n.bindFramebuffer(36160,r.__webglFramebuffer[l]),r.__webglDepthbuffer[l]=e.createRenderbuffer(),$(r.__webglDepthbuffer[l],t,!1)}else n.bindFramebuffer(36160,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),$(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(36160,null)}function te(e){return h&&e.isWebGLMultisampleRenderTarget?Math.min(q,e.samples):0}var ne=!1,ie=!1;this.allocateTextureUnit=function(){var e=E;return e>=c&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+c),E+=1,e},this.resetTextureUnits=function(){E=0},this.setTexture2D=z,this.setTexture2DArray=function(e,t){var r=i.get(e);e.version>0&&r.__version!==e.version?K(r,e,t):(n.activeTexture(33984+t),n.bindTexture(35866,r.__webglTexture))},this.setTexture3D=function(e,t){var r=i.get(e);e.version>0&&r.__version!==e.version?K(r,e,t):(n.activeTexture(33984+t),n.bindTexture(32879,r.__webglTexture))},this.setTextureCube=k,this.setupRenderTarget=function(t){var o=t.texture,s=i.get(t),u=i.get(o);t.addEventListener("dispose",T),!0!==t.isWebGLMultipleRenderTargets&&(u.__webglTexture=e.createTexture(),u.__version=o.version,l.memory.textures++);var c=!0===t.isWebGLCubeRenderTarget,m=!0===t.isWebGLMultipleRenderTargets,d=!0===t.isWebGLMultisampleRenderTarget,p=o.isDataTexture3D||o.isDataTexture2DArray,q=_(t)||h;if(!h||o.format!==j||o.type!==G&&o.type!==V||(o.format=X,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){s.__webglFramebuffer=[];for(var f=0;f<6;f++)s.__webglFramebuffer[f]=e.createFramebuffer()}else if(s.__webglFramebuffer=e.createFramebuffer(),m)if(r.drawBuffers)for(var v=t.texture,x=0,g=v.length;x<g;x++){var M=i.get(v[x]);void 0===M.__webglTexture&&(M.__webglTexture=e.createTexture(),l.memory.textures++)}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(d)if(h){s.__webglMultisampledFramebuffer=e.createFramebuffer(),s.__webglColorRenderbuffer=e.createRenderbuffer(),e.bindRenderbuffer(36161,s.__webglColorRenderbuffer);var S=a.convert(o.format),E=a.convert(o.type),z=w(o.internalFormat,S,E,o.encoding),k=te(t);e.renderbufferStorageMultisample(36161,k,z,t.width,t.height),n.bindFramebuffer(36160,s.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(36160,36064,36161,s.__webglColorRenderbuffer),e.bindRenderbuffer(36161,null),t.depthBuffer&&(s.__webglDepthRenderbuffer=e.createRenderbuffer(),$(s.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){n.bindTexture(34067,u.__webglTexture),F(34067,o,q);for(var A=0;A<6;A++)Q(s.__webglFramebuffer[A],t,o,36064,34069+A);y(o,q)&&b(34067,o,t.width,t.height),n.unbindTexture()}else if(m){for(var L=t.texture,R=0,P=L.length;R<P;R++){var C=L[R],D=i.get(C);n.bindTexture(3553,D.__webglTexture),F(3553,C,q),Q(s.__webglFramebuffer,t,C,36064+R,3553),y(C,q)&&b(3553,C,t.width,t.height)}n.unbindTexture()}else{var I=3553;if(p)if(h)I=o.isDataTexture3D?32879:35866;else console.warn("THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.");n.bindTexture(I,u.__webglTexture),F(I,o,q),Q(s.__webglFramebuffer,t,o,36064,I),y(o,q)&&b(I,o,t.width,t.height,t.depth),n.unbindTexture()}t.depthBuffer&&ee(t)},this.updateRenderTargetMipmap=function(e){for(var t=_(e)||h,r=!0===e.isWebGLMultipleRenderTargets?e.texture:[e.texture],a=0,l=r.length;a<l;a++){var o=r[a];if(y(o,t)){var s=e.isWebGLCubeRenderTarget?34067:3553,u=i.get(o).__webglTexture;n.bindTexture(s,u),b(s,o,e.width,e.height),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(t.isWebGLMultisampleRenderTarget)if(h){var r=t.width,a=t.height,l=16384;t.depthBuffer&&(l|=256),t.stencilBuffer&&(l|=1024);var o=i.get(t);n.bindFramebuffer(36008,o.__webglMultisampledFramebuffer),n.bindFramebuffer(36009,o.__webglFramebuffer),e.blitFramebuffer(0,0,r,a,0,0,r,a,l,9728),n.bindFramebuffer(36008,null),n.bindFramebuffer(36009,o.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(e,t){e&&e.isWebGLRenderTarget&&(!1===ne&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),ne=!0),e=e.texture),z(e,t)},this.safeSetTextureCube=function(e,t){e&&e.isWebGLCubeRenderTarget&&(!1===ie&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),ie=!0),e=e.texture),k(e,t)}}function Fa(e,t,n){var i=n.isWebGL2;return{convert:function(e){var n;if(e===F)return 5121;if(1017===e)return 32819;if(1018===e)return 32820;if(1019===e)return 33635;if(1010===e)return 5120;if(1011===e)return 5122;if(e===U)return 5123;if(1013===e)return 5124;if(e===H)return 5125;if(e===G)return 5126;if(e===V)return i?5131:null!==(n=t.get("OES_texture_half_float"))?n.HALF_FLOAT_OES:null;if(1021===e)return 6406;if(e===j)return 6407;if(e===X)return 6408;if(1024===e)return 6409;if(1025===e)return 6410;if(e===Y)return 6402;if(e===Z)return 34041;if(1028===e)return 6403;if(1029===e)return 36244;if(1030===e)return 33319;if(1031===e)return 33320;if(1032===e)return 36248;if(1033===e)return 36249;if(33776===e||33777===e||33778===e||33779===e){if(null===(n=t.get("WEBGL_compressed_texture_s3tc")))return null;if(33776===e)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===e)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===e)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===e)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===e||35841===e||35842===e||35843===e){if(null===(n=t.get("WEBGL_compressed_texture_pvrtc")))return null;if(35840===e)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===e)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===e)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===e)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===e)return null!==(n=t.get("WEBGL_compressed_texture_etc1"))?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===e||37496===e)&&null!==(n=t.get("WEBGL_compressed_texture_etc"))){if(37492===e)return n.COMPRESSED_RGB8_ETC2;if(37496===e)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===e||37809===e||37810===e||37811===e||37812===e||37813===e||37814===e||37815===e||37816===e||37817===e||37818===e||37819===e||37820===e||37821===e||37840===e||37841===e||37842===e||37843===e||37844===e||37845===e||37846===e||37847===e||37848===e||37849===e||37850===e||37851===e||37852===e||37853===e?null!==(n=t.get("WEBGL_compressed_texture_astc"))?e:null:36492===e?null!==(n=t.get("EXT_texture_compression_bptc"))?e:null:e===W?i?34042:null!==(n=t.get("WEBGL_depth_texture"))?n.UNSIGNED_INT_24_8_WEBGL:null:void 0}}}var Ua=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return _(this,n),(e=t.call(this)).cameras=i,e}return b(n)}(Jn);Ua.prototype.isArrayCamera=!0;var Ha=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="Group",e}return b(n)}(Ht);Ha.prototype.isGroup=!0;var Ga={type:"move"},Va=function(){function e(){_(this,e),this._targetRay=null,this._grip=null,this._hand=null}return b(e,[{key:"getHandSpace",value:function(){return null===this._hand&&(this._hand=new Ha,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}},{key:"getTargetRaySpace",value:function(){return null===this._targetRay&&(this._targetRay=new Ha,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new Fe,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new Fe),this._targetRay}},{key:"getGripSpace",value:function(){return null===this._grip&&(this._grip=new Ha,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new Fe,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new Fe),this._grip}},{key:"dispatchEvent",value:function(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}},{key:"disconnect",value:function(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}},{key:"update",value:function(e,t,n){var i=null,r=null,a=null,l=this._targetRay,o=this._grip,u=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState)if(null!==l&&null!==(i=t.getPose(e.targetRaySpace,n))&&(l.matrix.fromArray(i.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),i.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(i.linearVelocity)):l.hasLinearVelocity=!1,i.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(i.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(Ga)),u&&e.hand){a=!0;var h,c=function(e,t){var n="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!n){if(Array.isArray(e)||(n=s(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var i=0,r=function(){};return{s:r,n:function(){return i>=e.length?{done:!0}:{done:!1,value:e[i++]}},e:function(e){throw e},f:r}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var a,l=!0,o=!1;return{s:function(){n=n.call(e)},n:function(){var e=n.next();return l=e.done,e},e:function(e){o=!0,a=e},f:function(){try{l||null==n.return||n.return()}finally{if(o)throw a}}}}(e.hand.values());try{for(c.s();!(h=c.n()).done;){var m=h.value,d=t.getJointPose(m,n);if(void 0===u.joints[m.jointName]){var p=new Ha;p.matrixAutoUpdate=!1,p.visible=!1,u.joints[m.jointName]=p,u.add(p)}var q=u.joints[m.jointName];null!==d&&(q.matrix.fromArray(d.transform.matrix),q.matrix.decompose(q.position,q.rotation,q.scale),q.jointRadius=d.radius),q.visible=null!==d}}catch(e){c.e(e)}finally{c.f()}var f=u.joints["index-finger-tip"],v=u.joints["thumb-tip"],x=f.position.distanceTo(v.position);u.inputState.pinching&&x>.025?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!u.inputState.pinching&&x<=.015&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&null!==(r=t.getPose(e.gripSpace,n))&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1);return null!==l&&(l.visible=null!==i),null!==o&&(o.visible=null!==r),null!==u&&(u.visible=null!==a),this}}]),e}(),Wa=function(e){p(n,e);var t=f(n);function n(e,i){var r;_(this,n);var a=x(r=t.call(this)),o=e.state,s=null,u=1,h=null,c="local-floor",m=null,d=null,p=null,q=null,f=null,v=!1,g=null,y=null,b=null,w=null,M=null,S=null,T=e.extensions.has("EXT_multisampled_render_to_texture"),E=null,z=[],k=new Map,A=new Jn;A.layers.enable(1),A.viewport=new Ie;var L=new Jn;L.layers.enable(2),L.viewport=new Ie;var R=[A,L],P=new Ua;P.layers.enable(1),P.layers.enable(2);var C=null,D=null;function I(e){var t=k.get(e.inputSource);t&&t.dispatchEvent({type:e.type,data:e.inputSource})}function N(){k.forEach((function(e,t){e.disconnect(t)})),k.clear(),C=null,D=null,o.bindXRFramebuffer(null),e.setRenderTarget(e.getRenderTarget()),p&&i.deleteFramebuffer(p),g&&i.deleteFramebuffer(g),y&&i.deleteRenderbuffer(y),b&&i.deleteRenderbuffer(b),p=null,g=null,y=null,b=null,f=null,q=null,d=null,s=null,G.stop(),a.isPresenting=!1,a.dispatchEvent({type:"sessionend"})}function O(e){for(var t=s.inputSources,n=0;n<z.length;n++)k.set(t[n],z[n]);for(var i=0;i<e.removed.length;i++){var r=e.removed[i],a=k.get(r);a&&(a.dispatchEvent({type:"disconnected",data:r}),k.delete(r))}for(var l=0;l<e.added.length;l++){var o=e.added[l],u=k.get(o);u&&u.dispatchEvent({type:"connected",data:o})}}r.cameraAutoUpdate=!0,r.enabled=!1,r.isPresenting=!1,r.getController=function(e){var t=z[e];return void 0===t&&(t=new Va,z[e]=t),t.getTargetRaySpace()},r.getControllerGrip=function(e){var t=z[e];return void 0===t&&(t=new Va,z[e]=t),t.getGripSpace()},r.getHand=function(e){var t=z[e];return void 0===t&&(t=new Va,z[e]=t),t.getHandSpace()},r.setFramebufferScaleFactor=function(e){u=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},r.setReferenceSpaceType=function(e){c=e,!0===a.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},r.getReferenceSpace=function(){return h},r.getBaseLayer=function(){return null!==q?q:f},r.getBinding=function(){return d},r.getFrame=function(){return w},r.getSession=function(){return s},r.setSession=function(){var t=l(regeneratorRuntime.mark((function t(n){var r,l,m,x,_;return regeneratorRuntime.wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(null===(s=n)){t.next=22;break}if(s.addEventListener("select",I),s.addEventListener("selectstart",I),s.addEventListener("selectend",I),s.addEventListener("squeeze",I),s.addEventListener("squeezestart",I),s.addEventListener("squeezeend",I),s.addEventListener("end",N),s.addEventListener("inputsourceschange",O),!0===(r=i.getContextAttributes()).xrCompatible){t.next=14;break}return t.next=14,i.makeXRCompatible();case 14:return void 0===s.renderState.layers?(l={antialias:r.antialias,alpha:r.alpha,depth:r.depth,stencil:r.stencil,framebufferScaleFactor:u},f=new XRWebGLLayer(s,i,l),s.updateRenderState({baseLayer:f})):i instanceof WebGLRenderingContext?(m={antialias:!0,alpha:r.alpha,depth:r.depth,stencil:r.stencil,framebufferScaleFactor:u},f=new XRWebGLLayer(s,i,m),s.updateRenderState({layers:[f]})):(v=r.antialias,x=null,r.depth&&(S=256,r.stencil&&(S|=1024),M=r.stencil?33306:36096,x=r.stencil?35056:33190),_={colorFormat:r.alpha?32856:32849,depthFormat:x,scaleFactor:u},d=new XRWebGLBinding(s,i),q=d.createProjectionLayer(_),p=i.createFramebuffer(),s.updateRenderState({layers:[q]}),v&&T?E=e.extensions.get("EXT_multisampled_render_to_texture"):v&&(g=i.createFramebuffer(),y=i.createRenderbuffer(),i.bindRenderbuffer(36161,y),i.renderbufferStorageMultisample(36161,4,32856,q.textureWidth,q.textureHeight),o.bindFramebuffer(36160,g),i.framebufferRenderbuffer(36160,36064,36161,y),i.bindRenderbuffer(36161,null),null!==x&&(b=i.createRenderbuffer(),i.bindRenderbuffer(36161,b),i.renderbufferStorageMultisample(36161,4,x,q.textureWidth,q.textureHeight),i.framebufferRenderbuffer(36160,M,36161,b),i.bindRenderbuffer(36161,null)),o.bindFramebuffer(36160,null))),t.next=17,s.requestReferenceSpace(c);case 17:h=t.sent,G.setContext(s),G.start(),a.isPresenting=!0,a.dispatchEvent({type:"sessionstart"});case 22:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();var B=new Fe,F=new Fe;function U(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}r.updateCamera=function(e){if(null!==s){P.near=L.near=A.near=e.near,P.far=L.far=A.far=e.far,C===P.near&&D===P.far||(s.updateRenderState({depthNear:P.near,depthFar:P.far}),C=P.near,D=P.far);var t=e.parent,n=P.cameras;U(P,t);for(var i=0;i<n.length;i++)U(n[i],t);P.matrixWorld.decompose(P.position,P.quaternion,P.scale),e.position.copy(P.position),e.quaternion.copy(P.quaternion),e.scale.copy(P.scale),e.matrix.copy(P.matrix),e.matrixWorld.copy(P.matrixWorld);for(var r=e.children,a=0,l=r.length;a<l;a++)r[a].updateMatrixWorld(!0);2===n.length?function(e,t,n){B.setFromMatrixPosition(t.matrixWorld),F.setFromMatrixPosition(n.matrixWorld);var i=B.distanceTo(F),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,l=r[14]/(r[10]-1),o=r[14]/(r[10]+1),s=(r[9]+1)/r[5],u=(r[9]-1)/r[5],h=(r[8]-1)/r[0],c=(a[8]+1)/a[0],m=l*h,d=l*c,p=i/(-h+c),q=p*-h;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(q),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();var f=l+p,v=o+p,x=m-q,g=d+(i-q),_=s*o/v*f,y=u*o/v*f;e.projectionMatrix.makePerspective(x,g,_,y,f,v)}(P,A,L):P.projectionMatrix.copy(A.projectionMatrix)}},r.getCamera=function(){return P},r.getFoveation=function(){return null!==q?q.fixedFoveation:null!==f?f.fixedFoveation:void 0},r.setFoveation=function(e){null!==q&&(q.fixedFoveation=e),null!==f&&void 0!==f.fixedFoveation&&(f.fixedFoveation=e)};var H=null;var G=new si;return G.setAnimationLoop((function(e,t){if(m=t.getViewerPose(h),w=t,null!==m){var n=m.views;null!==f&&o.bindXRFramebuffer(f.framebuffer);var r=!1;n.length!==P.cameras.length&&(P.cameras.length=0,r=!0);for(var a=0;a<n.length;a++){var l=n[a],u=null;if(null!==f)u=f.getViewport(l);else{var c=d.getViewSubImage(q,l);o.bindXRFramebuffer(p),v&&T?(void 0!==c.depthStencilTexture&&E.framebufferTexture2DMultisampleEXT(36160,M,3553,c.depthStencilTexture,0,4),E.framebufferTexture2DMultisampleEXT(36160,36064,3553,c.colorTexture,0,4)):(void 0!==c.depthStencilTexture&&i.framebufferTexture2D(36160,M,3553,c.depthStencilTexture,0),i.framebufferTexture2D(36160,36064,3553,c.colorTexture,0)),u=c.viewport}var x=R[a];x.matrix.fromArray(l.transform.matrix),x.projectionMatrix.fromArray(l.projectionMatrix),x.viewport.set(u.x,u.y,u.width,u.height),0===a&&P.matrix.copy(x.matrix),!0===r&&P.cameras.push(x)}v&&!T&&(o.bindXRFramebuffer(g),null!==S&&i.clear(S))}for(var _=s.inputSources,y=0;y<z.length;y++){var b=z[y],k=_[y];b.update(k,t,h)}if(H&&H(e,t),v&&!T){var A=q.textureWidth,L=q.textureHeight;o.bindFramebuffer(36008,g),o.bindFramebuffer(36009,p),i.invalidateFramebuffer(36008,[M]),i.invalidateFramebuffer(36009,[M]),i.blitFramebuffer(0,0,A,L,0,0,A,L,16384,9728),i.invalidateFramebuffer(36008,[36064]),o.bindFramebuffer(36008,null),o.bindFramebuffer(36009,null),o.bindFramebuffer(36160,g)}w=null})),r.setAnimationLoop=function(e){H=e},r.dispose=function(){},r}return b(n)}(me);function ja(e){function t(t,n){t.opacity.value=n.opacity,n.color&&t.diffuse.value.copy(n.color),n.emissive&&t.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(t.map.value=n.map),n.alphaMap&&(t.alphaMap.value=n.alphaMap),n.specularMap&&(t.specularMap.value=n.specularMap),n.alphaTest>0&&(t.alphaTest.value=n.alphaTest);var i,r,a=e.get(n).envMap;if(a){t.envMap.value=a,t.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,t.reflectivity.value=n.reflectivity,t.ior.value=n.ior,t.refractionRatio.value=n.refractionRatio;var l=e.get(a).__maxMipLevel;void 0!==l&&(t.maxMipLevel.value=l)}n.lightMap&&(t.lightMap.value=n.lightMap,t.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(t.aoMap.value=n.aoMap,t.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap?i=n.clearcoatRoughnessMap:n.specularIntensityMap?i=n.specularIntensityMap:n.specularTintMap?i=n.specularTintMap:n.transmissionMap?i=n.transmissionMap:n.thicknessMap&&(i=n.thicknessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix)),n.aoMap?r=n.aoMap:n.lightMap&&(r=n.lightMap),void 0!==r&&(r.isWebGLRenderTarget&&(r=r.texture),!0===r.matrixAutoUpdate&&r.updateMatrix(),t.uv2Transform.value.copy(r.matrix))}function n(t,n){t.roughness.value=n.roughness,t.metalness.value=n.metalness,n.roughnessMap&&(t.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(t.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(t.emissiveMap.value=n.emissiveMap),n.bumpMap&&(t.bumpMap.value=n.bumpMap,t.bumpScale.value=n.bumpScale,1===n.side&&(t.bumpScale.value*=-1)),n.normalMap&&(t.normalMap.value=n.normalMap,t.normalScale.value.copy(n.normalScale),1===n.side&&t.normalScale.value.negate()),n.displacementMap&&(t.displacementMap.value=n.displacementMap,t.displacementScale.value=n.displacementScale,t.displacementBias.value=n.displacementBias),e.get(n).envMap&&(t.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(e,t){e.fogColor.value.copy(t.color),t.isFog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t.isFogExp2&&(e.fogDensity.value=t.density)},refreshMaterialUniforms:function(e,i,r,a,l){i.isMeshBasicMaterial?t(e,i):i.isMeshLambertMaterial?(t(e,i),function(e,t){t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap)}(e,i)):i.isMeshToonMaterial?(t(e,i),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap);t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshPhongMaterial?(t(e,i),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshStandardMaterial?(t(e,i),i.isMeshPhysicalMaterial?function(e,t,i){n(e,t),e.ior.value=t.ior,t.sheen>0&&(e.sheenTint.value.copy(t.sheenTint).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness);t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap),t.clearcoatNormalMap&&(e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),e.clearcoatNormalMap.value=t.clearcoatNormalMap,1===t.side&&e.clearcoatNormalScale.value.negate()));t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap),e.attenuationDistance.value=t.attenuationDistance,e.attenuationTint.value.copy(t.attenuationTint));e.specularIntensity.value=t.specularIntensity,e.specularTint.value.copy(t.specularTint),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap);t.specularTintMap&&(e.specularTintMap.value=t.specularTintMap)}(e,i,l):n(e,i)):i.isMeshMatcapMaterial?(t(e,i),function(e,t){t.matcap&&(e.matcap.value=t.matcap);t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDepthMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isMeshDistanceMaterial?(t(e,i),function(e,t){t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias);e.referencePosition.value.copy(t.referencePosition),e.nearDistance.value=t.nearDistance,e.farDistance.value=t.farDistance}(e,i)):i.isMeshNormalMaterial?(t(e,i),function(e,t){t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale,1===t.side&&(e.bumpScale.value*=-1));t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale),1===t.side&&e.normalScale.value.negate());t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}(e,i)):i.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity}(e,i),i.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,i)):i.isPointsMaterial?function(e,t,n,i){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*n,e.scale.value=.5*i,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var r;t.map?r=t.map:t.alphaMap&&(r=t.alphaMap);void 0!==r&&(!0===r.matrixAutoUpdate&&r.updateMatrix(),e.uvTransform.value.copy(r.matrix))}(e,i,r,a):i.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map);t.alphaMap&&(e.alphaMap.value=t.alphaMap);t.alphaTest>0&&(e.alphaTest.value=t.alphaTest);var n;t.map?n=t.map:t.alphaMap&&(n=t.alphaMap);void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),e.uvTransform.value.copy(n.matrix))}(e,i):i.isShadowMaterial?(e.color.value.copy(i.color),e.opacity.value=i.opacity):i.isShaderMaterial&&(i.uniformsNeedUpdate=!1)}}}function Xa(){var e=Le("canvas");return e.style.display="block",e}function Ya(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=void 0!==e.canvas?e.canvas:Xa(),n=void 0!==e.context?e.context:null,i=void 0!==e.alpha&&e.alpha,r=void 0===e.depth||e.depth,a=void 0===e.stencil||e.stencil,l=void 0!==e.antialias&&e.antialias,o=void 0===e.premultipliedAlpha||e.premultipliedAlpha,s=void 0!==e.preserveDrawingBuffer&&e.preserveDrawingBuffer,u=void 0!==e.powerPreference?e.powerPreference:"default",h=void 0!==e.failIfMajorPerformanceCaveat&&e.failIfMajorPerformanceCaveat,c=null,m=null,d=[],p=[];this.domElement=t,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=re,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1;var q=this,f=!1,v=0,x=0,g=null,_=-1,y=null,b=new Ie,w=new Ie,M=null,S=t.width,T=t.height,E=1,z=null,k=null,A=new Ie(0,0,S,T),L=new Ie(0,0,S,T),R=!1,C=[],I=new oi,N=!1,O=!1,U=null,H=new vt,W=new Fe,j={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Y(){return null===g?E:1}var Z,J,K,Q,$,ee,te,ne,ie,ae,le,oe,se,ue,he,ce,me,de,pe,qe,fe,ve,xe,ge=n;function _e(e,n){for(var i=0;i<e.length;i++){var r=e[i],a=t.getContext(r,n);if(null!==a)return a}return null}try{var ye={alpha:i,depth:r,stencil:a,antialias:l,premultipliedAlpha:o,preserveDrawingBuffer:s,powerPreference:u,failIfMajorPerformanceCaveat:h};if(t.addEventListener("webglcontextlost",Se,!1),t.addEventListener("webglcontextrestored",Te,!1),null===ge){var be=["webgl2","webgl","experimental-webgl"];if(!0===q.isWebGL1Renderer&&be.shift(),null===(ge=_e(be,ye)))throw _e(be)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ge.getShaderPrecisionFormat&&(ge.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function we(){Z=new Wi(ge),J=new vi(ge,Z,e),Z.init(J),ve=new Fa(ge,Z,J),K=new Oa(ge,Z,J),C[0]=1029,Q=new Yi(ge),$=new Ma,ee=new Ba(ge,Z,K,$,J,ve,Q),te=new gi(q),ne=new Vi(q),ie=new ui(ge,J),xe=new qi(ge,Z,ie,J),ae=new ji(ge,ie,Q,xe),le=new er(ge,ae,ie,Q),pe=new $i(ge,J,ee),ce=new xi($),oe=new wa(q,te,ne,Z,J,xe,ce),se=new ja($),ue=new za($),he=new Ca(Z,J),de=new pi(q,te,K,le,o),me=new Na(q,le,J),qe=new fi(ge,Z,Q,J),fe=new Xi(ge,Z,Q,J),Q.programs=oe.programs,q.capabilities=J,q.extensions=Z,q.properties=$,q.renderLists=ue,q.shadowMap=me,q.state=K,q.info=Q}we();var Me=new Wa(q,ge);function Se(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),f=!0}function Te(){console.log("THREE.WebGLRenderer: Context Restored."),f=!1;var e=Q.autoReset,t=me.enabled,n=me.autoUpdate,i=me.needsUpdate,r=me.type;we(),Q.autoReset=e,me.enabled=t,me.autoUpdate=n,me.needsUpdate=i,me.type=r}function Ee(e){var t=e.target;t.removeEventListener("dispose",Ee),ze(t)}function ze(e){ke(e),$.remove(e)}function ke(e){var t=$.get(e).programs;void 0!==t&&t.forEach((function(e){oe.releaseProgram(e)}))}function Ae(e,t){e.render((function(e){q.renderBufferImmediate(e,t)}))}this.xr=Me,this.getContext=function(){return ge},this.getContextAttributes=function(){return ge.getContextAttributes()},this.forceContextLoss=function(){var e=Z.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){var e=Z.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return E},this.setPixelRatio=function(e){void 0!==e&&(E=e,this.setSize(S,T,!1))},this.getSize=function(e){return e.set(S,T)},this.setSize=function(e,n,i){Me.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(S=e,T=n,t.width=Math.floor(e*E),t.height=Math.floor(n*E),!1!==i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(S*E,T*E).floor()},this.setDrawingBufferSize=function(e,n,i){S=e,T=n,E=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(b)},this.getViewport=function(e){return e.copy(A)},this.setViewport=function(e,t,n,i){e.isVector4?A.set(e.x,e.y,e.z,e.w):A.set(e,t,n,i),K.viewport(b.copy(A).multiplyScalar(E).floor())},this.getScissor=function(e){return e.copy(L)},this.setScissor=function(e,t,n,i){e.isVector4?L.set(e.x,e.y,e.z,e.w):L.set(e,t,n,i),K.scissor(w.copy(L).multiplyScalar(E).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(e){K.setScissorTest(R=e)},this.setOpaqueSort=function(e){z=e},this.setTransparentSort=function(e){k=e},this.getClearColor=function(e){return e.copy(de.getClearColor())},this.setClearColor=function(){de.setClearColor.apply(de,arguments)},this.getClearAlpha=function(){return de.getClearAlpha()},this.setClearAlpha=function(){de.setClearAlpha.apply(de,arguments)},this.clear=function(e,t,n){var i=0;(void 0===e||e)&&(i|=16384),(void 0===t||t)&&(i|=256),(void 0===n||n)&&(i|=1024),ge.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Se,!1),t.removeEventListener("webglcontextrestored",Te,!1),ue.dispose(),he.dispose(),$.dispose(),te.dispose(),ne.dispose(),le.dispose(),xe.dispose(),Me.dispose(),Me.removeEventListener("sessionstart",Pe),Me.removeEventListener("sessionend",Ce),U&&(U.dispose(),U=null),De.stop()},this.renderBufferImmediate=function(e,t){xe.initAttributes();var n=$.get(e);e.hasPositions&&!n.position&&(n.position=ge.createBuffer()),e.hasNormals&&!n.normal&&(n.normal=ge.createBuffer()),e.hasUvs&&!n.uv&&(n.uv=ge.createBuffer()),e.hasColors&&!n.color&&(n.color=ge.createBuffer());var i=t.getAttributes();e.hasPositions&&(ge.bindBuffer(34962,n.position),ge.bufferData(34962,e.positionArray,35048),xe.enableAttribute(i.position.location),ge.vertexAttribPointer(i.position.location,3,5126,!1,0,0)),e.hasNormals&&(ge.bindBuffer(34962,n.normal),ge.bufferData(34962,e.normalArray,35048),xe.enableAttribute(i.normal.location),ge.vertexAttribPointer(i.normal.location,3,5126,!1,0,0)),e.hasUvs&&(ge.bindBuffer(34962,n.uv),ge.bufferData(34962,e.uvArray,35048),xe.enableAttribute(i.uv.location),ge.vertexAttribPointer(i.uv.location,2,5126,!1,0,0)),e.hasColors&&(ge.bindBuffer(34962,n.color),ge.bufferData(34962,e.colorArray,35048),xe.enableAttribute(i.color.location),ge.vertexAttribPointer(i.color.location,3,5126,!1,0,0)),xe.disableUnusedAttributes(),ge.drawArrays(4,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=j);var l=r.isMesh&&r.matrixWorld.determinant()<0,o=Xe(e,t,i,r);K.setMaterial(i,l);var s=n.index,u=n.attributes.position;if(null===s){if(void 0===u||0===u.count)return}else if(0===s.count)return;var h,c=1;!0===i.wireframe&&(s=ae.getWireframeAttribute(n),c=2),void 0===n.morphAttributes.position&&void 0===n.morphAttributes.normal||pe.update(r,n,i,o),xe.setup(r,i,o,n,s);var m=qe;null!==s&&(h=ie.get(s),(m=fe).setIndex(h));var d=null!==s?s.count:u.count,p=n.drawRange.start*c,q=n.drawRange.count*c,f=null!==a?a.start*c:0,v=null!==a?a.count*c:1/0,x=Math.max(p,f),g=Math.min(d,p+q,f+v)-1,_=Math.max(0,g-x+1);if(0!==_){if(r.isMesh)!0===i.wireframe?(K.setLineWidth(i.wireframeLinewidth*Y()),m.setMode(1)):m.setMode(4);else if(r.isLine){var y=i.linewidth;void 0===y&&(y=1),K.setLineWidth(y*Y()),r.isLineSegments?m.setMode(1):r.isLineLoop?m.setMode(2):m.setMode(3)}else r.isPoints?m.setMode(0):r.isSprite&&m.setMode(4);if(r.isInstancedMesh)m.renderInstances(x,_,r.count);else if(n.isInstancedBufferGeometry){var b=Math.min(n.instanceCount,n._maxInstanceCount);m.renderInstances(x,_,b)}else m.render(x,_)}},this.compile=function(e,t){(m=he.get(e)).init(),p.push(m),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(m.pushLight(e),e.castShadow&&m.pushShadow(e))})),m.setupLights(q.physicallyCorrectLights),e.traverse((function(t){var n=t.material;if(n)if(Array.isArray(n))for(var i=0;i<n.length;i++){We(n[i],e,t)}else We(n,e,t)})),p.pop(),m=null};var Le=null;function Re(e){Le&&Le(e)}function Pe(){De.stop()}function Ce(){De.start()}var De=new si;function Be(e,t,n,i){if(!1!==e.visible){if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)m.pushLight(e),e.castShadow&&m.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||I.intersectsSprite(e)){i&&W.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);var r=le.update(e),a=e.material;a.visible&&c.push(e,r,a,n,W.z,null)}}else if(e.isImmediateRenderObject)i&&W.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H),c.push(e,null,e.material,n,W.z,null);else if((e.isMesh||e.isLine||e.isPoints)&&(e.isSkinnedMesh&&e.skeleton.frame!==Q.render.frame&&(e.skeleton.update(),e.skeleton.frame=Q.render.frame),!e.frustumCulled||I.intersectsObject(e))){i&&W.setFromMatrixPosition(e.matrixWorld).applyMatrix4(H);var l=le.update(e),o=e.material;if(Array.isArray(o))for(var s=l.groups,u=0,h=s.length;u<h;u++){var d=s[u],p=o[d.materialIndex];p&&p.visible&&c.push(e,l,p,n,W.z,d)}else o.visible&&c.push(e,l,o,n,W.z,null)}for(var q=e.children,f=0,v=q.length;f<v;f++)Be(q[f],t,n,i)}}function Ue(e,t,n,i){var r=e.opaque,a=e.transmissive,l=e.transparent;m.setupLightsView(n),a.length>0&&He(r,t,n),i&&K.viewport(b.copy(i)),r.length>0&&Ge(r,t,n),a.length>0&&Ge(a,t,n),l.length>0&&Ge(l,t,n)}function He(e,t,n){if(null===U){var i=!0===l&&!0===J.isWebGL2;U=new(i?Oe:Ne)(1024,1024,{generateMipmaps:!0,type:null!==ve.convert(V)?V:F,minFilter:B,magFilter:D,wrapS:P,wrapT:P})}var r=q.getRenderTarget();q.setRenderTarget(U),q.clear();var a=q.toneMapping;q.toneMapping=0,Ge(e,t,n),q.toneMapping=a,ee.updateMultisampleRenderTarget(U),ee.updateRenderTargetMipmap(U),q.setRenderTarget(r)}function Ge(e,t,n){for(var i=!0===t.isScene?t.overrideMaterial:null,r=0,a=e.length;r<a;r++){var l=e[r],o=l.object,s=l.geometry,u=null===i?l.material:i,h=l.group;o.layers.test(n.layers)&&Ve(o,t,n,s,u,h)}}function Ve(e,t,n,i,r,a){if(e.onBeforeRender(q,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(q,t,n,i,e,a),e.isImmediateRenderObject){var l=Xe(n,t,r,e);K.setMaterial(r),xe.reset(),Ae(e,l)}else!0===r.transparent&&2===r.side?(r.side=1,r.needsUpdate=!0,q.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,q.renderBufferDirect(n,t,i,r,e,a),r.side=2):q.renderBufferDirect(n,t,i,r,e,a);e.onAfterRender(q,t,n,i,r,a)}function We(e,t,n){!0!==t.isScene&&(t=j);var i=$.get(e),r=m.state.lights,a=m.state.shadowsArray,l=r.state.version,o=oe.getParameters(e,r.state,a,t,n),s=oe.getProgramCacheKey(o),u=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?ne:te).get(e.envMap||i.environment),void 0===u&&(e.addEventListener("dispose",Ee),u=new Map,i.programs=u);var h=u.get(s);if(void 0!==h){if(i.currentProgram===h&&i.lightsStateVersion===l)return je(e,o),h}else o.uniforms=oe.getUniforms(e),e.onBuild(o,q),e.onBeforeCompile(o,q),h=oe.acquireProgram(o,s),u.set(s,h),i.uniforms=o.uniforms;var c=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(c.clippingPlanes=ce.uniform),je(e,o),i.needsLights=Ze(e),i.lightsStateVersion=l,i.needsLights&&(c.ambientLightColor.value=r.state.ambient,c.lightProbe.value=r.state.probe,c.directionalLights.value=r.state.directional,c.directionalLightShadows.value=r.state.directionalShadow,c.spotLights.value=r.state.spot,c.spotLightShadows.value=r.state.spotShadow,c.rectAreaLights.value=r.state.rectArea,c.ltc_1.value=r.state.rectAreaLTC1,c.ltc_2.value=r.state.rectAreaLTC2,c.pointLights.value=r.state.point,c.pointLightShadows.value=r.state.pointShadow,c.hemisphereLights.value=r.state.hemi,c.directionalShadowMap.value=r.state.directionalShadowMap,c.directionalShadowMatrix.value=r.state.directionalShadowMatrix,c.spotShadowMap.value=r.state.spotShadowMap,c.spotShadowMatrix.value=r.state.spotShadowMatrix,c.pointShadowMap.value=r.state.pointShadowMap,c.pointShadowMatrix.value=r.state.pointShadowMatrix);var d=h.getUniforms(),p=ia.seqWithValue(d.seq,c);return i.currentProgram=h,i.uniformsList=p,h}function je(e,t){var n=$.get(e);n.outputEncoding=t.outputEncoding,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents}function Xe(e,t,n,i){!0!==t.isScene&&(t=j),ee.resetTextureUnits();var r=t.fog,a=n.isMeshStandardMaterial?t.environment:null,l=null===g?q.outputEncoding:g.texture.encoding,o=(n.isMeshStandardMaterial?ne:te).get(n.envMap||a),s=!0===n.vertexColors&&!!i.geometry&&!!i.geometry.attributes.color&&4===i.geometry.attributes.color.itemSize,u=!!n.normalMap&&!!i.geometry&&!!i.geometry.attributes.tangent,h=!!i.geometry&&!!i.geometry.morphAttributes.position,c=!!i.geometry&&!!i.geometry.morphAttributes.normal,d=i.geometry&&i.geometry.morphAttributes.position?i.geometry.morphAttributes.position.length:0,p=$.get(n),f=m.state.lights;if(!0===N&&(!0===O||e!==y)){var v=e===y&&n.id===_;ce.setState(n,e,v)}var x=!1;n.version===p.__version?p.needsLights&&p.lightsStateVersion!==f.state.version||p.outputEncoding!==l||i.isInstancedMesh&&!1===p.instancing?x=!0:i.isInstancedMesh||!0!==p.instancing?i.isSkinnedMesh&&!1===p.skinning?x=!0:i.isSkinnedMesh||!0!==p.skinning?p.envMap!==o||n.fog&&p.fog!==r?x=!0:void 0===p.numClippingPlanes||p.numClippingPlanes===ce.numPlanes&&p.numIntersection===ce.numIntersection?(p.vertexAlphas!==s||p.vertexTangents!==u||p.morphTargets!==h||p.morphNormals!==c||!0===J.isWebGL2&&p.morphTargetsCount!==d)&&(x=!0):x=!0:x=!0:x=!0:(x=!0,p.__version=n.version);var b=p.currentProgram;!0===x&&(b=We(n,t,i));var w=!1,M=!1,S=!1,z=b.getUniforms(),k=p.uniforms;if(K.useProgram(b.program)&&(w=!0,M=!0,S=!0),n.id!==_&&(_=n.id,M=!0),w||y!==e){if(z.setValue(ge,"projectionMatrix",e.projectionMatrix),J.logarithmicDepthBuffer&&z.setValue(ge,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),y!==e&&(y=e,M=!0,S=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){var A=z.map.cameraPosition;void 0!==A&&A.setValue(ge,W.setFromMatrixPosition(e.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&z.setValue(ge,"isOrthographic",!0===e.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||i.isSkinnedMesh)&&z.setValue(ge,"viewMatrix",e.matrixWorldInverse)}if(i.isSkinnedMesh){z.setOptional(ge,i,"bindMatrix"),z.setOptional(ge,i,"bindMatrixInverse");var L=i.skeleton;L&&(J.floatVertexTextures?(null===L.boneTexture&&L.computeBoneTexture(),z.setValue(ge,"boneTexture",L.boneTexture,ee),z.setValue(ge,"boneTextureSize",L.boneTextureSize)):z.setOptional(ge,L,"boneMatrices"))}return(M||p.receiveShadow!==i.receiveShadow)&&(p.receiveShadow=i.receiveShadow,z.setValue(ge,"receiveShadow",i.receiveShadow)),M&&(z.setValue(ge,"toneMappingExposure",q.toneMappingExposure),p.needsLights&&Ye(k,S),r&&n.fog&&se.refreshFogUniforms(k,r),se.refreshMaterialUniforms(k,n,E,T,U),ia.upload(ge,p.uniformsList,k,ee)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(ia.upload(ge,p.uniformsList,k,ee),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&z.setValue(ge,"center",i.center),z.setValue(ge,"modelViewMatrix",i.modelViewMatrix),z.setValue(ge,"normalMatrix",i.normalMatrix),z.setValue(ge,"modelMatrix",i.matrixWorld),b}function Ye(e,t){e.ambientLightColor.needsUpdate=t,e.lightProbe.needsUpdate=t,e.directionalLights.needsUpdate=t,e.directionalLightShadows.needsUpdate=t,e.pointLights.needsUpdate=t,e.pointLightShadows.needsUpdate=t,e.spotLights.needsUpdate=t,e.spotLightShadows.needsUpdate=t,e.rectAreaLights.needsUpdate=t,e.hemisphereLights.needsUpdate=t}function Ze(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}De.setAnimationLoop(Re),"undefined"!=typeof window&&De.setContext(window),this.setAnimationLoop=function(e){Le=e,Me.setAnimationLoop(e),null===e?De.stop():De.start()},Me.addEventListener("sessionstart",Pe),Me.addEventListener("sessionend",Ce),this.render=function(e,t){if(void 0===t||!0===t.isCamera){if(!0!==f){!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),!0===Me.enabled&&!0===Me.isPresenting&&(!0===Me.cameraAutoUpdate&&Me.updateCamera(t),t=Me.getCamera()),!0===e.isScene&&e.onBeforeRender(q,e,t,g),(m=he.get(e,p.length)).init(),p.push(m),H.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),I.setFromProjectionMatrix(H),O=this.localClippingEnabled,N=ce.init(this.clippingPlanes,O,t),(c=ue.get(e,d.length)).init(),d.push(c),Be(e,t,0,q.sortObjects),c.finish(),!0===q.sortObjects&&c.sort(z,k),!0===N&&ce.beginShadows();var n=m.state.shadowsArray;if(me.render(n,e,t),!0===N&&ce.endShadows(),!0===this.info.autoReset&&this.info.reset(),de.render(c,e),m.setupLights(q.physicallyCorrectLights),t.isArrayCamera)for(var i=t.cameras,r=0,a=i.length;r<a;r++){var l=i[r];Ue(c,e,l,l.viewport)}else Ue(c,e,t);null!==g&&(ee.updateMultisampleRenderTarget(g),ee.updateRenderTargetMipmap(g)),!0===e.isScene&&e.onAfterRender(q,e,t),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1),xe.resetDefaultState(),_=-1,y=null,p.pop(),m=p.length>0?p[p.length-1]:null,d.pop(),c=d.length>0?d[d.length-1]:null}}else console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")},this.getActiveCubeFace=function(){return v},this.getActiveMipmapLevel=function(){return x},this.getRenderTarget=function(){return g},this.setRenderTarget=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;g=e,v=t,x=n,e&&void 0===$.get(e).__webglFramebuffer&&ee.setupRenderTarget(e);var i=null,r=!1,a=!1;if(e){var l=e.texture;(l.isDataTexture3D||l.isDataTexture2DArray)&&(a=!0);var o=$.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(i=o[t],r=!0):i=e.isWebGLMultisampleRenderTarget?$.get(e).__webglMultisampledFramebuffer:o,b.copy(e.viewport),w.copy(e.scissor),M=e.scissorTest}else b.copy(A).multiplyScalar(E).floor(),w.copy(L).multiplyScalar(E).floor(),M=R;var s=K.bindFramebuffer(36160,i);if(s&&J.drawBuffers){var u=!1;if(e)if(e.isWebGLMultipleRenderTargets){var h=e.texture;if(C.length!==h.length||36064!==C[0]){for(var c=0,m=h.length;c<m;c++)C[c]=36064+c;C.length=h.length,u=!0}}else 1===C.length&&36064===C[0]||(C[0]=36064,C.length=1,u=!0);else 1===C.length&&1029===C[0]||(C[0]=1029,C.length=1,u=!0);u&&(J.isWebGL2?ge.drawBuffers(C):Z.get("WEBGL_draw_buffers").drawBuffersWEBGL(C))}if(K.viewport(b),K.scissor(w),K.setScissorTest(M),r){var d=$.get(e.texture);ge.framebufferTexture2D(36160,36064,34069+t,d.__webglTexture,n)}else if(a){var p=$.get(e.texture),q=t||0;ge.framebufferTextureLayer(36160,36064,p.__webglTexture,n||0,q)}_=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,l){if(e&&e.isWebGLRenderTarget){var o=$.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==l&&(o=o[l]),o){K.bindFramebuffer(36160,o);try{var s=e.texture,u=s.format,h=s.type;if(u!==X&&ve.convert(u)!==ge.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");var c=h===V&&(Z.has("EXT_color_buffer_half_float")||J.isWebGL2&&Z.has("EXT_color_buffer_float"));if(!(h===F||ve.convert(h)===ge.getParameter(35738)||h===G&&(J.isWebGL2||Z.has("OES_texture_float")||Z.has("WEBGL_color_buffer_float"))||c))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ge.checkFramebufferStatus(36160)?t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&ge.readPixels(t,n,i,r,ve.convert(u),ve.convert(h),a):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{var m=null!==g?$.get(g).__webglFramebuffer:null;K.bindFramebuffer(36160,m)}}}else console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.")},this.copyFramebufferToTexture=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i),l=ve.convert(t.format);J.isWebGL2&&(6407===l&&(l=32849),6408===l&&(l=32856)),ee.setTexture2D(t,0),ge.copyTexImage2D(3553,n,l,e.x,e.y,r,a,0),K.unbindTexture()},this.copyTextureToTexture=function(e,t,n){var i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,r=t.image.width,a=t.image.height,l=ve.convert(n.format),o=ve.convert(n.type);ee.setTexture2D(n,0),ge.pixelStorei(37440,n.flipY),ge.pixelStorei(37441,n.premultiplyAlpha),ge.pixelStorei(3317,n.unpackAlignment),t.isDataTexture?ge.texSubImage2D(3553,i,e.x,e.y,r,a,l,o,t.image.data):t.isCompressedTexture?ge.compressedTexSubImage2D(3553,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,l,t.mipmaps[0].data):ge.texSubImage2D(3553,i,e.x,e.y,l,o,t.image),0===i&&n.generateMipmaps&&ge.generateMipmap(3553),K.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;if(q.isWebGL1Renderer)console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");else{var a,l=e.max.x-e.min.x+1,o=e.max.y-e.min.y+1,s=e.max.z-e.min.z+1,u=ve.convert(i.format),h=ve.convert(i.type);if(i.isDataTexture3D)ee.setTexture3D(i,0),a=32879;else{if(!i.isDataTexture2DArray)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ee.setTexture2DArray(i,0),a=35866}ge.pixelStorei(37440,i.flipY),ge.pixelStorei(37441,i.premultiplyAlpha),ge.pixelStorei(3317,i.unpackAlignment);var c=ge.getParameter(3314),m=ge.getParameter(32878),d=ge.getParameter(3316),p=ge.getParameter(3315),f=ge.getParameter(32877),v=n.isCompressedTexture?n.mipmaps[0]:n.image;ge.pixelStorei(3314,v.width),ge.pixelStorei(32878,v.height),ge.pixelStorei(3316,e.min.x),ge.pixelStorei(3315,e.min.y),ge.pixelStorei(32877,e.min.z),n.isDataTexture||n.isDataTexture3D?ge.texSubImage3D(a,r,t.x,t.y,t.z,l,o,s,u,h,v.data):n.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),ge.compressedTexSubImage3D(a,r,t.x,t.y,t.z,l,o,s,u,v.data)):ge.texSubImage3D(a,r,t.x,t.y,t.z,l,o,s,u,h,v),ge.pixelStorei(3314,c),ge.pixelStorei(32878,m),ge.pixelStorei(3316,d),ge.pixelStorei(3315,p),ge.pixelStorei(32877,f),0===r&&i.generateMipmaps&&ge.generateMipmap(a),K.unbindTexture()}},this.initTexture=function(e){ee.setTexture2D(e,0),K.unbindTexture()},this.resetState=function(){v=0,x=0,g=null,K.reset(),xe.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}(function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)})(Ya).prototype.isWebGL1Renderer=!0;var Za=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:25e-5;_(this,e),this.name="",this.color=new un(t),this.density=n}return b(e,[{key:"clone",value:function(){return new e(this.color,this.density)}},{key:"toJSON",value:function(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}]),e}();Za.prototype.isFogExp2=!0;var Ja=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1e3;_(this,e),this.name="",this.color=new un(t),this.near=n,this.far=i}return b(e,[{key:"clone",value:function(){return new e(this.color,this.near,this.far)}},{key:"toJSON",value:function(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}]),e}();Ja.prototype.isFog=!0;var Ka=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="Scene",e.background=null,e.environment=null,e.fog=null,e.overrideMaterial=null,e.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:x(e)})),e}return b(n,[{key:"copy",value:function(e,t){return h(g(n.prototype),"copy",this).call(this,e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),t}}]),n}(Ht);Ka.prototype.isScene=!0;var Qa=function(){function e(t,n){_(this,e),this.array=t,this.stride=n,this.count=void 0!==t?t.length/n:0,this.usage=ue,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ge()}return b(e,[{key:"onUploadCallback",value:function(){}},{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setUsage",value:function(e){return this.usage=e,this}},{key:"copy",value:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}},{key:"copyAt",value:function(e,t,n){e*=this.stride,n*=t.stride;for(var i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}},{key:"set",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;return this.array.set(e,t),this}},{key:"clone",value:function(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ge()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);var t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}},{key:"onUpload",value:function(e){return this.onUploadCallback=e,this}},{key:"toJSON",value:function(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ge()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}]),e}();Qa.prototype.isInterleavedBuffer=!0;var $a=new Fe,el=function(){function e(t,n,i){var r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];_(this,e),this.name="",this.data=t,this.itemSize=n,this.offset=i,this.normalized=!0===r}return b(e,[{key:"count",get:function(){return this.data.count}},{key:"array",get:function(){return this.data.array}},{key:"needsUpdate",set:function(e){this.data.needsUpdate=e}},{key:"applyMatrix4",value:function(e){for(var t=0,n=this.data.count;t<n;t++)$a.x=this.getX(t),$a.y=this.getY(t),$a.z=this.getZ(t),$a.applyMatrix4(e),this.setXYZ(t,$a.x,$a.y,$a.z);return this}},{key:"applyNormalMatrix",value:function(e){for(var t=0,n=this.count;t<n;t++)$a.x=this.getX(t),$a.y=this.getY(t),$a.z=this.getZ(t),$a.applyNormalMatrix(e),this.setXYZ(t,$a.x,$a.y,$a.z);return this}},{key:"transformDirection",value:function(e){for(var t=0,n=this.count;t<n;t++)$a.x=this.getX(t),$a.y=this.getY(t),$a.z=this.getZ(t),$a.transformDirection(e),this.setXYZ(t,$a.x,$a.y,$a.z);return this}},{key:"setX",value:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}},{key:"setY",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}},{key:"setZ",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}},{key:"setW",value:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}},{key:"getX",value:function(e){return this.data.array[e*this.data.stride+this.offset]}},{key:"getY",value:function(e){return this.data.array[e*this.data.stride+this.offset+1]}},{key:"getZ",value:function(e){return this.data.array[e*this.data.stride+this.offset+2]}},{key:"getW",value:function(e){return this.data.array[e*this.data.stride+this.offset+3]}},{key:"setXY",value:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}},{key:"setXYZ",value:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}},{key:"setXYZW",value:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}},{key:"clone",value:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");for(var n=[],i=0;i<this.count;i++)for(var r=i*this.data.stride+this.offset,a=0;a<this.itemSize;a++)n.push(this.data.array[r+a]);return new dn(new this.array.constructor(n),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new e(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}},{key:"toJSON",value:function(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");for(var t=[],n=0;n<this.count;n++)for(var i=n*this.data.stride+this.offset,r=0;r<this.itemSize;r++)t.push(this.data.array[i+r]);return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}]),e}();el.prototype.isInterleavedBufferAttribute=!0;var tl,nl=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="SpriteMaterial",i.color=new un(16777215),i.map=null,i.alphaMap=null,i.rotation=0,i.sizeAttenuation=!0,i.transparent=!0,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}]),n}(tn);nl.prototype.isSpriteMaterial=!0;var il=new Fe,rl=new Fe,al=new Fe,ll=new Ee,ol=new Ee,sl=new vt,ul=new Fe,hl=new Fe,cl=new Fe,ml=new Ee,dl=new Ee,pl=new Ee,ql=function(e){p(n,e);var t=f(n);function n(e){var i;if(_(this,n),(i=t.call(this)).type="Sprite",void 0===tl){tl=new Mn;var r=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),a=new Qa(r,5);tl.setIndex([0,1,2,0,2,3]),tl.setAttribute("position",new el(a,3,0,!1)),tl.setAttribute("uv",new el(a,2,3,!1))}return i.geometry=tl,i.material=void 0!==e?e:new nl,i.center=new Ee(.5,.5),i}return b(n,[{key:"raycast",value:function(e,t){null===e.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),rl.setFromMatrixScale(this.matrixWorld),sl.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),al.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&rl.multiplyScalar(-al.z);var n,i,r=this.material.rotation;0!==r&&(i=Math.cos(r),n=Math.sin(r));var a=this.center;fl(ul.set(-.5,-.5,0),al,a,rl,n,i),fl(hl.set(.5,-.5,0),al,a,rl,n,i),fl(cl.set(.5,.5,0),al,a,rl,n,i),ml.set(0,0),dl.set(1,0),pl.set(1,1);var l=e.ray.intersectTriangle(ul,hl,cl,!1,il);if(null!==l||(fl(hl.set(-.5,.5,0),al,a,rl,n,i),dl.set(0,1),null!==(l=e.ray.intersectTriangle(ul,cl,hl,!1,il)))){var o=e.ray.origin.distanceTo(il);o<e.near||o>e.far||t.push({distance:o,point:il.clone(),uv:$t.getUV(il,ul,hl,cl,ml,dl,pl,new Ee),face:null,object:this})}}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),void 0!==e.center&&this.center.copy(e.center),this.material=e.material,this}}]),n}(Ht);function fl(e,t,n,i,r,a){ll.subVectors(e,n).addScalar(.5).multiply(i),void 0!==r?(ol.x=a*ll.x-r*ll.y,ol.y=r*ll.x+a*ll.y):ol.copy(ll),e.copy(t),e.x+=ol.x,e.y+=ol.y,e.applyMatrix4(sl)}ql.prototype.isSprite=!0;var vl=new Fe,xl=new Ie,gl=new Ie,_l=new Fe,yl=new vt,bl=function(e){p(n,e);var t=f(n);function n(e,i){var r;return _(this,n),(r=t.call(this,e,i)).type="SkinnedMesh",r.bindMode="attached",r.bindMatrix=new vt,r.bindMatrixInverse=new vt,r}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}},{key:"bind",value:function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}},{key:"pose",value:function(){this.skeleton.pose()}},{key:"normalizeSkinWeights",value:function(){for(var e=new Ie,t=this.geometry.attributes.skinWeight,n=0,i=t.count;n<i;n++){e.x=t.getX(n),e.y=t.getY(n),e.z=t.getZ(n),e.w=t.getW(n);var r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}},{key:"updateMatrixWorld",value:function(e){h(g(n.prototype),"updateMatrixWorld",this).call(this,e),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}},{key:"boneTransform",value:function(e,t){var n=this.skeleton,i=this.geometry;xl.fromBufferAttribute(i.attributes.skinIndex,e),gl.fromBufferAttribute(i.attributes.skinWeight,e),vl.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(var r=0;r<4;r++){var a=gl.getComponent(r);if(0!==a){var l=xl.getComponent(r);yl.multiplyMatrices(n.bones[l].matrixWorld,n.boneInverses[l]),t.addScaledVector(_l.copy(vl).applyMatrix4(yl),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}]),n}(Hn);bl.prototype.isSkinnedMesh=!0;var wl=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="Bone",e}return b(n)}(Ht);wl.prototype.isBone=!0;var Ml=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3?arguments[3]:void 0,o=arguments.length>4?arguments[4]:void 0,s=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0,h=arguments.length>7?arguments[7]:void 0,c=arguments.length>8&&void 0!==arguments[8]?arguments[8]:D,m=arguments.length>9&&void 0!==arguments[9]?arguments[9]:D,d=arguments.length>10?arguments[10]:void 0,p=arguments.length>11?arguments[11]:void 0;return _(this,n),(e=t.call(this,null,s,u,h,c,m,l,o,d,p)).image={data:i,width:r,height:a},e.magFilter=c,e.minFilter=m,e.generateMipmaps=!1,e.flipY=!1,e.unpackAlignment=1,e.needsUpdate=!0,e}return b(n)}(Ce);Ml.prototype.isDataTexture=!0;var Sl=function(e){p(n,e);var t=f(n);function n(e,i,r){var a,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _(this,n),"number"==typeof r&&(l=r,r=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),(a=t.call(this,e,i,r)).meshPerAttribute=l,a}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}]),n}(dn);Sl.prototype.isInstancedBufferAttribute=!0;var Tl=new vt,El=new vt,zl=[],kl=new Hn,Al=function(e){p(n,e);var t=f(n);function n(e,i,r){var a;return _(this,n),(a=t.call(this,e,i)).instanceMatrix=new Sl(new Float32Array(16*r),16),a.instanceColor=null,a.count=r,a.frustumCulled=!1,a}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.instanceMatrix.copy(e.instanceMatrix),null!==e.instanceColor&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}},{key:"getColorAt",value:function(e,t){t.fromArray(this.instanceColor.array,3*e)}},{key:"getMatrixAt",value:function(e,t){t.fromArray(this.instanceMatrix.array,16*e)}},{key:"raycast",value:function(e,t){var n=this.matrixWorld,i=this.count;if(kl.geometry=this.geometry,kl.material=this.material,void 0!==kl.material)for(var r=0;r<i;r++){this.getMatrixAt(r,Tl),El.multiplyMatrices(n,Tl),kl.matrixWorld=El,kl.raycast(e,zl);for(var a=0,l=zl.length;a<l;a++){var o=zl[a];o.instanceId=r,o.object=this,t.push(o)}zl.length=0}}},{key:"setColorAt",value:function(e,t){null===this.instanceColor&&(this.instanceColor=new Sl(new Float32Array(3*this.instanceMatrix.count),3)),t.toArray(this.instanceColor.array,3*e)}},{key:"setMatrixAt",value:function(e,t){t.toArray(this.instanceMatrix.array,16*e)}},{key:"updateMorphTargets",value:function(){}},{key:"dispose",value:function(){this.dispatchEvent({type:"dispose"})}}]),n}(Hn);Al.prototype.isInstancedMesh=!0;var Ll=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="LineBasicMaterial",i.color=new un(16777215),i.linewidth=1,i.linecap="round",i.linejoin="round",i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}]),n}(tn);Ll.prototype.isLineBasicMaterial=!0;var Rl=new Fe,Pl=new Fe,Cl=new vt,Dl=new ft,Il=new st,Nl=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Mn,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ll;return _(this,n),(e=t.call(this)).type="Line",e.geometry=i,e.material=r,e.updateMorphTargets(),e}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.material=e.material,this.geometry=e.geometry,this}},{key:"computeLineDistances",value:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,n=[0],i=1,r=t.count;i<r;i++)Rl.fromBufferAttribute(t,i-1),Pl.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Rl.distanceTo(Pl);e.setAttribute("lineDistance",new fn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}},{key:"raycast",value:function(e,t){var n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Il.copy(n.boundingSphere),Il.applyMatrix4(i),Il.radius+=r,!1!==e.ray.intersectsSphere(Il)){Cl.copy(i).invert(),Dl.copy(e.ray).applyMatrix4(Cl);var l=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=l*l,s=new Fe,u=new Fe,h=new Fe,c=new Fe,m=this.isLineSegments?2:1;if(n.isBufferGeometry){var d=n.index,p=n.attributes.position;if(null!==d)for(var q=Math.max(0,a.start),f=Math.min(d.count,a.start+a.count)-1;q<f;q+=m){var v=d.getX(q),x=d.getX(q+1);if(s.fromBufferAttribute(p,v),u.fromBufferAttribute(p,x),!(Dl.distanceSqToSegment(s,u,c,h)>o)){c.applyMatrix4(this.matrixWorld);var g=e.ray.origin.distanceTo(c);g<e.near||g>e.far||t.push({distance:g,point:h.clone().applyMatrix4(this.matrixWorld),index:q,face:null,faceIndex:null,object:this})}}else for(var _=Math.max(0,a.start),y=Math.min(p.count,a.start+a.count)-1;_<y;_+=m){if(s.fromBufferAttribute(p,_),u.fromBufferAttribute(p,_+1),!(Dl.distanceSqToSegment(s,u,c,h)>o)){c.applyMatrix4(this.matrixWorld);var b=e.ray.origin.distanceTo(c);b<e.near||b>e.far||t.push({distance:b,point:h.clone().applyMatrix4(this.matrixWorld),index:_,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=i.length;r<a;r++){var l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{var o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}]),n}(Ht);Nl.prototype.isLine=!0;var Ol=new Fe,Bl=new Fe,Fl=function(e){p(n,e);var t=f(n);function n(e,i){var r;return _(this,n),(r=t.call(this,e,i)).type="LineSegments",r}return b(n,[{key:"computeLineDistances",value:function(){var e=this.geometry;if(e.isBufferGeometry)if(null===e.index){for(var t=e.attributes.position,n=[],i=0,r=t.count;i<r;i+=2)Ol.fromBufferAttribute(t,i),Bl.fromBufferAttribute(t,i+1),n[i]=0===i?0:n[i-1],n[i+1]=n[i]+Ol.distanceTo(Bl);e.setAttribute("lineDistance",new fn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}]),n}(Nl);Fl.prototype.isLineSegments=!0;var Ul=function(e){p(n,e);var t=f(n);function n(e,i){var r;return _(this,n),(r=t.call(this,e,i)).type="LineLoop",r}return b(n)}(Nl);Ul.prototype.isLineLoop=!0;var Hl=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="PointsMaterial",i.color=new un(16777215),i.map=null,i.alphaMap=null,i.size=1,i.sizeAttenuation=!0,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}]),n}(tn);Hl.prototype.isPointsMaterial=!0;var Gl=new vt,Vl=new ft,Wl=new st,jl=new Fe,Xl=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Mn,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Hl;return _(this,n),(e=t.call(this)).type="Points",e.geometry=i,e.material=r,e.updateMorphTargets(),e}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.material=e.material,this.geometry=e.geometry,this}},{key:"raycast",value:function(e,t){var n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Wl.copy(n.boundingSphere),Wl.applyMatrix4(i),Wl.radius+=r,!1!==e.ray.intersectsSphere(Wl)){Gl.copy(i).invert(),Vl.copy(e.ray).applyMatrix4(Gl);var l=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=l*l;if(n.isBufferGeometry){var s=n.index,u=n.attributes.position;if(null!==s)for(var h=Math.max(0,a.start),c=Math.min(s.count,a.start+a.count);h<c;h++){var m=s.getX(h);jl.fromBufferAttribute(u,m),Yl(jl,m,o,i,e,t,this)}else for(var d=Math.max(0,a.start),p=Math.min(u.count,a.start+a.count);d<p;d++)jl.fromBufferAttribute(u,d),Yl(jl,d,o,i,e,t,this)}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}},{key:"updateMorphTargets",value:function(){var e=this.geometry;if(e.isBufferGeometry){var t=e.morphAttributes,n=Object.keys(t);if(n.length>0){var i=t[n[0]];if(void 0!==i){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var r=0,a=i.length;r<a;r++){var l=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=r}}}}else{var o=e.morphTargets;void 0!==o&&o.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}]),n}(Ht);function Yl(e,t,n,i,r,a,l){var o=Vl.distanceSqToPoint(e);if(o<n){var s=new Fe;Vl.closestPointToPoint(e,s),s.applyMatrix4(i);var u=r.ray.origin.distanceTo(s);if(u<r.near||u>r.far)return;a.push({distance:u,distanceToRay:Math.sqrt(o),point:s,index:t,face:null,object:l})}}Xl.prototype.isPoints=!0,function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o,s,u,h){var c;_(this,n),(c=t.call(this,e,i,r,a,l,o,s,u,h)).format=void 0!==s?s:j,c.minFilter=void 0!==o?o:O,c.magFilter=void 0!==l?l:O,c.generateMipmaps=!1;var m=x(c);return"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback((function t(){m.needsUpdate=!0,e.requestVideoFrameCallback(t)})),c}return b(n,[{key:"clone",value:function(){return new this.constructor(this.image).copy(this)}},{key:"update",value:function(){var e=this.image;!1==="requestVideoFrameCallback"in e&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}]),n}(Ce).prototype.isVideoTexture=!0;var Zl=function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o,s,u,h,c,m,d){var p;return _(this,n),(p=t.call(this,null,o,s,u,h,c,a,l,m,d)).image={width:i,height:r},p.mipmaps=e,p.flipY=!1,p.generateMipmaps=!1,p}return b(n)}(Ce);Zl.prototype.isCompressedTexture=!0,function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o,s,u,h){var c;return _(this,n),(c=t.call(this,e,i,r,a,l,o,s,u,h)).needsUpdate=!0,c}return b(n)}(Ce).prototype.isCanvasTexture=!0,function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o,s,u,h,c){var m;if(_(this,n),(c=void 0!==c?c:Y)!==Y&&c!==Z)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");return void 0===r&&c===Y&&(r=U),void 0===r&&c===Z&&(r=W),(m=t.call(this,null,a,l,o,s,u,c,r,h)).image={width:e,height:i},m.magFilter=void 0!==s?s:D,m.minFilter=void 0!==u?u:D,m.flipY=!1,m.generateMipmaps=!1,m}return b(n)}(Ce).prototype.isDepthTexture=!0;new Fe,new Fe,new Fe,new $t;var Jl=function(){function e(){_(this,e),this.type="Curve",this.arcLengthDivisions=200}return b(e,[{key:"getPoint",value:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}},{key:"getPointAt",value:function(e,t){var n=this.getUtoTmapping(e);return this.getPoint(n,t)}},{key:"getPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5,t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}},{key:"getLength",value:function(){var e=this.getLengths();return e[e.length-1]}},{key:"getLengths",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.arcLengthDivisions;if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n=[],i=this.getPoint(0),r=0;n.push(0);for(var a=1;a<=e;a++)r+=(t=this.getPoint(a/e)).distanceTo(i),n.push(r),i=t;return this.cacheArcLengths=n,n}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.getLengths()}},{key:"getUtoTmapping",value:function(e,t){var n,i=this.getLengths(),r=0,a=i.length;n=t||e*i[a-1];for(var l,o=0,s=a-1;o<=s;)if((l=i[r=Math.floor(o+(s-o)/2)]-n)<0)o=r+1;else{if(!(l>0)){s=r;break}s=r-1}if(i[r=s]===n)return r/(a-1);var u=i[r];return(r+(n-u)/(i[r+1]-u))/(a-1)}},{key:"getTangent",value:function(e,t){var n=1e-4,i=e-n,r=e+n;i<0&&(i=0),r>1&&(r=1);var a=this.getPoint(i),l=this.getPoint(r),o=t||(a.isVector2?new Ee:new Fe);return o.copy(l).sub(a).normalize(),o}},{key:"getTangentAt",value:function(e,t){var n=this.getUtoTmapping(e);return this.getTangent(n,t)}},{key:"computeFrenetFrames",value:function(e,t){for(var n=new Fe,i=[],r=[],a=[],l=new Fe,o=new vt,s=0;s<=e;s++){var u=s/e;i[s]=this.getTangentAt(u,new Fe)}r[0]=new Fe,a[0]=new Fe;var h=Number.MAX_VALUE,c=Math.abs(i[0].x),m=Math.abs(i[0].y),d=Math.abs(i[0].z);c<=h&&(h=c,n.set(1,0,0)),m<=h&&(h=m,n.set(0,1,0)),d<=h&&n.set(0,0,1),l.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],l),a[0].crossVectors(i[0],r[0]);for(var p=1;p<=e;p++){if(r[p]=r[p-1].clone(),a[p]=a[p-1].clone(),l.crossVectors(i[p-1],i[p]),l.length()>Number.EPSILON){l.normalize();var q=Math.acos(_e(i[p-1].dot(i[p]),-1,1));r[p].applyMatrix4(o.makeRotationAxis(l,q))}a[p].crossVectors(i[p],r[p])}if(!0===t){var f=Math.acos(_e(r[0].dot(r[e]),-1,1));f/=e,i[0].dot(l.crossVectors(r[0],r[e]))>0&&(f=-f);for(var v=1;v<=e;v++)r[v].applyMatrix4(o.makeRotationAxis(i[v],f*v)),a[v].crossVectors(i[v],r[v])}return{tangents:i,normals:r,binormals:a}}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}},{key:"toJSON",value:function(){var e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}},{key:"fromJSON",value:function(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}]),e}(),Kl=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:2*Math.PI,u=arguments.length>6&&void 0!==arguments[6]&&arguments[6],h=arguments.length>7&&void 0!==arguments[7]?arguments[7]:0;return _(this,n),(e=t.call(this)).type="EllipseCurve",e.aX=i,e.aY=r,e.xRadius=a,e.yRadius=l,e.aStartAngle=o,e.aEndAngle=s,e.aClockwise=u,e.aRotation=h,e}return b(n,[{key:"getPoint",value:function(e,t){for(var n=t||new Ee,i=2*Math.PI,r=this.aEndAngle-this.aStartAngle,a=Math.abs(r)<Number.EPSILON;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(r=a?0:i),!0!==this.aClockwise||a||(r===i?r=-i:r-=i);var l=this.aStartAngle+e*r,o=this.aX+this.xRadius*Math.cos(l),s=this.aY+this.yRadius*Math.sin(l);if(0!==this.aRotation){var u=Math.cos(this.aRotation),h=Math.sin(this.aRotation),c=o-this.aX,m=s-this.aY;o=c*u-m*h+this.aX,s=c*h+m*u+this.aY}return n.set(o,s)}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}]),n}(Jl);Kl.prototype.isEllipseCurve=!0;var Ql=function(e){p(n,e);var t=f(n);function n(e,i,r,a,l,o){var s;return _(this,n),(s=t.call(this,e,i,r,r,a,l,o)).type="ArcCurve",s}return b(n)}(Kl);function $l(){var e=0,t=0,n=0,i=0;function r(r,a,l,o){e=r,t=l,n=-3*r+3*a-2*l-o,i=2*r-2*a+l+o}return{initCatmullRom:function(e,t,n,i,a){r(t,n,a*(n-e),a*(i-t))},initNonuniformCatmullRom:function(e,t,n,i,a,l,o){var s=(t-e)/a-(n-e)/(a+l)+(n-t)/l,u=(n-t)/l-(i-t)/(l+o)+(i-n)/o;r(t,n,s*=l,u*=l)},calc:function(r){var a=r*r;return e+t*r+n*a+i*(a*r)}}}Ql.prototype.isArcCurve=!0;var eo=new Fe,to=new $l,no=new $l,io=new $l,ro=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],r=arguments.length>1&&void 0!==arguments[1]&&arguments[1],a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"centripetal",l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5;return _(this,n),(e=t.call(this)).type="CatmullRomCurve3",e.points=i,e.closed=r,e.curveType=a,e.tension=l,e}return b(n,[{key:"getPoint",value:function(e){var t,n,i=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,r=i,a=this.points,l=a.length,o=(l-(this.closed?0:1))*e,s=Math.floor(o),u=o-s;this.closed?s+=s>0?0:(Math.floor(Math.abs(s)/l)+1)*l:0===u&&s===l-1&&(s=l-2,u=1),this.closed||s>0?t=a[(s-1)%l]:(eo.subVectors(a[0],a[1]).add(a[0]),t=eo);var h=a[s%l],c=a[(s+1)%l];if(this.closed||s+2<l?n=a[(s+2)%l]:(eo.subVectors(a[l-1],a[l-2]).add(a[l-1]),n=eo),"centripetal"===this.curveType||"chordal"===this.curveType){var m="chordal"===this.curveType?.5:.25,d=Math.pow(t.distanceToSquared(h),m),p=Math.pow(h.distanceToSquared(c),m),q=Math.pow(c.distanceToSquared(n),m);p<1e-4&&(p=1),d<1e-4&&(d=p),q<1e-4&&(q=p),to.initNonuniformCatmullRom(t.x,h.x,c.x,n.x,d,p,q),no.initNonuniformCatmullRom(t.y,h.y,c.y,n.y,d,p,q),io.initNonuniformCatmullRom(t.z,h.z,c.z,n.z,d,p,q)}else"catmullrom"===this.curveType&&(to.initCatmullRom(t.x,h.x,c.x,n.x,this.tension),no.initCatmullRom(t.y,h.y,c.y,n.y,this.tension),io.initCatmullRom(t.z,h.z,c.z,n.z,this.tension));return r.set(to.calc(u),no.calc(u),io.calc(u)),r}},{key:"copy",value:function(e){h(g(n.prototype),"copy",this).call(this,e),this.points=[];for(var t=0,i=e.points.length;t<i;t++){var r=e.points[t];this.points.push(r.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);e.points=[];for(var t=0,i=this.points.length;t<i;t++){var r=this.points[t];e.points.push(r.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}},{key:"fromJSON",value:function(e){h(g(n.prototype),"fromJSON",this).call(this,e),this.points=[];for(var t=0,i=e.points.length;t<i;t++){var r=e.points[t];this.points.push((new Fe).fromArray(r))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}]),n}(Jl);function ao(e,t,n,i,r){var a=.5*(i-t),l=.5*(r-n),o=e*e;return(2*n-2*i+a+l)*(e*o)+(-3*n+3*i-2*a-l)*o+a*e+n}function lo(e,t,n,i){return function(e,t){var n=1-e;return n*n*t}(e,t)+function(e,t){return 2*(1-e)*e*t}(e,n)+function(e,t){return e*e*t}(e,i)}function oo(e,t,n,i,r){return function(e,t){var n=1-e;return n*n*n*t}(e,t)+function(e,t){var n=1-e;return 3*n*n*e*t}(e,n)+function(e,t){return 3*(1-e)*e*e*t}(e,i)+function(e,t){return e*e*e*t}(e,r)}ro.prototype.isCatmullRomCurve3=!0;var so=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ee,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ee,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Ee;return _(this,n),(e=t.call(this)).type="CubicBezierCurve",e.v0=i,e.v1=r,e.v2=a,e.v3=l,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,n=t,i=this.v0,r=this.v1,a=this.v2,l=this.v3;return n.set(oo(e,i.x,r.x,a.x,l.x),oo(e,i.y,r.y,a.y,l.y)),n}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),n}(Jl);so.prototype.isCubicBezierCurve=!0;var uo=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Fe,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:new Fe;return _(this,n),(e=t.call(this)).type="CubicBezierCurve3",e.v0=i,e.v1=r,e.v2=a,e.v3=l,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,n=t,i=this.v0,r=this.v1,a=this.v2,l=this.v3;return n.set(oo(e,i.x,r.x,a.x,l.x),oo(e,i.y,r.y,a.y,l.y),oo(e,i.z,r.z,a.z,l.z)),n}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}]),n}(Jl);uo.prototype.isCubicBezierCurve3=!0;var ho=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ee,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee;return _(this,n),(e=t.call(this)).type="LineCurve",e.v1=i,e.v2=r,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}},{key:"getPointAt",value:function(e,t){return this.getPoint(e,t)}},{key:"getTangent",value:function(e,t){var n=t||new Ee;return n.copy(this.v2).sub(this.v1).normalize(),n}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(Jl);ho.prototype.isLineCurve=!0;var co=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe;return _(this,n),(e=t.call(this)).type="LineCurve3",e.isLineCurve3=!0,e.v1=i,e.v2=r,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,n=t;return 1===e?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}},{key:"getPointAt",value:function(e,t){return this.getPoint(e,t)}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(Jl),mo=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ee,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Ee;return _(this,n),(e=t.call(this)).type="QuadraticBezierCurve",e.v0=i,e.v1=r,e.v2=a,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(lo(e,i.x,r.x,a.x),lo(e,i.y,r.y,a.y)),n}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(Jl);mo.prototype.isQuadraticBezierCurve=!0;var po=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new Fe;return _(this,n),(e=t.call(this)).type="QuadraticBezierCurve3",e.v0=i,e.v1=r,e.v2=a,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe,n=t,i=this.v0,r=this.v1,a=this.v2;return n.set(lo(e,i.x,r.x,a.x),lo(e,i.y,r.y,a.y),lo(e,i.z,r.z,a.z)),n}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}]),n}(Jl);po.prototype.isQuadraticBezierCurve3=!0;var qo=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];return _(this,n),(e=t.call(this)).type="SplineCurve",e.points=i,e}return b(n,[{key:"getPoint",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee,n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),l=r-a,o=i[0===a?a:a-1],s=i[a],u=i[a>i.length-2?i.length-1:a+1],h=i[a>i.length-3?i.length-1:a+2];return n.set(ao(l,o.x,s.x,u.x,h.x),ao(l,o.y,s.y,u.y,h.y)),n}},{key:"copy",value:function(e){h(g(n.prototype),"copy",this).call(this,e),this.points=[];for(var t=0,i=e.points.length;t<i;t++){var r=e.points[t];this.points.push(r.clone())}return this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);e.points=[];for(var t=0,i=this.points.length;t<i;t++){var r=this.points[t];e.points.push(r.toArray())}return e}},{key:"fromJSON",value:function(e){h(g(n.prototype),"fromJSON",this).call(this,e),this.points=[];for(var t=0,i=e.points.length;t<i;t++){var r=e.points[t];this.points.push((new Ee).fromArray(r))}return this}}]),n}(Jl);qo.prototype.isSplineCurve=!0;var fo=Object.freeze({__proto__:null,ArcCurve:Ql,CatmullRomCurve3:ro,CubicBezierCurve:so,CubicBezierCurve3:uo,EllipseCurve:Kl,LineCurve:ho,LineCurve3:co,QuadraticBezierCurve:mo,QuadraticBezierCurve3:po,SplineCurve:qo}),vo=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="CurvePath",e.curves=[],e.autoClose=!1,e}return b(n,[{key:"add",value:function(e){this.curves.push(e)}},{key:"closePath",value:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new ho(t,e))}},{key:"getPoint",value:function(e,t){for(var n=e*this.getLength(),i=this.getCurveLengths(),r=0;r<i.length;){if(i[r]>=n){var a=i[r]-n,l=this.curves[r],o=l.getLength(),s=0===o?0:1-a/o;return l.getPointAt(s,t)}r++}return null}},{key:"getLength",value:function(){var e=this.getCurveLengths();return e[e.length-1]}},{key:"updateArcLengths",value:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}},{key:"getCurveLengths",value:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}},{key:"getSpacedPoints",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:40,t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}},{key:"getPoints",value:function(){for(var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:12,n=[],i=0,r=this.curves;i<r.length;i++)for(var a=r[i],l=a&&a.isEllipseCurve?2*t:a&&(a.isLineCurve||a.isLineCurve3)?1:a&&a.isSplineCurve?t*a.points.length:t,o=a.getPoints(l),s=0;s<o.length;s++){var u=o[s];e&&e.equals(u)||(n.push(u),e=u)}return this.autoClose&&n.length>1&&!n[n.length-1].equals(n[0])&&n.push(n[0]),n}},{key:"copy",value:function(e){h(g(n.prototype),"copy",this).call(this,e),this.curves=[];for(var t=0,i=e.curves.length;t<i;t++){var r=e.curves[t];this.curves.push(r.clone())}return this.autoClose=e.autoClose,this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);e.autoClose=this.autoClose,e.curves=[];for(var t=0,i=this.curves.length;t<i;t++){var r=this.curves[t];e.curves.push(r.toJSON())}return e}},{key:"fromJSON",value:function(e){h(g(n.prototype),"fromJSON",this).call(this,e),this.autoClose=e.autoClose,this.curves=[];for(var t=0,i=e.curves.length;t<i;t++){var r=e.curves[t];this.curves.push((new fo[r.type]).fromJSON(r))}return this}}]),n}(Jl),xo=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="Path",i.currentPoint=new Ee,e&&i.setFromPoints(e),i}return b(n,[{key:"setFromPoints",value:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}},{key:"moveTo",value:function(e,t){return this.currentPoint.set(e,t),this}},{key:"lineTo",value:function(e,t){var n=new ho(this.currentPoint.clone(),new Ee(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}},{key:"quadraticCurveTo",value:function(e,t,n,i){var r=new mo(this.currentPoint.clone(),new Ee(e,t),new Ee(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}},{key:"bezierCurveTo",value:function(e,t,n,i,r,a){var l=new so(this.currentPoint.clone(),new Ee(e,t),new Ee(n,i),new Ee(r,a));return this.curves.push(l),this.currentPoint.set(r,a),this}},{key:"splineThru",value:function(e){var t=[this.currentPoint.clone()].concat(e),n=new qo(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}},{key:"arc",value:function(e,t,n,i,r,a){var l=this.currentPoint.x,o=this.currentPoint.y;return this.absarc(e+l,t+o,n,i,r,a),this}},{key:"absarc",value:function(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}},{key:"ellipse",value:function(e,t,n,i,r,a,l,o){var s=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+s,t+u,n,i,r,a,l,o),this}},{key:"absellipse",value:function(e,t,n,i,r,a,l,o){var s=new Kl(e,t,n,i,r,a,l,o);if(this.curves.length>0){var u=s.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(s);var h=s.getPoint(1);return this.currentPoint.copy(h),this}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.currentPoint.copy(e.currentPoint),this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return e.currentPoint=this.currentPoint.toArray(),e}},{key:"fromJSON",value:function(e){return h(g(n.prototype),"fromJSON",this).call(this,e),this.currentPoint.fromArray(e.currentPoint),this}}]),n}(vo),go=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this,e)).uuid=ge(),i.type="Shape",i.holes=[],i}return b(n,[{key:"getPointsHoles",value:function(e){for(var t=[],n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}},{key:"extractPoints",value:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}},{key:"copy",value:function(e){h(g(n.prototype),"copy",this).call(this,e),this.holes=[];for(var t=0,i=e.holes.length;t<i;t++){var r=e.holes[t];this.holes.push(r.clone())}return this}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);e.uuid=this.uuid,e.holes=[];for(var t=0,i=this.holes.length;t<i;t++){var r=this.holes[t];e.holes.push(r.toJSON())}return e}},{key:"fromJSON",value:function(e){h(g(n.prototype),"fromJSON",this).call(this,e),this.uuid=e.uuid,this.holes=[];for(var t=0,i=e.holes.length;t<i;t++){var r=e.holes[t];this.holes.push((new xo).fromJSON(r))}return this}}]),n}(xo),_o=function(e,t){var n,i,r,a,l,o,s,u=arguments.length>2&&void 0!==arguments[2]?arguments[2]:2,h=t&&t.length,c=h?t[0]*u:e.length,m=yo(e,0,c,u,!0),d=[];if(!m||m.next===m.prev)return d;if(h&&(m=zo(e,t,m,u)),e.length>80*u){n=r=e[0],i=a=e[1];for(var p=u;p<c;p+=u)(l=e[p])<n&&(n=l),(o=e[p+1])<i&&(i=o),l>r&&(r=l),o>a&&(a=o);s=0!==(s=Math.max(r-n,a-i))?1/s:0}return wo(m,d,u,n,i,s),d};function yo(e,t,n,i,r){var a,l;if(r===function(e,t,n,i){for(var r=0,a=t,l=n-i;a<n;a+=i)r+=(e[l]-e[a])*(e[a+1]+e[l+1]),l=a;return r}(e,t,n,i)>0)for(a=t;a<n;a+=i)l=Go(a,e[a],e[a+1],l);else for(a=n-i;a>=t;a-=i)l=Go(a,e[a],e[a+1],l);return l&&No(l,l.next)&&(Vo(l),l=l.next),l}function bo(e,t){if(!e)return e;t||(t=e);var n,i=e;do{if(n=!1,i.steiner||!No(i,i.next)&&0!==Io(i.prev,i,i.next))i=i.next;else{if(Vo(i),(i=t=i.prev)===i.next)break;n=!0}}while(n||i!==t);return t}function wo(e,t,n,i,r,a,l){if(e){!l&&a&&function(e,t,n,i){var r=e;do{null===r.z&&(r.z=Ro(r.x,r.y,t,n,i)),r.prevZ=r.prev,r.nextZ=r.next,r=r.next}while(r!==e);r.prevZ.nextZ=null,r.prevZ=null,function(e){var t,n,i,r,a,l,o,s,u=1;do{for(n=e,e=null,a=null,l=0;n;){for(l++,i=n,o=0,t=0;t<u&&(o++,i=i.nextZ);t++);for(s=u;o>0||s>0&&i;)0!==o&&(0===s||!i||n.z<=i.z)?(r=n,n=n.nextZ,o--):(r=i,i=i.nextZ,s--),a?a.nextZ=r:e=r,r.prevZ=a,a=r;n=i}a.nextZ=null,u*=2}while(l>1)}(r)}(e,i,r,a);for(var o,s,u=e;e.prev!==e.next;)if(o=e.prev,s=e.next,a?So(e,i,r,a):Mo(e))t.push(o.i/n),t.push(e.i/n),t.push(s.i/n),Vo(e),e=s.next,u=s.next;else if((e=s)===u){l?1===l?wo(e=To(bo(e),t,n),t,n,i,r,a,2):2===l&&Eo(e,t,n,i,r,a):wo(bo(e),t,n,i,r,a,1);break}}}function Mo(e){var t=e.prev,n=e,i=e.next;if(Io(t,n,i)>=0)return!1;for(var r=e.next.next;r!==e.prev;){if(Co(t.x,t.y,n.x,n.y,i.x,i.y,r.x,r.y)&&Io(r.prev,r,r.next)>=0)return!1;r=r.next}return!0}function So(e,t,n,i){var r=e.prev,a=e,l=e.next;if(Io(r,a,l)>=0)return!1;for(var o=r.x<a.x?r.x<l.x?r.x:l.x:a.x<l.x?a.x:l.x,s=r.y<a.y?r.y<l.y?r.y:l.y:a.y<l.y?a.y:l.y,u=r.x>a.x?r.x>l.x?r.x:l.x:a.x>l.x?a.x:l.x,h=r.y>a.y?r.y>l.y?r.y:l.y:a.y>l.y?a.y:l.y,c=Ro(o,s,t,n,i),m=Ro(u,h,t,n,i),d=e.prevZ,p=e.nextZ;d&&d.z>=c&&p&&p.z<=m;){if(d!==e.prev&&d!==e.next&&Co(r.x,r.y,a.x,a.y,l.x,l.y,d.x,d.y)&&Io(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,p!==e.prev&&p!==e.next&&Co(r.x,r.y,a.x,a.y,l.x,l.y,p.x,p.y)&&Io(p.prev,p,p.next)>=0)return!1;p=p.nextZ}for(;d&&d.z>=c;){if(d!==e.prev&&d!==e.next&&Co(r.x,r.y,a.x,a.y,l.x,l.y,d.x,d.y)&&Io(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;p&&p.z<=m;){if(p!==e.prev&&p!==e.next&&Co(r.x,r.y,a.x,a.y,l.x,l.y,p.x,p.y)&&Io(p.prev,p,p.next)>=0)return!1;p=p.nextZ}return!0}function To(e,t,n){var i=e;do{var r=i.prev,a=i.next.next;!No(r,a)&&Oo(r,i,i.next,a)&&Uo(r,a)&&Uo(a,r)&&(t.push(r.i/n),t.push(i.i/n),t.push(a.i/n),Vo(i),Vo(i.next),i=e=a),i=i.next}while(i!==e);return bo(i)}function Eo(e,t,n,i,r,a){var l=e;do{for(var o=l.next.next;o!==l.prev;){if(l.i!==o.i&&Do(l,o)){var s=Ho(l,o);return l=bo(l,l.next),s=bo(s,s.next),wo(l,t,n,i,r,a),void wo(s,t,n,i,r,a)}o=o.next}l=l.next}while(l!==e)}function zo(e,t,n,i){var r,a,l,o=[];for(r=0,a=t.length;r<a;r++)(l=yo(e,t[r]*i,r<a-1?t[r+1]*i:e.length,i,!1))===l.next&&(l.steiner=!0),o.push(Po(l));for(o.sort(ko),r=0;r<o.length;r++)Ao(o[r],n),n=bo(n,n.next);return n}function ko(e,t){return e.x-t.x}function Ao(e,t){if(t=function(e,t){var n,i=t,r=e.x,a=e.y,l=-1/0;do{if(a<=i.y&&a>=i.next.y&&i.next.y!==i.y){var o=i.x+(a-i.y)*(i.next.x-i.x)/(i.next.y-i.y);if(o<=r&&o>l){if(l=o,o===r){if(a===i.y)return i;if(a===i.next.y)return i.next}n=i.x<i.next.x?i:i.next}}i=i.next}while(i!==t);if(!n)return null;if(r===l)return n;var s,u=n,h=n.x,c=n.y,m=1/0;i=n;do{r>=i.x&&i.x>=h&&r!==i.x&&Co(a<c?r:l,a,h,c,a<c?l:r,a,i.x,i.y)&&(s=Math.abs(a-i.y)/(r-i.x),Uo(i,e)&&(s<m||s===m&&(i.x>n.x||i.x===n.x&&Lo(n,i)))&&(n=i,m=s)),i=i.next}while(i!==u);return n}(e,t),t){var n=Ho(t,e);bo(t,t.next),bo(n,n.next)}}function Lo(e,t){return Io(e.prev,e,t.prev)<0&&Io(t.next,e,e.next)<0}function Ro(e,t,n,i,r){return(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-n)*r)|e<<8))|e<<4))|e<<2))|e<<1))|(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-i)*r)|t<<8))|t<<4))|t<<2))|t<<1))<<1}function Po(e){var t=e,n=e;do{(t.x<n.x||t.x===n.x&&t.y<n.y)&&(n=t),t=t.next}while(t!==e);return n}function Co(e,t,n,i,r,a,l,o){return(r-l)*(t-o)-(e-l)*(a-o)>=0&&(e-l)*(i-o)-(n-l)*(t-o)>=0&&(n-l)*(a-o)-(r-l)*(i-o)>=0}function Do(e,t){return e.next.i!==t.i&&e.prev.i!==t.i&&!function(e,t){var n=e;do{if(n.i!==e.i&&n.next.i!==e.i&&n.i!==t.i&&n.next.i!==t.i&&Oo(n,n.next,e,t))return!0;n=n.next}while(n!==e);return!1}(e,t)&&(Uo(e,t)&&Uo(t,e)&&function(e,t){var n=e,i=!1,r=(e.x+t.x)/2,a=(e.y+t.y)/2;do{n.y>a!=n.next.y>a&&n.next.y!==n.y&&r<(n.next.x-n.x)*(a-n.y)/(n.next.y-n.y)+n.x&&(i=!i),n=n.next}while(n!==e);return i}(e,t)&&(Io(e.prev,e,t.prev)||Io(e,t.prev,t))||No(e,t)&&Io(e.prev,e,e.next)>0&&Io(t.prev,t,t.next)>0)}function Io(e,t,n){return(t.y-e.y)*(n.x-t.x)-(t.x-e.x)*(n.y-t.y)}function No(e,t){return e.x===t.x&&e.y===t.y}function Oo(e,t,n,i){var r=Fo(Io(e,t,n)),a=Fo(Io(e,t,i)),l=Fo(Io(n,i,e)),o=Fo(Io(n,i,t));return r!==a&&l!==o||(!(0!==r||!Bo(e,n,t))||(!(0!==a||!Bo(e,i,t))||(!(0!==l||!Bo(n,e,i))||!(0!==o||!Bo(n,t,i)))))}function Bo(e,t,n){return t.x<=Math.max(e.x,n.x)&&t.x>=Math.min(e.x,n.x)&&t.y<=Math.max(e.y,n.y)&&t.y>=Math.min(e.y,n.y)}function Fo(e){return e>0?1:e<0?-1:0}function Uo(e,t){return Io(e.prev,e,e.next)<0?Io(e,t,e.next)>=0&&Io(e,e.prev,t)>=0:Io(e,t,e.prev)<0||Io(e,e.next,t)<0}function Ho(e,t){var n=new Wo(e.i,e.x,e.y),i=new Wo(t.i,t.x,t.y),r=e.next,a=t.prev;return e.next=t,t.prev=e,n.next=r,r.prev=n,i.next=n,n.prev=i,a.next=i,i.prev=a,i}function Go(e,t,n,i){var r=new Wo(e,t,n);return i?(r.next=i.next,r.prev=i,i.next.prev=r,i.next=r):(r.prev=r,r.next=r),r}function Vo(e){e.next.prev=e.prev,e.prev.next=e.next,e.prevZ&&(e.prevZ.nextZ=e.nextZ),e.nextZ&&(e.nextZ.prevZ=e.prevZ)}function Wo(e,t,n){this.i=e,this.x=t,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}var jo=function(){function e(){_(this,e)}return b(e,null,[{key:"area",value:function(e){for(var t=e.length,n=0,i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return.5*n}},{key:"isClockWise",value:function(t){return e.area(t)<0}},{key:"triangulateShape",value:function(e,t){var n=[],i=[],r=[];Xo(e),Yo(n,e);var a=e.length;t.forEach(Xo);for(var l=0;l<t.length;l++)i.push(a),a+=t[l].length,Yo(n,t[l]);for(var o=_o(n,i),s=0;s<o.length;s+=3)r.push(o.slice(s,s+3));return r}}]),e}();function Xo(e){var t=e.length;t>2&&e[t-1].equals(e[0])&&e.pop()}function Yo(e,t){for(var n=0;n<t.length;n++)e.push(t[n].x),e.push(t[n].y)}var Zo=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new go([new Ee(.5,.5),new Ee(-.5,.5),new Ee(-.5,-.5),new Ee(.5,-.5)]),r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};_(this,n),(e=t.call(this)).type="ExtrudeGeometry",e.parameters={shapes:i,options:r},i=Array.isArray(i)?i:[i];for(var a=x(e),l=[],o=[],s=0,u=i.length;s<u;s++){var h=i[s];c(h)}function c(e){var t=[],n=void 0!==r.curveSegments?r.curveSegments:12,i=void 0!==r.steps?r.steps:1,s=void 0!==r.depth?r.depth:1,u=void 0===r.bevelEnabled||r.bevelEnabled,h=void 0!==r.bevelThickness?r.bevelThickness:.2,c=void 0!==r.bevelSize?r.bevelSize:h-.1,m=void 0!==r.bevelOffset?r.bevelOffset:0,d=void 0!==r.bevelSegments?r.bevelSegments:3,p=r.extrudePath,q=void 0!==r.UVGenerator?r.UVGenerator:Jo;void 0!==r.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),s=r.amount);var f,v,x,g,_,y=!1;p&&(f=p.getSpacedPoints(i),y=!0,u=!1,v=p.computeFrenetFrames(i,!1),x=new Fe,g=new Fe,_=new Fe),u||(d=0,h=0,c=0,m=0);var b=e.extractPoints(n),w=b.shape,M=b.holes;if(!jo.isClockWise(w)){w=w.reverse();for(var S=0,T=M.length;S<T;S++){var E=M[S];jo.isClockWise(E)&&(M[S]=E.reverse())}}for(var z=jo.triangulateShape(w,M),k=w,A=0,L=M.length;A<L;A++){var R=M[A];w=w.concat(R)}function P(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}var C=w.length,D=z.length;function I(e,t,n){var i,r,a,l=e.x-t.x,o=e.y-t.y,s=n.x-e.x,u=n.y-e.y,h=l*l+o*o,c=l*u-o*s;if(Math.abs(c)>Number.EPSILON){var m=Math.sqrt(h),d=Math.sqrt(s*s+u*u),p=t.x-o/m,q=t.y+l/m,f=((n.x-u/d-p)*u-(n.y+s/d-q)*s)/(l*u-o*s),v=(i=p+l*f-e.x)*i+(r=q+o*f-e.y)*r;if(v<=2)return new Ee(i,r);a=Math.sqrt(v/2)}else{var x=!1;l>Number.EPSILON?s>Number.EPSILON&&(x=!0):l<-Number.EPSILON?s<-Number.EPSILON&&(x=!0):Math.sign(o)===Math.sign(u)&&(x=!0),x?(i=-o,r=l,a=Math.sqrt(h)):(i=l,r=o,a=Math.sqrt(h/2))}return new Ee(i/a,r/a)}for(var N=[],O=0,B=k.length,F=B-1,U=O+1;O<B;O++,F++,U++)F===B&&(F=0),U===B&&(U=0),N[O]=I(k[O],k[F],k[U]);for(var H,G=[],V=N.concat(),W=0,j=M.length;W<j;W++){var X=M[W];H=[];for(var Y=0,Z=X.length,J=Z-1,K=Y+1;Y<Z;Y++,J++,K++)J===Z&&(J=0),K===Z&&(K=0),H[Y]=I(X[Y],X[J],X[K]);G.push(H),V=V.concat(H)}for(var Q=0;Q<d;Q++){for(var $=Q/d,ee=h*Math.cos($*Math.PI/2),te=c*Math.sin($*Math.PI/2)+m,ne=0,ie=k.length;ne<ie;ne++){var re=P(k[ne],N[ne],te);Re(re.x,re.y,-ee)}for(var ae=0,le=M.length;ae<le;ae++){var oe=M[ae];H=G[ae];for(var se=0,ue=oe.length;se<ue;se++){var he=P(oe[se],H[se],te);Re(he.x,he.y,-ee)}}}for(var ce=c+m,me=0;me<C;me++){var de=u?P(w[me],V[me],ce):w[me];y?(g.copy(v.normals[0]).multiplyScalar(de.x),x.copy(v.binormals[0]).multiplyScalar(de.y),_.copy(f[0]).add(g).add(x),Re(_.x,_.y,_.z)):Re(de.x,de.y,0)}for(var pe=1;pe<=i;pe++)for(var qe=0;qe<C;qe++){var fe=u?P(w[qe],V[qe],ce):w[qe];y?(g.copy(v.normals[pe]).multiplyScalar(fe.x),x.copy(v.binormals[pe]).multiplyScalar(fe.y),_.copy(f[pe]).add(g).add(x),Re(_.x,_.y,_.z)):Re(fe.x,fe.y,s/i*pe)}for(var ve=d-1;ve>=0;ve--){for(var xe=ve/d,ge=h*Math.cos(xe*Math.PI/2),_e=c*Math.sin(xe*Math.PI/2)+m,ye=0,be=k.length;ye<be;ye++){var we=P(k[ye],N[ye],_e);Re(we.x,we.y,s+ge)}for(var Me=0,Se=M.length;Me<Se;Me++){var Te=M[Me];H=G[Me];for(var ze=0,ke=Te.length;ze<ke;ze++){var Ae=P(Te[ze],H[ze],_e);y?Re(Ae.x,Ae.y+f[i-1].y,f[i-1].x+ge):Re(Ae.x,Ae.y,s+ge)}}}function Le(e,t){for(var n=e.length;--n>=0;){var r=n,a=n-1;a<0&&(a=e.length-1);for(var l=0,o=i+2*d;l<o;l++){var s=C*l,u=C*(l+1);Ce(t+r+s,t+a+s,t+a+u,t+r+u)}}}function Re(e,n,i){t.push(e),t.push(n),t.push(i)}function Pe(e,t,n){De(e),De(t),De(n);var i=l.length/3,r=q.generateTopUV(a,l,i-3,i-2,i-1);Ie(r[0]),Ie(r[1]),Ie(r[2])}function Ce(e,t,n,i){De(e),De(t),De(i),De(t),De(n),De(i);var r=l.length/3,o=q.generateSideWallUV(a,l,r-6,r-3,r-2,r-1);Ie(o[0]),Ie(o[1]),Ie(o[3]),Ie(o[1]),Ie(o[2]),Ie(o[3])}function De(e){l.push(t[3*e+0]),l.push(t[3*e+1]),l.push(t[3*e+2])}function Ie(e){o.push(e.x),o.push(e.y)}!function(){var e=l.length/3;if(u){for(var t=0,n=C*t,r=0;r<D;r++){var o=z[r];Pe(o[2]+n,o[1]+n,o[0]+n)}n=C*(t=i+2*d);for(var s=0;s<D;s++){var h=z[s];Pe(h[0]+n,h[1]+n,h[2]+n)}}else{for(var c=0;c<D;c++){var m=z[c];Pe(m[2],m[1],m[0])}for(var p=0;p<D;p++){var q=z[p];Pe(q[0]+C*i,q[1]+C*i,q[2]+C*i)}}a.addGroup(e,l.length/3-e,0)}(),function(){var e=l.length/3,t=0;Le(k,t),t+=k.length;for(var n=0,i=M.length;n<i;n++){var r=M[n];Le(r,t),t+=r.length}a.addGroup(e,l.length/3-e,1)}()}return e.setAttribute("position",new fn(l,3)),e.setAttribute("uv",new fn(o,2)),e.computeVertexNormals(),e}return b(n,[{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return function(e,t,n){if(n.shapes=[],Array.isArray(e))for(var i=0,r=e.length;i<r;i++){var a=e[i];n.shapes.push(a.uuid)}else n.shapes.push(e.uuid);void 0!==t.extrudePath&&(n.options.extrudePath=t.extrudePath.toJSON());return n}(this.parameters.shapes,this.parameters.options,e)}}],[{key:"fromJSON",value:function(e,t){for(var i=[],r=0,a=e.shapes.length;r<a;r++){var l=t[e.shapes[r]];i.push(l)}var o=e.options.extrudePath;return void 0!==o&&(e.options.extrudePath=(new fo[o.type]).fromJSON(o)),new n(i,e.options)}}]),n}(Mn),Jo={generateTopUV:function(e,t,n,i,r){var a=t[3*n],l=t[3*n+1],o=t[3*i],s=t[3*i+1],u=t[3*r],h=t[3*r+1];return[new Ee(a,l),new Ee(o,s),new Ee(u,h)]},generateSideWallUV:function(e,t,n,i,r,a){var l=t[3*n],o=t[3*n+1],s=t[3*n+2],u=t[3*i],h=t[3*i+1],c=t[3*i+2],m=t[3*r],d=t[3*r+1],p=t[3*r+2],q=t[3*a],f=t[3*a+1],v=t[3*a+2];return Math.abs(o-h)<Math.abs(l-u)?[new Ee(l,1-s),new Ee(u,1-c),new Ee(m,1-p),new Ee(q,1-v)]:[new Ee(o,1-s),new Ee(h,1-c),new Ee(d,1-p),new Ee(f,1-v)]}};var Ko=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new go([new Ee(0,.5),new Ee(-.5,-.5),new Ee(.5,-.5)]),r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:12;_(this,n),(e=t.call(this)).type="ShapeGeometry",e.parameters={shapes:i,curveSegments:r};var a=[],l=[],o=[],s=[],u=0,h=0;if(!1===Array.isArray(i))m(i);else for(var c=0;c<i.length;c++)m(i[c]),e.addGroup(u,h,c),u+=h,h=0;function m(e){var t=l.length/3,n=e.extractPoints(r),i=n.shape,u=n.holes;!1===jo.isClockWise(i)&&(i=i.reverse());for(var c=0,m=u.length;c<m;c++){var d=u[c];!0===jo.isClockWise(d)&&(u[c]=d.reverse())}for(var p=jo.triangulateShape(i,u),q=0,f=u.length;q<f;q++){var v=u[q];i=i.concat(v)}for(var x=0,g=i.length;x<g;x++){var _=i[x];l.push(_.x,_.y,0),o.push(0,0,1),s.push(_.x,_.y)}for(var y=0,b=p.length;y<b;y++){var w=p[y],M=w[0]+t,S=w[1]+t,T=w[2]+t;a.push(M,S,T),h+=3}}return e.setIndex(a),e.setAttribute("position",new fn(l,3)),e.setAttribute("normal",new fn(o,3)),e.setAttribute("uv",new fn(s,2)),e}return b(n,[{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this);return function(e,t){if(t.shapes=[],Array.isArray(e))for(var n=0,i=e.length;n<i;n++){var r=e[n];t.shapes.push(r.uuid)}else t.shapes.push(e.uuid);return t}(this.parameters.shapes,e)}}],[{key:"fromJSON",value:function(e,t){for(var i=[],r=0,a=e.shapes.length;r<a;r++){var l=t[e.shapes[r]];i.push(l)}return new n(i,e.curveSegments)}}]),n}(Mn);var Qo=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:32,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:16,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:2*Math.PI,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:0,u=arguments.length>6&&void 0!==arguments[6]?arguments[6]:Math.PI;_(this,n),(e=t.call(this)).type="SphereGeometry",e.parameters={radius:i,widthSegments:r,heightSegments:a,phiStart:l,phiLength:o,thetaStart:s,thetaLength:u},r=Math.max(3,Math.floor(r)),a=Math.max(2,Math.floor(a));for(var h=Math.min(s+u,Math.PI),c=0,m=[],d=new Fe,p=new Fe,q=[],f=[],v=[],x=[],g=0;g<=a;g++){var y=[],b=g/a,w=0;0==g&&0==s?w=.5/r:g==a&&h==Math.PI&&(w=-.5/r);for(var M=0;M<=r;M++){var S=M/r;d.x=-i*Math.cos(l+S*o)*Math.sin(s+b*u),d.y=i*Math.cos(s+b*u),d.z=i*Math.sin(l+S*o)*Math.sin(s+b*u),f.push(d.x,d.y,d.z),p.copy(d).normalize(),v.push(p.x,p.y,p.z),x.push(S+w,1-b),y.push(c++)}m.push(y)}for(var T=0;T<a;T++)for(var E=0;E<r;E++){var z=m[T][E+1],k=m[T][E],A=m[T+1][E],L=m[T+1][E+1];(0!==T||s>0)&&q.push(z,k,L),(T!==a-1||h<Math.PI)&&q.push(k,A,L)}return e.setIndex(q),e.setAttribute("position",new fn(f,3)),e.setAttribute("normal",new fn(v,3)),e.setAttribute("uv",new fn(x,2)),e}return b(n,null,[{key:"fromJSON",value:function(e){return new n(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}]),n}(Mn);var $o=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="ShadowMaterial",i.color=new un(0),i.transparent=!0,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this}}]),n}(tn);$o.prototype.isShadowMaterial=!0;var es=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).defines={STANDARD:""},i.type="MeshStandardMaterial",i.color=new un(16777215),i.roughness=1,i.metalness=0,i.map=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.emissive=new un(0),i.emissiveIntensity=1,i.emissiveMap=null,i.bumpMap=null,i.bumpScale=1,i.normalMap=null,i.normalMapType=0,i.normalScale=new Ee(1,1),i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.roughnessMap=null,i.metalnessMap=null,i.alphaMap=null,i.envMap=null,i.envMapIntensity=1,i.refractionRatio=.98,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.flatShading=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}]),n}(tn);es.prototype.isMeshStandardMaterial=!0;var ts=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).defines={STANDARD:"",PHYSICAL:""},i.type="MeshPhysicalMaterial",i.clearcoatMap=null,i.clearcoatRoughness=0,i.clearcoatRoughnessMap=null,i.clearcoatNormalScale=new Ee(1,1),i.clearcoatNormalMap=null,i.ior=1.5,Object.defineProperty(x(i),"reflectivity",{get:function(){return _e(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),i.sheenTint=new un(0),i.sheenRoughness=1,i.transmissionMap=null,i.thickness=.01,i.thicknessMap=null,i.attenuationDistance=0,i.attenuationTint=new un(1,1,1),i.specularIntensity=1,i.specularIntensityMap=null,i.specularTint=new un(1,1,1),i.specularTintMap=null,i._sheen=0,i._clearcoat=0,i._transmission=0,i.setValues(e),i}return b(n,[{key:"sheen",get:function(){return this._sheen},set:function(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}},{key:"clearcoat",get:function(){return this._clearcoat},set:function(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}},{key:"transmission",get:function(){return this._transmission},set:function(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenTint.copy(e.sheenTint),this.sheenRoughness=e.sheenRoughness,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationTint.copy(e.attenuationTint),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularTint.copy(e.specularTint),this.specularTintMap=e.specularTintMap,this}}]),n}(es);ts.prototype.isMeshPhysicalMaterial=!0;var ns=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshPhongMaterial",i.color=new un(16777215),i.specular=new un(1118481),i.shininess=30,i.map=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.emissive=new un(0),i.emissiveIntensity=1,i.emissiveMap=null,i.bumpMap=null,i.bumpScale=1,i.normalMap=null,i.normalMapType=0,i.normalScale=new Ee(1,1),i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.specularMap=null,i.alphaMap=null,i.envMap=null,i.combine=0,i.reflectivity=1,i.refractionRatio=.98,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.flatShading=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}]),n}(tn);ns.prototype.isMeshPhongMaterial=!0;var is=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).defines={TOON:""},i.type="MeshToonMaterial",i.color=new un(16777215),i.map=null,i.gradientMap=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.emissive=new un(0),i.emissiveIntensity=1,i.emissiveMap=null,i.bumpMap=null,i.bumpScale=1,i.normalMap=null,i.normalMapType=0,i.normalScale=new Ee(1,1),i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.alphaMap=null,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(tn);is.prototype.isMeshToonMaterial=!0;var rs=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshNormalMaterial",i.bumpMap=null,i.bumpScale=1,i.normalMap=null,i.normalMapType=0,i.normalScale=new Ee(1,1),i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.wireframe=!1,i.wireframeLinewidth=1,i.fog=!1,i.flatShading=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}]),n}(tn);rs.prototype.isMeshNormalMaterial=!0;var as=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="MeshLambertMaterial",i.color=new un(16777215),i.map=null,i.lightMap=null,i.lightMapIntensity=1,i.aoMap=null,i.aoMapIntensity=1,i.emissive=new un(0),i.emissiveIntensity=1,i.emissiveMap=null,i.specularMap=null,i.alphaMap=null,i.envMap=null,i.combine=0,i.reflectivity=1,i.refractionRatio=.98,i.wireframe=!1,i.wireframeLinewidth=1,i.wireframeLinecap="round",i.wireframeLinejoin="round",i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}]),n}(tn);as.prototype.isMeshLambertMaterial=!0;var ls=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).defines={MATCAP:""},i.type="MeshMatcapMaterial",i.color=new un(16777215),i.matcap=null,i.map=null,i.bumpMap=null,i.bumpScale=1,i.normalMap=null,i.normalMapType=0,i.normalScale=new Ee(1,1),i.displacementMap=null,i.displacementScale=1,i.displacementBias=0,i.alphaMap=null,i.flatShading=!1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}]),n}(tn);ls.prototype.isMeshMatcapMaterial=!0;var os=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="LineDashedMaterial",i.scale=1,i.dashSize=3,i.gapSize=1,i.setValues(e),i}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}]),n}(Ll);os.prototype.isLineDashedMaterial=!0;var ss={arraySlice:function(e,t,n){return ss.isTypedArray(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){for(var t=e.length,n=new Array(t),i=0;i!==t;++i)n[i]=i;return n.sort((function(t,n){return e[t]-e[n]})),n},sortedArray:function(e,t,n){for(var i=e.length,r=new e.constructor(i),a=0,l=0;l!==i;++a)for(var o=n[a]*t,s=0;s!==t;++s)r[l++]=e[o+s];return r},flattenJSON:function(e,t,n,i){for(var r=1,a=e[0];void 0!==a&&void 0===a[i];)a=e[r++];if(void 0!==a){var l=a[i];if(void 0!==l)if(Array.isArray(l))do{void 0!==(l=a[i])&&(t.push(a.time),n.push.apply(n,l)),a=e[r++]}while(void 0!==a);else if(void 0!==l.toArray)do{void 0!==(l=a[i])&&(t.push(a.time),l.toArray(n,n.length)),a=e[r++]}while(void 0!==a);else do{void 0!==(l=a[i])&&(t.push(a.time),n.push(l)),a=e[r++]}while(void 0!==a)}},subclip:function(e,t,n,i){var r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:30,a=e.clone();a.name=t;for(var l=[],o=0;o<a.tracks.length;++o){for(var s=a.tracks[o],u=s.getValueSize(),h=[],c=[],m=0;m<s.times.length;++m){var d=s.times[m]*r;if(!(d<n||d>=i)){h.push(s.times[m]);for(var p=0;p<u;++p)c.push(s.values[m*u+p])}}0!==h.length&&(s.times=ss.convertArray(h,s.times.constructor),s.values=ss.convertArray(c,s.values.constructor),l.push(s))}a.tracks=l;for(var q=1/0,f=0;f<a.tracks.length;++f)q>a.tracks[f].times[0]&&(q=a.tracks[f].times[0]);for(var v=0;v<a.tracks.length;++v)a.tracks[v].shift(-1*q);return a.resetDuration(),a},makeClipAdditive:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:30;i<=0&&(i=30);for(var r=n.tracks.length,a=t/i,l=function(t){var i=n.tracks[t],r=i.ValueTypeName;if("bool"===r||"string"===r)return"continue";var l=e.tracks.find((function(e){return e.name===i.name&&e.ValueTypeName===r}));if(void 0===l)return"continue";var o=0,s=i.getValueSize();i.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(o=s/3);var u=0,h=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=h/3);var c=i.times.length-1,m=void 0;if(a<=i.times[0]){var d=o,p=s-o;m=ss.arraySlice(i.values,d,p)}else if(a>=i.times[c]){var q=c*s+o,f=q+s-o;m=ss.arraySlice(i.values,q,f)}else{var v=i.createInterpolant(),x=o,g=s-o;v.evaluate(a),m=ss.arraySlice(v.resultBuffer,x,g)}"quaternion"===r&&(new Be).fromArray(m).normalize().conjugate().toArray(m);for(var _=l.times.length,y=0;y<_;++y){var b=y*h+u;if("quaternion"===r)Be.multiplyQuaternionsFlat(l.values,b,m,0,l.values,b);else for(var w=h-2*u,M=0;M<w;++M)l.values[b+M]-=m[M]}},o=0;o<r;++o)l(o);return e.blendMode=ie,e}},us=function(){function e(t,n,i,r){_(this,e),this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new n.constructor(i),this.sampleValues=n,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}return b(e,[{key:"evaluate",value:function(e){var t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{var a;n:{i:if(!(e<i)){for(var l=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===l)break;if(r=i,e<(i=t[++n]))break t}a=t.length;break n}if(e>=r)break e;var o=t[1];e<o&&(n=2,r=o);for(var s=n-2;;){if(void 0===r)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===s)break;if(i=r,e>=(r=t[--n-1]))break t}a=n,n=0}for(;n<a;){var u=n+a>>>1;e<t[u]?a=u:n=u+1}if(i=t[n],void 0===(r=t[n-1]))return this._cachedIndex=0,this.beforeStart_(0,e,i);if(void 0===i)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}},{key:"getSettings_",value:function(){return this.settings||this.DefaultSettings_}},{key:"copySampleValue_",value:function(e){for(var t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i,a=0;a!==i;++a)t[a]=n[r+a];return t}},{key:"interpolate_",value:function(){throw new Error("call to abstract method")}},{key:"intervalChanged_",value:function(){}}]),e}();us.prototype.beforeStart_=us.prototype.copySampleValue_,us.prototype.afterEnd_=us.prototype.copySampleValue_;var hs=function(e){p(n,e);var t=f(n);function n(e,i,r,a){var l;return _(this,n),(l=t.call(this,e,i,r,a))._weightPrev=-0,l._offsetPrev=-0,l._weightNext=-0,l._offsetNext=-0,l.DefaultSettings_={endingStart:$,endingEnd:$},l}return b(n,[{key:"intervalChanged_",value:function(e,t,n){var i=this.parameterPositions,r=e-2,a=e+1,l=i[r],o=i[a];if(void 0===l)switch(this.getSettings_().endingStart){case ee:r=e,l=2*t-n;break;case te:l=t+i[r=i.length-2]-i[r+1];break;default:r=e,l=n}if(void 0===o)switch(this.getSettings_().endingEnd){case ee:a=e,o=2*n-t;break;case te:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}var s=.5*(n-t),u=this.valueSize;this._weightPrev=s/(t-l),this._weightNext=s/(o-n),this._offsetPrev=r*u,this._offsetNext=a*u}},{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=e*l,s=o-l,u=this._offsetPrev,h=this._offsetNext,c=this._weightPrev,m=this._weightNext,d=(n-t)/(i-t),p=d*d,q=p*d,f=-c*q+2*c*p-c*d,v=(1+c)*q+(-1.5-2*c)*p+(-.5+c)*d+1,x=(-1-m)*q+(1.5+m)*p+.5*d,g=m*q-m*p,_=0;_!==l;++_)r[_]=f*a[u+_]+v*a[s+_]+x*a[o+_]+g*a[h+_];return r}}]),n}(us),cs=function(e){p(n,e);var t=f(n);function n(e,i,r,a){return _(this,n),t.call(this,e,i,r,a)}return b(n,[{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=e*l,s=o-l,u=(n-t)/(i-t),h=1-u,c=0;c!==l;++c)r[c]=a[s+c]*h+a[o+c]*u;return r}}]),n}(us),ms=function(e){p(n,e);var t=f(n);function n(e,i,r,a){return _(this,n),t.call(this,e,i,r,a)}return b(n,[{key:"interpolate_",value:function(e){return this.copySampleValue_(e-1)}}]),n}(us),ds=function(){function e(t,n,i,r){if(_(this,e),void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===n||0===n.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=ss.convertArray(n,this.TimeBufferType),this.values=ss.convertArray(i,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}return b(e,[{key:"InterpolantFactoryMethodDiscrete",value:function(e){return new ms(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodLinear",value:function(e){return new cs(this.times,this.values,this.getValueSize(),e)}},{key:"InterpolantFactoryMethodSmooth",value:function(e){return new hs(this.times,this.values,this.getValueSize(),e)}},{key:"setInterpolation",value:function(e){var t;switch(e){case J:t=this.InterpolantFactoryMethodDiscrete;break;case K:t=this.InterpolantFactoryMethodLinear;break;case Q:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(n);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}},{key:"getInterpolation",value:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return J;case this.InterpolantFactoryMethodLinear:return K;case this.InterpolantFactoryMethodSmooth:return Q}}},{key:"getValueSize",value:function(){return this.values.length/this.times.length}},{key:"shift",value:function(e){if(0!==e)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]+=e;return this}},{key:"scale",value:function(e){if(1!==e)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]*=e;return this}},{key:"trim",value:function(e,t){for(var n=this.times,i=n.length,r=0,a=i-1;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(r=(a=Math.max(a,1))-1);var l=this.getValueSize();this.times=ss.arraySlice(n,r,a),this.values=ss.arraySlice(this.values,r*l,a*l)}return this}},{key:"validate",value:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);var n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);for(var a=null,l=0;l!==r;l++){var o=n[l];if("number"==typeof o&&isNaN(o)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,l,o),e=!1;break}if(null!==a&&a>o){console.error("THREE.KeyframeTrack: Out of order keys.",this,l,o,a),e=!1;break}a=o}if(void 0!==i&&ss.isTypedArray(i))for(var s=0,u=i.length;s!==u;++s){var h=i[s];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,s,h),e=!1;break}}return e}},{key:"optimize",value:function(){for(var e=ss.arraySlice(this.times),t=ss.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===Q,r=e.length-1,a=1,l=1;l<r;++l){var o=!1,s=e[l];if(s!==e[l+1]&&(1!==l||s!==e[0]))if(i)o=!0;else for(var u=l*n,h=u-n,c=u+n,m=0;m!==n;++m){var d=t[u+m];if(d!==t[h+m]||d!==t[c+m]){o=!0;break}}if(o){if(l!==a){e[a]=e[l];for(var p=l*n,q=a*n,f=0;f!==n;++f)t[q+f]=t[p+f]}++a}}if(r>0){e[a]=e[r];for(var v=r*n,x=a*n,g=0;g!==n;++g)t[x+g]=t[v+g];++a}return a!==e.length?(this.times=ss.arraySlice(e,0,a),this.values=ss.arraySlice(t,0,a*n)):(this.times=e,this.values=t),this}},{key:"clone",value:function(){var e=ss.arraySlice(this.times,0),t=ss.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}],[{key:"toJSON",value:function(e){var t,n=e.constructor;if(n.toJSON!==this.toJSON)t=n.toJSON(e);else{t={name:e.name,times:ss.convertArray(e.times,Array),values:ss.convertArray(e.values,Array)};var i=e.getInterpolation();i!==e.DefaultInterpolation&&(t.interpolation=i)}return t.type=e.ValueTypeName,t}}]),e}();ds.prototype.TimeBufferType=Float32Array,ds.prototype.ValueBufferType=Float32Array,ds.prototype.DefaultInterpolation=K;var ps=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)}(ds);ps.prototype.ValueTypeName="bool",ps.prototype.ValueBufferType=Array,ps.prototype.DefaultInterpolation=J,ps.prototype.InterpolantFactoryMethodLinear=void 0,ps.prototype.InterpolantFactoryMethodSmooth=void 0;var qs=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)}(ds);qs.prototype.ValueTypeName="color";var fs=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)}(ds);fs.prototype.ValueTypeName="number";var vs=function(e){p(n,e);var t=f(n);function n(e,i,r,a){return _(this,n),t.call(this,e,i,r,a)}return b(n,[{key:"interpolate_",value:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,l=this.valueSize,o=(n-t)/(i-t),s=e*l,u=s+l;s!==u;s+=4)Be.slerpFlat(r,0,a,s-l,a,s,o);return r}}]),n}(us),xs=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n,[{key:"InterpolantFactoryMethodLinear",value:function(e){return new vs(this.times,this.values,this.getValueSize(),e)}}]),n}(ds);xs.prototype.ValueTypeName="quaternion",xs.prototype.DefaultInterpolation=K,xs.prototype.InterpolantFactoryMethodSmooth=void 0;var gs=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)}(ds);gs.prototype.ValueTypeName="string",gs.prototype.ValueBufferType=Array,gs.prototype.DefaultInterpolation=J,gs.prototype.InterpolantFactoryMethodLinear=void 0,gs.prototype.InterpolantFactoryMethodSmooth=void 0;var _s=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.apply(this,arguments)}return b(n)}(ds);_s.prototype.ValueTypeName="vector";var ys=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-1,i=arguments.length>2?arguments[2]:void 0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:ne;_(this,e),this.name=t,this.tracks=i,this.duration=n,this.blendMode=r,this.uuid=ge(),this.duration<0&&this.resetDuration()}return b(e,[{key:"resetDuration",value:function(){for(var e=0,t=0,n=this.tracks.length;t!==n;++t){var i=this.tracks[t];e=Math.max(e,i.times[i.times.length-1])}return this.duration=e,this}},{key:"trim",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}},{key:"validate",value:function(){for(var e=!0,t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}},{key:"optimize",value:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},{key:"clone",value:function(){for(var e=[],t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}},{key:"toJSON",value:function(){return this.constructor.toJSON(this)}}],[{key:"parse",value:function(e){for(var t=[],n=e.tracks,i=1/(e.fps||1),r=0,a=n.length;r!==a;++r)t.push(bs(n[r]).scale(i));var l=new this(e.name,e.duration,t,e.blendMode);return l.uuid=e.uuid,l}},{key:"toJSON",value:function(e){for(var t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode},r=0,a=n.length;r!==a;++r)t.push(ds.toJSON(n[r]));return i}},{key:"CreateFromMorphTargetSequence",value:function(e,t,n,i){for(var r=t.length,a=[],l=0;l<r;l++){var o=[],s=[];o.push((l+r-1)%r,l,(l+1)%r),s.push(0,1,0);var u=ss.getKeyframeOrder(o);o=ss.sortedArray(o,1,u),s=ss.sortedArray(s,1,u),i||0!==o[0]||(o.push(r),s.push(s[0])),a.push(new fs(".morphTargetInfluences["+t[l].name+"]",o,s).scale(1/n))}return new this(e,-1,a)}},{key:"findByName",value:function(e,t){var n=e;if(!Array.isArray(e)){var i=e;n=i.geometry&&i.geometry.animations||i.animations}for(var r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null}},{key:"CreateClipsFromMorphTargetSequences",value:function(e,t,n){for(var i={},r=/^([\w-]*?)([\d]+)$/,a=0,l=e.length;a<l;a++){var o=e[a],s=o.name.match(r);if(s&&s.length>1){var u=s[1],h=i[u];h||(i[u]=h=[]),h.push(o)}}var c=[];for(var m in i)c.push(this.CreateFromMorphTargetSequence(m,i[m],t,n));return c}},{key:"parseAnimation",value:function(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;for(var n=function(e,t,n,i,r){if(0!==n.length){var a=[],l=[];ss.flattenJSON(n,a,l,i),0!==a.length&&r.push(new e(t,a,l))}},i=[],r=e.name||"default",a=e.fps||30,l=e.blendMode,o=e.length||-1,s=e.hierarchy||[],u=0;u<s.length;u++){var h=s[u].keys;if(h&&0!==h.length)if(h[0].morphTargets){var c={},m=void 0;for(m=0;m<h.length;m++)if(h[m].morphTargets)for(var d=0;d<h[m].morphTargets.length;d++)c[h[m].morphTargets[d]]=-1;for(var p in c){for(var q=[],f=[],v=0;v!==h[m].morphTargets.length;++v){var x=h[m];q.push(x.time),f.push(x.morphTarget===p?1:0)}i.push(new fs(".morphTargetInfluence["+p+"]",q,f))}o=c.length*(a||1)}else{var g=".bones["+t[u].name+"]";n(_s,g+".position",h,"pos",i),n(xs,g+".quaternion",h,"rot",i),n(_s,g+".scale",h,"scl",i)}}return 0===i.length?null:new this(r,o,i,l)}}]),e}();function bs(e){if(void 0===e.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");var t=function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return fs;case"vector":case"vector2":case"vector3":case"vector4":return _s;case"color":return qs;case"quaternion":return xs;case"bool":case"boolean":return ps;case"string":return gs}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+e)}(e.type);if(void 0===e.times){var n=[],i=[];ss.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return void 0!==t.parse?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)}var ws={enabled:!1,files:{},add:function(e,t){!1!==this.enabled&&(this.files[e]=t)},get:function(e){if(!1!==this.enabled)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},Ms=b((function e(t,n,i){_(this,e);var r=this,a=!1,l=0,o=0,s=void 0,u=[];this.onStart=void 0,this.onLoad=t,this.onProgress=n,this.onError=i,this.itemStart=function(e){o++,!1===a&&void 0!==r.onStart&&r.onStart(e,l,o),a=!0},this.itemEnd=function(e){l++,void 0!==r.onProgress&&r.onProgress(e,l,o),l===o&&(a=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)},this.resolveURL=function(e){return s?s(e):e},this.setURLModifier=function(e){return s=e,this},this.addHandler=function(e,t){return u.push(e,t),this},this.removeHandler=function(e){var t=u.indexOf(e);return-1!==t&&u.splice(t,2),this},this.getHandler=function(e){for(var t=0,n=u.length;t<n;t+=2){var i=u[t],r=u[t+1];if(i.global&&(i.lastIndex=0),i.test(e))return r}return null}})),Ss=new Ms,Ts=function(){function e(t){_(this,e),this.manager=void 0!==t?t:Ss,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}return b(e,[{key:"load",value:function(){}},{key:"loadAsync",value:function(e,t){var n=this;return new Promise((function(i,r){n.load(e,i,t,r)}))}},{key:"parse",value:function(){}},{key:"setCrossOrigin",value:function(e){return this.crossOrigin=e,this}},{key:"setWithCredentials",value:function(e){return this.withCredentials=e,this}},{key:"setPath",value:function(e){return this.path=e,this}},{key:"setResourcePath",value:function(e){return this.resourcePath=e,this}},{key:"setRequestHeader",value:function(e){return this.requestHeader=e,this}}]),e}(),Es={},zs=function(e){p(n,e);var t=f(n);function n(e){return _(this,n),t.call(this,e)}return b(n,[{key:"load",value:function(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var r=this,a=ws.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;if(void 0===Es[e]){var l,o=e.match(/^data:(.*?)(;base64)?,(.*)$/);if(o){var s=o[1],u=!!o[2],h=o[3];h=decodeURIComponent(h),u&&(h=atob(h));try{var c,m=(this.responseType||"").toLowerCase();switch(m){case"arraybuffer":case"blob":for(var d=new Uint8Array(h.length),p=0;p<h.length;p++)d[p]=h.charCodeAt(p);c="blob"===m?new Blob([d.buffer],{type:s}):d.buffer;break;case"document":var q=new DOMParser;c=q.parseFromString(h,s);break;case"json":c=JSON.parse(h);break;default:c=h}setTimeout((function(){t&&t(c),r.manager.itemEnd(e)}),0)}catch(t){setTimeout((function(){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}),0)}}else{for(var f in Es[e]=[],Es[e].push({onLoad:t,onProgress:n,onError:i}),(l=new XMLHttpRequest).open("GET",e,!0),l.addEventListener("load",(function(t){var n=this.response,i=Es[e];if(delete Es[e],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),ws.add(e,n);for(var a=0,l=i.length;a<l;a++){var o=i[a];o.onLoad&&o.onLoad(n)}r.manager.itemEnd(e)}else{for(var s=0,u=i.length;s<u;s++){var h=i[s];h.onError&&h.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}}),!1),l.addEventListener("progress",(function(t){for(var n=Es[e],i=0,r=n.length;i<r;i++){var a=n[i];a.onProgress&&a.onProgress(t)}}),!1),l.addEventListener("error",(function(t){var n=Es[e];delete Es[e];for(var i=0,a=n.length;i<a;i++){var l=n[i];l.onError&&l.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),l.addEventListener("abort",(function(t){var n=Es[e];delete Es[e];for(var i=0,a=n.length;i<a;i++){var l=n[i];l.onError&&l.onError(t)}r.manager.itemError(e),r.manager.itemEnd(e)}),!1),void 0!==this.responseType&&(l.responseType=this.responseType),void 0!==this.withCredentials&&(l.withCredentials=this.withCredentials),l.overrideMimeType&&l.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain"),this.requestHeader)l.setRequestHeader(f,this.requestHeader[f]);l.send(null)}return r.manager.itemStart(e),l}Es[e].push({onLoad:t,onProgress:n,onError:i})}},{key:"setResponseType",value:function(e){return this.responseType=e,this}},{key:"setMimeType",value:function(e){return this.mimeType=e,this}}]),n}(Ts),ks=function(e){p(n,e);var t=f(n);function n(e){return _(this,n),t.call(this,e)}return b(n,[{key:"load",value:function(e,t,n,i){void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var r=this,a=ws.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;var l=Le("img");function o(){l.removeEventListener("load",o,!1),l.removeEventListener("error",s,!1),ws.add(e,this),t&&t(this),r.manager.itemEnd(e)}function s(t){l.removeEventListener("load",o,!1),l.removeEventListener("error",s,!1),i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)}return l.addEventListener("load",o,!1),l.addEventListener("error",s,!1),"data:"!==e.substr(0,5)&&void 0!==this.crossOrigin&&(l.crossOrigin=this.crossOrigin),r.manager.itemStart(e),l.src=e,l}}]),n}(Ts),As=function(e){p(n,e);var t=f(n);function n(e){return _(this,n),t.call(this,e)}return b(n,[{key:"load",value:function(e,t,n,i){var r=new $n,a=new ks(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var l=0;function o(n){a.load(e[n],(function(e){r.images[n]=e,6===++l&&(r.needsUpdate=!0,t&&t(r))}),void 0,i)}for(var s=0;s<e.length;++s)o(s);return r}}]),n}(Ts),Ls=function(e){p(n,e);var t=f(n);function n(e){return _(this,n),t.call(this,e)}return b(n,[{key:"load",value:function(e,t,n,i){var r=new Ce,a=new ks(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,(function(e){r.image=e,r.needsUpdate=!0,void 0!==t&&t(r)}),n,i),r}}]),n}(Ts),Rs=function(e){p(n,e);var t=f(n);function n(e){var i,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return _(this,n),(i=t.call(this)).type="Light",i.color=new un(e),i.intensity=r,i}return b(n,[{key:"dispose",value:function(){}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}]),n}(Ht);Rs.prototype.isLight=!0;var Ps=function(e){p(n,e);var t=f(n);function n(e,i,r){var a;return _(this,n),(a=t.call(this,e,r)).type="HemisphereLight",a.position.copy(Ht.DefaultUp),a.updateMatrix(),a.groundColor=new un(i),a}return b(n,[{key:"copy",value:function(e){return Rs.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}]),n}(Rs);Ps.prototype.isHemisphereLight=!0;var Cs=new vt,Ds=new Fe,Is=new Fe,Ns=function(){function e(t){_(this,e),this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Ee(512,512),this.map=null,this.mapPass=null,this.matrix=new vt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new oi,this._frameExtents=new Ee(1,1),this._viewportCount=1,this._viewports=[new Ie(0,0,1,1)]}return b(e,[{key:"getViewportCount",value:function(){return this._viewportCount}},{key:"getFrustum",value:function(){return this._frustum}},{key:"updateMatrices",value:function(e){var t=this.camera,n=this.matrix;Ds.setFromMatrixPosition(e.matrixWorld),t.position.copy(Ds),Is.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Is),t.updateMatrixWorld(),Cs.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Cs),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}},{key:"getViewport",value:function(e){return this._viewports[e]}},{key:"getFrameExtents",value:function(){return this._frameExtents}},{key:"dispose",value:function(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}},{key:"copy",value:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}]),e}(),Os=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this,new Jn(50,1,.5,500))).focus=1,e}return b(n,[{key:"updateMatrices",value:function(e){var t=this.camera,i=2*qe*e.angle*this.focus,r=this.mapSize.width/this.mapSize.height,a=e.distance||t.far;i===t.fov&&r===t.aspect&&a===t.far||(t.fov=i,t.aspect=r,t.far=a,t.updateProjectionMatrix()),h(g(n.prototype),"updateMatrices",this).call(this,e)}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.focus=e.focus,this}}]),n}(Ns);Os.prototype.isSpotLightShadow=!0;var Bs=function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:Math.PI/3,o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,s=arguments.length>5&&void 0!==arguments[5]?arguments[5]:1;return _(this,n),(r=t.call(this,e,i)).type="SpotLight",r.position.copy(Ht.DefaultUp),r.updateMatrix(),r.target=new Ht,r.distance=a,r.angle=l,r.penumbra=o,r.decay=s,r.shadow=new Os,r}return b(n,[{key:"power",get:function(){return this.intensity*Math.PI},set:function(e){this.intensity=e/Math.PI}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),n}(Rs);Bs.prototype.isSpotLight=!0;var Fs=new vt,Us=new Fe,Hs=new Fe,Gs=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this,new Jn(90,1,.5,500)))._frameExtents=new Ee(4,2),e._viewportCount=6,e._viewports=[new Ie(2,1,1,1),new Ie(0,1,1,1),new Ie(3,1,1,1),new Ie(1,1,1,1),new Ie(3,0,1,1),new Ie(1,0,1,1)],e._cubeDirections=[new Fe(1,0,0),new Fe(-1,0,0),new Fe(0,0,1),new Fe(0,0,-1),new Fe(0,1,0),new Fe(0,-1,0)],e._cubeUps=[new Fe(0,1,0),new Fe(0,1,0),new Fe(0,1,0),new Fe(0,1,0),new Fe(0,0,1),new Fe(0,0,-1)],e}return b(n,[{key:"updateMatrices",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Us.setFromMatrixPosition(e.matrixWorld),n.position.copy(Us),Hs.copy(n.position),Hs.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Hs),n.updateMatrixWorld(),i.makeTranslation(-Us.x,-Us.y,-Us.z),Fs.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fs)}}]),n}(Ns);Gs.prototype.isPointLightShadow=!0;var Vs=function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;return _(this,n),(r=t.call(this,e,i)).type="PointLight",r.distance=a,r.decay=l,r.shadow=new Gs,r}return b(n,[{key:"power",get:function(){return 4*this.intensity*Math.PI},set:function(e){this.intensity=e/(4*Math.PI)}},{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}]),n}(Rs);Vs.prototype.isPointLight=!0;var Ws=function(e){p(n,e);var t=f(n);function n(){return _(this,n),t.call(this,new _i(-5,5,5,-5,.5,500))}return b(n)}(Ns);Ws.prototype.isDirectionalLightShadow=!0;var js=function(e){p(n,e);var t=f(n);function n(e,i){var r;return _(this,n),(r=t.call(this,e,i)).type="DirectionalLight",r.position.copy(Ht.DefaultUp),r.updateMatrix(),r.target=new Ht,r.shadow=new Ws,r}return b(n,[{key:"dispose",value:function(){this.shadow.dispose()}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}]),n}(Rs);js.prototype.isDirectionalLight=!0;var Xs=function(e){p(n,e);var t=f(n);function n(e,i){var r;return _(this,n),(r=t.call(this,e,i)).type="AmbientLight",r}return b(n)}(Rs);Xs.prototype.isAmbientLight=!0;var Ys=function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:10,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:10;return _(this,n),(r=t.call(this,e,i)).type="RectAreaLight",r.width=a,r.height=l,r}return b(n,[{key:"power",get:function(){return this.intensity*this.width*this.height*Math.PI},set:function(e){this.intensity=e/(this.width*this.height*Math.PI)}},{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.width=e.width,this.height=e.height,this}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.object.width=this.width,t.object.height=this.height,t}}]),n}(Rs);Ys.prototype.isRectAreaLight=!0;var Zs=function(){function e(){_(this,e),this.coefficients=[];for(var t=0;t<9;t++)this.coefficients.push(new Fe)}return b(e,[{key:"set",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}},{key:"zero",value:function(){for(var e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}},{key:"getAt",value:function(e,t){var n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],n*i*1.092548),t.addScaledVector(a[5],i*r*1.092548),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],n*r*1.092548),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}},{key:"getIrradianceAt",value:function(e,t){var n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],1.023328*i),t.addScaledVector(a[2],1.023328*r),t.addScaledVector(a[3],1.023328*n),t.addScaledVector(a[4],.858086*n*i),t.addScaledVector(a[5],.858086*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],.858086*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}},{key:"add",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}},{key:"addScaledSH",value:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}},{key:"scale",value:function(e){for(var t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}},{key:"lerp",value:function(e,t){for(var n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}},{key:"equals",value:function(e){for(var t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}},{key:"copy",value:function(e){return this.set(e.coefficients)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"fromArray",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.coefficients,i=0;i<9;i++)n[i].fromArray(e,t+3*i);return this}},{key:"toArray",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=this.coefficients,i=0;i<9;i++)n[i].toArray(e,t+3*i);return e}}],[{key:"getBasisAt",value:function(e,t){var n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}]),e}();Zs.prototype.isSphericalHarmonics3=!0;var Js=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Zs,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;return _(this,n),(e=t.call(this,void 0,r)).sh=i,e}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.sh.copy(e.sh),this}},{key:"fromJSON",value:function(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.object.sh=this.sh.toArray(),t}}]),n}(Rs);Js.prototype.isLightProbe=!0;var Ks=function(){function e(){_(this,e)}return b(e,null,[{key:"decodeText",value:function(e){if("undefined"!=typeof TextDecoder)return(new TextDecoder).decode(e);for(var t="",n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch(e){return t}}},{key:"extractUrlBase",value:function(e){var t=e.lastIndexOf("/");return-1===t?"./":e.substr(0,t+1)}}]),e}(),Qs=function(e){p(n,e);var t=f(n);function n(){var e;return _(this,n),(e=t.call(this)).type="InstancedBufferGeometry",e.instanceCount=1/0,e}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.instanceCount=e.instanceCount,this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"toJSON",value:function(){var e=h(g(n.prototype),"toJSON",this).call(this,this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}]),n}(Mn);Qs.prototype.isInstancedBufferGeometry=!0;var $s;(function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),i=t.call(this,e),"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),i.options={premultiplyAlpha:"none"},i}return b(n,[{key:"setOptions",value:function(e){return this.options=e,this}},{key:"load",value:function(e,t,n,i){void 0===e&&(e=""),void 0!==this.path&&(e=this.path+e),e=this.manager.resolveURL(e);var r=this,a=ws.get(e);if(void 0!==a)return r.manager.itemStart(e),setTimeout((function(){t&&t(a),r.manager.itemEnd(e)}),0),a;var l={};l.credentials="anonymous"===this.crossOrigin?"same-origin":"include",l.headers=this.requestHeader,fetch(e,l).then((function(e){return e.blob()})).then((function(e){return createImageBitmap(e,Object.assign(r.options,{colorSpaceConversion:"none"}))})).then((function(n){ws.add(e,n),t&&t(n),r.manager.itemEnd(e)})).catch((function(t){i&&i(t),r.manager.itemError(e),r.manager.itemEnd(e)})),r.manager.itemStart(e)}}]),n})(Ts).prototype.isImageBitmapLoader=!0;var eu=function(){return void 0===$s&&($s=new(window.AudioContext||window.webkitAudioContext)),$s},tu=function(e){p(n,e);var t=f(n);function n(e){return _(this,n),t.call(this,e)}return b(n,[{key:"load",value:function(e,t,n,i){var r=this,a=new zs(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,(function(n){try{var a=n.slice(0);eu().decodeAudioData(a,(function(e){t(e)}))}catch(t){i?i(t):console.error(t),r.manager.itemError(e)}}),n,i)}}]),n}(Ts);(function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;_(this,n),r=t.call(this,void 0,a);var l=(new un).set(e),o=(new un).set(i),s=new Fe(l.r,l.g,l.b),u=new Fe(o.r,o.g,o.b),h=Math.sqrt(Math.PI),c=h*Math.sqrt(.75);return r.sh.coefficients[0].copy(s).add(u).multiplyScalar(h),r.sh.coefficients[1].copy(s).sub(u).multiplyScalar(c),r}return b(n)})(Js).prototype.isHemisphereLightProbe=!0,function(e){p(n,e);var t=f(n);function n(e){var i,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1;_(this,n),i=t.call(this,void 0,r);var a=(new un).set(e);return i.sh.coefficients[0].set(a.r,a.g,a.b).multiplyScalar(2*Math.sqrt(Math.PI)),i}return b(n)}(Js).prototype.isAmbientLightProbe=!0;var nu=function(){function e(){var t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];_(this,e),this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}return b(e,[{key:"start",value:function(){this.startTime=iu(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}},{key:"stop",value:function(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}},{key:"getElapsedTime",value:function(){return this.getDelta(),this.elapsedTime}},{key:"getDelta",value:function(){var e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){var t=iu();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}]),e}();function iu(){return("undefined"==typeof performance?Date:performance).now()}var ru=function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).type="Audio",i.listener=e,i.context=e.context,i.gain=i.context.createGain(),i.gain.connect(e.getInput()),i.autoplay=!1,i.buffer=null,i.detune=0,i.loop=!1,i.loopStart=0,i.loopEnd=0,i.offset=0,i.duration=void 0,i.playbackRate=1,i.isPlaying=!1,i.hasPlaybackControl=!0,i.source=null,i.sourceType="empty",i._startedAt=0,i._progress=0,i._connected=!1,i.filters=[],i}return b(n,[{key:"getOutput",value:function(){return this.gain}},{key:"setNodeSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}},{key:"setMediaElementSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}},{key:"setMediaStreamSource",value:function(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}},{key:"setBuffer",value:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}},{key:"play",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;if(!0!==this.isPlaying){if(!1!==this.hasPlaybackControl){this._startedAt=this.context.currentTime+e;var t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}console.warn("THREE.Audio: this Audio has no playback control.")}else console.warn("THREE.Audio: Audio is already playing.")}},{key:"pause",value:function(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"stop",value:function(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"connect",value:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}},{key:"disconnect",value:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}},{key:"getFilters",value:function(){return this.filters}},{key:"setFilters",value:function(e){return e||(e=[]),!0===this._connected?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}},{key:"setDetune",value:function(e){if(this.detune=e,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}},{key:"getDetune",value:function(){return this.detune}},{key:"getFilter",value:function(){return this.getFilters()[0]}},{key:"setFilter",value:function(e){return this.setFilters(e?[e]:[])}},{key:"setPlaybackRate",value:function(e){if(!1!==this.hasPlaybackControl)return this.playbackRate=e,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"getPlaybackRate",value:function(){return this.playbackRate}},{key:"onEnded",value:function(){this.isPlaying=!1}},{key:"getLoop",value:function(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}},{key:"setLoop",value:function(e){if(!1!==this.hasPlaybackControl)return this.loop=e,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}},{key:"setLoopStart",value:function(e){return this.loopStart=e,this}},{key:"setLoopEnd",value:function(e){return this.loopEnd=e,this}},{key:"getVolume",value:function(){return this.gain.gain.value}},{key:"setVolume",value:function(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}]),n}(Ht),au=function(){function e(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:2048;_(this,e),this.analyser=t.context.createAnalyser(),this.analyser.fftSize=n,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}return b(e,[{key:"getFrequencyData",value:function(){return this.analyser.getByteFrequencyData(this.data),this.data}},{key:"getAverageFrequency",value:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}}]),e}(),lu=function(){function e(t,n,i){var r,a,l;switch(_(this,e),this.binding=t,this.valueSize=i,n){case"quaternion":r=this._slerp,a=this._slerpAdditive,l=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*i),this._workIndex=5;break;case"string":case"bool":r=this._select,a=this._select,l=this._setAdditiveIdentityOther,this.buffer=new Array(5*i);break;default:r=this._lerp,a=this._lerpAdditive,l=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*i)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=a,this._setIdentity=l,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}return b(e,[{key:"accumulate",value:function(e,t){var n=this.buffer,i=this.valueSize,r=e*i+i,a=this.cumulativeWeight;if(0===a){for(var l=0;l!==i;++l)n[r+l]=n[l];a=t}else{var o=t/(a+=t);this._mixBufferRegion(n,r,0,o,i)}this.cumulativeWeight=a}},{key:"accumulateAdditive",value:function(e){var t=this.buffer,n=this.valueSize,i=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}},{key:"apply",value:function(e){var t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,l=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){var o=t*this._origIndex;this._mixBufferRegion(n,i,o,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(var s=t,u=t+t;s!==u;++s)if(n[s]!==n[s+t]){l.setValue(n,i);break}}},{key:"saveOriginalState",value:function(){var e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(var r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}},{key:"restoreOriginalState",value:function(){var e=3*this.valueSize;this.binding.setValue(this.buffer,e)}},{key:"_setAdditiveIdentityNumeric",value:function(){for(var e=this._addIndex*this.valueSize,t=e+this.valueSize,n=e;n<t;n++)this.buffer[n]=0}},{key:"_setAdditiveIdentityQuaternion",value:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}},{key:"_setAdditiveIdentityOther",value:function(){for(var e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize,n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}},{key:"_select",value:function(e,t,n,i,r){if(i>=.5)for(var a=0;a!==r;++a)e[t+a]=e[n+a]}},{key:"_slerp",value:function(e,t,n,i){Be.slerpFlat(e,t,e,t,e,n,i)}},{key:"_slerpAdditive",value:function(e,t,n,i,r){var a=this._workIndex*r;Be.multiplyQuaternionsFlat(e,a,e,t,e,n),Be.slerpFlat(e,t,e,t,e,a,i)}},{key:"_lerp",value:function(e,t,n,i,r){for(var a=1-i,l=0;l!==r;++l){var o=t+l;e[o]=e[o]*a+e[n+l]*i}}},{key:"_lerpAdditive",value:function(e,t,n,i,r){for(var a=0;a!==r;++a){var l=t+a;e[l]=e[l]+e[n+a]*i}}}]),e}(),ou="\\[\\]\\.:\\/",su=new RegExp("[\\[\\]\\.:\\/]","g"),uu="[^\\[\\]\\.:\\/]",hu="[^"+ou.replace("\\.","")+"]",cu=/((?:WC+[\/:])*)/.source.replace("WC",uu),mu=/(WCOD+)?/.source.replace("WCOD",hu),du=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",uu),pu=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",uu),qu=new RegExp("^"+cu+mu+du+pu+"$"),fu=["material","materials","bones"],vu=function(){function e(t,n,i){_(this,e);var r=i||xu.parseTrackName(n);this._targetGroup=t,this._bindings=t.subscribe_(n,r)}return b(e,[{key:"getValue",value:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}},{key:"setValue",value:function(e,t){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}},{key:"bind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}},{key:"unbind",value:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}]),e}(),xu=function(){function e(t,n,i){_(this,e),this.path=n,this.parsedPath=i||e.parseTrackName(n),this.node=e.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}return b(e,[{key:"_getValue_unavailable",value:function(){}},{key:"_setValue_unavailable",value:function(){}},{key:"_getValue_direct",value:function(e,t){e[t]=this.targetObject[this.propertyName]}},{key:"_getValue_array",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)e[t++]=n[i]}},{key:"_getValue_arrayElement",value:function(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}},{key:"_getValue_toArray",value:function(e,t){this.resolvedProperty.toArray(e,t)}},{key:"_setValue_direct",value:function(e,t){this.targetObject[this.propertyName]=e[t]}},{key:"_setValue_direct_setNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_direct_setMatrixWorldNeedsUpdate",value:function(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_array",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++]}},{key:"_setValue_array_setNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}},{key:"_setValue_array_setMatrixWorldNeedsUpdate",value:function(e,t){for(var n=this.resolvedProperty,i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_arrayElement",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}},{key:"_setValue_arrayElement_setNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}},{key:"_setValue_arrayElement_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_setValue_fromArray",value:function(e,t){this.resolvedProperty.fromArray(e,t)}},{key:"_setValue_fromArray_setNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}},{key:"_setValue_fromArray_setMatrixWorldNeedsUpdate",value:function(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}},{key:"_getValue_unbound",value:function(e,t){this.bind(),this.getValue(e,t)}},{key:"_setValue_unbound",value:function(e,t){this.bind(),this.setValue(e,t)}},{key:"bind",value:function(){var t=this.node,n=this.parsedPath,i=n.objectName,r=n.propertyName,a=n.propertyIndex;if(t||(t=e.findNode(this.rootNode,n.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,t){if(i){var l=n.objectIndex;switch(i){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(var o=0;o<t.length;o++)if(t[o].name===l){l=o;break}break;default:if(void 0===t[i])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[i]}if(void 0!==l){if(void 0===t[l])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[l]}}var s=t[r];if(void 0!==s){var u=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?u=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(u=this.Versioning.MatrixWorldNeedsUpdate);var h=this.BindingType.Direct;if(void 0!==a){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[a]&&(a=t.morphTargetDictionary[a])}h=this.BindingType.ArrayElement,this.resolvedProperty=s,this.propertyIndex=a}else void 0!==s.fromArray&&void 0!==s.toArray?(h=this.BindingType.HasFromToArray,this.resolvedProperty=s):Array.isArray(s)?(h=this.BindingType.EntireArray,this.resolvedProperty=s):this.propertyName=r;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][u]}else{var c=n.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+r+" but it wasn't found.",t)}}else console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.")}},{key:"unbind",value:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}],[{key:"create",value:function(t,n,i){return t&&t.isAnimationObjectGroup?new e.Composite(t,n,i):new e(t,n,i)}},{key:"sanitizeNodeName",value:function(e){return e.replace(/\s/g,"_").replace(su,"")}},{key:"parseTrackName",value:function(e){var t=qu.exec(e);if(!t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);var n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){var r=n.nodeName.substring(i+1);-1!==fu.indexOf(r)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}},{key:"findNode",value:function(e,t){if(!t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){var i=function e(n){for(var i=0;i<n.length;i++){var r=n[i];if(r.name===t||r.uuid===t)return r;var a=e(r.children);if(a)return a}return null}(e.children);if(i)return i}return null}}]),e}();xu.Composite=vu,xu.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},xu.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},xu.prototype.GetterByBindingType=[xu.prototype._getValue_direct,xu.prototype._getValue_array,xu.prototype._getValue_arrayElement,xu.prototype._getValue_toArray],xu.prototype.SetterByBindingTypeAndVersioning=[[xu.prototype._setValue_direct,xu.prototype._setValue_direct_setNeedsUpdate,xu.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[xu.prototype._setValue_array,xu.prototype._setValue_array_setNeedsUpdate,xu.prototype._setValue_array_setMatrixWorldNeedsUpdate],[xu.prototype._setValue_arrayElement,xu.prototype._setValue_arrayElement_setNeedsUpdate,xu.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[xu.prototype._setValue_fromArray,xu.prototype._setValue_fromArray_setNeedsUpdate,xu.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],function(){function e(){_(this,e),this.uuid=ge(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}return b(e,[{key:"add",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length,l=void 0,o=e.length,s=this.nCachedObjects_,u=0,h=arguments.length;u!==h;++u){var c=arguments[u],m=c.uuid,d=t[m];if(void 0===d){d=o++,t[m]=d,e.push(c);for(var p=0,q=a;p!==q;++p)r[p].push(new xu(c,n[p],i[p]))}else if(d<s){l=e[d];var f=--s,v=e[f];t[v.uuid]=d,e[d]=v,t[m]=f,e[f]=c;for(var x=0,g=a;x!==g;++x){var _=r[x],y=_[f],b=_[d];_[d]=y,void 0===b&&(b=new xu(c,n[x],i[x])),_[f]=b}}else e[d]!==l&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=s}},{key:"remove",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length,r=this.nCachedObjects_,a=0,l=arguments.length;a!==l;++a){var o=arguments[a],s=o.uuid,u=t[s];if(void 0!==u&&u>=r){var h=r++,c=e[h];t[c.uuid]=u,e[u]=c,t[s]=h,e[h]=o;for(var m=0,d=i;m!==d;++m){var p=n[m],q=p[h],f=p[u];p[u]=q,p[h]=f}}}this.nCachedObjects_=r}},{key:"uncache",value:function(){for(var e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length,r=this.nCachedObjects_,a=e.length,l=0,o=arguments.length;l!==o;++l){var s=arguments[l],u=s.uuid,h=t[u];if(void 0!==h)if(delete t[u],h<r){var c=--r,m=e[c],d=--a,p=e[d];t[m.uuid]=h,e[h]=m,t[p.uuid]=c,e[c]=p,e.pop();for(var q=0,f=i;q!==f;++q){var v=n[q],x=v[c],g=v[d];v[h]=x,v[c]=g,v.pop()}}else{var _=--a,y=e[_];_>0&&(t[y.uuid]=h),e[h]=y,e.pop();for(var b=0,w=i;b!==w;++b){var M=n[b];M[h]=M[_],M.pop()}}}this.nCachedObjects_=r}},{key:"subscribe_",value:function(e,t){var n=this._bindingsIndicesByPath,i=n[e],r=this._bindings;if(void 0!==i)return r[i];var a=this._paths,l=this._parsedPaths,o=this._objects,s=o.length,u=this.nCachedObjects_,h=new Array(s);i=r.length,n[e]=i,a.push(e),l.push(t),r.push(h);for(var c=u,m=o.length;c!==m;++c){var d=o[c];h[c]=new xu(d,e,t)}return h}},{key:"unsubscribe_",value:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(void 0!==n){var i=this._paths,r=this._parsedPaths,a=this._bindings,l=a.length-1,o=a[l];t[e[l]]=n,a[n]=o,a.pop(),r[n]=r[l],r.pop(),i[n]=i[l],i.pop()}}}]),e}().prototype.isAnimationObjectGroup=!0;var gu=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:n.blendMode;_(this,e),this._mixer=t,this._clip=n,this._localRoot=i,this.blendMode=r;for(var a=n.tracks,l=a.length,o=new Array(l),s={endingStart:$,endingEnd:$},u=0;u!==l;++u){var h=a[u].createInterpolant(null);o[u]=h,h.settings=s}this._interpolantSettings=s,this._interpolants=o,this._propertyBindings=new Array(l),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}return b(e,[{key:"play",value:function(){return this._mixer._activateAction(this),this}},{key:"stop",value:function(){return this._mixer._deactivateAction(this),this.reset()}},{key:"reset",value:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}},{key:"isRunning",value:function(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}},{key:"isScheduled",value:function(){return this._mixer._isActiveAction(this)}},{key:"startAt",value:function(e){return this._startTime=e,this}},{key:"setLoop",value:function(e,t){return this.loop=e,this.repetitions=t,this}},{key:"setEffectiveWeight",value:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}},{key:"getEffectiveWeight",value:function(){return this._effectiveWeight}},{key:"fadeIn",value:function(e){return this._scheduleFading(e,0,1)}},{key:"fadeOut",value:function(e){return this._scheduleFading(e,1,0)}},{key:"crossFadeFrom",value:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var i=this._clip.duration,r=e._clip.duration,a=r/i,l=i/r;e.warp(1,a,t),this.warp(l,1,t)}return this}},{key:"crossFadeTo",value:function(e,t,n){return e.crossFadeFrom(this,t,n)}},{key:"stopFading",value:function(){var e=this._weightInterpolant;return null!==e&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"setEffectiveTimeScale",value:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}},{key:"getEffectiveTimeScale",value:function(){return this._effectiveTimeScale}},{key:"setDuration",value:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}},{key:"syncWith",value:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}},{key:"halt",value:function(e){return this.warp(this._effectiveTimeScale,0,e)}},{key:"warp",value:function(e,t,n){var i=this._mixer,r=i.time,a=this.timeScale,l=this._timeScaleInterpolant;null===l&&(l=i._lendControlInterpolant(),this._timeScaleInterpolant=l);var o=l.parameterPositions,s=l.sampleValues;return o[0]=r,o[1]=r+n,s[0]=e/a,s[1]=t/a,this}},{key:"stopWarping",value:function(){var e=this._timeScaleInterpolant;return null!==e&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}},{key:"getMixer",value:function(){return this._mixer}},{key:"getClip",value:function(){return this._clip}},{key:"getRoot",value:function(){return this._localRoot||this._mixer._root}},{key:"_update",value:function(e,t,n,i){if(this.enabled){var r=this._startTime;if(null!==r){var a=(e-r)*n;if(a<0||0===n)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);var l=this._updateTime(t),o=this._updateWeight(e);if(o>0){var s=this._interpolants,u=this._propertyBindings;if(this.blendMode===ie)for(var h=0,c=s.length;h!==c;++h)s[h].evaluate(l),u[h].accumulateAdditive(o);else for(var m=0,d=s.length;m!==d;++m)s[m].evaluate(l),u[m].accumulate(i,o)}}else this._updateWeight(e)}},{key:"_updateWeight",value:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(null!==n){var i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),0===i&&(this.enabled=!1))}}return this._effectiveWeight=t,t}},{key:"_updateTimeScale",value:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(null!==n)t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),0===t?this.paused=!0:this.timeScale=t)}return this._effectiveTimeScale=t,t}},{key:"_updateTime",value:function(e){var t=this._clip.duration,n=this.loop,i=this.time+e,r=this._loopCount,a=2202===n;if(0===e)return-1===r?i:a&&1==(1&r)?t-i:i;if(2200===n){-1===r&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else{if(!(i<0)){this.time=i;break e}i=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(-1===r&&(e>=0?(r=0,this._setEndings(!0,0===this.repetitions,a)):this._setEndings(0===this.repetitions,!0,a)),i>=t||i<0){var l=Math.floor(i/t);i-=t*l,r+=Math.abs(l);var o=this.repetitions-r;if(o<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(1===o){var s=e<0;this._setEndings(s,!s,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:l})}}else this.time=i;if(a&&1==(1&r))return t-i}return i}},{key:"_setEndings",value:function(e,t,n){var i=this._interpolantSettings;n?(i.endingStart=ee,i.endingEnd=ee):(i.endingStart=e?this.zeroSlopeAtStart?ee:$:te,i.endingEnd=t?this.zeroSlopeAtEnd?ee:$:te)}},{key:"_scheduleFading",value:function(e,t,n){var i=this._mixer,r=i.time,a=this._weightInterpolant;null===a&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var l=a.parameterPositions,o=a.sampleValues;return l[0]=r,o[0]=t,l[1]=r+e,o[1]=n,this}}]),e}();(function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this))._root=e,i._initMemoryManager(),i._accuIndex=0,i.time=0,i.timeScale=1,i}return b(n,[{key:"_bindAction",value:function(e,t){var n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,l=e._interpolants,o=n.uuid,s=this._bindingsByRootAndName,u=s[o];void 0===u&&(u={},s[o]=u);for(var h=0;h!==r;++h){var c=i[h],m=c.name,d=u[m];if(void 0!==d)a[h]=d;else{if(void 0!==(d=a[h])){null===d._cacheIndex&&(++d.referenceCount,this._addInactiveBinding(d,o,m));continue}var p=t&&t._propertyBindings[h].binding.parsedPath;++(d=new lu(xu.create(n,m,p),c.ValueTypeName,c.getValueSize())).referenceCount,this._addInactiveBinding(d,o,m),a[h]=d}l[h].resultBuffer=d.buffer}}},{key:"_activateAction",value:function(e){if(!this._isActiveAction(e)){if(null===e._cacheIndex){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}for(var r=e._propertyBindings,a=0,l=r.length;a!==l;++a){var o=r[a];0==o.useCount++&&(this._lendBinding(o),o.saveOriginalState())}this._lendAction(e)}}},{key:"_deactivateAction",value:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,i=t.length;n!==i;++n){var r=t[n];0==--r.useCount&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}},{key:"_initMemoryManager",value:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}},{key:"_isActiveAction",value:function(e){var t=e._cacheIndex;return null!==t&&t<this._nActiveActions}},{key:"_addInactiveAction",value:function(e,t,n){var i=this._actions,r=this._actionsByClip,a=r[t];if(void 0===a)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{var l=a.knownActions;e._byClipCacheIndex=l.length,l.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}},{key:"_removeInactiveAction",value:function(e){var t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;var r=e._clip.uuid,a=this._actionsByClip,l=a[r],o=l.knownActions,s=o[o.length-1],u=e._byClipCacheIndex;s._byClipCacheIndex=u,o[u]=s,o.pop(),e._byClipCacheIndex=null,delete l.actionByRoot[(e._localRoot||this._root).uuid],0===o.length&&delete a[r],this._removeInactiveBindingsForAction(e)}},{key:"_removeInactiveBindingsForAction",value:function(e){for(var t=e._propertyBindings,n=0,i=t.length;n!==i;++n){var r=t[n];0==--r.referenceCount&&this._removeInactiveBinding(r)}}},{key:"_lendAction",value:function(e){var t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}},{key:"_takeBackAction",value:function(e){var t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}},{key:"_addInactiveBinding",value:function(e,t,n){var i=this._bindingsByRootAndName,r=this._bindings,a=i[t];void 0===a&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}},{key:"_removeInactiveBinding",value:function(e){var t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,l=a[i],o=t[t.length-1],s=e._cacheIndex;o._cacheIndex=s,t[s]=o,t.pop(),delete l[r],0===Object.keys(l).length&&delete a[i]}},{key:"_lendBinding",value:function(e){var t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}},{key:"_takeBackBinding",value:function(e){var t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}},{key:"_lendControlInterpolant",value:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return void 0===n&&((n=new cs(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer)).__cacheIndex=t,e[t]=n),n}},{key:"_takeBackControlInterpolant",value:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}},{key:"clipAction",value:function(e,t,n){var i=t||this._root,r=i.uuid,a="string"==typeof e?ys.findByName(i,e):e,l=null!==a?a.uuid:e,o=this._actionsByClip[l],s=null;if(void 0===n&&(n=null!==a?a.blendMode:ne),void 0!==o){var u=o.actionByRoot[r];if(void 0!==u&&u.blendMode===n)return u;s=o.knownActions[0],null===a&&(a=s._clip)}if(null===a)return null;var h=new gu(this,a,t,n);return this._bindAction(h,s),this._addInactiveAction(h,l,r),h}},{key:"existingAction",value:function(e,t){var n=t||this._root,i=n.uuid,r="string"==typeof e?ys.findByName(n,e):e,a=r?r.uuid:e,l=this._actionsByClip[a];return void 0!==l&&l.actionByRoot[i]||null}},{key:"stopAllAction",value:function(){for(var e=this._actions,t=this._nActiveActions-1;t>=0;--t)e[t].stop();return this}},{key:"update",value:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1,l=0;l!==n;++l){t[l]._update(i,e,r,a)}for(var o=this._bindings,s=this._nActiveBindings,u=0;u!==s;++u)o[u].apply(a);return this}},{key:"setTime",value:function(e){this.time=0;for(var t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}},{key:"getRoot",value:function(){return this._root}},{key:"uncacheClip",value:function(e){var t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(void 0!==r){for(var a=r.knownActions,l=0,o=a.length;l!==o;++l){var s=a[l];this._deactivateAction(s);var u=s._cacheIndex,h=t[t.length-1];s._cacheIndex=null,s._byClipCacheIndex=null,h._cacheIndex=u,t[u]=h,t.pop(),this._removeInactiveBindingsForAction(s)}delete i[n]}}},{key:"uncacheRoot",value:function(e){var t=e.uuid,n=this._actionsByClip;for(var i in n){var r=n[i].actionByRoot[t];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}var a=this._bindingsByRootAndName[t];if(void 0!==a)for(var l in a){var o=a[l];o.restoreOriginalState(),this._removeInactiveBinding(o)}}},{key:"uncacheAction",value:function(e,t){var n=this.existingAction(e,t);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}}]),n})(me).prototype._controlInterpolantsResultBuffer=new Float32Array(1);var _u=function(){function e(t){_(this,e),"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}return b(e,[{key:"clone",value:function(){return new e(void 0===this.value.clone?this.value:this.value.clone())}}]),e}();(function(e){p(n,e);var t=f(n);function n(e,i){var r,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;return _(this,n),(r=t.call(this,e,i)).meshPerAttribute=a,r}return b(n,[{key:"copy",value:function(e){return h(g(n.prototype),"copy",this).call(this,e),this.meshPerAttribute=e.meshPerAttribute,this}},{key:"clone",value:function(e){var t=h(g(n.prototype),"clone",this).call(this,e);return t.meshPerAttribute=this.meshPerAttribute,t}},{key:"toJSON",value:function(e){var t=h(g(n.prototype),"toJSON",this).call(this,e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}]),n})(Qa).prototype.isInstancedInterleavedBuffer=!0,function(){function e(t,n,i,r,a){_(this,e),this.buffer=t,this.type=n,this.itemSize=i,this.elementSize=r,this.count=a,this.version=0}return b(e,[{key:"needsUpdate",set:function(e){!0===e&&this.version++}},{key:"setBuffer",value:function(e){return this.buffer=e,this}},{key:"setType",value:function(e,t){return this.type=e,this.elementSize=t,this}},{key:"setItemSize",value:function(e){return this.itemSize=e,this}},{key:"setCount",value:function(e){return this.count=e,this}}]),e}().prototype.isGLBufferAttribute=!0;var yu=function(){function e(t,n){var i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1/0;_(this,e),this.ray=new ft(t,n),this.near=i,this.far=r,this.camera=null,this.layers=new zt,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}return b(e,[{key:"set",value:function(e,t){this.ray.set(e,t)}},{key:"setFromCamera",value:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}},{key:"intersectObject",value:function(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[];return wu(e,this,n,t),n.sort(bu),n}},{key:"intersectObjects",value:function(e){for(var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],i=0,r=e.length;i<r;i++)wu(e[i],this,n,t);return n.sort(bu),n}}]),e}();function bu(e,t){return e.distance-t.distance}function wu(e,t,n,i){if(e.layers.test(t.layers)&&e.raycast(t,n),!0===i)for(var r=e.children,a=0,l=r.length;a<l;a++)wu(r[a],t,n,!0)}var Mu=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,i=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;return _(this,e),this.radius=t,this.phi=n,this.theta=i,this}return b(e,[{key:"set",value:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}},{key:"copy",value:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}},{key:"makeSafe",value:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}},{key:"setFromVector3",value:function(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}},{key:"setFromCartesianCoords",value:function(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(_e(t/this.radius,-1,1))),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}(),Su=new Ee,Tu=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Ee(1/0,1/0),n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Ee(-1/0,-1/0);_(this,e),this.min=t,this.max=n}return b(e,[{key:"set",value:function(e,t){return this.min.copy(e),this.max.copy(t),this}},{key:"setFromPoints",value:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}},{key:"setFromCenterAndSize",value:function(e,t){var n=Su.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}},{key:"clone",value:function(){return(new this.constructor).copy(this)}},{key:"copy",value:function(e){return this.min.copy(e.min),this.max.copy(e.max),this}},{key:"makeEmpty",value:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}},{key:"isEmpty",value:function(){return this.max.x<this.min.x||this.max.y<this.min.y}},{key:"getCenter",value:function(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}},{key:"getSize",value:function(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}},{key:"expandByPoint",value:function(e){return this.min.min(e),this.max.max(e),this}},{key:"expandByVector",value:function(e){return this.min.sub(e),this.max.add(e),this}},{key:"expandByScalar",value:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this}},{key:"containsPoint",value:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}},{key:"containsBox",value:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}},{key:"getParameter",value:function(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}},{key:"intersectsBox",value:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}},{key:"clampPoint",value:function(e,t){return t.copy(e).clamp(this.min,this.max)}},{key:"distanceToPoint",value:function(e){return Su.copy(e).clamp(this.min,this.max).sub(e).length()}},{key:"intersect",value:function(e){return this.min.max(e.min),this.max.min(e.max),this}},{key:"union",value:function(e){return this.min.min(e.min),this.max.max(e.max),this}},{key:"translate",value:function(e){return this.min.add(e),this.max.add(e),this}},{key:"equals",value:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}]),e}();Tu.prototype.isBox2=!0;var Eu=new Fe,zu=new Fe,ku=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:new Fe,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:new Fe;_(this,e),this.start=t,this.end=n}return b(e,[{key:"set",value:function(e,t){return this.start.copy(e),this.end.copy(t),this}},{key:"copy",value:function(e){return this.start.copy(e.start),this.end.copy(e.end),this}},{key:"getCenter",value:function(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}},{key:"delta",value:function(e){return e.subVectors(this.end,this.start)}},{key:"distanceSq",value:function(){return this.start.distanceToSquared(this.end)}},{key:"distance",value:function(){return this.start.distanceTo(this.end)}},{key:"at",value:function(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}},{key:"closestPointToPointParameter",value:function(e,t){Eu.subVectors(e,this.start),zu.subVectors(this.end,this.start);var n=zu.dot(zu),i=zu.dot(Eu)/n;return t&&(i=_e(i,0,1)),i}},{key:"closestPointToPoint",value:function(e,t,n){var i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}},{key:"applyMatrix4",value:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}},{key:"equals",value:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},{key:"clone",value:function(){return(new this.constructor).copy(this)}}]),e}();(function(e){p(n,e);var t=f(n);function n(e){var i;return _(this,n),(i=t.call(this)).material=e,i.render=function(){},i.hasPositions=!1,i.hasNormals=!1,i.hasColors=!1,i.hasUvs=!1,i.positionArray=null,i.normalArray=null,i.colorArray=null,i.uvArray=null,i.count=0,i}return b(n)})(Ht).prototype.isImmediateRenderObject=!0;var Au=new Fe,Lu=new vt,Ru=new vt,Pu=function(e){p(n,e);var t=f(n);function n(e){var i;_(this,n);for(var r=Cu(e),a=new Mn,l=[],o=[],s=new un(0,0,1),u=new un(0,1,0),h=0;h<r.length;h++){var c=r[h];c.parent&&c.parent.isBone&&(l.push(0,0,0),l.push(0,0,0),o.push(s.r,s.g,s.b),o.push(u.r,u.g,u.b))}a.setAttribute("position",new fn(l,3)),a.setAttribute("color",new fn(o,3));var m=new Ll({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});return(i=t.call(this,a,m)).type="SkeletonHelper",i.isSkeletonHelper=!0,i.root=e,i.bones=r,i.matrix=e.matrixWorld,i.matrixAutoUpdate=!1,i}return b(n,[{key:"updateMatrixWorld",value:function(e){var t=this.bones,i=this.geometry,r=i.getAttribute("position");Ru.copy(this.root.matrixWorld).invert();for(var a=0,l=0;a<t.length;a++){var o=t[a];o.parent&&o.parent.isBone&&(Lu.multiplyMatrices(Ru,o.matrixWorld),Au.setFromMatrixPosition(Lu),r.setXYZ(l,Au.x,Au.y,Au.z),Lu.multiplyMatrices(Ru,o.parent.matrixWorld),Au.setFromMatrixPosition(Lu),r.setXYZ(l+1,Au.x,Au.y,Au.z),l+=2)}i.getAttribute("position").needsUpdate=!0,h(g(n.prototype),"updateMatrixWorld",this).call(this,e)}}]),n}(Fl);function Cu(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,Cu(e.children[n]));return t}var Du=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:10,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:4473924,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:8947848;_(this,n),a=new un(a),l=new un(l);for(var o=r/2,s=i/r,u=i/2,h=[],c=[],m=0,d=0,p=-u;m<=r;m++,p+=s){h.push(-u,0,p,u,0,p),h.push(p,0,-u,p,0,u);var q=m===o?a:l;q.toArray(c,d),d+=3,q.toArray(c,d),d+=3,q.toArray(c,d),d+=3,q.toArray(c,d),d+=3}var f=new Mn;f.setAttribute("position",new fn(h,3)),f.setAttribute("color",new fn(c,3));var v=new Ll({vertexColors:!0,toneMapped:!1});return(e=t.call(this,f,v)).type="GridHelper",e}return b(n)}(Fl);var Iu=function(e){p(n,e);var t=f(n);function n(){var e,i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;_(this,n);var r=[0,0,0,i,0,0,0,0,0,0,i,0,0,0,0,0,0,i],a=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],l=new Mn;l.setAttribute("position",new fn(r,3)),l.setAttribute("color",new fn(a,3));var o=new Ll({vertexColors:!0,toneMapped:!1});return(e=t.call(this,l,o)).type="AxesHelper",e}return b(n,[{key:"setColors",value:function(e,t,n){var i=new un,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}},{key:"dispose",value:function(){this.geometry.dispose(),this.material.dispose()}}]),n}(Fl),Nu=function(){function e(){_(this,e),this.type="ShapePath",this.color=new un,this.subPaths=[],this.currentPath=null}return b(e,[{key:"moveTo",value:function(e,t){return this.currentPath=new xo,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}},{key:"lineTo",value:function(e,t){return this.currentPath.lineTo(e,t),this}},{key:"quadraticCurveTo",value:function(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}},{key:"bezierCurveTo",value:function(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}},{key:"splineThru",value:function(e){return this.currentPath.splineThru(e),this}},{key:"toShapes",value:function(e,t){function n(e){for(var t=[],n=0,i=e.length;n<i;n++){var r=e[n],a=new go;a.curves=r.curves,t.push(a)}return t}function i(e,t){for(var n=t.length,i=!1,r=n-1,a=0;a<n;r=a++){var l=t[r],o=t[a],s=o.x-l.x,u=o.y-l.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(l=t[a],s=-s,o=t[r],u=-u),e.y<l.y||e.y>o.y)continue;if(e.y===l.y){if(e.x===l.x)return!0}else{var h=u*(e.x-l.x)-s*(e.y-l.y);if(0===h)return!0;if(h<0)continue;i=!i}}else{if(e.y!==l.y)continue;if(o.x<=e.x&&e.x<=l.x||l.x<=e.x&&e.x<=o.x)return!0}}return i}var r,a,l,o=jo.isClockWise,s=this.subPaths;if(0===s.length)return[];if(!0===t)return n(s);var u=[];if(1===s.length)return a=s[0],(l=new go).curves=a.curves,u.push(l),u;var h=!o(s[0].getPoints());h=e?!h:h;var c,m,d=[],p=[],q=[],f=0;p[f]=void 0,q[f]=[];for(var v=0,x=s.length;v<x;v++)r=o(c=(a=s[v]).getPoints()),(r=e?!r:r)?(!h&&p[f]&&f++,p[f]={s:new go,p:c},p[f].s.curves=a.curves,h&&f++,q[f]=[]):q[f].push({h:a,p:c[0]});if(!p[0])return n(s);if(p.length>1){for(var g=!1,_=[],y=0,b=p.length;y<b;y++)d[y]=[];for(var w=0,M=p.length;w<M;w++)for(var S=q[w],T=0;T<S.length;T++){for(var E=S[T],z=!0,k=0;k<p.length;k++)i(E.p,p[k].p)&&(w!==k&&_.push({froms:w,tos:k,hole:T}),z?(z=!1,d[k].push(E)):g=!0);z&&d[w].push(E)}_.length>0&&(g||(q=d))}for(var A=0,L=p.length;A<L;A++){l=p[A].s,u.push(l);for(var R=0,P=(m=q[A]).length;R<P;R++)l.holes.push(m[R].h)}return u}}]),e}(),Ou=new Float32Array(1);new Int32Array(Ou.buffer);Jl.create=function(e,t){return console.log("THREE.Curve.create() has been deprecated"),e.prototype=Object.create(Jl.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},xo.prototype.fromPoints=function(e){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(e)},Du.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},Pu.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Ts.prototype.extractUrlBase=function(e){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),Ks.extractUrlBase(e)},Ts.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Tu.prototype.center=function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},Tu.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Tu.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Tu.prototype.size=function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)},Ge.prototype.center=function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},Ge.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},Ge.prototype.isIntersectionBox=function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},Ge.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},Ge.prototype.size=function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)},st.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()},oi.prototype.setFromMatrix=function(e){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(e)},ku.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)},ze.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},ze.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},ze.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},ze.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},ze.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},ze.prototype.getInverse=function(e){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},vt.prototype.extractPosition=function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},vt.prototype.flattenToArrayOffset=function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},vt.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new Fe).setFromMatrixColumn(this,3)},vt.prototype.setRotationFromQuaternion=function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},vt.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},vt.prototype.multiplyVector3=function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},vt.prototype.multiplyVector4=function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},vt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},vt.prototype.rotateAxis=function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},vt.prototype.crossVector=function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},vt.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")},vt.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},vt.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},vt.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},vt.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},vt.prototype.applyToBufferAttribute=function(e){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},vt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},vt.prototype.makeFrustum=function(e,t,n,i,r,a){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(e,t,i,n,r,a)},vt.prototype.getInverse=function(e){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(e).invert()},ri.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)},Be.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},Be.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()},ft.prototype.isIntersectionBox=function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},ft.prototype.isIntersectionPlane=function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},ft.prototype.isIntersectionSphere=function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},$t.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},$t.prototype.barycoordFromPoint=function(e,t){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(e,t)},$t.prototype.midpoint=function(e){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(e)},$t.prototypenormal=function(e){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(e)},$t.prototype.plane=function(e){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(e)},$t.barycoordFromPoint=function(e,t,n,i,r){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),$t.getBarycoord(e,t,n,i,r)},$t.normal=function(e,t,n,i){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),$t.getNormal(e,t,n,i)},go.prototype.extractAllPoints=function(e){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(e)},go.prototype.extrude=function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Zo(this,e)},go.prototype.makeGeometry=function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Ko(this,e)},Ee.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ee.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Ee.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Fe.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},Fe.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},Fe.prototype.getPositionFromMatrix=function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},Fe.prototype.getScaleFromMatrix=function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},Fe.prototype.getColumnFromMatrix=function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)},Fe.prototype.applyProjection=function(e){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(e)},Fe.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Fe.prototype.distanceToManhattan=function(e){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(e)},Fe.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ie.prototype.fromAttribute=function(e,t,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(e,t,n)},Ie.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()},Ht.prototype.getChildByName=function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},Ht.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},Ht.prototype.translate=function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},Ht.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},Ht.prototype.applyMatrix=function(e){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Ht.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Hn.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")},Object.defineProperties(Hn.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),bl.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Jn.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==t&&(this.filmGauge=t),this.setFocalLength(e)},Object.defineProperties(Rs.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}}),Object.defineProperties(dn.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===he},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(he)}}}),dn.prototype.setDynamic=function(e){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?he:ue),this},dn.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},dn.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Mn.prototype.addIndex=function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},Mn.prototype.addAttribute=function(e,t){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),t&&t.isBufferAttribute||t&&t.isInterleavedBufferAttribute?"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t),this):this.setAttribute(e,t):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(e,new dn(arguments[1],arguments[2])))},Mn.prototype.addDrawCall=function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},Mn.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},Mn.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},Mn.prototype.removeAttribute=function(e){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(e)},Mn.prototype.applyMatrix=function(e){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(e)},Object.defineProperties(Mn.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Qa.prototype.setDynamic=function(e){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===e?he:ue),this},Qa.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")},Zo.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")},Zo.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")},Zo.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")},Ka.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")},_u.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this},Object.defineProperties(tn.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new un}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===e}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(e){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=e}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}}),Object.defineProperties(Yn.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}}),Ya.prototype.clearTarget=function(e,t,n,i){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(e),this.clear(t,n,i)},Ya.prototype.animate=function(e){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(e)},Ya.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},Ya.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},Ya.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},Ya.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},Ya.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},Ya.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},Ya.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},Ya.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},Ya.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},Ya.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},Ya.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},Ya.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},Ya.prototype.enableScissorTest=function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},Ya.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},Ya.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},Ya.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},Ya.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Ya.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},Ya.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},Ya.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},Ya.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},Ya.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},Ya.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()},Object.defineProperties(Ya.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(e){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===e?ae:re}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties(Na.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(Ne.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}}),ru.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this;return(new tu).load(e,(function(e){t.setBuffer(e)})),this},au.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Qn.prototype.updateCubeMap=function(e,t){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(e,t)},Qn.prototype.clear=function(e,t,n,i){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(e,t,n,i)},Re.crossOrigin=void 0,Re.loadTexture=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new Ls;r.setCrossOrigin(this.crossOrigin);var a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},Re.loadTextureCube=function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new As;r.setCrossOrigin(this.crossOrigin);var a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},Re.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Re.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"133"}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__="133")},512:(e,t,n)=>{"use strict";function i(e){this.domElement=e||document,this.keyCodes={},this.modifiers={};var t=this;this._onKeyDown=function(e){t._onKeyChange(e)},this._onKeyUp=function(e){t._onKeyChange(e)},this.domElement.addEventListener("keydown",this._onKeyDown,!1),this.domElement.addEventListener("keyup",this._onKeyUp,!1),this._onBlur=function(){for(var e in t.keyCodes)t.keyCodes[e]=!1;for(var e in t.modifiers)t.modifiers[e]=!1},window.addEventListener("blur",this._onBlur,!1)}n.d(t,{Z:()=>i}),i.prototype.destroy=function(){this.domElement.removeEventListener("keydown",this._onKeyDown,!1),this.domElement.removeEventListener("keyup",this._onKeyUp,!1),window.removeEventListener("blur",this._onBlur,!1)},i.MODIFIERS=["shift","ctrl","alt","meta"],i.ALIAS={left:37,up:38,right:39,down:40,space:32,pageup:33,pagedown:34,tab:9,escape:27},i.prototype._onKeyChange=function(e){var t=e.keyCode,n="keydown"===e.type;this.keyCodes[t]=n,this.modifiers.shift=e.shiftKey,this.modifiers.ctrl=e.ctrlKey,this.modifiers.alt=e.altKey,this.modifiers.meta=e.metaKey},i.prototype.pressed=function(e){for(var t=e.split("+"),n=0;n<t.length;n++){var r=t[n];if(!(-1!==i.MODIFIERS.indexOf(r)?this.modifiers[r]:-1!=Object.keys(i.ALIAS).indexOf(r)?this.keyCodes[i.ALIAS[r]]:this.keyCodes[r.toUpperCase().charCodeAt(0)]))return!1}return!0},i.prototype.eventMatches=function(e,t){for(var n=i.ALIAS,r=Object.keys(n),a=t.split("+"),l=0;l<a.length;l++){var o=a[l],s=!1;if("shift"===o?s=!!e.shiftKey:"ctrl"===o?s=!!e.ctrlKey:"alt"===o?s=!!e.altKey:"meta"===o?s=!!e.metaKey:-1!==r.indexOf(o)?s=e.keyCode===n[o]:e.keyCode===o.toUpperCase().charCodeAt(0)&&(s=!0),!s)return!1}return!0}},821:(e,t,n)=>{"use strict";n.d(t,{Yo:()=>z,gQ:()=>C,Ig:()=>T,LZ:()=>g,U_:()=>I,f$:()=>E,I$:()=>N,AE:()=>L,w1:()=>R,ew:()=>k,pb:()=>b,GN:()=>P,Me:()=>A,Je:()=>M,wz:()=>y,yp:()=>D});var i=n(736);function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function o(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function s(e,t){return s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},s(e,t)}function u(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=c(e);if(t){var r=c(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return h(this,n)}}function h(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function c(e){return c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},c(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&s(e,t)}(n,e);var t=u(n);function n(e){return a(this,n),t.call(this,e)}return o(n,[{key:"load",value:function(e,t,n,r){var a=this,l=new i.hH6(this.manager);l.setPath(this.path),l.setRequestHeader(this.requestHeader),l.setWithCredentials(a.withCredentials),l.load(e,(function(e){var n;try{n=JSON.parse(e)}catch(t){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(e.substring(65,e.length-2))}var i=a.parse(n);t&&t(i)}),n,r)}},{key:"parse",value:function(e){return new d(e)}}]),n}(i.aNw),d=function(){function e(t){a(this,e),this.type="Font",this.data=t}return o(e,[{key:"generateShapes",value:function(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:100,n=[],i=p(e,t,this.data),r=0,a=i.length;r<a;r++)Array.prototype.push.apply(n,i[r].toShapes());return n}}]),e}();function p(e,t,n){for(var i=Array.from(e),r=t/n.resolution,a=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*r,l=[],o=0,s=0,u=0;u<i.length;u++){var h=i[u];if("\n"===h)o=0,s-=a;else{var c=q(h,r,o,s,n);o+=c.offsetX,l.push(c.path)}}return l}function q(e,t,n,r,a){var l=a.glyphs[e]||a.glyphs["?"];if(l){var o,s,u,h,c,m,d,p,q=new i.T_1;if(l.o)for(var f=l._cachedOutline||(l._cachedOutline=l.o.split(" ")),v=0,x=f.length;v<x;){switch(f[v++]){case"m":o=f[v++]*t+n,s=f[v++]*t+r,q.moveTo(o,s);break;case"l":o=f[v++]*t+n,s=f[v++]*t+r,q.lineTo(o,s);break;case"q":u=f[v++]*t+n,h=f[v++]*t+r,c=f[v++]*t+n,m=f[v++]*t+r,q.quadraticCurveTo(c,m,u,h);break;case"b":u=f[v++]*t+n,h=f[v++]*t+r,c=f[v++]*t+n,m=f[v++]*t+r,d=f[v++]*t+n,p=f[v++]*t+r,q.bezierCurveTo(c,m,d,p,u,h)}}return{offsetX:l.ha*t,path:q}}console.error('THREE.Font: character "'+e+'" does not exists in font family '+a.familyName+".")}d.prototype.isFont=!0;const f=JSON.parse('{"glyphs":{"0":{"ha":833,"x_min":111,"x_max":722,"o":"m 417 -14 q 255 23 324 -14 q 149 127 186 60 q 111 285 111 194 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 285 q 685 127 722 194 q 578 23 647 60 q 417 -14 510 -14 m 417 93 q 551 147 500 93 q 601 285 601 200 l 601 729 q 551 867 601 814 q 417 921 500 921 q 283 867 333 921 q 232 729 232 814 l 232 285 q 283 147 232 200 q 417 93 333 93 m 417 425 q 356 449 379 425 q 333 511 333 472 q 356 572 333 549 q 417 594 379 594 q 477 572 454 594 q 500 511 500 549 q 477 449 500 472 q 417 425 454 425 z "},"1":{"ha":833,"x_min":125,"x_max":750,"o":"m 125 0 l 125 114 l 400 114 l 400 910 l 125 704 l 125 843 l 354 1014 l 525 1014 l 525 114 l 750 114 l 750 0 l 125 0 z "},"2":{"ha":833,"x_min":100,"x_max":731,"o":"m 128 0 l 128 128 l 438 457 q 553 608 517 542 q 589 735 589 674 q 542 868 589 819 q 415 917 496 917 q 276 867 326 917 q 225 729 225 817 l 100 729 q 142 888 103 821 q 252 992 182 956 q 415 1028 322 1028 q 574 992 507 1028 q 678 892 642 957 q 714 736 714 826 q 668 565 714 650 q 518 372 622 481 l 268 114 l 731 114 l 731 0 l 128 0 z "},"3":{"ha":833,"x_min":97,"x_max":708,"o":"m 401 -14 q 241 23 310 -14 q 135 125 172 60 q 97 278 97 190 l 222 278 q 270 145 222 193 q 403 97 318 97 q 536 147 489 97 q 583 278 583 197 l 583 350 q 536 483 583 436 q 403 531 489 531 l 299 531 l 299 656 l 550 900 l 139 900 l 139 1014 l 676 1014 l 676 889 l 406 626 l 406 642 q 626 563 544 642 q 708 350 708 483 l 708 278 q 670 125 708 190 q 563 23 632 60 q 401 -14 493 -14 z "},"4":{"ha":833,"x_min":111,"x_max":694,"o":"m 569 0 l 569 222 l 111 222 l 111 418 l 513 1014 l 649 1014 l 236 392 l 236 336 l 569 336 l 569 583 l 694 583 l 694 0 l 569 0 z "},"5":{"ha":833,"x_min":118,"x_max":715,"o":"m 414 -14 q 211 50 290 -14 q 118 222 132 114 l 243 222 q 294 130 250 163 q 415 97 339 97 q 547 144 503 97 q 590 278 590 192 l 590 376 q 547 510 590 463 q 417 557 503 557 q 322 528 363 557 q 264 453 282 500 l 139 453 l 146 1014 l 679 1014 l 679 900 l 267 900 l 263 563 l 301 563 l 263 526 q 315 629 263 592 q 454 667 367 667 q 647 591 578 668 q 715 376 715 514 l 715 278 q 636 65 715 143 q 414 -14 557 -14 z "},"6":{"ha":833,"x_min":94,"x_max":739,"o":"m 418 -14 q 248 27 321 -14 q 135 142 175 68 q 94 313 94 215 q 116 463 94 389 q 181 604 138 536 l 435 1014 l 574 1014 l 286 553 l 292 549 q 364 608 318 588 q 467 629 410 629 q 611 590 550 629 q 706 481 672 551 q 739 313 739 410 q 699 142 739 215 q 587 27 658 68 q 418 -14 515 -14 m 417 97 q 560 156 506 97 q 614 313 614 215 q 560 469 614 410 q 417 528 506 528 q 274 469 328 528 q 219 313 219 410 q 274 156 219 215 q 417 97 328 97 z "},"7":{"ha":833,"x_min":111,"x_max":743,"o":"m 257 0 l 619 900 l 236 900 l 236 750 l 111 750 l 111 1014 l 743 1014 l 743 892 l 392 0 l 257 0 z "},"8":{"ha":833,"x_min":111,"x_max":722,"o":"m 417 -14 q 255 19 324 -14 q 149 113 186 51 q 111 256 111 174 q 160 411 111 346 q 317 528 210 476 l 451 593 q 546 669 513 622 q 579 774 579 717 q 535 879 579 840 q 417 918 492 918 q 298 878 342 918 q 254 772 254 839 q 287 669 254 717 q 376 594 319 622 l 511 531 q 672 413 622 479 q 722 256 722 347 q 640 59 722 132 q 417 -14 557 -14 m 417 97 q 551 141 501 97 q 600 258 600 185 q 568 367 600 318 q 476 444 536 415 l 343 510 q 182 626 232 564 q 132 776 132 689 q 167 911 132 854 q 265 999 201 968 q 417 1029 329 1029 q 568 999 504 1029 q 667 911 632 968 q 701 776 701 854 q 651 627 701 689 q 486 508 601 565 l 353 443 q 265 367 296 415 q 233 261 233 319 q 283 142 233 186 q 417 97 332 97 z "},"9":{"ha":833,"x_min":94,"x_max":739,"o":"m 260 0 l 547 461 l 542 465 q 469 406 515 426 q 367 385 424 385 q 223 424 285 385 q 128 534 161 463 q 94 701 94 606 q 135 873 94 800 q 247 987 175 946 q 415 1028 319 1028 q 585 987 513 1028 q 699 873 658 946 q 739 701 739 800 q 717 551 739 625 q 653 410 696 478 l 399 0 l 260 0 m 417 486 q 560 545 506 486 q 614 701 614 604 q 560 858 614 799 q 417 917 506 917 q 274 858 328 917 q 219 701 219 799 q 274 545 219 604 q 417 486 328 486 z "},"A":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Á":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ă":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ắ":{"ha":833,"x_min":69,"x_max":764,"o":"m 329 1250 l 475 1417 l 608 1417 l 456 1250 l 329 1250 m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ặ":{"ha":833,"x_min":69,"x_max":764,"o":"m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ằ":{"ha":833,"x_min":69,"x_max":764,"o":"m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 378 1250 l 239 1417 l 372 1417 l 504 1250 l 378 1250 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẳ":{"ha":833,"x_min":69,"x_max":764,"o":"m 353 1222 l 418 1300 q 428 1322 428 1311 q 414 1333 428 1333 l 313 1333 l 313 1417 l 447 1417 q 503 1399 483 1417 q 524 1350 524 1382 q 518 1313 524 1332 q 501 1278 513 1293 l 457 1222 l 353 1222 m 382 1083 q 240 1132 293 1083 q 188 1264 188 1181 l 285 1264 q 311 1193 285 1219 q 382 1167 338 1167 l 450 1167 q 522 1193 496 1167 q 549 1264 549 1219 l 646 1264 q 593 1132 646 1181 q 450 1083 540 1083 l 382 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẵ":{"ha":833,"x_min":69,"x_max":764,"o":"m 382 1083 q 240 1125 293 1083 q 188 1250 188 1167 l 285 1250 q 311 1186 285 1206 q 382 1167 338 1167 l 450 1167 q 522 1186 496 1167 q 549 1250 549 1206 l 646 1250 q 593 1125 646 1167 q 450 1083 540 1083 l 382 1083 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ǎ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Â":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ấ":{"ha":833,"x_min":69,"x_max":854,"o":"m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ậ":{"ha":833,"x_min":69,"x_max":764,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ầ":{"ha":833,"x_min":69,"x_max":764,"o":"m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẩ":{"ha":833,"x_min":69,"x_max":764,"o":"m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ẫ":{"ha":833,"x_min":69,"x_max":764,"o":"m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Ä":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ạ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"À":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ả":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 383 1132 l 453 1219 q 472 1264 472 1246 q 428 1292 472 1292 l 317 1292 l 317 1382 l 463 1382 q 548 1355 515 1382 q 581 1279 581 1328 q 557 1204 581 1235 l 501 1132 l 383 1132 z "},"Ā":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ą":{"ha":833,"x_min":69,"x_max":813,"o":"m 704 -282 q 581 -245 628 -282 q 535 -153 535 -208 q 561 -72 535 -112 q 653 14 588 -32 l 757 14 l 742 1 q 674 -69 694 -37 q 653 -129 653 -100 q 674 -179 653 -160 q 729 -199 694 -199 l 813 -199 l 813 -282 l 704 -282 m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Å":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 417 1064 q 296 1108 342 1064 q 250 1222 250 1151 q 296 1337 250 1293 q 417 1381 342 1381 q 538 1337 492 1381 q 583 1222 583 1293 q 538 1108 583 1151 q 417 1064 492 1064 m 417 1138 q 477 1160 454 1138 q 500 1222 500 1183 q 477 1285 500 1261 q 417 1308 454 1308 q 356 1285 379 1308 q 333 1222 333 1261 q 356 1160 333 1183 q 417 1138 379 1138 z "},"Ã":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Æ":{"ha":833,"x_min":42,"x_max":792,"o":"m 42 0 l 243 1014 l 792 1014 l 792 900 l 539 900 l 539 583 l 757 583 l 757 469 l 539 469 l 539 114 l 792 114 l 792 0 l 419 0 l 419 282 l 224 282 l 168 0 l 42 0 m 243 386 l 419 386 l 419 900 l 342 900 l 243 386 z "},"Ǽ":{"ha":833,"x_min":42,"x_max":792,"o":"m 42 0 l 243 1014 l 792 1014 l 792 900 l 539 900 l 539 583 l 757 583 l 757 469 l 539 469 l 539 114 l 792 114 l 792 0 l 419 0 l 419 282 l 224 282 l 168 0 l 42 0 m 243 386 l 419 386 l 419 900 l 342 900 l 243 386 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"B":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"C":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ć":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"Č":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 367 1125 l 172 1319 l 310 1319 l 424 1211 l 535 1319 l 675 1319 l 482 1125 l 367 1125 z "},"Ç":{"ha":833,"x_min":122,"x_max":719,"o":"m 292 -282 l 292 -206 l 389 -206 q 438 -190 419 -206 q 457 -156 457 -174 q 419 -114 457 -132 q 311 -96 381 -96 l 360 36 l 439 36 l 410 -49 q 485 -67 446 -53 q 550 -106 524 -81 q 576 -167 576 -131 q 531 -248 576 -214 q 410 -282 485 -282 l 292 -282 m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ĉ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 172 1125 l 365 1319 l 481 1319 l 675 1125 l 538 1125 l 424 1233 l 313 1125 l 172 1125 z "},"Ċ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 424 1133 q 351 1158 378 1133 q 325 1222 325 1182 q 351 1287 325 1263 q 424 1311 378 1311 q 496 1287 469 1311 q 522 1222 522 1263 q 496 1158 522 1182 q 424 1133 469 1133 z "},"D":{"ha":833,"x_min":128,"x_max":711,"o":"m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"Ð":{"ha":833,"x_min":14,"x_max":711,"o":"m 14 465 l 14 569 l 403 569 l 403 465 l 14 465 m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"Ď":{"ha":833,"x_min":128,"x_max":711,"o":"m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Đ":{"ha":833,"x_min":14,"x_max":711,"o":"m 14 465 l 14 569 l 403 569 l 403 465 l 14 465 m 128 0 l 128 1014 l 390 1014 q 560 976 489 1014 q 672 871 632 939 q 711 710 711 803 l 711 306 q 672 144 711 213 q 560 38 632 75 q 390 0 489 0 l 128 0 m 253 111 l 390 111 q 534 163 482 111 q 586 306 586 214 l 586 710 q 534 851 586 800 q 390 903 482 903 l 253 903 l 253 111 z "},"E":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"É":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 364 1125 l 511 1319 l 646 1319 l 492 1125 l 364 1125 z "},"Ĕ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 1118 q 283 1174 344 1118 q 222 1319 222 1229 l 321 1319 q 354 1232 321 1265 q 443 1199 388 1199 q 534 1232 500 1199 q 568 1319 568 1265 l 667 1319 q 606 1174 667 1229 q 444 1118 544 1118 z "},"Ě":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 388 1125 l 193 1319 l 331 1319 l 444 1211 l 556 1319 l 696 1319 l 503 1125 l 388 1125 z "},"Ê":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 193 1125 l 386 1319 l 501 1319 l 696 1125 l 558 1125 l 444 1233 l 333 1125 l 193 1125 z "},"Ế":{"ha":833,"x_min":139,"x_max":854,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ệ":{"ha":833,"x_min":139,"x_max":722,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 -296 q 372 -272 399 -296 q 346 -208 346 -249 q 372 -142 346 -167 q 444 -118 399 -118 q 517 -142 490 -118 q 543 -208 543 -167 q 517 -272 543 -249 q 444 -296 490 -296 z "},"Ề":{"ha":833,"x_min":139,"x_max":750,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ể":{"ha":833,"x_min":139,"x_max":764,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ễ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 z "},"Ë":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 599 1135 q 534 1158 558 1135 q 510 1222 510 1182 q 534 1288 510 1264 q 599 1313 558 1313 q 663 1288 639 1313 q 688 1222 688 1264 q 663 1158 688 1182 q 599 1135 639 1135 m 290 1135 q 226 1158 250 1135 q 201 1222 201 1182 q 226 1288 201 1264 q 290 1313 250 1313 q 355 1288 331 1313 q 379 1222 379 1264 q 355 1158 379 1182 q 290 1135 331 1135 z "},"Ė":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 1133 q 372 1158 399 1133 q 346 1222 346 1182 q 372 1287 346 1263 q 444 1311 399 1311 q 517 1287 490 1311 q 543 1222 543 1263 q 517 1158 543 1182 q 444 1133 490 1133 z "},"Ẹ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 444 -296 q 372 -272 399 -296 q 346 -208 346 -249 q 372 -142 346 -167 q 444 -118 399 -118 q 517 -142 490 -118 q 543 -208 543 -167 q 517 -272 543 -249 q 444 -296 490 -296 z "},"È":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 399 1125 l 239 1319 l 378 1319 l 531 1125 l 399 1125 z "},"Ẻ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ē":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 222 1167 l 222 1271 l 667 1271 l 667 1167 l 222 1167 z "},"Ę":{"ha":833,"x_min":139,"x_max":729,"o":"m 621 -282 q 498 -245 544 -282 q 451 -153 451 -208 q 478 -72 451 -112 q 569 14 504 -32 l 674 14 l 658 1 q 590 -69 611 -37 q 569 -129 569 -100 q 590 -179 569 -160 q 646 -199 611 -199 l 729 -199 l 729 -282 l 621 -282 m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ẽ":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 542 1132 q 474 1147 500 1132 q 429 1181 447 1161 q 394 1215 411 1200 q 354 1229 378 1229 q 324 1217 336 1229 q 313 1181 313 1206 l 313 1139 l 222 1139 l 222 1181 q 257 1278 222 1243 q 347 1313 292 1313 q 415 1298 389 1313 q 460 1264 442 1283 q 494 1230 478 1244 q 535 1215 511 1215 q 565 1227 554 1215 q 576 1264 576 1239 l 576 1306 l 667 1306 l 667 1264 q 633 1167 667 1201 q 542 1132 599 1132 z "},"F":{"ha":833,"x_min":132,"x_max":729,"o":"m 132 0 l 132 1015 l 729 1015 l 729 901 l 254 901 l 254 564 l 693 564 l 693 450 l 257 450 l 257 0 l 132 0 z "},"G":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Ǵ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ğ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ǧ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ĝ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ģ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 269 -333 l 401 -132 l 547 -132 l 401 -333 l 269 -333 z "},"Ġ":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 144 247 192 q 422 97 340 97 q 549 144 504 97 q 594 278 594 192 l 594 403 l 389 403 l 389 517 l 719 517 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"H":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ħ":{"ha":833,"x_min":14,"x_max":819,"o":"m 14 729 l 14 833 l 819 833 l 819 729 l 14 729 m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ĥ":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"I":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Í":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ĭ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Î":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ï":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"İ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"Ị":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ì":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỉ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 383 1111 l 446 1199 q 465 1243 465 1226 q 421 1271 465 1271 l 317 1271 l 317 1361 l 428 1361 q 533 1333 493 1361 q 574 1257 574 1304 q 550 1183 574 1218 l 501 1111 l 383 1111 z "},"Ī":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Į":{"ha":833,"x_min":146,"x_max":688,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ĩ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"J":{"ha":833,"x_min":63,"x_max":688,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 z "},"Ĵ":{"ha":833,"x_min":63,"x_max":751,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 m 249 1125 l 442 1319 l 557 1319 l 751 1125 l 614 1125 l 500 1233 l 389 1125 l 249 1125 z "},"K":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Ķ":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"L":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"Ĺ":{"ha":833,"x_min":143,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 143 1125 l 290 1319 l 425 1319 l 271 1125 l 143 1125 z "},"Ľ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 494 764 l 508 1014 l 626 1014 l 599 764 l 494 764 z "},"Ļ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 m 292 -333 l 424 -132 l 569 -132 l 424 -333 l 292 -333 z "},"Ŀ":{"ha":833,"x_min":160,"x_max":743,"o":"m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"Ł":{"ha":833,"x_min":28,"x_max":743,"o":"m 28 319 l 28 431 l 542 778 l 542 667 l 28 319 m 160 0 l 160 1014 l 285 1014 l 285 114 l 743 114 l 743 0 l 160 0 z "},"M":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"N":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 z "},"Ń":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ň":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ņ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"Ŋ":{"ha":833,"x_min":125,"x_max":708,"o":"m 333 -250 l 333 -136 l 424 -136 q 540 -94 497 -136 q 583 21 583 -51 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 l 125 1014 l 292 1014 l 601 251 q 595 337 599 286 q 590 444 592 388 q 588 551 588 501 l 588 1014 l 708 1014 l 708 21 q 673 -122 708 -61 q 574 -217 638 -183 q 424 -250 510 -250 l 333 -250 z "},"Ñ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"O":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ó":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŏ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ô":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ố":{"ha":833,"x_min":122,"x_max":854,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 567 1250 l 713 1417 l 854 1417 l 701 1250 l 567 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ộ":{"ha":833,"x_min":122,"x_max":711,"o":"m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ồ":{"ha":833,"x_min":122,"x_max":750,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 618 1250 l 451 1417 l 590 1417 l 750 1250 l 618 1250 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ổ":{"ha":833,"x_min":122,"x_max":764,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 583 1222 l 650 1288 q 661 1314 661 1299 q 640 1336 661 1336 l 549 1336 l 549 1417 l 667 1417 q 738 1393 711 1417 q 764 1331 764 1369 q 758 1297 764 1313 q 742 1269 753 1281 l 692 1222 l 583 1222 m 167 1083 l 358 1278 l 475 1278 l 668 1083 l 528 1083 l 417 1192 l 304 1083 l 167 1083 z "},"Ỗ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 524 1278 q 451 1288 481 1278 q 401 1310 422 1297 q 362 1333 381 1324 q 319 1343 343 1343 q 290 1332 301 1343 q 278 1301 278 1321 l 278 1292 l 188 1292 l 188 1301 q 222 1385 188 1354 q 313 1417 256 1417 q 385 1407 357 1417 q 434 1384 414 1397 q 472 1361 454 1371 q 514 1351 490 1351 q 544 1363 533 1351 q 556 1393 556 1375 l 556 1403 l 646 1403 l 646 1393 q 613 1309 646 1340 q 524 1278 581 1278 m 167 1083 l 328 1236 l 506 1236 l 667 1083 l 526 1083 l 417 1185 l 304 1083 l 167 1083 z "},"Ö":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ọ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ò":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỏ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 383 1111 l 446 1199 q 465 1243 465 1226 q 421 1271 465 1271 l 317 1271 l 317 1361 l 428 1361 q 533 1333 493 1361 q 574 1257 574 1304 q 550 1183 574 1218 l 501 1111 l 383 1111 z "},"Ơ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ớ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 322 1125 l 469 1319 l 604 1319 l 450 1125 l 322 1125 z "},"Ợ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ờ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 357 1125 l 197 1319 l 336 1319 l 489 1125 l 357 1125 z "},"Ở":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ỡ":{"ha":833,"x_min":122,"x_max":736,"o":"m 556 882 l 556 972 l 583 972 q 619 985 606 972 q 632 1021 632 999 l 632 1125 l 736 1125 l 736 1014 q 697 918 736 954 q 590 882 657 882 l 556 882 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 500 1132 q 432 1147 458 1132 q 388 1181 406 1161 q 353 1215 369 1200 q 313 1229 336 1229 q 283 1217 294 1229 q 271 1181 271 1206 l 271 1139 l 181 1139 l 181 1181 q 215 1278 181 1243 q 306 1313 250 1313 q 374 1298 347 1313 q 418 1264 400 1283 q 453 1230 436 1244 q 493 1215 469 1215 q 524 1227 513 1215 q 535 1264 535 1239 l 535 1306 l 625 1306 l 625 1264 q 591 1167 625 1201 q 500 1132 557 1132 z "},"Ő":{"ha":833,"x_min":122,"x_max":733,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 453 1125 l 606 1319 l 733 1319 l 574 1125 l 453 1125 m 204 1125 l 357 1319 l 485 1319 l 325 1125 l 204 1125 z "},"Ō":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ǫ":{"ha":833,"x_min":122,"x_max":711,"o":"m 526 -282 q 403 -245 450 -282 q 357 -153 357 -208 q 366 -110 357 -133 q 392 -62 375 -87 q 435 -14 410 -37 q 426 -14 431 -14 q 417 -14 421 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 681 133 711 196 q 597 35 651 71 l 557 1 q 493 -69 511 -37 q 475 -129 475 -100 q 496 -179 475 -160 q 551 -199 517 -199 l 635 -199 l 635 -282 l 526 -282 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ø":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -56 l 668 1042 l 785 1042 l 165 -56 l 49 -56 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ǿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -56 l 668 1042 l 785 1042 l 165 -56 l 49 -56 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Õ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Œ":{"ha":833,"x_min":56,"x_max":799,"o":"m 271 -14 q 156 18 204 -14 q 81 110 107 50 q 56 250 56 169 l 56 764 q 81 905 56 846 q 156 996 107 964 q 271 1028 204 1028 q 351 1008 319 1028 q 401 959 383 988 q 424 903 419 931 l 431 903 l 431 1014 l 799 1014 l 799 900 l 553 900 l 553 581 l 764 581 l 764 467 l 553 467 l 553 114 l 799 114 l 799 0 l 431 0 l 431 111 l 424 111 q 401 56 419 85 q 351 6 383 26 q 271 -14 319 -14 m 306 97 q 397 138 364 97 q 431 250 431 179 l 431 764 q 397 876 431 835 q 306 917 364 917 q 214 876 247 917 q 181 764 181 835 l 181 250 q 214 138 181 179 q 306 97 247 97 z "},"P":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"Þ":{"ha":833,"x_min":125,"x_max":764,"o":"m 125 0 l 125 1014 l 250 1014 l 250 806 l 463 806 q 622 771 554 806 q 726 674 689 736 q 764 528 764 611 q 682 326 764 401 q 463 250 600 250 l 250 250 l 250 0 l 125 0 m 250 361 l 463 361 q 589 406 543 361 q 635 528 635 451 q 588 650 635 606 q 463 694 542 694 l 250 694 l 250 361 z "},"Q":{"ha":833,"x_min":111,"x_max":731,"o":"m 586 -250 l 438 -4 l 451 -12 q 437 -13 446 -12 q 417 -14 428 -14 q 255 23 324 -14 q 149 127 186 60 q 111 285 111 194 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 285 q 682 122 722 192 q 568 18 642 53 l 731 -250 l 586 -250 m 417 97 q 548 149 499 97 q 597 285 597 200 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 285 q 285 149 236 200 q 417 97 335 97 z "},"R":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 z "},"Ŕ":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ř":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ŗ":{"ha":833,"x_min":128,"x_max":757,"o":"m 128 0 l 128 1014 l 442 1014 q 600 977 532 1014 q 706 875 668 940 q 743 722 743 810 q 690 546 743 619 q 544 444 636 472 l 757 0 l 610 0 l 415 431 l 253 431 l 253 0 l 128 0 m 253 543 l 442 543 q 567 592 519 543 q 614 722 614 642 q 567 853 614 804 q 442 901 519 901 l 253 901 l 253 543 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"S":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Ś":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Š":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ş":{"ha":833,"x_min":100,"x_max":733,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Ŝ":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ș":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ẞ":{"ha":833,"x_min":128,"x_max":750,"o":"m 128 0 l 128 728 q 164 878 128 814 q 266 978 200 943 q 419 1014 332 1014 l 735 1014 l 735 892 l 486 556 l 486 588 q 625 553 565 589 q 717 453 685 518 q 750 299 750 388 q 713 142 750 210 q 608 38 675 75 q 451 0 542 0 l 358 0 l 358 114 l 438 114 q 569 164 521 114 q 618 299 618 214 q 569 431 618 382 q 438 479 521 479 l 375 479 l 375 588 l 603 900 l 419 900 q 298 854 343 900 q 253 728 253 808 l 253 0 l 128 0 z "},"Ə":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 261 22 326 -14 q 160 124 196 58 q 125 278 125 190 l 125 556 l 583 556 l 583 738 q 541 870 583 824 q 417 917 499 917 q 293 869 336 917 q 250 736 250 822 l 125 736 q 160 892 125 826 q 260 992 194 957 q 417 1028 325 1028 q 574 993 510 1028 q 674 893 639 958 q 708 736 708 828 l 708 278 q 673 124 708 190 q 572 22 638 58 q 417 -14 507 -14 m 417 90 q 543 139 503 90 q 583 278 583 188 l 583 458 l 240 458 l 250 469 l 250 278 q 291 139 250 188 q 417 90 332 90 z "},"T":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ŧ":{"ha":833,"x_min":76,"x_max":757,"o":"m 153 410 l 153 514 l 681 514 l 681 410 l 153 410 m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ť":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ţ":{"ha":833,"x_min":76,"x_max":757,"o":"m 344 -282 l 344 -206 l 442 -206 q 491 -190 472 -206 q 510 -156 510 -174 q 472 -114 510 -132 q 364 -96 433 -96 l 413 36 l 479 0 l 463 -49 q 538 -67 499 -53 q 603 -106 576 -81 q 629 -167 629 -131 q 583 -248 629 -214 q 463 -282 538 -282 l 344 -282 m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Ț":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 m 215 -333 l 347 -132 l 493 -132 l 347 -333 l 215 -333 z "},"U":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ú":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŭ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Û":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ü":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ụ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"Ù":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ủ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ư":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ứ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ự":{"ha":833,"x_min":125,"x_max":826,"o":"m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 z "},"Ừ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ử":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ữ":{"ha":833,"x_min":125,"x_max":826,"o":"m 604 924 l 604 1014 l 674 1014 q 709 1027 696 1014 q 722 1063 722 1040 l 722 1167 l 826 1167 l 826 1056 q 787 960 826 996 q 681 924 747 924 l 604 924 m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Ű":{"ha":833,"x_min":125,"x_max":733,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 453 1125 l 606 1319 l 733 1319 l 574 1125 l 453 1125 m 204 1125 l 357 1319 l 485 1319 l 325 1125 l 204 1125 z "},"Ū":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ų":{"ha":833,"x_min":125,"x_max":708,"o":"m 526 -282 q 403 -245 450 -282 q 357 -153 357 -208 q 366 -110 357 -133 q 392 -62 375 -87 q 435 -14 410 -37 q 426 -14 431 -14 q 417 -14 421 -14 q 260 21 325 -14 q 160 122 194 56 q 125 278 125 188 l 125 1014 l 250 1014 l 250 278 q 293 145 250 192 q 417 99 336 99 q 541 145 499 99 q 583 278 583 192 l 583 1014 l 708 1014 l 708 278 q 680 133 708 196 q 597 35 651 71 l 557 1 q 493 -69 511 -37 q 475 -129 475 -100 q 496 -179 475 -160 q 551 -199 517 -199 l 635 -199 l 635 -282 l 526 -282 z "},"Ů":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 417 1064 q 296 1108 342 1064 q 250 1222 250 1151 q 296 1337 250 1293 q 417 1381 342 1381 q 538 1337 492 1381 q 583 1222 583 1293 q 538 1108 583 1151 q 417 1064 492 1064 m 417 1138 q 477 1160 454 1138 q 500 1222 500 1183 q 477 1285 500 1261 q 417 1308 454 1308 q 356 1285 379 1308 q 333 1222 333 1261 q 356 1160 333 1183 q 417 1138 379 1138 z "},"Ũ":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 200 65 275 -14 q 125 278 125 143 l 125 1014 l 250 1014 l 250 278 q 291 146 250 194 q 417 97 332 97 q 542 146 500 97 q 583 278 583 194 l 583 1014 l 708 1014 l 708 278 q 634 64 708 142 q 417 -14 560 -14 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"V":{"ha":833,"x_min":69,"x_max":764,"o":"m 331 0 l 69 1014 l 199 1014 l 371 325 q 401 191 389 253 q 419 97 414 129 q 437 191 425 129 q 467 325 449 253 l 638 1014 l 764 1014 l 501 0 l 331 0 z "},"W":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 z "},"Ẃ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŵ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ẅ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ẁ":{"ha":833,"x_min":35,"x_max":799,"o":"m 151 0 l 35 1014 l 154 1014 l 231 264 q 236 201 233 233 q 241 139 239 168 q 243 90 243 110 q 248 139 246 110 q 253 201 250 168 q 261 264 257 233 l 356 1014 l 485 1014 l 571 264 q 578 201 575 233 q 585 139 582 168 q 590 90 589 110 q 594 139 592 110 q 599 201 596 168 q 606 264 603 233 l 685 1014 l 799 1014 l 679 0 l 522 0 l 436 764 q 430 826 433 796 q 424 883 426 857 q 419 926 421 910 q 415 883 418 910 q 408 826 411 857 q 401 764 406 796 l 308 0 l 151 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"X":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Y":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ý":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ŷ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 165 1125 l 358 1319 l 474 1319 l 668 1125 l 531 1125 l 417 1233 l 306 1125 l 165 1125 z "},"Ÿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ỵ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"Ỳ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 371 1125 l 211 1319 l 350 1319 l 503 1125 l 371 1125 z "},"Ỷ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 358 1111 l 421 1199 q 440 1243 440 1226 q 396 1271 440 1271 l 292 1271 l 292 1361 l 403 1361 q 508 1333 468 1361 q 549 1257 549 1304 q 525 1183 549 1218 l 476 1111 l 358 1111 z "},"Ȳ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 194 1167 l 194 1271 l 639 1271 l 639 1167 l 194 1167 z "},"Ỹ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 514 1132 q 446 1147 472 1132 q 401 1181 419 1161 q 367 1215 383 1200 q 326 1229 350 1229 q 297 1217 308 1229 q 285 1181 285 1206 l 285 1139 l 194 1139 l 194 1181 q 229 1278 194 1243 q 319 1313 264 1313 q 388 1298 361 1313 q 432 1264 414 1283 q 467 1230 450 1244 q 507 1215 483 1215 q 538 1227 526 1215 q 549 1264 549 1239 l 549 1306 l 639 1306 l 639 1264 q 605 1167 639 1201 q 514 1132 571 1132 z "},"Z":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 z "},"Ź":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 z "},"Ž":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 360 1125 l 165 1319 l 303 1319 l 417 1211 l 528 1319 l 668 1319 l 475 1125 l 360 1125 z "},"Ż":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 m 417 1133 q 344 1158 371 1133 q 318 1222 318 1182 q 344 1287 318 1263 q 417 1311 371 1311 q 489 1287 463 1311 q 515 1222 515 1263 q 489 1158 515 1182 q 417 1133 463 1133 z "},"a":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"á":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ă":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 889 q 263 944 324 889 q 201 1090 201 1000 l 300 1090 q 333 1003 300 1036 q 422 969 367 969 q 513 1003 479 969 q 547 1090 547 1036 l 646 1090 q 585 944 646 1000 q 424 889 524 889 z "},"ắ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 329 1056 l 489 1236 l 622 1236 l 456 1056 l 329 1056 z "},"ặ":{"ha":833,"x_min":90,"x_max":708,"o":"m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"ằ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 378 1056 l 211 1236 l 344 1236 l 504 1056 l 378 1056 z "},"ẳ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 889 q 246 939 311 889 q 181 1069 181 989 l 278 1069 q 316 999 278 1026 q 417 972 354 972 q 517 999 479 972 q 556 1069 556 1026 l 653 1069 q 588 939 653 989 q 417 889 524 889 m 351 1056 l 414 1140 q 426 1175 426 1157 q 417 1199 426 1190 q 389 1208 407 1208 l 313 1208 l 313 1292 l 403 1292 q 498 1265 463 1292 q 533 1193 533 1238 q 527 1158 533 1175 q 510 1125 521 1140 l 461 1056 l 351 1056 z "},"ẵ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 417 896 q 256 946 317 896 q 194 1076 194 996 l 285 1076 q 321 1006 285 1033 q 415 978 357 978 q 512 1006 475 978 q 549 1076 549 1033 l 639 1076 q 578 946 639 996 q 417 896 517 896 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 z "},"ǎ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 367 896 l 172 1090 l 310 1090 l 424 982 l 535 1090 l 675 1090 l 482 896 l 367 896 z "},"â":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 172 896 l 365 1090 l 481 1090 l 675 896 l 538 896 l 424 1004 l 313 896 l 172 896 z "},"ấ":{"ha":833,"x_min":90,"x_max":868,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ậ":{"ha":833,"x_min":90,"x_max":708,"o":"m 172 896 l 365 1090 l 481 1090 l 675 896 l 538 896 l 424 1004 l 313 896 l 172 896 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"ầ":{"ha":833,"x_min":90,"x_max":757,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ẩ":{"ha":833,"x_min":90,"x_max":764,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ẫ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ä":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 578 901 q 513 925 538 901 q 489 989 489 949 q 513 1055 489 1031 q 578 1079 538 1079 q 642 1055 618 1079 q 667 989 667 1031 q 642 925 667 949 q 578 901 618 901 m 269 901 q 205 925 229 901 q 181 989 181 949 q 205 1055 181 1031 q 269 1079 229 1079 q 334 1055 310 1079 q 358 989 358 1031 q 334 925 358 949 q 269 901 310 901 z "},"ạ":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 -296 q 351 -272 378 -296 q 325 -208 325 -249 q 351 -142 325 -167 q 424 -118 378 -118 q 496 -142 469 -118 q 522 -208 522 -167 q 496 -272 522 -249 q 424 -296 469 -296 z "},"à":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 378 896 l 218 1090 l 357 1090 l 510 896 l 378 896 z "},"ả":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 365 896 l 435 983 q 454 1028 454 1010 q 410 1056 454 1056 l 299 1056 l 299 1146 l 444 1146 q 530 1119 497 1146 q 563 1043 563 1092 q 539 968 563 999 l 483 896 l 365 896 z "},"ā":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 201 931 l 201 1035 l 646 1035 l 646 931 l 201 931 z "},"ą":{"ha":833,"x_min":90,"x_max":779,"o":"m 671 -282 q 548 -245 594 -282 q 501 -153 501 -208 q 528 -72 501 -112 q 619 14 554 -32 l 708 0 q 640 -69 661 -39 q 619 -129 619 -100 q 640 -179 619 -160 q 696 -199 661 -199 l 779 -199 l 779 -282 l 671 -282 m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"å":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 424 844 q 303 888 349 844 q 257 1003 257 932 q 303 1117 257 1074 q 424 1161 349 1161 q 544 1117 499 1161 q 590 1003 590 1074 q 544 888 590 932 q 424 844 499 844 m 424 918 q 484 941 461 918 q 507 1003 507 964 q 484 1065 507 1042 q 424 1089 461 1089 q 363 1065 386 1089 q 340 1003 340 1042 q 363 941 340 964 q 424 918 386 918 z "},"ã":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 m 521 903 q 453 917 479 903 q 408 951 426 932 q 374 985 390 971 q 333 1000 357 1000 q 303 988 315 1000 q 292 951 292 976 l 292 910 l 201 910 l 201 951 q 236 1049 201 1014 q 326 1083 271 1083 q 394 1069 368 1083 q 439 1035 421 1054 q 474 1001 457 1015 q 514 986 490 986 q 544 998 533 986 q 556 1035 556 1010 l 556 1076 l 646 1076 l 646 1035 q 612 938 646 972 q 521 903 578 903 z "},"æ":{"ha":833,"x_min":49,"x_max":785,"o":"m 236 -14 q 99 39 150 -14 q 49 181 49 92 l 49 264 q 106 401 49 350 q 261 451 164 451 l 364 451 l 364 554 q 342 643 364 615 q 271 671 319 671 q 208 647 232 671 q 183 583 183 624 l 65 583 q 116 724 65 671 q 250 778 167 778 q 340 760 304 778 q 395 716 376 742 q 418 667 414 690 l 424 667 q 446 716 428 690 q 498 760 464 742 q 583 778 532 778 q 731 718 678 778 q 785 556 785 658 l 785 354 l 476 354 l 476 208 q 502 125 476 157 q 569 93 528 93 q 640 117 614 93 q 667 181 667 140 l 785 181 q 729 40 785 93 q 583 -14 674 -14 q 497 4 532 -14 q 445 48 463 22 q 424 97 428 74 l 418 97 q 393 48 414 74 q 334 4 372 22 q 236 -14 296 -14 m 264 93 q 336 125 308 93 q 364 208 364 157 l 364 354 l 264 354 q 197 330 221 354 q 174 264 174 306 l 174 181 q 198 117 174 140 q 264 93 222 93 m 476 451 l 667 451 l 667 556 q 641 640 667 608 q 569 671 615 671 q 501 640 526 671 q 476 556 476 608 l 476 451 z "},"ǽ":{"ha":833,"x_min":49,"x_max":785,"o":"m 236 -14 q 99 39 150 -14 q 49 181 49 92 l 49 264 q 106 401 49 350 q 261 451 164 451 l 364 451 l 364 554 q 342 643 364 615 q 271 671 319 671 q 208 647 232 671 q 183 583 183 624 l 65 583 q 116 724 65 671 q 250 778 167 778 q 340 760 304 778 q 395 716 376 742 q 418 667 414 690 l 424 667 q 446 716 428 690 q 498 760 464 742 q 583 778 532 778 q 731 718 678 778 q 785 556 785 658 l 785 354 l 476 354 l 476 208 q 502 125 476 157 q 569 93 528 93 q 640 117 614 93 q 667 181 667 140 l 785 181 q 729 40 785 93 q 583 -14 674 -14 q 497 4 532 -14 q 445 48 463 22 q 424 97 428 74 l 418 97 q 393 48 414 74 q 334 4 372 22 q 236 -14 296 -14 m 264 93 q 336 125 308 93 q 364 208 364 157 l 364 354 l 264 354 q 197 330 221 354 q 174 264 174 306 l 174 181 q 198 117 174 140 q 264 93 222 93 m 476 451 l 667 451 l 667 556 q 641 640 667 608 q 569 671 615 671 q 501 640 526 671 q 476 556 476 608 l 476 451 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"b":{"ha":833,"x_min":128,"x_max":715,"o":"m 461 -14 q 310 37 367 -14 q 253 175 253 88 l 278 146 l 253 146 l 253 0 l 128 0 l 128 1014 l 253 1014 l 253 792 l 250 618 l 278 618 l 253 589 q 310 726 253 675 q 461 778 368 778 q 646 701 576 778 q 715 493 715 625 l 715 269 q 646 63 715 139 q 461 -14 576 -14 m 419 94 q 544 142 499 94 q 590 278 590 189 l 590 486 q 544 622 590 575 q 419 669 499 669 q 298 621 343 669 q 253 486 253 572 l 253 278 q 298 143 253 192 q 419 94 343 94 z "},"c":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"ć":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 342 896 l 489 1090 l 624 1090 l 469 896 l 342 896 z "},"č":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 365 896 l 171 1090 l 308 1090 l 422 982 l 533 1090 l 674 1090 l 481 896 l 365 896 z "},"ç":{"ha":833,"x_min":118,"x_max":719,"o":"m 290 -282 l 290 -206 l 388 -206 q 437 -190 418 -206 q 456 -156 456 -174 q 417 -114 456 -132 q 310 -96 379 -96 l 358 36 l 438 36 l 408 -49 q 483 -67 444 -53 q 549 -106 522 -81 q 575 -167 575 -131 q 529 -248 575 -214 q 408 -282 483 -282 l 290 -282 m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"ĉ":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ċ":{"ha":833,"x_min":118,"x_max":719,"o":"m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"d":{"ha":833,"x_min":118,"x_max":706,"o":"m 372 -14 q 188 63 258 -14 q 118 269 118 139 l 118 493 q 188 701 118 625 q 372 778 257 778 q 524 726 467 778 q 581 589 581 675 l 556 618 l 583 618 l 581 792 l 581 1014 l 706 1014 l 706 0 l 581 0 l 581 146 l 556 146 l 581 175 q 524 37 581 88 q 372 -14 467 -14 m 414 94 q 536 143 492 94 q 581 278 581 192 l 581 486 q 536 621 581 572 q 414 669 492 669 q 289 622 335 669 q 243 486 243 575 l 243 278 q 289 142 243 189 q 414 94 335 94 z "},"ð":{"ha":833,"x_min":97,"x_max":736,"o":"m 415 -14 q 249 25 321 -14 q 137 135 176 64 q 97 299 97 206 q 134 460 97 392 q 237 567 171 529 q 390 606 303 606 q 463 593 431 606 q 517 563 494 581 q 549 528 539 544 l 568 528 q 540 578 563 542 q 479 667 518 615 l 389 793 l 163 688 l 163 799 l 329 876 l 229 1014 l 374 1014 l 435 925 l 640 1021 l 640 910 l 493 842 l 601 685 q 699 497 663 596 q 736 310 736 399 q 696 140 736 213 q 584 26 656 67 q 415 -14 513 -14 m 415 97 q 558 153 504 97 q 611 299 611 208 q 587 405 611 360 q 519 475 563 450 q 415 500 475 500 q 276 444 329 500 q 222 299 222 389 q 276 153 222 208 q 415 97 329 97 z "},"ď":{"ha":833,"x_min":88,"x_max":833,"o":"m 708 764 l 708 1014 l 833 1014 l 819 764 l 708 764 m 317 -14 q 149 61 211 -14 q 88 263 88 136 l 88 500 q 149 703 88 628 q 317 778 211 778 q 453 726 403 778 q 504 589 504 675 l 479 618 l 507 618 l 504 792 l 504 1014 l 629 1014 l 629 0 l 504 0 l 504 146 l 479 146 l 504 175 q 453 38 504 89 q 317 -14 403 -14 m 358 94 q 466 141 428 94 q 504 271 504 188 l 504 493 q 466 623 504 576 q 358 669 428 669 q 251 623 290 669 q 213 493 213 576 l 213 271 q 251 141 213 188 q 358 94 290 94 z "},"đ":{"ha":833,"x_min":125,"x_max":833,"o":"m 372 -14 q 192 63 258 -14 q 125 269 125 139 l 125 410 q 191 618 125 542 q 372 694 257 694 q 522 643 467 694 q 578 506 578 592 l 553 535 l 581 535 l 578 708 l 578 1014 l 703 1014 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 37 578 88 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 403 q 535 538 578 489 q 414 586 492 586 q 292 539 335 586 q 250 403 250 492 l 250 278 q 292 142 250 189 q 414 94 335 94 m 347 792 l 347 896 l 833 896 l 833 792 l 347 792 z "},"e":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"é":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ĕ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"ě":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"ê":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ế":{"ha":833,"x_min":118,"x_max":868,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ệ":{"ha":833,"x_min":118,"x_max":715,"o":"m 171 896 l 364 1090 l 479 1090 l 674 896 l 536 896 l 422 1004 l 311 896 l 171 896 m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"ề":{"ha":833,"x_min":118,"x_max":757,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ể":{"ha":833,"x_min":118,"x_max":764,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ễ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ë":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ė":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"ẹ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"è":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ẻ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ē":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ę":{"ha":833,"x_min":122,"x_max":711,"o":"m 518 -282 q 395 -245 442 -282 q 349 -153 349 -208 q 369 -85 349 -121 q 431 -14 390 -50 q 424 -14 428 -14 q 417 -14 419 -14 q 260 22 326 -14 q 158 124 194 58 q 122 278 122 190 l 122 486 q 158 640 122 575 q 260 742 194 706 q 417 778 326 778 q 573 742 507 778 q 675 640 639 706 q 711 486 711 575 l 711 351 l 244 351 l 244 278 q 288 140 244 188 q 417 92 332 92 q 531 117 489 92 q 583 194 574 143 l 708 194 q 667 90 701 135 q 578 19 632 46 l 556 1 q 488 -69 508 -37 q 467 -129 467 -100 q 488 -179 467 -160 q 543 -199 508 -199 l 626 -199 l 626 -282 l 518 -282 m 589 390 l 589 486 q 546 625 589 576 q 417 674 503 674 q 288 625 332 674 q 244 486 244 576 l 244 446 l 644 446 l 589 390 z "},"ẽ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"ə":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 261 22 326 -14 q 160 124 196 58 q 125 278 125 190 l 125 413 l 586 413 l 586 486 q 544 624 586 576 q 417 672 503 672 q 304 647 344 672 q 253 569 264 621 l 128 569 q 218 722 140 665 q 417 778 296 778 q 572 742 507 778 q 673 640 638 706 q 708 486 708 575 l 708 278 q 673 124 708 190 q 572 22 638 58 q 417 -14 507 -14 m 417 90 q 544 139 503 90 q 586 278 586 188 l 586 318 l 238 318 l 247 329 l 247 278 q 290 139 247 188 q 417 90 332 90 z "},"f":{"ha":833,"x_min":83,"x_max":743,"o":"m 306 0 l 306 574 l 83 574 l 83 688 l 306 688 l 306 819 q 363 962 306 910 q 519 1014 419 1014 l 743 1014 l 743 900 l 519 900 q 453 880 476 900 q 431 819 431 860 l 431 688 l 743 688 l 743 574 l 431 574 l 431 0 l 306 0 z "},"g":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 z "},"ǵ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 332 896 l 479 1090 l 614 1090 l 460 896 l 332 896 z "},"ğ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 413 889 q 251 944 313 889 q 190 1090 190 1000 l 289 1090 q 322 1003 289 1036 q 411 969 356 969 q 502 1003 468 969 q 536 1090 536 1036 l 635 1090 q 574 944 635 1000 q 413 889 513 889 z "},"ǧ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 356 896 l 161 1090 l 299 1090 l 413 982 l 524 1090 l 664 1090 l 471 896 l 356 896 z "},"ĝ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 161 896 l 354 1090 l 469 1090 l 664 896 l 526 896 l 413 1004 l 301 896 l 161 896 z "},"ģ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 572 1222 l 461 896 l 288 896 l 468 1222 l 572 1222 z "},"ġ":{"ha":833,"x_min":122,"x_max":704,"o":"m 224 -250 l 224 -136 l 467 -136 q 552 -110 525 -136 q 579 -28 579 -83 l 579 69 l 582 208 l 557 208 l 581 229 q 525 97 581 146 q 376 49 469 49 q 190 126 258 49 q 122 333 122 203 l 122 494 q 190 701 122 625 q 376 778 258 778 q 525 729 469 778 q 581 597 581 681 l 557 618 l 581 618 l 581 764 l 704 764 l 704 -28 q 641 -190 704 -131 q 465 -250 578 -250 l 224 -250 m 414 157 q 536 206 492 157 q 581 340 581 254 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 340 q 291 204 247 251 q 414 157 335 157 m 413 901 q 340 925 367 901 q 314 989 314 949 q 340 1055 314 1031 q 413 1079 367 1079 q 485 1055 458 1079 q 511 989 511 1031 q 485 925 511 949 q 413 901 458 901 z "},"h":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 1014 l 253 1014 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 z "},"ħ":{"ha":833,"x_min":0,"x_max":708,"o":"m 0 792 l 0 896 l 128 896 l 128 1014 l 253 1014 l 253 896 l 486 896 l 486 792 l 253 792 l 253 681 l 253 535 l 254 535 q 317 653 264 611 q 457 694 369 694 q 640 624 572 694 q 708 431 708 553 l 708 0 l 583 0 l 583 417 q 540 544 583 499 q 421 589 496 589 q 298 540 343 589 q 253 403 253 492 l 253 0 l 128 0 l 128 792 l 0 792 z "},"ĥ":{"ha":833,"x_min":-43,"x_max":708,"o":"m 128 0 l 128 1014 l 253 1014 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 m -43 1118 l 150 1313 l 265 1313 l 460 1118 l 322 1118 l 208 1226 l 97 1118 l -43 1118 z "},"i":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ı":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 z "},"í":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 357 896 l 504 1090 l 639 1090 l 485 896 l 357 896 z "},"ĭ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 889 q 276 944 338 889 q 215 1090 215 1000 l 314 1090 q 347 1003 314 1036 q 436 969 381 969 q 527 1003 493 969 q 561 1090 561 1036 l 660 1090 q 599 944 660 1000 q 438 889 538 889 z "},"î":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 186 896 l 379 1090 l 494 1090 l 689 896 l 551 896 l 438 1004 l 326 896 l 186 896 z "},"ï":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 592 901 q 527 925 551 901 q 503 989 503 949 q 527 1055 503 1031 q 592 1079 551 1079 q 656 1055 632 1079 q 681 989 681 1031 q 656 925 681 949 q 592 901 632 901 m 283 901 q 219 925 243 901 q 194 989 194 949 q 219 1055 194 1031 q 283 1079 243 1079 q 348 1055 324 1079 q 372 989 372 1031 q 348 925 372 949 q 283 901 324 901 z "},"ị":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 m 438 -296 q 365 -272 392 -296 q 339 -208 339 -249 q 365 -142 339 -167 q 438 -118 392 -118 q 510 -142 483 -118 q 536 -208 536 -167 q 510 -272 536 -249 q 438 -296 483 -296 z "},"ì":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 392 896 l 232 1090 l 371 1090 l 524 896 l 392 896 z "},"ỉ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 383 896 l 453 983 q 472 1028 472 1010 q 428 1056 472 1056 l 317 1056 l 317 1146 l 463 1146 q 548 1119 515 1146 q 581 1043 581 1092 q 557 968 581 999 l 501 896 l 383 896 z "},"ī":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 215 931 l 215 1035 l 660 1035 l 660 931 l 215 931 z "},"į":{"ha":833,"x_min":118,"x_max":771,"o":"m 447 -282 q 324 -245 371 -282 q 278 -153 278 -208 q 304 -72 278 -112 q 396 14 331 -32 l 500 14 l 485 1 q 417 -69 438 -37 q 396 -129 396 -100 q 417 -179 396 -160 q 472 -199 438 -199 l 556 -199 l 556 -282 l 447 -282 m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ĩ":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 535 903 q 467 917 493 903 q 422 951 440 932 q 388 985 404 971 q 347 1000 371 1000 q 317 988 329 1000 q 306 951 306 976 l 306 910 l 215 910 l 215 951 q 250 1049 215 1014 q 340 1083 285 1083 q 408 1069 382 1083 q 453 1035 435 1054 q 488 1001 471 1015 q 528 986 504 986 q 558 998 547 986 q 569 1035 569 1010 l 569 1076 l 660 1076 l 660 1035 q 626 938 660 972 q 535 903 592 903 z "},"j":{"ha":833,"x_min":118,"x_max":633,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 535 901 q 463 925 489 901 q 436 989 436 949 q 463 1055 436 1031 q 535 1079 489 1079 q 607 1055 581 1079 q 633 989 633 1031 q 607 925 633 949 q 535 901 581 901 z "},"ȷ":{"ha":833,"x_min":118,"x_max":604,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 z "},"ĵ":{"ha":833,"x_min":118,"x_max":703,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 200 896 l 393 1090 l 508 1090 l 703 896 l 565 896 l 451 1004 l 340 896 l 200 896 z "},"k":{"ha":833,"x_min":132,"x_max":774,"o":"m 132 0 l 132 1014 l 257 1014 l 257 449 l 404 449 l 626 764 l 769 764 l 513 400 l 774 0 l 628 0 l 406 340 l 257 340 l 257 0 l 132 0 z "},"ķ":{"ha":833,"x_min":132,"x_max":774,"o":"m 132 0 l 132 1014 l 257 1014 l 257 449 l 404 449 l 626 764 l 769 764 l 513 400 l 774 0 l 628 0 l 406 340 l 257 340 l 257 0 l 132 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ĸ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"l":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 z "},"ĺ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 267 1125 l 414 1319 l 549 1319 l 394 1125 l 267 1125 z "},"ľ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 618 764 l 632 1014 l 750 1014 l 722 764 l 618 764 z "},"ļ":{"ha":833,"x_min":42,"x_max":764,"o":"m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 m 292 -333 l 424 -132 l 569 -132 l 424 -333 l 292 -333 z "},"ŀ":{"ha":833,"x_min":14,"x_max":875,"o":"m 493 0 q 376 26 426 0 q 299 101 326 53 q 271 215 271 150 l 271 900 l 14 900 l 14 1014 l 396 1014 l 396 215 q 422 141 396 168 q 493 114 449 114 l 736 114 l 736 0 l 493 0 z "},"ł":{"ha":833,"x_min":42,"x_max":764,"o":"m 139 319 l 139 431 l 653 778 l 653 667 l 139 319 m 521 0 q 404 26 454 0 q 326 101 354 53 q 299 215 299 150 l 299 900 l 42 900 l 42 1014 l 424 1014 l 424 215 q 450 141 424 168 q 521 114 476 114 l 764 114 l 764 0 l 521 0 z "},"m":{"ha":833,"x_min":92,"x_max":742,"o":"m 92 0 l 92 764 l 201 764 l 201 672 l 226 672 l 207 639 q 241 740 207 703 q 333 778 275 778 q 432 731 397 778 q 467 597 467 683 l 429 672 l 488 672 l 461 639 q 497 740 461 703 q 590 778 532 778 q 702 724 663 778 q 742 581 742 669 l 742 0 l 626 0 l 626 582 q 606 656 626 629 q 547 682 586 682 q 488 656 510 682 q 467 583 467 631 l 467 0 l 367 0 l 367 582 q 345 656 367 631 q 285 682 324 682 q 226 656 246 682 q 207 583 207 631 l 207 0 l 92 0 z "},"n":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 z "},"ń":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ŉ":{"ha":833,"x_min":0,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 0 896 l 132 1097 l 278 1097 l 132 896 l 0 896 z "},"ň":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 367 896 l 172 1090 l 310 1090 l 424 982 l 535 1090 l 675 1090 l 482 896 l 367 896 z "},"ņ":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"ŋ":{"ha":833,"x_min":131,"x_max":706,"o":"m 333 -250 l 333 -136 l 421 -136 q 538 -94 494 -136 q 581 21 581 -51 l 581 500 q 538 627 581 582 q 421 672 496 672 q 299 624 343 672 q 256 486 256 575 l 256 0 l 131 0 l 131 764 l 256 764 l 256 618 l 282 618 l 256 589 q 308 728 256 679 q 457 778 361 778 q 639 707 572 778 q 706 514 706 636 l 706 21 q 670 -122 706 -61 q 571 -217 635 -183 q 421 -250 507 -250 l 333 -250 z "},"ñ":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 0 l 583 0 l 583 500 q 540 626 583 582 q 421 669 496 669 q 298 622 343 669 q 253 486 253 575 l 253 0 l 128 0 m 521 903 q 453 917 479 903 q 408 951 426 932 q 374 985 390 971 q 333 1000 357 1000 q 303 988 315 1000 q 292 951 292 976 l 292 910 l 201 910 l 201 951 q 236 1049 201 1014 q 326 1083 271 1083 q 394 1069 368 1083 q 439 1035 421 1054 q 474 1001 457 1015 q 514 986 490 986 q 544 998 533 986 q 556 1035 556 1010 l 556 1076 l 646 1076 l 646 1035 q 612 938 646 972 q 521 903 578 903 z "},"o":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"ó":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŏ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"ô":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ố":{"ha":833,"x_min":118,"x_max":868,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 569 1056 l 729 1250 l 868 1250 l 701 1056 l 569 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ộ":{"ha":833,"x_min":118,"x_max":715,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ồ":{"ha":833,"x_min":118,"x_max":757,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 625 1056 l 444 1250 l 583 1250 l 757 1056 l 625 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ổ":{"ha":833,"x_min":118,"x_max":764,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 588 1056 l 650 1140 q 663 1174 663 1160 q 651 1199 663 1190 q 618 1208 639 1208 l 549 1208 l 549 1292 l 625 1292 q 726 1264 689 1292 q 764 1188 764 1236 q 758 1158 764 1172 q 740 1125 753 1143 l 692 1056 l 588 1056 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ỗ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 508 1128 q 440 1141 465 1128 q 397 1172 414 1154 q 365 1202 381 1189 q 326 1215 350 1215 q 296 1205 307 1215 q 285 1174 285 1194 l 285 1139 l 194 1139 l 194 1167 q 231 1256 194 1222 q 325 1289 267 1289 q 395 1276 369 1289 q 437 1245 421 1263 q 468 1215 453 1228 q 507 1201 483 1201 q 549 1243 549 1201 l 549 1278 l 639 1278 l 639 1250 q 603 1161 639 1194 q 508 1128 567 1128 m 167 896 l 358 1090 l 475 1090 l 668 896 l 528 896 l 417 1004 l 304 896 l 167 896 z "},"ö":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ọ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ò":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ỏ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ơ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"ớ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 322 896 l 469 1090 l 604 1090 l 450 896 l 322 896 z "},"ợ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 431 -296 q 358 -272 385 -296 q 332 -208 332 -249 q 358 -142 332 -167 q 431 -118 385 -118 q 503 -142 476 -118 q 529 -208 529 -167 q 503 -272 529 -249 q 431 -296 476 -296 z "},"ờ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 357 896 l 197 1090 l 336 1090 l 489 896 l 357 896 z "},"ở":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ỡ":{"ha":833,"x_min":118,"x_max":750,"o":"m 550 646 l 550 736 l 597 736 q 633 749 621 736 q 646 785 646 761 l 646 889 l 750 889 l 750 778 q 710 682 750 718 q 604 646 669 646 l 550 646 m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 500 903 q 432 917 458 903 q 388 951 406 932 q 353 985 369 971 q 313 1000 336 1000 q 283 988 294 1000 q 271 951 271 976 l 271 910 l 181 910 l 181 951 q 215 1049 181 1014 q 306 1083 250 1083 q 374 1069 347 1083 q 418 1035 400 1054 q 453 1001 436 1015 q 493 986 469 986 q 524 998 513 986 q 535 1035 535 1010 l 535 1076 l 625 1076 l 625 1035 q 591 938 625 972 q 500 903 557 903 z "},"ő":{"ha":833,"x_min":118,"x_max":733,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ō":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ǫ":{"ha":833,"x_min":122,"x_max":711,"o":"m 517 -282 q 394 -245 440 -282 q 347 -153 347 -208 q 365 -90 347 -122 q 429 -14 382 -57 q 426 -14 428 -14 q 422 -14 424 -14 q 417 -14 419 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 679 128 711 192 q 588 29 647 65 l 554 1 q 486 -69 507 -37 q 465 -129 465 -100 q 486 -179 465 -160 q 542 -199 507 -199 l 625 -199 l 625 -282 l 517 -282 m 417 97 q 542 143 499 97 q 586 278 586 189 l 586 486 q 542 621 586 575 q 417 667 499 667 q 292 621 336 667 q 247 486 247 575 l 247 278 q 292 143 247 189 q 417 97 336 97 z "},"ø":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -42 l 658 819 l 785 819 l 174 -42 l 49 -42 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 547 145 500 97 q 593 278 593 193 l 593 486 q 547 619 593 572 q 417 667 500 667 q 287 619 333 667 q 240 486 240 572 l 240 278 q 287 145 240 193 q 417 97 333 97 z "},"ǿ":{"ha":833,"x_min":49,"x_max":785,"o":"m 49 -42 l 658 819 l 785 819 l 174 -42 l 49 -42 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 q 574 743 508 778 q 676 643 640 708 q 711 488 711 578 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 547 145 500 97 q 593 278 593 193 l 593 486 q 547 619 593 572 q 417 667 500 667 q 287 619 333 667 q 240 486 240 572 l 240 278 q 287 145 240 193 q 417 97 333 97 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"õ":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"œ":{"ha":833,"x_min":49,"x_max":785,"o":"m 250 -14 q 103 47 157 -14 q 49 208 49 107 l 49 556 q 103 718 49 658 q 250 778 157 778 q 341 760 306 778 q 394 716 376 742 q 414 667 413 690 l 419 667 q 440 716 422 690 q 492 760 457 742 q 583 778 528 778 q 731 718 676 778 q 785 556 785 658 l 785 347 l 476 347 l 476 208 q 501 124 476 156 q 569 93 526 93 q 631 115 606 93 q 663 174 657 138 l 781 174 q 714 37 767 88 q 583 -14 661 -14 q 492 4 528 -14 q 440 48 457 22 q 419 97 422 74 l 414 97 q 394 48 413 74 q 341 4 376 22 q 250 -14 306 -14 m 264 93 q 332 124 307 93 q 357 208 357 156 l 357 556 q 332 640 357 608 q 264 671 307 671 q 193 640 219 671 q 167 556 167 608 l 167 208 q 193 124 167 156 q 264 93 219 93 m 476 449 l 667 449 l 667 556 q 640 640 667 608 q 569 671 614 671 q 501 640 526 671 q 476 556 476 608 l 476 449 z "},"p":{"ha":833,"x_min":128,"x_max":715,"o":"m 128 -250 l 128 764 l 253 764 l 253 618 l 278 618 l 253 589 q 310 727 253 676 q 463 778 368 778 q 647 702 578 778 q 715 494 715 626 l 715 271 q 684 119 715 183 q 597 21 653 56 q 463 -14 540 -14 q 311 38 369 -14 q 253 175 253 89 l 278 146 l 250 146 l 253 -28 l 253 -250 l 128 -250 m 421 94 q 545 142 500 94 q 590 278 590 189 l 590 486 q 545 622 590 575 q 421 669 500 669 q 299 621 344 669 q 253 486 253 572 l 253 278 q 299 143 253 192 q 421 94 344 94 z "},"þ":{"ha":833,"x_min":121,"x_max":708,"o":"m 121 -236 l 121 82 l 246 82 l 246 -236 l 121 -236 m 454 -14 q 303 37 360 -14 q 246 175 246 88 l 271 146 l 246 146 l 246 0 l 121 0 l 121 1014 l 246 1014 l 246 792 l 243 618 l 271 618 l 246 589 q 303 726 246 675 q 454 778 361 778 q 639 701 569 778 q 708 493 708 625 l 708 269 q 639 63 708 139 q 454 -14 569 -14 m 413 94 q 538 142 492 94 q 583 278 583 189 l 583 486 q 538 622 583 575 q 413 669 492 669 q 291 621 336 669 q 246 486 246 572 l 246 278 q 291 143 246 192 q 413 94 336 94 z "},"q":{"ha":833,"x_min":122,"x_max":706,"o":"m 581 -250 l 581 -28 l 583 146 l 556 146 l 581 175 q 524 38 581 89 q 372 -14 467 -14 q 190 63 257 -14 q 122 271 122 139 l 122 494 q 190 702 122 626 q 372 778 258 778 q 524 727 467 778 q 581 589 581 676 l 556 618 l 581 618 l 581 764 l 706 764 l 706 -250 l 581 -250 m 414 94 q 536 143 492 94 q 581 278 581 192 l 581 486 q 536 621 581 572 q 414 669 492 669 q 291 622 335 669 q 247 486 247 575 l 247 278 q 291 142 247 189 q 414 94 335 94 z "},"r":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 z "},"ŕ":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 364 896 l 511 1090 l 646 1090 l 492 896 l 364 896 z "},"ř":{"ha":833,"x_min":154,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 388 896 l 193 1090 l 331 1090 l 444 982 l 556 1090 l 696 1090 l 503 896 l 388 896 z "},"ŗ":{"ha":833,"x_min":35,"x_max":742,"o":"m 154 0 l 154 764 l 276 764 l 276 618 l 306 618 l 265 528 q 319 715 265 651 q 478 778 372 778 q 670 702 599 778 q 742 497 742 626 l 742 451 l 617 451 l 617 486 q 573 624 617 576 q 449 672 529 672 q 324 624 369 672 q 279 486 279 575 l 279 0 l 154 0 m 35 -333 l 167 -132 l 313 -132 l 167 -333 l 35 -333 z "},"s":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"ś":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 350 896 l 497 1090 l 632 1090 l 478 896 l 350 896 z "},"š":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 374 896 l 179 1090 l 317 1090 l 431 982 l 542 1090 l 682 1090 l 489 896 l 374 896 z "},"ş":{"ha":833,"x_min":125,"x_max":722,"o":"m 299 -282 l 299 -206 l 396 -206 q 445 -190 426 -206 q 464 -156 464 -174 q 426 -114 464 -132 q 318 -96 388 -96 l 367 36 l 446 36 l 417 -49 q 492 -67 453 -53 q 557 -106 531 -81 q 583 -167 583 -131 q 538 -248 583 -214 q 417 -282 492 -282 l 299 -282 m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"ŝ":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 179 896 l 372 1090 l 488 1090 l 682 896 l 544 896 l 431 1004 l 319 896 l 179 896 z "},"ș":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 m 249 -333 l 381 -132 l 526 -132 l 381 -333 l 249 -333 z "},"ß":{"ha":833,"x_min":128,"x_max":736,"o":"m 128 0 l 128 742 q 164 892 128 828 q 266 992 200 957 q 421 1028 332 1028 q 576 998 510 1028 q 680 910 643 968 q 717 769 717 853 q 687 646 717 700 q 602 561 657 592 q 472 532 547 531 l 472 553 q 612 522 553 554 q 703 431 671 490 q 736 289 736 371 q 699 139 736 204 q 594 37 661 74 q 438 0 528 0 l 346 0 l 346 114 l 424 114 q 556 163 507 114 q 604 293 604 213 q 556 419 604 374 q 424 465 508 465 l 363 465 l 363 574 l 421 574 q 542 622 499 574 q 586 744 586 671 q 542 869 586 825 q 421 914 497 914 q 299 868 344 914 q 253 742 253 822 l 253 0 l 128 0 z "},"ſ":{"ha":833,"x_min":229,"x_max":708,"o":"m 229 0 l 229 793 q 294 953 229 892 q 464 1014 358 1014 l 708 1014 l 708 903 l 464 903 q 385 872 415 903 q 354 792 354 842 l 354 0 l 229 0 z "},"t":{"ha":833,"x_min":76,"x_max":722,"o":"m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ŧ":{"ha":833,"x_min":76,"x_max":722,"o":"m 118 332 l 118 436 l 660 436 l 660 332 l 118 332 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ť":{"ha":833,"x_min":76,"x_max":767,"o":"m 517 861 l 642 1078 l 767 1078 l 628 861 l 517 861 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ţ":{"ha":833,"x_min":76,"x_max":722,"o":"m 368 -282 l 368 -206 l 465 -206 q 515 -190 496 -206 q 533 -156 533 -174 q 495 -114 533 -132 q 388 -96 457 -96 l 436 36 l 515 36 l 486 -49 q 561 -67 522 -53 q 626 -106 600 -81 q 653 -167 653 -131 q 607 -248 653 -214 q 486 -282 561 -282 l 368 -282 m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 z "},"ț":{"ha":833,"x_min":76,"x_max":722,"o":"m 500 0 q 347 53 401 0 q 292 201 292 106 l 292 650 l 76 650 l 76 764 l 292 764 l 292 979 l 417 979 l 417 764 l 722 764 l 722 650 l 417 650 l 417 201 q 500 114 417 114 l 708 114 l 708 0 l 500 0 m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"u":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"ú":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŭ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"û":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ü":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ụ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"ù":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ủ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ư":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 z "},"ứ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ự":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 415 -296 q 343 -272 369 -296 q 317 -208 317 -249 q 343 -142 317 -167 q 415 -118 369 -118 q 488 -142 461 -118 q 514 -208 514 -167 q 488 -272 514 -249 q 415 -296 461 -296 z "},"ừ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ử":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ữ":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 278 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 681 764 q 717 776 704 764 q 729 813 729 789 l 729 917 l 833 917 l 833 806 q 803 710 833 746 q 708 674 774 674 l 708 278 q 628 65 708 143 q 415 -14 547 -14 q 204 65 283 -14 q 125 278 125 143 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"ű":{"ha":833,"x_min":125,"x_max":733,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ū":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ų":{"ha":833,"x_min":125,"x_max":708,"o":"m 517 -282 q 394 -245 440 -282 q 347 -153 347 -208 q 365 -90 347 -122 q 429 -14 382 -57 q 426 -14 428 -14 q 422 -14 424 -14 q 417 -14 419 -14 q 203 64 281 -14 q 125 278 125 142 l 125 764 l 250 764 l 250 278 q 293 143 250 189 q 417 97 336 97 q 541 143 499 97 q 583 278 583 189 l 583 764 l 708 764 l 708 278 q 678 128 708 192 q 588 29 647 65 l 554 1 q 486 -69 507 -37 q 465 -129 465 -100 q 486 -179 465 -160 q 542 -199 507 -199 l 625 -199 l 625 -282 l 517 -282 z "},"ů":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"ũ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"v":{"ha":833,"x_min":76,"x_max":757,"o":"m 332 0 l 76 764 l 204 764 l 374 250 q 401 162 389 204 q 419 96 414 119 q 439 162 426 119 q 465 250 451 204 l 631 764 l 757 764 l 501 0 l 332 0 z "},"w":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 z "},"ẃ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŵ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ẅ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ẁ":{"ha":833,"x_min":49,"x_max":785,"o":"m 171 0 l 49 764 l 160 764 l 236 222 q 245 156 240 192 q 253 97 250 121 q 262 156 256 121 q 272 222 268 192 l 357 764 l 476 764 l 561 222 q 572 156 565 192 q 581 97 578 121 q 590 156 583 121 q 600 222 596 192 l 679 764 l 785 764 l 657 0 l 519 0 l 438 528 q 425 606 432 567 q 415 667 418 644 q 407 606 413 644 q 394 528 401 567 l 308 0 l 171 0 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"x":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 340 393 l 86 764 l 233 764 l 385 528 q 403 494 394 513 q 418 465 413 476 q 431 494 422 476 q 450 528 440 513 l 603 764 l 749 764 l 494 392 l 764 0 l 617 0 l 453 250 q 434 285 443 265 q 418 318 425 306 q 402 285 413 306 q 381 250 392 265 l 215 0 l 69 0 z "},"y":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ý":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ŷ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ÿ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ỵ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 639 -296 q 567 -272 593 -296 q 540 -208 540 -249 q 567 -142 540 -167 q 639 -118 593 -118 q 711 -142 685 -118 q 738 -208 738 -167 q 711 -272 738 -249 q 639 -296 685 -296 z "},"ỳ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 371 896 l 211 1090 l 350 1090 l 503 896 l 371 896 z "},"ỷ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"ȳ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"ỹ":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"z":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 z "},"ź":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ž":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"ż":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 125 l 553 650 l 136 650 l 136 764 l 693 764 l 693 639 l 257 114 l 708 114 l 708 0 l 125 0 m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"ª":{"ha":833,"x_min":243,"x_max":583,"o":"m 518 632 l 518 708 l 514 708 l 514 903 q 490 953 514 935 q 424 972 465 972 q 363 957 388 972 q 333 917 338 942 l 264 917 q 313 999 271 969 q 424 1028 356 1028 q 540 994 497 1028 q 583 903 583 961 l 583 632 l 518 632 m 381 625 q 281 658 318 625 q 243 744 243 690 q 282 831 243 799 q 389 863 321 863 l 529 863 l 529 807 l 389 807 q 333 790 353 807 q 313 744 313 774 q 336 696 313 714 q 399 678 360 678 q 483 703 453 678 q 514 771 514 728 l 529 771 l 529 708 l 514 708 q 465 647 500 669 q 381 625 429 625 z "},"º":{"ha":833,"x_min":257,"x_max":576,"o":"m 417 618 q 301 658 344 618 q 257 764 257 699 l 257 875 q 301 981 257 940 q 417 1021 344 1021 q 533 981 489 1021 q 576 875 576 940 l 576 764 q 533 658 576 699 q 417 618 489 618 m 417 674 q 482 699 457 674 q 507 764 507 724 l 507 875 q 482 940 507 915 q 417 965 457 965 q 351 940 376 965 q 326 875 326 915 l 326 764 q 351 699 326 724 q 417 674 376 674 z "},"А":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Б":{"ha":833,"x_min":131,"x_max":736,"o":"m 131 0 l 131 1014 l 694 1014 l 694 900 l 256 900 l 256 594 l 424 594 q 590 558 521 594 q 698 454 660 521 q 736 297 736 388 q 698 140 736 207 q 590 37 660 74 q 424 0 521 0 l 131 0 m 256 114 l 424 114 q 558 163 510 114 q 607 297 607 213 q 558 432 607 383 q 424 481 510 481 l 256 481 l 256 114 z "},"В":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"Г":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Ѓ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 m 343 1125 l 490 1319 l 625 1319 l 471 1125 l 343 1125 z "},"Ґ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 625 1014 l 625 1146 l 743 1146 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Д":{"ha":833,"x_min":35,"x_max":799,"o":"m 35 -194 l 35 107 l 97 107 q 129 182 113 135 q 158 289 146 229 q 172 414 171 349 l 182 1014 l 701 1014 l 701 107 l 799 107 l 799 -194 l 688 -194 l 688 0 l 146 0 l 146 -194 l 35 -194 m 228 107 l 576 107 l 576 903 l 301 903 l 294 414 q 271 225 293 307 q 228 107 249 143 z "},"Е":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ё":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m 599 1135 q 534 1158 558 1135 q 510 1222 510 1182 q 534 1288 510 1264 q 599 1313 558 1313 q 663 1288 639 1313 q 688 1222 688 1264 q 663 1158 688 1182 q 599 1135 639 1135 m 290 1135 q 226 1158 250 1135 q 201 1222 201 1182 q 226 1288 201 1264 q 290 1313 250 1313 q 355 1288 331 1313 q 379 1222 379 1264 q 355 1158 379 1182 q 290 1135 331 1135 z "},"Ж":{"ha":833,"x_min":17,"x_max":817,"o":"m 17 0 l 200 522 l 31 1014 l 161 1014 l 306 564 l 364 564 l 364 1014 l 469 1014 l 469 564 l 529 564 l 672 1014 l 803 1014 l 636 521 l 817 0 l 688 0 l 532 475 l 469 475 l 469 0 l 364 0 l 364 475 l 301 475 l 144 0 l 17 0 z "},"З":{"ha":833,"x_min":74,"x_max":739,"o":"m 403 -14 q 236 19 308 -14 q 122 114 164 53 q 74 257 79 175 l 199 257 q 263 140 207 183 q 403 97 318 97 q 552 147 497 97 q 607 278 607 197 q 551 409 607 360 q 403 458 496 458 l 278 458 l 278 572 l 401 572 q 538 625 486 572 q 589 754 589 678 q 538 874 589 832 q 401 917 488 917 q 265 869 317 917 q 214 743 214 821 l 89 743 q 128 893 89 829 q 237 992 167 957 q 401 1028 307 1028 q 633 961 547 1028 q 719 771 719 894 q 690 647 719 701 q 605 561 660 592 q 475 532 550 531 l 475 553 q 615 522 556 554 q 706 428 674 489 q 739 286 739 368 q 698 131 739 199 q 581 25 657 64 q 403 -14 506 -14 z "},"И":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 246 1014 l 246 444 q 244 338 246 394 q 239 231 242 282 q 233 146 236 181 l 542 1014 l 708 1014 l 708 0 l 588 0 l 588 569 q 590 677 588 621 q 595 784 592 733 q 601 868 599 835 l 292 0 l 125 0 z "},"Й":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 246 1014 l 246 444 q 244 338 246 394 q 239 231 242 282 q 233 146 236 181 l 542 1014 l 708 1014 l 708 0 l 588 0 l 588 569 q 590 677 588 621 q 595 784 592 733 q 601 868 599 835 l 292 0 l 125 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"К":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Ќ":{"ha":833,"x_min":128,"x_max":778,"o":"m 336 1125 l 483 1319 l 618 1319 l 464 1125 l 336 1125 m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Л":{"ha":833,"x_min":28,"x_max":703,"o":"m 28 -7 l 28 110 l 53 110 q 141 165 114 110 q 169 353 168 219 l 181 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 304 900 l 294 353 q 235 80 292 167 q 60 -7 179 -7 l 28 -7 z "},"М":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"Н":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"О":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"П":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 256 900 l 256 0 l 131 0 z "},"Р":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"С":{"ha":833,"x_min":122,"x_max":719,"o":"m 422 -14 q 263 21 331 -14 q 159 122 196 56 q 122 278 122 188 l 122 736 q 159 893 122 828 q 263 993 196 958 q 422 1028 331 1028 q 581 992 514 1028 q 683 892 647 957 q 719 736 719 826 l 594 736 q 549 869 594 822 q 422 915 504 915 q 294 869 340 915 q 247 738 247 824 l 247 278 q 294 145 247 192 q 422 99 340 99 q 549 145 504 99 q 594 278 594 192 l 719 278 q 683 123 719 189 q 581 22 647 57 q 422 -14 514 -14 z "},"Т":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"У":{"ha":833,"x_min":69,"x_max":764,"o":"m 265 0 l 368 263 l 69 1014 l 206 1014 l 388 518 q 417 428 406 471 q 431 365 428 386 q 443 428 433 386 q 468 518 453 471 l 628 1014 l 764 1014 l 399 0 l 265 0 z "},"Ў":{"ha":833,"x_min":69,"x_max":764,"o":"m 265 0 l 368 263 l 69 1014 l 206 1014 l 388 518 q 417 428 406 471 q 431 365 428 386 q 443 428 433 386 q 468 518 453 471 l 628 1014 l 764 1014 l 399 0 l 265 0 m 417 1118 q 256 1174 317 1118 q 194 1319 194 1229 l 293 1319 q 326 1232 293 1265 q 415 1199 360 1199 q 506 1232 472 1199 q 540 1319 540 1265 l 639 1319 q 578 1174 639 1229 q 417 1118 517 1118 z "},"Ф":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 -35 l 358 63 q 210 99 274 63 q 110 199 146 135 q 75 351 75 264 l 75 676 q 110 833 75 767 q 208 935 144 899 q 358 972 272 972 l 358 1069 l 475 1069 l 475 972 q 625 935 561 972 q 724 833 689 899 q 758 676 758 767 l 758 351 q 723 199 758 264 q 624 99 688 135 q 475 63 561 63 l 475 -35 l 358 -35 m 358 168 l 358 867 q 269 844 307 867 q 212 778 232 821 q 192 676 192 736 l 192 351 q 212 253 192 294 q 269 190 232 213 q 358 168 307 168 m 475 168 q 565 190 528 168 q 622 253 601 213 q 642 351 642 294 l 642 676 q 622 778 642 736 q 565 844 601 821 q 475 867 528 867 l 475 168 z "},"Х":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Ч":{"ha":833,"x_min":104,"x_max":701,"o":"m 576 0 l 576 390 q 509 381 558 386 q 389 376 460 376 q 181 456 258 376 q 104 668 104 535 l 104 1014 l 229 1014 l 229 668 q 278 537 229 586 q 410 488 328 488 q 519 492 476 488 q 576 501 563 497 l 576 1014 l 701 1014 l 701 0 l 576 0 z "},"Ц":{"ha":833,"x_min":131,"x_max":785,"o":"m 674 -194 l 674 0 l 131 0 l 131 1014 l 256 1014 l 256 111 l 556 111 l 556 1014 l 681 1014 l 681 111 l 785 111 l 785 -194 l 674 -194 z "},"Ш":{"ha":833,"x_min":89,"x_max":744,"o":"m 92 0 l 89 1014 l 206 1014 l 206 94 l 368 94 l 368 1014 l 468 1014 l 468 94 l 629 94 l 629 1014 l 744 1014 l 744 0 l 92 0 z "},"Щ":{"ha":833,"x_min":89,"x_max":799,"o":"m 688 -194 l 688 0 l 89 0 l 89 1014 l 201 1014 l 201 106 l 363 106 l 363 1014 l 460 1014 l 460 106 l 621 106 l 621 1014 l 733 1014 l 733 106 l 799 106 l 799 -194 l 688 -194 z "},"Џ":{"ha":833,"x_min":131,"x_max":703,"o":"m 354 -174 l 354 0 l 131 0 l 131 1014 l 256 1014 l 256 114 l 578 114 l 578 1014 l 703 1014 l 703 0 l 479 0 l 479 -174 l 354 -174 z "},"Ь":{"ha":833,"x_min":131,"x_max":764,"o":"m 131 0 l 131 1014 l 256 1014 l 256 597 l 458 597 q 619 560 550 597 q 726 456 688 522 q 764 299 764 389 q 726 142 764 210 q 619 38 688 75 q 458 0 550 0 l 131 0 m 256 114 l 451 114 q 584 165 533 114 q 635 299 635 215 q 584 433 635 382 q 451 483 533 483 l 256 483 l 256 114 z "},"Ъ":{"ha":833,"x_min":-7,"x_max":764,"o":"m 188 0 l 188 900 l -7 900 l -7 1014 l 313 1014 l 313 597 l 458 597 q 619 560 550 597 q 726 456 688 522 q 764 299 764 389 q 726 142 764 210 q 619 38 688 75 q 458 0 550 0 l 188 0 m 313 114 l 451 114 q 584 165 533 114 q 635 299 635 215 q 584 433 635 382 q 451 483 533 483 l 313 483 l 313 114 z "},"Ы":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 0 l 90 1014 l 207 1014 l 207 597 l 264 597 q 463 526 390 597 q 536 333 536 456 l 536 263 q 464 70 536 140 q 264 0 392 0 l 90 0 m 207 110 l 264 110 q 377 151 338 110 q 417 264 417 192 l 417 333 q 377 447 417 407 q 264 488 338 488 l 207 488 l 207 110 m 626 0 l 626 1014 l 743 1014 l 743 0 l 626 0 z "},"Љ":{"ha":833,"x_min":-7,"x_max":806,"o":"m -7 -7 l -7 104 l 18 104 q 74 149 54 104 q 96 269 94 193 l 103 1014 l 500 1014 l 500 597 l 583 597 q 744 538 683 597 q 806 382 806 479 l 806 215 q 744 59 806 118 q 583 0 683 0 l 389 0 l 389 910 l 213 910 l 206 269 q 153 67 204 142 q 14 -7 101 -7 l -7 -7 m 500 104 l 583 104 q 664 135 633 104 q 694 215 694 165 l 694 382 q 664 463 694 432 q 583 493 633 493 l 500 493 l 500 104 z "},"Њ":{"ha":833,"x_min":74,"x_max":806,"o":"m 74 0 l 74 1014 l 185 1014 l 185 597 l 389 597 l 389 1014 l 500 1014 l 500 597 l 583 597 q 746 539 686 597 q 806 382 806 481 l 806 215 q 746 58 806 117 q 583 0 686 0 l 389 0 l 389 493 l 185 493 l 185 0 l 74 0 m 500 104 l 583 104 q 665 134 636 104 q 694 215 694 164 l 694 382 q 665 464 694 435 q 583 493 636 493 l 500 493 l 500 104 z "},"Ѕ":{"ha":833,"x_min":100,"x_max":733,"o":"m 422 -14 q 251 19 322 -14 q 140 115 179 53 q 100 264 101 178 l 225 264 q 277 143 225 188 q 422 99 329 99 q 559 142 510 99 q 608 261 608 185 q 576 368 608 322 q 482 432 543 414 l 344 475 q 184 582 240 507 q 128 758 128 657 q 165 901 128 840 q 268 995 201 961 q 425 1029 335 1029 q 639 955 558 1029 q 721 757 719 881 l 596 757 q 551 874 596 832 q 424 917 506 917 q 298 878 343 917 q 253 769 253 839 q 286 661 253 707 q 382 596 319 615 l 521 551 q 678 443 622 519 q 733 264 733 367 q 694 118 733 181 q 585 21 656 56 q 422 -14 515 -14 z "},"Є":{"ha":833,"x_min":125,"x_max":717,"o":"m 422 -14 q 264 21 331 -14 q 161 122 197 56 q 125 278 125 188 l 125 736 q 161 893 125 828 q 264 993 197 958 q 422 1028 331 1028 q 580 992 514 1028 q 681 892 646 957 q 717 736 717 826 l 592 736 q 548 869 592 822 q 422 917 504 917 q 295 870 340 917 q 250 738 250 824 l 250 568 l 563 568 l 563 454 l 250 454 l 250 278 q 295 144 250 192 q 422 97 340 97 q 548 144 504 97 q 592 278 592 192 l 717 278 q 681 123 717 189 q 580 22 646 57 q 422 -14 514 -14 z "},"Э":{"ha":833,"x_min":117,"x_max":708,"o":"m 411 -14 q 254 22 321 -14 q 152 123 188 57 q 117 278 117 189 l 242 278 q 286 144 242 192 q 411 97 331 97 q 538 144 493 97 q 583 278 583 192 l 583 454 l 271 454 l 271 568 l 583 568 l 583 738 q 538 870 583 824 q 411 917 493 917 q 286 869 331 917 q 242 736 242 822 l 117 736 q 152 892 117 826 q 254 992 188 957 q 411 1028 321 1028 q 570 993 504 1028 q 672 893 636 958 q 708 736 708 828 l 708 278 q 672 122 708 188 q 570 21 636 56 q 411 -14 504 -14 z "},"І":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ї":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ј":{"ha":833,"x_min":63,"x_max":688,"o":"m 375 -14 q 146 68 229 -14 q 63 292 63 150 l 188 292 q 237 148 188 199 q 375 97 286 97 q 513 148 464 97 q 563 292 563 199 l 563 900 l 319 900 l 319 1014 l 688 1014 l 688 292 q 603 68 688 150 q 375 -14 519 -14 z "},"Ћ":{"ha":833,"x_min":0,"x_max":743,"o":"m 153 0 l 153 904 l 0 904 l 0 1014 l 444 1014 l 444 904 l 278 904 l 278 550 l 300 574 q 526 688 406 688 q 684 620 625 688 q 743 439 743 553 l 743 0 l 618 0 l 618 411 q 587 539 618 496 q 497 582 556 582 q 339 496 419 582 l 278 431 l 278 0 l 153 0 z "},"Ю":{"ha":833,"x_min":83,"x_max":778,"o":"m 540 -14 q 371 57 433 -14 q 308 250 308 128 l 308 465 l 199 465 l 199 0 l 83 0 l 83 1014 l 199 1014 l 199 576 l 308 576 l 308 764 q 370 958 308 888 q 540 1028 432 1028 q 715 957 651 1028 q 778 764 778 886 l 778 250 q 715 57 778 128 q 540 -14 651 -14 m 540 94 q 631 135 600 94 q 663 250 663 175 l 663 764 q 631 879 663 839 q 540 919 600 919 q 449 879 481 919 q 418 764 418 839 l 418 250 q 449 135 418 175 q 540 94 481 94 z "},"Я":{"ha":833,"x_min":78,"x_max":701,"o":"m 78 0 l 286 444 q 142 546 194 472 q 89 722 89 619 q 126 875 89 810 q 232 977 164 940 q 390 1014 300 1014 l 701 1014 l 701 0 l 576 0 l 576 431 l 415 431 l 222 0 l 78 0 m 390 542 l 576 542 l 576 903 l 390 903 q 266 853 314 903 q 218 722 218 804 q 265 592 218 642 q 390 542 313 542 z "},"Ђ":{"ha":833,"x_min":0,"x_max":743,"o":"m 361 -250 l 361 -136 l 458 -136 q 575 -94 532 -136 q 618 21 618 -51 l 618 411 q 587 539 618 496 q 497 582 556 582 q 339 496 419 582 l 278 431 l 278 0 l 153 0 l 153 904 l 0 904 l 0 1014 l 444 1014 l 444 904 l 278 904 l 278 550 l 300 574 q 526 688 406 688 q 684 620 625 688 q 743 439 743 553 l 743 21 q 708 -122 743 -61 q 608 -217 672 -183 q 458 -250 544 -250 l 361 -250 z "},"Ү":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ө":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 203 65 281 -14 q 125 279 125 143 l 125 736 q 203 950 125 872 q 417 1028 281 1028 q 631 950 553 1028 q 708 736 708 872 l 708 279 q 673 123 708 189 q 572 22 638 57 q 417 -14 507 -14 m 417 96 q 542 143 499 96 q 585 279 585 190 l 585 464 l 249 464 l 249 279 q 292 143 249 190 q 417 96 336 96 m 249 575 l 585 575 l 585 736 q 542 872 585 825 q 417 918 499 918 q 292 872 335 918 q 249 736 249 825 l 249 575 z "},"а":{"ha":833,"x_min":90,"x_max":708,"o":"m 350 -14 q 160 48 229 -14 q 90 215 90 110 q 160 383 90 322 q 347 444 229 444 l 583 444 l 583 521 q 541 630 583 592 q 421 668 499 668 q 307 640 353 668 q 254 563 261 611 l 129 563 q 222 719 142 661 q 424 778 303 778 q 632 710 556 778 q 708 525 708 642 l 708 0 l 586 0 l 586 146 l 565 146 l 586 167 q 522 35 586 83 q 350 -14 457 -14 m 381 85 q 526 129 469 85 q 583 243 583 174 l 583 351 l 350 351 q 251 317 288 351 q 215 222 215 282 q 259 122 215 158 q 381 85 303 85 z "},"б":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 203 66 282 -14 q 125 285 125 146 l 125 632 q 217 915 125 815 q 479 1014 308 1014 l 674 1014 l 674 889 l 479 889 q 308 823 367 889 q 250 632 250 757 l 250 542 l 269 542 l 250 514 q 306 642 251 596 q 453 688 360 688 q 641 610 574 688 q 708 396 708 532 l 708 285 q 674 125 708 192 q 574 22 639 58 q 417 -14 508 -14 m 417 97 q 540 146 497 97 q 583 285 583 194 l 583 396 q 540 535 583 486 q 417 583 497 583 q 293 535 336 583 q 250 396 250 488 l 250 285 q 293 146 250 194 q 417 97 336 97 z "},"в":{"ha":833,"x_min":131,"x_max":729,"o":"m 131 0 l 131 764 l 461 764 q 646 710 581 764 q 711 561 711 657 q 657 434 711 482 q 514 386 603 386 l 514 397 q 670 349 611 397 q 729 218 729 300 q 660 58 729 115 q 465 0 590 0 l 131 0 m 253 110 l 465 110 q 569 139 532 110 q 606 221 606 168 q 569 304 606 275 q 465 333 532 333 l 253 333 l 253 110 m 253 442 l 461 442 q 553 469 519 442 q 588 547 588 497 q 554 626 588 597 q 461 654 521 654 l 253 654 l 253 442 z "},"г":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 729 764 l 729 650 l 306 650 l 306 0 l 181 0 z "},"ѓ":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 729 764 l 729 650 l 306 650 l 306 0 l 181 0 m 378 896 l 525 1090 l 660 1090 l 506 896 l 378 896 z "},"ґ":{"ha":833,"x_min":181,"x_max":729,"o":"m 181 0 l 181 764 l 611 764 l 611 910 l 729 910 l 729 650 l 306 650 l 306 0 l 181 0 z "},"д":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 -194 l 42 107 l 104 107 q 153 200 128 131 q 181 376 179 269 l 189 764 l 688 764 l 688 107 l 785 107 l 785 -194 l 674 -194 l 674 0 l 153 0 l 153 -194 l 42 -194 m 236 107 l 563 107 l 563 653 l 307 653 l 301 374 q 278 196 300 264 q 236 107 256 128 z "},"е":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"ё":{"ha":833,"x_min":118,"x_max":715,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 m 417 -14 q 259 22 326 -14 q 155 124 192 58 q 118 278 118 190 l 118 486 q 155 640 118 575 q 259 742 192 706 q 417 778 326 778 q 574 742 507 778 q 678 640 642 706 q 715 486 715 575 l 715 351 l 240 351 l 240 278 q 286 140 240 188 q 417 92 332 92 q 533 117 489 92 q 588 194 578 143 l 713 194 q 619 42 700 99 q 417 -14 538 -14 m 593 435 l 593 486 q 548 625 593 576 q 417 674 503 674 q 286 625 332 674 q 240 486 240 576 l 240 446 l 603 446 l 593 435 z "},"ж":{"ha":833,"x_min":25,"x_max":808,"o":"m 25 0 l 192 392 l 36 764 l 157 764 l 290 431 l 364 431 l 364 764 l 469 764 l 469 431 l 540 431 l 678 764 l 797 764 l 642 396 l 808 0 l 683 0 l 544 347 l 469 347 l 469 0 l 364 0 l 364 347 l 289 347 l 149 0 l 25 0 z "},"з":{"ha":833,"x_min":90,"x_max":722,"o":"m 381 -10 q 183 42 260 -10 q 90 181 106 93 l 222 181 q 274 124 232 146 q 381 101 317 101 l 446 101 q 552 133 514 101 q 590 217 590 165 q 553 304 590 272 q 446 336 517 336 l 278 336 l 278 444 l 442 444 q 539 475 506 444 q 572 556 572 506 q 558 614 572 590 q 514 650 543 638 q 443 663 485 663 l 374 663 q 278 638 318 663 q 229 576 238 613 l 97 576 q 188 718 111 663 q 374 774 264 774 l 443 774 q 583 748 525 774 q 673 675 642 722 q 704 563 704 628 q 660 451 704 494 q 535 401 615 407 l 535 396 q 678 343 633 389 q 722 211 722 297 q 647 50 722 110 q 446 -10 572 -10 l 381 -10 z "},"и":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 z "},"й":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 z "},"к":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"ќ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"л":{"ha":833,"x_min":35,"x_max":703,"o":"m 35 -10 l 35 107 l 60 107 q 149 157 124 107 q 176 336 175 207 l 185 764 l 703 764 l 703 0 l 578 0 l 578 650 l 308 650 l 301 331 q 274 135 299 210 q 199 25 250 60 q 67 -10 149 -10 l 35 -10 z "},"м":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 764 l 275 764 l 375 471 q 403 383 390 426 q 421 315 415 339 q 438 383 426 339 q 464 472 450 426 l 558 764 l 728 764 l 728 0 l 607 0 l 607 118 q 608 254 607 181 q 612 403 610 328 q 617 545 614 478 q 621 664 619 613 l 485 229 l 353 229 l 215 661 q 220 506 218 599 q 224 311 222 413 q 226 118 226 210 l 226 0 l 106 0 z "},"н":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 256 764 l 256 446 l 578 446 l 578 764 l 703 764 l 703 0 l 578 0 l 578 332 l 256 332 l 256 0 l 131 0 z "},"о":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"п":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 764 l 703 764 l 703 0 l 578 0 l 578 650 l 256 650 l 256 0 l 131 0 z "},"р":{"ha":833,"x_min":128,"x_max":715,"o":"m 128 -250 l 128 764 l 253 764 l 253 618 l 278 618 l 253 589 q 310 727 253 676 q 463 778 368 778 q 647 702 578 778 q 715 494 715 626 l 715 271 q 684 119 715 183 q 597 21 653 56 q 463 -14 540 -14 q 311 38 369 -14 q 253 175 253 89 l 278 146 l 250 146 l 253 -28 l 253 -250 l 128 -250 m 421 94 q 545 142 500 94 q 590 278 590 189 l 590 486 q 545 622 590 575 q 421 669 500 669 q 299 621 344 669 q 253 486 253 572 l 253 278 q 299 143 253 192 q 421 94 344 94 z "},"с":{"ha":833,"x_min":115,"x_max":717,"o":"m 419 -14 q 259 21 328 -14 q 153 122 190 56 q 115 278 115 188 l 115 486 q 153 643 115 578 q 259 743 190 708 q 419 778 328 778 q 632 707 551 778 q 717 514 713 636 l 592 514 q 542 627 588 588 q 419 667 497 667 q 289 620 338 667 q 240 488 240 574 l 240 278 q 289 144 240 192 q 419 97 338 97 q 542 138 497 97 q 592 250 588 178 l 717 250 q 632 57 713 128 q 419 -14 551 -14 z "},"т":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 654 l 76 654 l 76 764 l 757 764 l 757 654 l 479 654 l 479 0 l 354 0 z "},"у":{"ha":833,"x_min":76,"x_max":757,"o":"m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ў":{"ha":833,"x_min":76,"x_max":757,"o":"m 422 889 q 261 944 322 889 q 200 1090 200 1000 l 299 1090 q 332 1003 299 1036 q 421 969 365 969 q 512 1003 478 969 q 546 1090 546 1036 l 644 1090 q 583 944 644 1000 q 422 889 522 889 m 247 -250 l 360 47 l 76 764 l 215 764 l 393 292 q 411 235 403 268 q 425 181 419 203 q 439 235 431 203 q 456 292 447 268 l 622 764 l 757 764 l 381 -250 l 247 -250 z "},"ф":{"ha":833,"x_min":75,"x_max":758,"o":"m 361 -250 l 361 0 q 151 75 228 0 q 75 281 75 150 l 75 486 q 152 690 75 615 q 361 764 229 764 l 361 1014 l 472 1014 l 472 764 q 682 690 606 764 q 758 486 758 615 l 758 281 q 682 75 758 150 q 472 0 606 0 l 472 -250 l 361 -250 m 364 99 l 364 665 q 238 618 283 665 q 192 486 192 571 l 192 281 q 238 147 192 196 q 364 99 283 99 m 469 99 q 597 147 551 99 q 642 281 642 196 l 642 486 q 597 618 642 571 q 469 665 551 665 l 469 99 z "},"х":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 340 393 l 86 764 l 233 764 l 385 528 q 403 494 394 513 q 418 465 413 476 q 431 494 422 476 q 450 528 440 513 l 603 764 l 749 764 l 494 392 l 764 0 l 617 0 l 453 250 q 434 285 443 265 q 418 318 425 306 q 402 285 413 306 q 381 250 392 265 l 215 0 l 69 0 z "},"ч":{"ha":833,"x_min":108,"x_max":694,"o":"m 569 0 l 569 278 q 502 267 547 272 q 407 263 457 263 q 187 331 265 261 q 108 528 108 401 l 108 764 l 233 764 l 233 528 q 281 416 233 457 q 414 375 329 375 q 513 380 472 375 q 569 389 554 385 l 569 764 l 694 764 l 694 0 l 569 0 z "},"ц":{"ha":833,"x_min":131,"x_max":785,"o":"m 674 -194 l 674 0 l 131 0 l 131 764 l 256 764 l 256 111 l 556 111 l 556 764 l 681 764 l 681 111 l 785 111 l 785 -194 l 674 -194 z "},"ш":{"ha":833,"x_min":89,"x_max":744,"o":"m 92 0 l 89 764 l 206 764 l 206 94 l 368 94 l 368 764 l 468 764 l 468 94 l 629 94 l 629 764 l 744 764 l 744 0 l 92 0 z "},"щ":{"ha":833,"x_min":89,"x_max":799,"o":"m 688 -194 l 688 0 l 89 0 l 89 764 l 201 764 l 201 106 l 363 106 l 363 764 l 460 764 l 460 106 l 621 106 l 621 764 l 733 764 l 733 106 l 799 106 l 799 -194 l 688 -194 z "},"џ":{"ha":833,"x_min":131,"x_max":703,"o":"m 354 -174 l 354 0 l 131 0 l 131 764 l 256 764 l 256 114 l 578 114 l 578 764 l 703 764 l 703 0 l 479 0 l 479 -174 l 354 -174 z "},"ь":{"ha":833,"x_min":136,"x_max":764,"o":"m 136 0 l 136 764 l 261 764 l 261 483 l 486 483 q 690 419 615 483 q 764 242 764 354 q 689 65 764 131 q 486 0 614 0 l 136 0 m 261 114 l 486 114 q 597 147 558 114 q 635 242 635 179 q 597 337 635 304 q 486 369 558 369 l 261 369 l 261 114 z "},"ъ":{"ha":833,"x_min":0,"x_max":764,"o":"m 194 0 l 194 653 l 0 653 l 0 764 l 319 764 l 319 483 l 486 483 q 690 419 615 483 q 764 242 764 354 q 689 65 764 131 q 486 0 614 0 l 194 0 m 319 114 l 486 114 q 597 147 558 114 q 635 242 635 179 q 597 337 635 304 q 486 369 558 369 l 319 369 l 319 114 z "},"ы":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 0 l 90 764 l 207 764 l 207 483 l 269 483 q 465 419 393 483 q 536 242 536 354 q 465 65 536 129 q 269 0 393 0 l 90 0 m 207 100 l 269 100 q 384 138 343 100 q 425 242 425 175 q 384 346 425 308 q 269 383 343 383 l 207 383 l 207 100 m 626 0 l 626 764 l 743 764 l 743 0 l 626 0 z "},"љ":{"ha":833,"x_min":7,"x_max":813,"o":"m 7 -7 l 7 111 l 32 111 q 88 154 67 111 q 110 269 108 197 l 115 764 l 507 764 l 507 486 l 590 486 q 751 427 690 486 q 813 272 813 368 l 813 214 q 751 59 813 118 q 590 0 690 0 l 396 0 l 396 657 l 225 657 l 221 269 q 169 68 219 143 q 28 -7 118 -7 l 7 -7 m 507 103 l 590 103 q 671 133 640 103 q 701 214 701 164 l 701 272 q 671 353 701 322 q 590 383 640 383 l 507 383 l 507 103 z "},"њ":{"ha":833,"x_min":89,"x_max":803,"o":"m 89 0 l 89 764 l 204 764 l 204 486 l 394 486 l 394 764 l 496 764 l 496 486 l 581 486 q 742 427 681 486 q 803 271 803 368 l 803 215 q 742 59 803 118 q 581 0 681 0 l 394 0 l 394 382 l 204 382 l 204 0 l 89 0 m 496 104 l 581 104 q 659 135 631 104 q 688 215 688 165 l 688 271 q 659 351 688 321 q 581 382 631 382 l 496 382 l 496 104 z "},"ѕ":{"ha":833,"x_min":125,"x_max":722,"o":"m 393 -11 q 258 13 315 -11 q 166 82 200 38 q 125 188 132 126 l 250 188 q 295 124 258 147 q 393 100 332 100 l 451 100 q 561 130 525 100 q 597 210 597 160 q 565 287 597 258 q 468 325 532 315 l 365 342 q 198 412 253 361 q 143 560 143 463 q 208 719 143 663 q 404 775 274 775 l 457 775 q 633 724 567 775 q 714 585 700 672 l 589 585 q 547 642 581 621 q 457 664 514 664 l 404 664 q 301 638 333 664 q 268 558 268 611 q 296 489 268 511 q 383 457 324 467 l 486 440 q 666 368 610 421 q 722 215 722 315 q 655 49 722 110 q 451 -11 588 -11 l 393 -11 z "},"є":{"ha":833,"x_min":125,"x_max":717,"o":"m 422 -14 q 264 21 331 -14 q 161 122 197 56 q 125 278 125 188 l 125 486 q 161 643 125 578 q 264 743 197 708 q 422 778 331 778 q 633 707 554 778 q 717 514 713 636 l 592 514 q 544 627 588 588 q 422 667 500 667 q 295 620 340 667 q 250 488 250 574 l 250 444 l 521 444 l 521 333 l 250 333 l 250 278 q 295 144 250 192 q 422 97 340 97 q 544 138 500 97 q 592 250 588 178 l 717 250 q 633 57 713 128 q 422 -14 554 -14 z "},"э":{"ha":833,"x_min":117,"x_max":708,"o":"m 411 -14 q 200 57 279 -14 q 117 250 121 128 l 242 250 q 290 138 246 178 q 411 97 335 97 q 538 144 493 97 q 583 278 583 192 l 583 333 l 313 333 l 313 444 l 583 444 l 583 488 q 538 620 583 574 q 411 667 493 667 q 290 627 335 667 q 242 514 246 588 l 117 514 q 200 707 121 636 q 411 778 279 778 q 570 743 504 778 q 672 643 636 708 q 708 486 708 578 l 708 278 q 672 122 708 188 q 570 21 636 56 q 411 -14 504 -14 z "},"і":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 438 901 q 365 925 392 901 q 339 989 339 949 q 365 1055 339 1031 q 438 1079 392 1079 q 510 1055 483 1079 q 536 989 536 1031 q 510 925 536 949 q 438 901 483 901 z "},"ї":{"ha":833,"x_min":118,"x_max":771,"o":"m 118 0 l 118 114 l 389 114 l 389 650 l 153 650 l 153 764 l 514 764 l 514 114 l 771 114 l 771 0 l 118 0 m 592 901 q 527 925 551 901 q 503 989 503 949 q 527 1055 503 1031 q 592 1079 551 1079 q 656 1055 632 1079 q 681 989 681 1031 q 656 925 681 949 q 592 901 632 901 m 283 901 q 219 925 243 901 q 194 989 194 949 q 219 1055 194 1031 q 283 1079 243 1079 q 348 1055 324 1079 q 372 989 372 1031 q 348 925 372 949 q 283 901 324 901 z "},"ј":{"ha":833,"x_min":118,"x_max":633,"o":"m 118 -250 l 118 -135 l 297 -135 q 431 -88 383 -135 q 479 43 479 -42 l 479 650 l 160 650 l 160 764 l 604 764 l 604 43 q 521 -171 604 -92 q 297 -250 438 -250 l 118 -250 m 535 901 q 463 925 489 901 q 436 989 436 949 q 463 1055 436 1031 q 535 1079 489 1079 q 607 1055 581 1079 q 633 989 633 1031 q 607 925 633 949 q 535 901 581 901 z "},"ћ":{"ha":833,"x_min":0,"x_max":708,"o":"m 0 792 l 0 896 l 128 896 l 128 1014 l 253 1014 l 253 896 l 486 896 l 486 792 l 253 792 l 253 681 l 253 535 l 254 535 q 317 653 264 611 q 457 694 369 694 q 640 624 572 694 q 708 431 708 553 l 708 0 l 583 0 l 583 417 q 540 544 583 499 q 421 589 496 589 q 298 540 343 589 q 253 403 253 492 l 253 0 l 128 0 l 128 792 l 0 792 z "},"ю":{"ha":833,"x_min":86,"x_max":764,"o":"m 536 -14 q 382 51 440 -14 q 324 222 324 117 l 324 338 l 201 338 l 201 0 l 86 0 l 86 764 l 201 764 l 201 438 l 324 438 l 324 542 q 381 713 324 649 q 536 778 439 778 q 701 713 639 778 q 764 542 764 649 l 764 222 q 701 51 764 117 q 536 -14 639 -14 m 536 83 q 619 120 589 83 q 649 222 649 157 l 649 542 q 619 644 649 607 q 536 681 589 681 q 456 644 485 681 q 426 542 426 607 l 426 222 q 456 120 426 157 q 536 83 485 83 z "},"я":{"ha":833,"x_min":83,"x_max":703,"o":"m 83 0 l 279 294 q 144 375 192 315 q 96 524 96 435 q 170 700 96 636 q 374 764 244 764 l 703 764 l 703 0 l 578 0 l 578 285 l 410 285 l 229 0 l 83 0 m 374 396 l 578 396 l 578 653 l 374 653 q 264 619 304 653 q 224 524 224 585 q 264 430 224 464 q 374 396 304 396 z "},"ђ":{"ha":833,"x_min":0,"x_max":706,"o":"m 347 -250 l 347 -135 l 399 -135 q 533 -88 485 -135 q 581 43 581 -42 l 581 417 q 538 544 581 499 q 421 589 496 589 q 299 540 343 589 q 256 403 256 492 l 256 0 l 131 0 l 131 792 l 0 792 l 0 896 l 131 896 l 131 1014 l 256 1014 l 256 896 l 486 896 l 486 792 l 256 792 l 256 681 l 256 535 l 282 535 l 256 506 q 308 645 256 596 q 457 694 361 694 q 639 624 572 694 q 706 431 706 553 l 706 43 q 622 -171 706 -92 q 399 -250 539 -250 l 347 -250 z "},"ү":{"ha":833,"x_min":83,"x_max":750,"o":"m 354 -250 l 354 0 l 83 764 l 211 764 l 378 257 q 397 195 389 224 q 410 145 404 167 q 417 111 415 124 q 419 99 419 99 q 422 111 419 99 q 430 145 425 124 q 443 195 435 167 q 461 257 451 224 l 624 764 l 750 764 l 479 0 l 479 -250 l 354 -250 z "},"ө":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 262 22 328 -14 q 160 123 196 57 q 125 279 125 189 l 125 486 q 160 642 125 576 q 262 742 196 707 q 417 778 328 778 q 571 742 506 778 q 672 641 636 706 q 708 488 708 576 l 708 279 q 672 124 708 190 q 571 22 636 58 q 417 -14 506 -14 m 417 96 q 542 143 499 96 q 586 279 586 190 l 586 333 l 247 333 l 247 279 q 292 143 247 190 q 417 96 336 96 m 247 438 l 586 438 l 586 486 q 542 621 586 574 q 417 668 499 668 q 292 621 336 668 q 247 486 247 574 l 247 438 z "},"Α":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 z "},"Β":{"ha":833,"x_min":129,"x_max":736,"o":"m 129 0 l 129 1014 l 417 1014 q 634 944 556 1014 q 713 751 713 875 q 683 631 713 682 q 601 551 654 579 q 472 525 547 524 l 472 546 q 612 515 553 547 q 703 424 671 483 q 736 282 736 364 q 700 132 736 196 q 597 34 664 68 q 438 0 531 0 l 129 0 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"Γ":{"ha":833,"x_min":153,"x_max":743,"o":"m 153 0 l 153 1014 l 743 1014 l 743 900 l 278 900 l 278 0 l 153 0 z "},"Δ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 467 688 q 436 823 449 760 q 417 917 424 886 q 398 824 411 886 q 367 689 385 761 l 197 0 l 69 0 m 151 0 l 151 111 l 693 111 l 693 0 l 151 0 z "},"Ε":{"ha":833,"x_min":139,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 z "},"Ζ":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 125 l 575 900 l 125 900 l 125 1014 l 701 1014 l 701 889 l 244 114 l 715 114 l 715 0 l 118 0 z "},"Η":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Θ":{"ha":833,"x_min":122,"x_max":711,"o":"m 285 467 l 285 581 l 549 581 l 549 467 l 285 467 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ι":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Κ":{"ha":833,"x_min":128,"x_max":778,"o":"m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"Λ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 467 688 q 440 806 451 754 q 422 887 428 857 q 417 917 417 917 q 411 887 417 917 q 394 806 406 857 q 367 689 383 754 l 197 0 l 69 0 z "},"Μ":{"ha":833,"x_min":106,"x_max":728,"o":"m 106 0 l 106 1014 l 269 1014 l 375 686 q 403 598 390 642 q 421 531 415 554 q 439 598 428 554 q 464 688 450 642 l 564 1014 l 728 1014 l 728 0 l 606 0 l 606 368 q 610 507 606 429 q 621 666 614 585 q 635 822 628 747 q 649 951 643 896 l 485 444 l 353 444 l 188 951 q 201 826 194 897 q 214 674 208 754 q 224 515 219 594 q 228 368 228 436 l 228 0 l 106 0 z "},"Ν":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 292 1014 l 601 146 q 595 231 599 181 q 590 338 592 282 q 588 444 588 394 l 588 1014 l 708 1014 l 708 0 l 542 0 l 233 868 q 239 784 236 835 q 244 677 242 733 q 246 569 246 621 l 246 0 l 125 0 z "},"Ξ":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 900 l 111 1014 l 722 1014 l 722 900 l 111 900 m 111 0 l 111 114 l 722 114 l 722 0 l 111 0 m 153 457 l 153 571 l 681 571 l 681 457 l 153 457 z "},"Ο":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Π":{"ha":833,"x_min":131,"x_max":703,"o":"m 131 0 l 131 1014 l 703 1014 l 703 0 l 578 0 l 578 900 l 256 900 l 256 0 l 131 0 z "},"Ρ":{"ha":833,"x_min":128,"x_max":764,"o":"m 128 0 l 128 1014 l 454 1014 q 618 977 549 1014 q 726 874 688 940 q 764 715 764 807 q 726 558 764 625 q 618 453 688 490 q 454 417 549 417 l 253 417 l 253 0 l 128 0 m 253 529 l 454 529 q 585 580 536 529 q 635 715 635 631 q 585 851 635 801 q 454 901 536 901 l 253 901 l 253 529 z "},"Σ":{"ha":833,"x_min":76,"x_max":750,"o":"m 76 0 l 76 114 l 518 508 l 76 900 l 76 1014 l 750 1014 l 750 903 l 329 903 l 229 907 l 610 574 l 610 447 l 219 107 l 319 111 l 750 111 l 750 0 l 76 0 z "},"Τ":{"ha":833,"x_min":76,"x_max":757,"o":"m 354 0 l 354 901 l 76 901 l 76 1015 l 757 1015 l 757 901 l 479 901 l 479 0 l 354 0 z "},"Υ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Φ":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 -35 l 358 63 q 210 99 274 63 q 110 199 146 135 q 75 351 75 264 l 75 676 q 110 833 75 767 q 208 935 144 899 q 358 972 272 972 l 358 1069 l 475 1069 l 475 972 q 625 935 561 972 q 724 833 689 899 q 758 676 758 767 l 758 351 q 723 199 758 264 q 624 99 688 135 q 475 63 561 63 l 475 -35 l 358 -35 m 358 168 l 358 867 q 269 844 307 867 q 212 778 232 821 q 192 676 192 736 l 192 351 q 212 253 192 294 q 269 190 232 213 q 358 168 307 168 m 475 168 q 565 190 528 168 q 622 253 601 213 q 642 351 642 294 l 642 676 q 622 778 642 736 q 565 844 601 821 q 475 867 528 867 l 475 168 z "},"Χ":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 0 l 347 514 l 71 1014 l 215 1014 l 372 714 q 398 663 385 690 q 419 621 411 636 q 440 663 426 636 q 465 714 453 690 l 625 1014 l 763 1014 l 486 522 l 778 0 l 635 0 l 461 322 q 435 373 449 346 q 415 417 422 400 q 395 374 408 400 q 369 324 382 347 l 194 0 l 56 0 z "},"Ψ":{"ha":833,"x_min":75,"x_max":758,"o":"m 358 0 l 358 236 q 210 272 274 236 q 110 373 146 308 q 75 525 75 438 l 75 1014 l 192 1014 l 192 525 q 212 427 192 468 q 269 364 232 386 q 358 342 307 342 l 358 1014 l 475 1014 l 475 342 q 565 364 528 342 q 622 427 601 386 q 642 525 642 468 l 642 1014 l 758 1014 l 758 525 q 723 373 758 438 q 624 272 688 308 q 475 236 561 236 l 475 0 l 358 0 z "},"Ω":{"ha":833,"x_min":69,"x_max":765,"o":"m 69 0 l 69 111 l 271 111 l 271 118 q 200 147 238 122 q 137 219 163 171 q 111 340 111 267 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 340 q 697 219 722 267 q 634 148 671 172 q 563 119 597 124 l 563 111 l 765 111 l 765 0 l 472 0 l 472 153 q 563 203 528 153 q 597 333 597 254 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 333 q 271 203 236 254 q 361 153 306 153 l 361 0 l 69 0 z "},"Ά":{"ha":833,"x_min":14,"x_max":764,"o":"m 69 0 l 333 1014 l 501 1014 l 764 0 l 638 0 l 571 269 l 264 269 l 197 0 l 69 0 m 289 375 l 544 375 l 467 688 q 432 836 444 776 q 417 914 419 896 q 401 836 414 896 q 367 689 389 776 l 289 375 m 14 792 l 92 1014 l 222 1014 l 133 792 l 14 792 z "},"Έ":{"ha":833,"x_min":-160,"x_max":722,"o":"m 139 0 l 139 1014 l 722 1014 l 722 900 l 263 900 l 263 586 l 674 586 l 674 474 l 263 474 l 263 114 l 722 114 l 722 0 l 139 0 m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 z "},"Ή":{"ha":833,"x_min":-160,"x_max":704,"o":"m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 m 129 0 l 129 1014 l 254 1014 l 254 581 l 579 581 l 579 1014 l 704 1014 l 704 0 l 579 0 l 579 467 l 254 467 l 254 0 l 129 0 z "},"Ί":{"ha":833,"x_min":-160,"x_max":688,"o":"m -160 792 l -82 1014 l 49 1014 l -40 792 l -160 792 m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 z "},"Ό":{"ha":833,"x_min":-111,"x_max":711,"o":"m -111 792 l -33 1014 l 97 1014 l 8 792 l -111 792 m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 736 q 158 893 122 828 q 259 993 193 958 q 417 1028 325 1028 q 574 993 508 1028 q 676 893 640 958 q 711 738 711 828 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 99 q 542 145 499 99 q 586 278 586 192 l 586 736 q 542 869 586 822 q 417 915 499 915 q 292 869 336 915 q 247 736 247 822 l 247 278 q 292 145 247 192 q 417 99 336 99 z "},"Ύ":{"ha":833,"x_min":-174,"x_max":785,"o":"m -174 792 l -96 1014 l 35 1014 l -54 792 l -174 792 m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"Ώ":{"ha":833,"x_min":-111,"x_max":765,"o":"m 69 0 l 69 111 l 271 111 l 271 118 q 200 147 238 122 q 137 219 163 171 q 111 340 111 267 l 111 729 q 149 888 111 821 q 255 991 186 954 q 417 1028 324 1028 q 579 991 511 1028 q 685 888 647 954 q 722 729 722 821 l 722 340 q 697 219 722 267 q 634 148 671 172 q 563 119 597 124 l 563 111 l 765 111 l 765 0 l 472 0 l 472 153 q 563 203 528 153 q 597 333 597 254 l 597 729 q 548 866 597 815 q 417 917 499 917 q 285 866 335 917 q 236 729 236 815 l 236 333 q 271 203 236 254 q 361 153 306 153 l 361 0 l 69 0 m -111 792 l -33 1014 l 97 1014 l 8 792 l -111 792 z "},"Ϊ":{"ha":833,"x_min":146,"x_max":688,"o":"m 146 0 l 146 114 l 353 114 l 353 900 l 146 900 l 146 1014 l 688 1014 l 688 900 l 481 900 l 481 114 l 688 114 l 688 0 l 146 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ϋ":{"ha":833,"x_min":49,"x_max":785,"o":"m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 m 571 1135 q 506 1158 531 1135 q 482 1222 482 1182 q 506 1288 482 1264 q 571 1313 531 1313 q 635 1288 611 1313 q 660 1222 660 1264 q 635 1158 660 1182 q 571 1135 611 1135 m 263 1135 q 198 1158 222 1135 q 174 1222 174 1182 q 198 1288 174 1264 q 263 1313 222 1313 q 327 1288 303 1313 q 351 1222 351 1264 q 327 1158 351 1182 q 263 1135 303 1135 z "},"Ϗ":{"ha":833,"x_min":128,"x_max":806,"o":"m 506 -250 l 506 -140 l 546 -140 q 647 -102 608 -140 q 686 0 686 -64 l 686 99 l 806 99 l 806 0 q 740 -186 806 -122 q 546 -250 674 -250 l 506 -250 m 128 0 l 128 1014 l 253 1014 l 253 579 l 403 579 l 628 1014 l 764 1014 l 513 526 l 778 0 l 635 0 l 399 469 l 253 469 l 253 0 l 128 0 z "},"α":{"ha":833,"x_min":125,"x_max":703,"o":"m 372 -14 q 191 63 257 -14 q 125 271 125 139 l 125 494 q 192 702 125 626 q 372 778 258 778 q 522 727 467 778 q 578 589 578 676 l 553 618 l 578 618 l 578 764 l 703 764 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 38 578 89 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 486 q 535 621 578 572 q 414 669 492 669 q 292 622 335 669 q 250 486 250 575 l 250 278 q 292 142 250 189 q 414 94 335 94 z "},"β":{"ha":833,"x_min":128,"x_max":736,"o":"m 128 -250 l 128 742 q 164 892 128 828 q 266 992 200 957 q 421 1028 332 1028 q 576 998 510 1028 q 680 910 643 968 q 717 769 717 853 q 674 625 717 685 q 554 543 631 565 q 688 455 639 521 q 736 289 736 389 q 699 139 736 204 q 594 37 661 74 q 438 0 528 0 l 253 0 l 253 -250 l 128 -250 m 253 114 l 424 114 q 556 163 507 114 q 604 293 604 213 q 556 419 604 374 q 424 465 508 465 l 363 465 l 363 574 l 421 574 q 542 622 499 574 q 586 744 586 671 q 542 869 586 825 q 421 914 497 914 q 299 868 344 914 q 253 742 253 822 l 253 114 z "},"γ":{"ha":833,"x_min":83,"x_max":750,"o":"m 354 -250 l 354 0 l 83 764 l 211 764 l 378 257 q 397 195 389 224 q 410 145 404 167 q 417 111 415 124 q 419 99 419 99 q 422 111 419 99 q 430 145 425 124 q 443 195 435 167 q 461 257 451 224 l 624 764 l 750 764 l 479 0 l 479 -250 l 354 -250 z "},"δ":{"ha":833,"x_min":97,"x_max":733,"o":"m 97 301 q 133 457 97 389 q 230 564 168 525 q 371 603 292 603 q 433 595 404 603 q 472 575 461 588 l 478 579 l 150 894 l 150 1014 l 667 1014 l 667 910 l 275 910 l 588 613 q 651 540 618 585 q 709 433 685 494 q 733 299 733 372 q 692 138 733 208 q 580 26 651 67 q 415 -14 508 -14 q 250 26 322 -14 q 138 138 178 67 q 97 301 97 208 m 225 306 q 249 197 225 244 q 317 124 274 150 q 415 97 360 97 q 515 124 472 97 q 583 197 558 150 q 608 306 608 244 q 583 414 608 367 q 515 488 558 461 q 415 514 472 514 q 317 488 360 514 q 249 414 274 461 q 225 306 225 367 z "},"ε":{"ha":833,"x_min":111,"x_max":743,"o":"m 453 -10 l 388 -10 q 186 50 261 -10 q 111 211 111 110 q 156 343 111 297 q 299 396 201 389 l 299 401 q 174 451 218 407 q 129 563 129 494 q 160 675 129 628 q 250 748 192 722 q 390 774 308 774 l 460 774 q 647 718 571 774 q 736 576 722 663 l 604 576 q 556 638 596 613 q 460 663 517 663 l 390 663 q 320 650 349 663 q 276 614 292 638 q 261 556 261 590 q 294 475 261 506 q 392 444 328 444 l 556 444 l 556 336 l 388 336 q 280 304 317 336 q 243 217 243 272 q 281 133 243 165 q 388 101 319 101 l 453 101 q 560 124 518 101 q 611 181 601 146 l 743 181 q 651 42 729 93 q 453 -10 574 -10 z "},"ζ":{"ha":833,"x_min":94,"x_max":751,"o":"m 94 253 q 108 346 94 300 q 154 443 122 392 q 240 559 186 494 q 376 707 294 624 q 572 900 458 790 l 125 900 l 125 1014 l 701 1014 l 701 889 l 467 647 q 350 521 397 576 q 274 419 303 465 q 232 333 244 372 q 219 253 219 293 q 258 149 219 188 q 361 111 296 111 l 551 111 q 703 71 654 111 q 743 -67 751 31 l 726 -250 l 601 -250 l 618 -67 q 551 0 625 0 l 360 0 q 164 67 233 0 q 94 253 94 133 z "},"η":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 -250 l 583 -250 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 z "},"θ":{"ha":833,"x_min":122,"x_max":711,"o":"m 417 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 l 122 722 q 158 879 122 814 q 259 979 193 944 q 417 1014 325 1014 q 574 979 508 1014 q 676 879 640 944 q 711 724 711 814 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 m 417 97 q 542 143 499 97 q 586 278 586 189 l 586 722 q 542 857 586 811 q 417 903 499 903 q 292 857 336 903 q 247 722 247 811 l 247 278 q 292 143 247 189 q 417 97 336 97 m 228 556 l 601 556 l 601 447 l 228 447 l 228 556 z "},"ι":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 z "},"κ":{"ha":833,"x_min":135,"x_max":760,"o":"m 135 0 l 135 764 l 260 764 l 260 449 l 390 449 l 613 764 l 756 764 l 499 400 l 760 0 l 614 0 l 392 340 l 260 340 l 260 0 l 135 0 z "},"λ":{"ha":833,"x_min":69,"x_max":764,"o":"m 69 0 l 368 751 l 265 1014 l 399 1014 l 764 0 l 628 0 l 467 496 q 441 586 451 544 q 428 649 431 628 q 415 586 425 628 q 386 496 404 544 l 206 0 l 69 0 z "},"μ":{"ha":833,"x_min":129,"x_max":704,"o":"m 129 -250 l 129 764 l 254 764 l 254 269 q 297 142 254 188 q 415 96 339 96 q 536 142 493 96 q 579 269 579 188 l 579 764 l 704 764 l 704 269 q 631 63 704 139 q 429 -14 557 -14 q 321 3 365 -14 q 251 46 276 21 q 219 93 226 71 l 214 93 q 221 74 215 93 q 231 30 226 56 q 238 -18 236 4 l 253 -250 l 129 -250 z "},"ν":{"ha":833,"x_min":76,"x_max":757,"o":"m 332 0 l 76 764 l 204 764 l 374 250 q 401 162 389 204 q 419 96 414 119 q 439 162 426 119 q 465 250 451 204 l 631 764 l 757 764 l 501 0 l 332 0 z "},"ξ":{"ha":833,"x_min":92,"x_max":751,"o":"m 92 288 q 140 451 92 386 q 279 543 188 517 q 155 627 199 567 q 111 774 111 688 q 197 962 111 893 q 426 1031 282 1031 q 595 996 525 1031 q 703 897 665 961 q 742 746 742 833 l 617 746 q 565 872 617 824 q 429 919 514 919 q 293 877 344 919 q 242 757 242 835 q 293 628 242 681 q 429 575 344 575 l 553 575 l 553 461 l 429 461 q 277 416 331 461 q 224 288 224 371 q 277 159 224 204 q 429 114 331 114 l 551 114 q 703 74 654 114 q 743 -64 751 33 l 726 -247 l 601 -247 l 618 -64 q 551 3 625 3 l 429 3 q 178 80 265 3 q 92 288 92 157 z "},"ο":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 z "},"π":{"ha":833,"x_min":35,"x_max":771,"o":"m 744 -7 q 576 60 639 -7 q 513 236 513 126 l 513 653 l 271 653 l 271 0 l 146 0 l 146 654 l 35 654 l 35 764 l 769 764 l 769 658 l 638 658 l 638 228 q 663 140 638 171 q 738 110 689 110 l 771 110 l 771 -7 l 744 -7 z "},"ρ":{"ha":833,"x_min":131,"x_max":708,"o":"m 131 -250 l 131 494 q 166 646 131 582 q 267 744 201 710 q 421 778 332 778 q 575 744 511 778 q 674 647 639 710 q 708 494 708 583 l 708 271 q 678 119 708 183 q 594 21 649 56 q 461 -14 539 -14 q 312 38 368 -14 q 256 175 256 89 l 281 146 l 253 146 l 256 -28 l 256 -250 l 131 -250 m 419 94 q 541 142 499 94 q 583 278 583 189 l 583 486 q 541 622 583 575 q 419 669 499 669 q 298 622 340 669 q 256 486 256 575 l 256 278 q 299 143 256 192 q 419 94 343 94 z "},"ς":{"ha":833,"x_min":122,"x_max":754,"o":"m 122 286 l 122 486 q 159 643 122 578 q 263 743 196 708 q 422 778 331 778 q 578 746 511 778 q 682 655 644 714 q 719 514 719 596 l 594 514 q 547 627 594 588 q 422 667 500 667 q 294 620 340 667 q 247 488 247 574 l 247 288 q 294 156 247 200 q 422 111 340 111 l 554 111 q 706 71 657 111 q 746 -67 754 31 l 729 -250 l 604 -250 l 621 -67 q 554 0 628 0 l 422 0 q 203 75 283 0 q 122 286 122 150 z "},"σ":{"ha":833,"x_min":122,"x_max":736,"o":"m 122 278 l 122 486 q 158 643 122 578 q 259 743 193 708 q 417 778 325 778 l 736 778 l 736 667 l 576 667 l 576 642 l 547 669 q 602 656 574 669 q 656 617 631 642 q 696 560 681 593 q 711 488 711 526 l 711 278 q 676 122 711 188 q 574 21 640 56 q 417 -14 508 -14 q 259 21 325 -14 q 158 122 193 56 q 122 278 122 188 m 247 278 q 292 143 247 189 q 417 97 336 97 q 542 143 499 97 q 586 278 586 189 l 586 486 q 542 621 586 575 q 417 667 499 667 q 292 621 336 667 q 247 486 247 575 l 247 278 z "},"τ":{"ha":833,"x_min":76,"x_max":722,"o":"m 535 0 q 381 53 436 0 q 326 201 326 106 l 326 650 l 76 650 l 76 764 l 722 764 l 722 650 l 451 650 l 451 201 q 535 114 451 114 l 708 114 l 708 0 l 535 0 z "},"υ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"φ":{"ha":833,"x_min":76,"x_max":757,"o":"m 360 -250 l 360 0 q 151 76 226 0 q 76 281 76 151 l 76 764 l 192 764 l 192 281 q 238 147 192 196 q 367 99 283 99 l 367 764 l 517 764 q 692 704 628 764 q 757 542 757 644 l 757 281 q 682 76 757 151 q 474 0 607 0 l 474 -250 l 360 -250 m 467 99 q 595 147 549 99 q 642 281 642 196 l 642 542 q 608 633 642 600 q 517 667 575 667 l 467 667 l 467 99 z "},"χ":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 -250 l 347 264 l 71 764 l 215 764 l 372 464 q 398 413 385 440 q 419 371 411 386 q 440 413 426 386 q 465 464 453 440 l 625 764 l 763 764 l 486 272 l 778 -250 l 635 -250 l 461 72 q 435 123 449 96 q 415 167 422 150 q 395 124 408 150 q 369 74 382 97 l 194 -250 l 56 -250 z "},"ψ":{"ha":833,"x_min":75,"x_max":758,"o":"m 360 -250 l 360 0 q 150 76 225 0 q 75 281 75 151 l 75 764 l 190 764 l 190 281 q 238 147 190 196 q 367 99 285 99 l 367 764 l 467 764 l 467 99 q 596 147 549 99 q 643 281 643 196 l 643 764 l 758 764 l 758 281 q 683 76 758 151 q 474 0 608 0 l 474 -250 l 360 -250 z "},"ω":{"ha":833,"x_min":76,"x_max":757,"o":"m 257 -14 q 125 46 174 -14 q 76 214 76 106 l 76 494 q 131 687 76 610 q 271 778 185 764 l 271 646 q 214 595 236 636 q 192 494 192 554 l 192 213 q 215 128 192 158 q 279 97 238 97 q 344 128 321 97 q 367 213 367 158 l 367 494 l 467 494 l 467 213 q 490 128 467 158 q 554 97 513 97 q 619 128 596 97 q 642 213 642 158 l 642 494 q 617 592 642 554 q 556 639 592 629 l 556 771 q 699 683 642 757 q 757 494 757 610 l 757 214 q 708 46 757 106 q 576 -14 660 -14 q 457 35 501 -14 q 413 169 413 85 l 421 169 q 376 35 421 85 q 257 -14 332 -14 z "},"ί":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"ϊ":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ΐ":{"ha":833,"x_min":76,"x_max":764,"o":"m 576 0 q 460 26 510 0 q 382 101 410 53 q 354 215 354 150 l 354 650 l 76 650 l 76 764 l 479 764 l 479 215 q 506 141 479 168 q 576 114 532 114 l 764 114 l 764 0 l 576 0 m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ύ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ϋ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 z "},"ΰ":{"ha":833,"x_min":125,"x_max":708,"o":"m 415 -14 q 204 65 283 -14 q 125 278 125 143 l 125 764 l 250 764 l 250 278 q 294 144 250 192 q 415 96 339 96 q 538 144 493 96 q 583 278 583 192 l 583 764 l 708 764 l 708 278 q 628 65 708 143 q 415 -14 547 -14 m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"ό":{"ha":833,"x_min":118,"x_max":715,"o":"m 417 -11 q 258 24 325 -11 q 155 124 192 58 q 118 281 118 190 l 118 483 q 155 640 118 575 q 258 740 192 706 q 417 775 325 775 q 575 740 508 775 q 678 640 642 706 q 715 485 715 575 l 715 281 q 678 124 715 190 q 575 24 642 58 q 417 -11 508 -11 m 417 100 q 544 146 499 100 q 590 281 590 192 l 590 483 q 544 618 590 572 q 417 664 499 664 q 290 618 336 664 q 243 483 243 572 l 243 281 q 290 146 243 192 q 417 100 336 100 m 336 896 l 483 1090 l 618 1090 l 464 896 l 336 896 z "},"ώ":{"ha":833,"x_min":76,"x_max":757,"o":"m 257 -14 q 125 46 174 -14 q 76 214 76 106 l 76 494 q 131 687 76 610 q 271 778 185 764 l 271 646 q 214 595 236 636 q 192 494 192 554 l 192 213 q 215 128 192 158 q 279 97 238 97 q 344 128 321 97 q 367 213 367 158 l 367 494 l 467 494 l 467 213 q 490 128 467 158 q 554 97 513 97 q 619 128 596 97 q 642 213 642 158 l 642 494 q 617 592 642 554 q 556 639 592 629 l 556 771 q 699 683 642 757 q 757 494 757 610 l 757 214 q 708 46 757 106 q 576 -14 660 -14 q 457 35 501 -14 q 413 169 413 85 l 421 169 q 376 35 421 85 q 257 -14 332 -14 m 322 896 l 469 1090 l 604 1090 l 450 896 l 322 896 z "},"ά":{"ha":833,"x_min":125,"x_max":703,"o":"m 372 -14 q 191 63 257 -14 q 125 271 125 139 l 125 494 q 192 702 125 626 q 372 778 258 778 q 522 727 467 778 q 578 589 578 676 l 553 618 l 578 618 l 578 764 l 703 764 l 703 0 l 578 0 l 578 146 l 553 146 l 578 175 q 522 38 578 89 q 372 -14 467 -14 m 414 94 q 535 143 492 94 q 578 278 578 192 l 578 486 q 535 621 578 572 q 414 669 492 669 q 292 622 335 669 q 250 486 250 575 l 250 278 q 292 142 250 189 q 414 94 335 94 m 328 896 l 475 1090 l 610 1090 l 456 896 l 328 896 z "},"έ":{"ha":833,"x_min":111,"x_max":743,"o":"m 453 -10 l 388 -10 q 186 50 261 -10 q 111 211 111 110 q 156 343 111 297 q 299 396 201 389 l 299 401 q 174 451 218 407 q 129 563 129 494 q 160 675 129 628 q 250 748 192 722 q 390 774 308 774 l 460 774 q 647 718 571 774 q 736 576 722 663 l 604 576 q 556 638 596 613 q 460 663 517 663 l 390 663 q 320 650 349 663 q 276 614 292 638 q 261 556 261 590 q 294 475 261 506 q 392 444 328 444 l 556 444 l 556 336 l 388 336 q 280 304 317 336 q 243 217 243 272 q 281 133 243 165 q 388 101 319 101 l 453 101 q 560 124 518 101 q 611 181 601 146 l 743 181 q 651 42 729 93 q 453 -10 574 -10 m 314 896 l 461 1090 l 596 1090 l 442 896 l 314 896 z "},"ή":{"ha":833,"x_min":128,"x_max":708,"o":"m 128 0 l 128 764 l 253 764 l 253 618 l 279 618 l 253 589 q 307 728 253 679 q 457 778 361 778 q 640 707 572 778 q 708 514 708 636 l 708 -250 l 583 -250 l 583 500 q 540 627 583 582 q 421 672 496 672 q 298 624 343 672 q 253 486 253 575 l 253 0 l 128 0 m 343 896 l 490 1090 l 625 1090 l 471 896 l 343 896 z "},"ϗ":{"ha":833,"x_min":131,"x_max":764,"o":"m 464 -250 l 464 -140 l 504 -140 q 606 -102 567 -140 q 644 0 644 -64 l 644 99 l 764 99 l 764 0 q 698 -186 764 -122 q 504 -250 632 -250 l 464 -250 m 131 0 l 131 764 l 250 764 l 250 347 q 248 263 250 307 q 242 178 246 218 q 235 111 239 139 l 543 764 l 703 764 l 703 0 l 583 0 l 583 417 q 585 501 583 457 q 592 587 588 546 q 599 654 596 628 l 290 0 l 131 0 z "},"ℕ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 125 1014 l 304 1014 l 646 236 q 642 326 644 272 q 640 417 640 379 l 640 1014 l 708 1014 l 708 0 l 529 0 l 188 778 q 192 690 190 743 q 193 597 193 636 l 193 0 l 125 0 m 569 54 l 661 54 l 264 960 l 172 960 l 569 54 z "},"₀":{"ha":833,"x_min":201,"x_max":632,"o":"m 417 -167 q 259 -112 317 -167 q 201 40 201 -57 l 201 246 q 259 397 201 342 q 417 451 317 451 q 574 397 517 451 q 632 246 632 342 l 632 40 q 574 -112 632 -57 q 417 -167 517 -167 m 417 -79 q 503 -47 472 -79 q 535 40 535 -15 l 535 246 q 503 333 535 301 q 417 364 472 364 q 330 333 361 364 q 299 246 299 301 l 299 40 q 330 -47 299 -15 q 417 -79 361 -79 z "},"₁":{"ha":833,"x_min":215,"x_max":639,"o":"m 215 -153 l 215 -64 l 397 -64 l 397 350 l 228 229 l 228 339 l 363 438 l 494 438 l 494 -64 l 639 -64 l 639 -153 l 215 -153 z "},"₂":{"ha":833,"x_min":210,"x_max":632,"o":"m 231 -153 l 231 -32 l 456 136 q 503 190 486 158 q 521 251 521 221 q 492 334 521 304 q 414 364 463 364 q 336 334 365 364 q 307 251 307 304 l 210 251 q 269 397 214 343 q 414 451 325 451 q 563 398 508 451 q 617 254 617 344 q 588 156 617 206 q 507 68 558 106 l 329 -64 l 632 -64 l 632 -153 l 231 -153 z "},"₃":{"ha":833,"x_min":189,"x_max":600,"o":"m 394 -167 q 244 -114 300 -167 q 189 28 189 -61 l 285 28 q 314 -50 285 -21 q 394 -79 343 -79 q 472 -50 443 -79 q 500 28 500 -21 q 472 105 500 76 q 396 133 444 133 l 354 133 l 354 226 l 483 350 l 229 350 l 229 439 l 563 439 l 563 329 l 400 175 l 400 214 q 546 164 492 214 q 600 28 600 114 q 544 -114 600 -61 q 394 -167 489 -167 z "},"₄":{"ha":833,"x_min":203,"x_max":594,"o":"m 497 -153 l 497 -25 l 203 -25 l 203 104 l 439 439 l 547 439 l 300 85 l 300 64 l 497 64 l 497 208 l 594 208 l 594 -153 l 497 -153 z "},"₅":{"ha":833,"x_min":190,"x_max":604,"o":"m 396 -167 q 256 -122 311 -167 q 190 0 200 -76 l 288 0 q 324 -58 294 -36 q 396 -79 353 -79 q 475 -49 446 -79 q 504 32 504 -19 q 474 113 504 83 q 393 143 444 143 q 341 132 365 143 q 304 101 317 121 l 214 101 l 214 438 l 578 438 l 578 349 l 311 349 l 311 124 l 296 117 q 342 191 306 164 q 432 218 379 218 q 558 168 511 218 q 604 32 604 118 q 548 -113 604 -60 q 396 -167 492 -167 z "},"₆":{"ha":833,"x_min":201,"x_max":632,"o":"m 418 -167 q 261 -112 321 -167 q 201 32 201 -58 q 217 124 201 75 q 257 213 232 174 l 406 438 l 511 438 l 338 169 l 385 169 l 333 142 q 381 197 344 176 q 465 217 418 217 q 587 167 542 217 q 632 32 632 117 q 574 -112 632 -58 q 418 -167 517 -167 m 417 -81 q 502 -50 471 -81 q 533 32 533 -19 q 502 115 533 85 q 417 144 471 144 q 332 115 364 144 q 300 32 300 85 q 332 -50 300 -19 q 417 -81 364 -81 z "},"₇":{"ha":833,"x_min":215,"x_max":618,"o":"m 293 -153 l 525 349 l 311 349 l 311 261 l 215 261 l 215 438 l 618 438 l 618 326 l 403 -153 l 293 -153 z "},"₈":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 -181 q 265 -137 321 -181 q 208 -19 208 -93 q 246 75 208 31 q 347 144 283 119 l 456 188 q 501 222 485 199 q 518 274 518 246 q 490 333 518 311 q 415 354 463 354 q 343 332 369 354 q 317 272 317 310 q 335 223 317 246 q 385 188 354 200 l 488 147 q 588 78 551 122 q 625 -19 625 33 q 569 -137 625 -93 q 417 -181 513 -181 m 417 -94 q 498 -71 468 -94 q 528 -8 528 -47 q 510 47 528 22 q 463 85 493 72 l 361 128 q 258 199 296 156 q 219 289 219 243 q 273 398 219 358 q 417 438 326 438 q 562 398 508 438 q 615 289 615 358 q 578 199 615 242 q 475 129 540 157 l 368 85 q 322 48 339 72 q 306 -7 306 24 q 335 -71 306 -47 q 417 -94 365 -94 z "},"₉":{"ha":833,"x_min":203,"x_max":633,"o":"m 322 -153 l 497 115 l 450 115 l 501 143 q 454 88 490 108 q 369 68 418 68 q 248 118 293 68 q 203 253 203 168 q 261 397 203 343 q 417 451 319 451 q 574 397 515 451 q 633 253 633 343 q 618 164 633 213 q 576 75 603 115 l 429 -153 l 322 -153 m 418 140 q 503 171 471 140 q 535 253 535 201 q 503 335 535 306 q 418 365 471 365 q 333 335 364 365 q 301 253 301 306 q 333 171 301 201 q 418 140 364 140 z "},"⁰":{"ha":833,"x_min":201,"x_max":632,"o":"m 417 549 q 259 603 317 549 q 201 756 201 658 l 201 961 q 259 1112 201 1057 q 417 1167 317 1167 q 574 1112 517 1167 q 632 961 632 1057 l 632 756 q 574 603 632 658 q 417 549 517 549 m 417 636 q 503 668 472 636 q 535 756 535 700 l 535 961 q 503 1048 535 1017 q 417 1079 472 1079 q 330 1048 361 1079 q 299 961 299 1017 l 299 756 q 330 668 299 700 q 417 636 361 636 z "},"¹":{"ha":833,"x_min":215,"x_max":639,"o":"m 215 563 l 215 651 l 397 651 l 397 1065 l 228 944 l 228 1054 l 363 1153 l 494 1153 l 494 651 l 639 651 l 639 563 l 215 563 z "},"²":{"ha":833,"x_min":210,"x_max":632,"o":"m 231 563 l 231 683 l 456 851 q 503 905 486 874 q 521 967 521 936 q 492 1049 521 1019 q 414 1079 463 1079 q 336 1049 365 1079 q 307 967 307 1019 l 210 967 q 269 1113 214 1058 q 414 1167 325 1167 q 563 1113 508 1167 q 617 969 617 1060 q 588 871 617 921 q 507 783 558 821 l 329 651 l 632 651 l 632 563 l 231 563 z "},"³":{"ha":833,"x_min":189,"x_max":600,"o":"m 394 549 q 244 601 300 549 q 189 743 189 654 l 285 743 q 314 665 285 694 q 394 636 343 636 q 472 665 443 636 q 500 743 500 694 q 472 820 500 792 q 396 849 444 849 l 354 849 l 354 942 l 483 1065 l 229 1065 l 229 1154 l 563 1154 l 563 1044 l 400 890 l 400 929 q 546 879 492 929 q 600 743 600 829 q 544 601 600 654 q 394 549 489 549 z "},"⁴":{"ha":833,"x_min":203,"x_max":594,"o":"m 497 563 l 497 690 l 203 690 l 203 819 l 439 1154 l 547 1154 l 300 800 l 300 779 l 497 779 l 497 924 l 594 924 l 594 563 l 497 563 z "},"⁵":{"ha":833,"x_min":190,"x_max":604,"o":"m 396 549 q 256 594 311 549 q 190 715 200 639 l 288 715 q 324 658 294 679 q 396 636 353 636 q 475 666 446 636 q 504 747 504 696 q 474 828 504 799 q 393 858 444 858 q 341 847 365 858 q 304 817 317 836 l 214 817 l 214 1153 l 578 1153 l 578 1064 l 311 1064 l 311 839 l 296 832 q 342 906 306 879 q 432 933 379 933 q 558 883 511 933 q 604 747 604 833 q 548 602 604 656 q 396 549 492 549 z "},"⁶":{"ha":833,"x_min":201,"x_max":632,"o":"m 418 549 q 261 603 321 549 q 201 747 201 657 q 217 840 201 790 q 257 928 232 889 l 406 1153 l 511 1153 l 338 885 l 385 885 l 333 857 q 381 912 344 892 q 465 932 418 932 q 587 882 542 932 q 632 747 632 832 q 574 603 632 657 q 418 549 517 549 m 417 635 q 502 665 471 635 q 533 747 533 696 q 502 830 533 800 q 417 860 471 860 q 332 830 364 860 q 300 747 300 800 q 332 665 300 696 q 417 635 364 635 z "},"⁷":{"ha":833,"x_min":215,"x_max":618,"o":"m 293 563 l 525 1064 l 311 1064 l 311 976 l 215 976 l 215 1153 l 618 1153 l 618 1042 l 403 563 l 293 563 z "},"⁸":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 549 q 265 592 321 549 q 208 710 208 636 q 246 804 208 760 q 347 874 283 849 l 456 917 q 501 951 485 928 q 518 1003 518 975 q 490 1062 518 1040 q 415 1083 463 1083 q 343 1061 369 1083 q 317 1001 317 1039 q 335 952 317 975 q 385 917 354 929 l 488 876 q 588 807 551 851 q 625 710 625 763 q 569 592 625 636 q 417 549 513 549 m 417 635 q 498 658 468 635 q 528 721 528 682 q 510 776 528 751 q 463 814 493 801 l 361 857 q 258 928 296 885 q 219 1018 219 972 q 273 1127 219 1088 q 417 1167 326 1167 q 562 1127 508 1167 q 615 1018 615 1088 q 578 928 615 971 q 475 858 540 886 l 368 814 q 322 777 339 801 q 306 722 306 753 q 335 658 306 682 q 417 635 365 635 z "},"⁹":{"ha":833,"x_min":203,"x_max":633,"o":"m 322 563 l 497 831 l 450 831 l 501 858 q 454 803 490 824 q 369 783 418 783 q 248 833 293 783 q 203 968 203 883 q 261 1113 203 1058 q 417 1167 319 1167 q 574 1113 515 1167 q 633 968 633 1058 q 618 879 633 928 q 576 790 603 831 l 429 563 l 322 563 m 418 856 q 503 886 471 856 q 535 968 535 917 q 503 1051 535 1021 q 418 1081 471 1081 q 333 1051 364 1081 q 301 968 301 1021 q 333 886 301 917 q 418 856 364 856 z "},"⁄":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"½":{"ha":833,"x_min":42,"x_max":792,"o":"m 438 0 l 438 89 l 604 185 q 677 241 653 213 q 701 300 701 269 q 676 365 701 340 q 611 389 651 389 q 546 365 571 389 q 521 300 521 340 l 438 300 q 488 415 440 372 q 611 458 536 458 q 737 415 689 458 q 785 303 785 372 q 753 218 785 260 q 665 144 722 176 l 536 72 l 536 58 q 581 65 551 61 q 640 69 610 69 l 792 69 l 792 0 l 438 0 m 42 563 l 42 632 l 206 632 l 206 960 q 188 935 200 950 q 160 907 175 921 l 74 832 l 74 929 l 171 1014 l 289 1014 l 289 632 l 438 632 l 438 563 l 42 563 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"¼":{"ha":833,"x_min":42,"x_max":750,"o":"m 42 563 l 42 632 l 206 632 l 206 960 q 188 935 200 950 q 160 907 175 921 l 74 832 l 74 929 l 171 1014 l 289 1014 l 289 632 l 424 632 l 424 563 l 42 563 m 667 0 l 667 97 l 424 97 l 424 208 l 599 451 l 694 451 l 507 189 l 507 167 l 667 167 l 667 290 l 750 290 l 750 0 l 667 0 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"¾":{"ha":833,"x_min":36,"x_max":750,"o":"m 667 0 l 667 97 l 424 97 l 424 208 l 599 451 l 694 451 l 507 189 l 507 167 l 667 167 l 667 290 l 750 290 l 750 0 l 667 0 m 214 556 q 85 596 133 556 q 36 701 36 636 l 119 701 q 145 646 119 667 q 214 625 171 625 q 281 646 256 625 q 307 701 307 667 q 281 757 307 736 q 215 778 256 778 l 174 778 l 174 857 l 286 944 l 69 944 l 69 1014 l 368 1014 l 368 938 l 219 822 l 219 847 q 343 807 296 847 q 390 701 390 767 q 342 596 390 636 q 214 556 293 556 m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},".":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 -14 q 333 17 364 -14 q 301 99 301 47 q 333 185 301 153 q 417 217 364 217 q 501 185 469 217 q 532 99 532 153 q 501 17 532 47 q 417 -14 469 -14 z "},",":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},":":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 569 q 333 598 365 569 q 301 674 301 626 q 333 749 301 721 q 417 778 365 778 q 501 749 469 778 q 532 674 532 721 q 501 598 532 626 q 417 569 469 569 m 417 -14 q 333 15 365 -14 q 301 90 301 43 q 333 166 301 138 q 417 194 365 194 q 501 166 469 194 q 532 90 532 138 q 501 15 532 43 q 417 -14 469 -14 z "},";":{"ha":833,"x_min":236,"x_max":535,"o":"m 236 -222 l 347 210 l 528 210 l 347 -222 l 236 -222 m 403 569 q 328 599 357 569 q 299 674 299 628 q 328 748 299 718 q 403 778 358 778 l 431 778 q 505 748 475 778 q 535 674 535 718 q 506 599 535 628 q 431 569 476 569 l 403 569 z "},"…":{"ha":833,"x_min":83,"x_max":750,"o":"m 681 -14 q 631 7 650 -14 q 611 63 611 28 l 611 160 q 631 215 611 194 q 681 236 650 236 q 731 215 713 236 q 750 160 750 194 l 750 63 q 731 7 750 28 q 681 -14 713 -14 m 153 -14 q 103 7 122 -14 q 83 63 83 28 l 83 160 q 103 215 83 194 q 153 236 122 236 q 203 215 185 236 q 222 160 222 194 l 222 63 q 203 7 222 28 q 153 -14 185 -14 m 417 -14 q 367 7 386 -14 q 347 63 347 28 l 347 160 q 367 215 347 194 q 417 236 386 236 q 467 215 449 236 q 486 160 486 194 l 486 63 q 467 7 486 28 q 417 -14 449 -14 z "},"!":{"ha":833,"x_min":313,"x_max":521,"o":"m 372 299 l 343 847 l 343 1014 l 490 1014 l 490 847 l 461 299 l 372 299 m 396 -7 q 336 17 360 -7 q 313 76 313 40 q 336 136 313 113 q 396 160 360 160 l 438 160 q 499 137 478 160 q 521 78 521 114 q 497 17 521 42 q 438 -7 474 -7 l 396 -7 z "},"¡":{"ha":833,"x_min":313,"x_max":521,"o":"m 343 -250 l 343 -76 l 372 467 l 461 467 l 490 -76 l 490 -250 l 343 -250 m 403 606 q 338 629 363 606 q 313 690 313 653 q 338 750 313 728 q 403 772 363 772 l 431 772 q 496 751 471 772 q 521 692 521 729 q 496 629 521 653 q 431 606 471 606 l 403 606 z "},"?":{"ha":833,"x_min":188,"x_max":681,"o":"m 293 285 l 293 535 l 363 535 q 503 584 451 535 q 556 715 556 633 q 503 847 556 797 q 361 896 451 896 l 188 896 l 188 1014 l 361 1014 q 530 977 458 1014 q 641 874 601 940 q 681 715 681 807 q 647 573 681 636 q 555 472 614 510 q 418 431 496 435 l 418 285 l 293 285 m 333 -7 q 274 17 297 -7 q 250 76 250 40 q 274 136 250 113 q 333 160 297 160 l 375 160 q 437 137 415 160 q 458 78 458 114 q 435 17 458 42 q 375 -7 411 -7 l 333 -7 z "},"¿":{"ha":833,"x_min":153,"x_max":646,"o":"m 472 -236 q 302 -201 374 -236 q 192 -99 231 -165 q 153 56 153 -33 q 185 196 153 135 q 277 293 218 257 q 415 333 336 329 l 415 479 l 540 479 l 540 229 l 471 229 q 330 183 382 229 q 278 56 278 138 q 330 -72 278 -25 q 472 -118 382 -118 l 646 -118 l 646 -236 l 472 -236 m 465 604 q 400 628 425 604 q 375 689 375 651 q 400 749 375 726 q 465 771 425 771 l 493 771 q 558 749 533 771 q 583 690 583 728 q 558 628 583 651 q 493 604 533 604 l 465 604 z "},"·":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 361 q 333 392 364 361 q 301 474 301 422 q 333 560 301 528 q 417 592 364 592 q 501 560 469 592 q 532 474 532 528 q 501 392 532 422 q 417 361 469 361 z "},"•":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 340 q 297 388 344 340 q 250 507 250 435 q 297 627 250 581 q 417 674 344 674 q 537 627 490 674 q 583 507 583 581 q 537 388 583 435 q 417 340 490 340 z "},"*":{"ha":833,"x_min":49,"x_max":785,"o":"m 251 131 l 151 200 l 226 308 q 269 360 244 335 q 320 409 294 386 q 365 449 346 432 l 361 458 q 301 465 335 461 q 234 476 268 468 q 171 493 200 483 l 49 538 l 90 653 l 213 608 q 273 581 242 599 q 333 545 304 564 q 383 510 363 526 l 390 515 q 375 576 383 542 q 361 647 367 610 q 356 715 356 683 l 356 847 l 478 847 l 478 715 q 472 647 478 683 q 458 576 467 610 q 442 515 450 542 l 449 510 q 499 545 471 526 q 559 581 528 564 q 619 608 590 599 l 743 653 l 785 538 l 661 493 q 599 476 633 483 q 532 465 565 468 q 472 458 499 461 l 467 447 q 513 408 488 431 q 563 359 539 385 q 604 308 588 333 l 681 200 l 581 131 l 504 239 q 472 296 488 264 q 442 360 456 328 q 421 417 429 392 l 411 417 q 390 360 403 392 q 360 296 376 328 q 326 239 344 264 l 251 131 z "},"#":{"ha":833,"x_min":49,"x_max":785,"o":"m 115 0 l 167 278 l 49 278 l 49 368 l 183 368 l 233 646 l 97 646 l 97 736 l 250 736 l 301 1014 l 399 1014 l 347 736 l 569 736 l 621 1014 l 718 1014 l 667 736 l 785 736 l 785 646 l 650 646 l 600 368 l 736 368 l 736 278 l 583 278 l 532 0 l 435 0 l 486 278 l 264 278 l 213 0 l 115 0 m 281 368 l 503 368 l 553 646 l 331 646 l 281 368 z "},"․":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 -14 q 333 17 364 -14 q 301 99 301 47 q 333 185 301 153 q 417 217 364 217 q 501 185 469 217 q 532 99 532 153 q 501 17 532 47 q 417 -14 469 -14 z "},"/":{"ha":833,"x_min":104,"x_max":729,"o":"m 104 -153 l 597 1153 l 729 1153 l 236 -153 l 104 -153 z "},"\\\\":{"ha":833,"x_min":104,"x_max":729,"o":"m 597 -153 l 104 1153 l 236 1153 l 729 -153 l 597 -153 z "},"(":{"ha":833,"x_min":257,"x_max":674,"o":"m 674 -167 q 367 25 476 -118 q 257 375 257 168 l 257 625 q 308 872 257 761 q 452 1058 358 982 q 674 1167 546 1135 l 674 1049 q 519 969 585 1028 q 418 822 454 910 q 382 625 382 735 l 382 375 q 417 181 382 268 q 519 35 453 93 q 674 -43 585 -22 l 674 -167 z "},")":{"ha":833,"x_min":160,"x_max":576,"o":"m 160 -167 l 160 -43 q 315 35 250 -22 q 416 181 381 93 q 451 375 451 268 l 451 625 q 415 822 451 735 q 314 969 379 910 q 160 1049 249 1028 l 160 1167 q 382 1058 289 1135 q 526 872 475 982 q 576 625 576 761 l 576 375 q 467 25 576 168 q 160 -167 357 -118 z "},"{":{"ha":833,"x_min":118,"x_max":715,"o":"m 653 -153 q 512 -126 571 -153 q 422 -47 453 -99 q 396 78 392 6 l 410 306 q 388 412 414 379 q 271 444 361 444 l 118 444 l 118 556 l 271 556 q 388 588 361 556 q 410 694 414 621 l 396 922 q 422 1047 392 996 q 512 1126 453 1099 q 653 1153 571 1153 l 715 1153 l 715 1042 l 653 1042 q 553 1012 588 1042 q 521 922 518 982 l 535 694 q 492 551 540 604 q 354 497 443 497 l 354 504 q 491 450 442 504 q 535 306 540 396 l 521 78 q 553 -12 518 18 q 653 -42 588 -42 l 715 -42 l 715 -153 l 653 -153 z "},"}":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 -153 l 118 -42 l 181 -42 q 281 -12 246 -42 q 313 78 315 18 l 299 306 q 342 450 293 396 q 479 504 392 504 l 479 497 q 342 551 390 497 q 299 694 293 604 l 313 922 q 281 1012 315 982 q 181 1042 246 1042 l 118 1042 l 118 1153 l 181 1153 q 322 1126 263 1153 q 411 1047 381 1099 q 438 922 442 996 l 424 694 q 446 588 419 621 q 563 556 472 556 l 715 556 l 715 444 l 563 444 q 447 412 474 444 q 424 306 419 379 l 438 78 q 411 -47 442 6 q 322 -126 381 -99 q 181 -153 263 -153 l 118 -153 z "},"[":{"ha":833,"x_min":285,"x_max":625,"o":"m 285 -153 l 285 1153 l 625 1153 l 625 1042 l 410 1042 l 410 -42 l 625 -42 l 625 -153 l 285 -153 z "},"]":{"ha":833,"x_min":208,"x_max":549,"o":"m 208 -153 l 208 -42 l 424 -42 l 424 1042 l 208 1042 l 208 1153 l 549 1153 l 549 -153 l 208 -153 z "},"❰":{"ha":833,"x_min":153,"x_max":688,"o":"m 338 0 l 153 504 l 338 1014 l 688 1014 l 503 507 l 688 0 l 338 0 z "},"❮":{"ha":833,"x_min":208,"x_max":629,"o":"m 396 0 l 208 504 l 396 1014 l 629 1014 l 442 507 l 629 0 l 396 0 z "},"❱":{"ha":833,"x_min":146,"x_max":681,"o":"m 496 0 l 681 504 l 496 1014 l 146 1014 l 331 507 l 146 0 l 496 0 z "},"❯":{"ha":833,"x_min":204,"x_max":625,"o":"m 438 0 l 625 504 l 438 1014 l 204 1014 l 392 507 l 204 0 l 438 0 z "},"-":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"­":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"–":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 403 l 111 514 l 722 514 l 722 403 l 111 403 z "},"—":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 403 l 0 514 l 833 514 l 833 403 l 0 403 z "},"‐":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"_":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 -139 l 83 -35 l 750 -35 l 750 -139 l 83 -139 z "},"‚":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},"„":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 -222 l 549 210 l 729 210 l 549 -222 l 438 -222 m 118 -222 l 229 210 l 410 210 l 229 -222 l 118 -222 z "},"“":{"ha":833,"x_min":104,"x_max":715,"o":"m 424 646 l 604 1078 l 715 1078 l 604 646 l 424 646 m 104 646 l 285 1078 l 396 1078 l 285 646 l 104 646 z "},"”":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 646 l 549 1078 l 729 1078 l 549 646 l 438 646 m 118 646 l 229 1078 l 410 1078 l 229 646 l 118 646 z "},"‘":{"ha":833,"x_min":319,"x_max":611,"o":"m 611 1076 l 500 644 l 319 644 l 500 1076 l 611 1076 z "},"’":{"ha":833,"x_min":222,"x_max":514,"o":"m 222 646 l 333 1078 l 514 1078 l 333 646 l 222 646 z "},"«":{"ha":833,"x_min":42,"x_max":792,"o":"m 646 56 l 365 389 l 644 722 l 792 722 l 506 392 l 792 56 l 646 56 m 322 56 l 42 389 l 321 722 l 468 722 l 182 392 l 468 56 l 322 56 z "},"»":{"ha":833,"x_min":42,"x_max":792,"o":"m 367 56 l 647 390 l 365 722 l 511 722 l 792 389 l 513 56 l 367 56 m 43 56 l 324 390 l 42 722 l 188 722 l 468 389 l 189 56 l 43 56 z "},"‹":{"ha":833,"x_min":204,"x_max":631,"o":"m 485 56 l 204 389 l 485 722 l 626 722 l 343 392 l 631 56 l 485 56 z "},"›":{"ha":833,"x_min":204,"x_max":631,"o":"m 208 56 l 492 386 l 204 722 l 350 722 l 631 389 l 350 56 l 208 56 z "},"\\"":{"ha":833,"x_min":208,"x_max":625,"o":"m 507 597 l 490 889 l 490 1014 l 625 1014 l 625 889 l 610 597 l 507 597 m 225 597 l 208 889 l 208 1014 l 343 1014 l 343 889 l 328 597 l 225 597 z "},"\'":{"ha":833,"x_min":342,"x_max":476,"o":"m 358 597 l 342 806 l 342 1014 l 476 1014 l 476 806 l 461 597 l 358 597 z "},"⟨":{"ha":833,"x_min":174,"x_max":674,"o":"m 524 -160 l 174 403 l 174 572 l 524 1132 l 665 1132 l 276 483 l 674 -160 l 524 -160 z "},"⟩":{"ha":833,"x_min":160,"x_max":660,"o":"m 160 -160 l 557 483 l 168 1132 l 310 1132 l 660 572 l 660 403 l 310 -160 l 160 -160 z "},"·":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 361 q 333 392 364 361 q 301 474 301 422 q 333 560 301 528 q 417 592 364 592 q 501 560 469 592 q 532 474 532 528 q 501 392 532 422 q 417 361 469 361 z "},";":{"ha":833,"x_min":236,"x_max":535,"o":"m 236 -222 l 347 210 l 528 210 l 347 -222 l 236 -222 m 403 569 q 328 599 357 569 q 299 674 299 628 q 328 748 299 718 q 403 778 358 778 l 431 778 q 505 748 475 778 q 535 674 535 718 q 506 599 535 628 q 431 569 476 569 l 403 569 z "}," ":{"ha":833,"x_min":0,"x_max":0,"o":""}," ":{"ha":833,"x_min":0,"x_max":0,"o":""},"\\r":{"ha":833,"x_min":0,"x_max":0,"o":""},"\ufeff":{"ha":0,"x_min":0,"x_max":0,"o":""},"₿":{"ha":833,"x_min":129,"x_max":736,"o":"m 249 -194 l 249 0 l 129 0 l 129 1014 l 249 1014 l 249 1210 l 332 1210 l 332 1014 l 429 1014 l 429 1210 l 513 1210 l 513 1004 q 660 917 607 982 q 713 751 713 851 q 694 653 713 696 q 642 580 676 610 q 560 536 608 550 q 654 486 615 521 q 715 399 693 451 q 736 282 736 347 q 677 99 736 171 q 513 7 618 26 l 513 -194 l 429 -194 l 429 0 l 332 0 l 332 -194 l 249 -194 m 251 113 l 424 113 q 562 159 511 113 q 613 286 613 206 q 562 422 613 369 q 424 474 511 474 l 251 474 l 251 113 m 251 582 l 415 582 q 542 625 496 582 q 589 742 589 668 q 543 858 589 815 q 417 901 497 901 l 251 901 l 251 582 z "},"¢":{"ha":833,"x_min":118,"x_max":719,"o":"m 389 -194 l 389 958 l 472 958 l 472 -194 l 389 -194 m 422 -14 q 262 21 331 -14 q 156 122 193 56 q 118 278 118 188 l 118 486 q 156 643 118 578 q 262 743 193 708 q 422 778 331 778 q 635 707 554 778 q 719 514 715 636 l 594 514 q 545 627 590 588 q 422 667 500 667 q 292 620 340 667 q 243 488 243 574 l 243 278 q 292 144 243 192 q 422 97 340 97 q 545 138 500 97 q 594 250 590 178 l 719 250 q 635 57 715 128 q 422 -14 554 -14 z "},"¤":{"ha":833,"x_min":60,"x_max":775,"o":"m 688 157 l 567 278 q 498 248 536 258 q 418 238 460 238 q 337 248 375 238 q 267 278 299 258 l 149 160 l 63 246 l 178 363 q 144 435 156 394 q 132 518 132 475 q 144 602 132 563 q 179 675 157 642 l 60 794 l 147 882 l 269 760 q 339 789 301 779 q 418 799 376 799 q 572 756 506 799 l 689 872 l 774 788 l 658 672 q 690 600 679 639 q 701 518 701 561 q 690 435 701 475 q 657 363 678 396 l 775 244 l 688 157 m 418 333 q 510 358 469 333 q 575 424 551 382 q 599 518 599 465 q 575 613 599 571 q 510 678 551 654 q 418 703 469 703 q 325 678 367 703 q 259 613 283 654 q 235 518 235 571 q 259 424 235 465 q 325 358 283 382 q 418 333 367 333 z "},"$":{"ha":833,"x_min":100,"x_max":733,"o":"m 382 -194 l 382 -12 q 177 72 251 -1 q 100 264 103 144 l 225 264 q 266 153 225 196 q 382 100 307 110 l 382 464 l 344 475 q 184 582 240 507 q 128 758 128 657 q 197 942 128 869 q 382 1025 265 1014 l 382 1208 l 465 1208 l 465 1026 q 650 943 581 1015 q 721 757 719 871 l 596 757 q 562 863 596 822 q 465 914 528 904 l 465 569 l 521 551 q 678 443 622 519 q 733 264 733 367 q 660 75 733 150 q 465 -12 588 0 l 465 -194 l 382 -194 m 465 100 q 571 153 533 111 q 608 261 608 194 q 576 368 608 322 q 482 432 543 414 l 465 438 l 465 100 m 382 540 l 382 914 q 287 867 321 904 q 253 769 253 829 q 297 648 253 697 q 425 586 342 599 l 382 540 z "},"₫":{"ha":833,"x_min":125,"x_max":833,"o":"m 372 69 q 192 146 258 69 q 125 353 125 222 l 125 410 q 191 618 125 542 q 372 694 257 694 q 522 643 467 694 q 578 506 578 592 l 553 535 l 581 535 l 578 708 l 578 1014 l 703 1014 l 703 83 l 578 83 l 578 229 l 553 229 l 578 258 q 522 120 578 171 q 372 69 467 69 m 125 -111 l 125 0 l 708 0 l 708 -111 l 125 -111 m 414 178 q 535 226 492 178 q 578 361 578 275 l 578 403 q 535 538 578 489 q 414 586 492 586 q 292 539 335 586 q 250 403 250 492 l 250 361 q 292 225 250 272 q 414 178 335 178 m 417 792 l 417 896 l 833 896 l 833 792 l 417 792 z "},"€":{"ha":833,"x_min":26,"x_max":750,"o":"m 444 -14 q 283 23 351 -14 q 176 127 214 60 q 139 285 139 194 l 139 340 l 26 340 l 26 431 l 139 431 l 139 569 l 26 569 l 26 660 l 139 660 l 139 715 q 176 874 139 807 q 283 977 214 940 q 444 1014 351 1014 q 596 981 531 1014 q 701 888 661 949 q 750 743 740 828 l 625 743 q 569 860 617 818 q 444 903 521 903 q 313 853 361 903 q 264 715 264 803 l 264 660 l 493 660 l 493 569 l 264 569 l 264 431 l 493 431 l 493 340 l 264 340 l 264 285 q 312 147 264 197 q 444 97 360 97 q 569 140 521 97 q 625 257 617 182 l 750 257 q 701 112 740 172 q 596 19 661 51 q 444 -14 531 -14 z "},"ƒ":{"ha":833,"x_min":0,"x_max":743,"o":"m 0 -250 l 0 -136 l 146 -136 q 263 -94 219 -136 q 306 21 306 -51 l 306 435 l 83 435 l 83 549 l 306 549 l 306 821 q 362 963 306 913 q 519 1014 418 1014 l 743 1014 l 743 903 l 519 903 q 453 882 475 903 q 431 819 431 861 l 431 549 l 743 549 l 743 435 l 431 435 l 431 21 q 395 -122 431 -61 q 296 -217 360 -183 q 146 -250 232 -250 l 0 -250 z "},"₽":{"ha":833,"x_min":42,"x_max":764,"o":"m 153 0 l 153 215 l 42 215 l 42 326 l 153 326 l 153 444 l 42 444 l 42 556 l 153 556 l 153 1014 l 463 1014 q 622 978 554 1014 q 726 879 689 943 q 764 729 764 815 q 726 580 764 644 q 622 480 689 515 q 463 444 554 444 l 278 444 l 278 326 l 597 326 l 597 215 l 278 215 l 278 0 l 153 0 m 278 556 l 463 556 q 588 603 542 556 q 635 729 635 650 q 588 856 635 808 q 463 903 542 903 l 278 903 l 278 556 z "},"£":{"ha":833,"x_min":104,"x_max":743,"o":"m 104 0 l 104 139 q 172 202 138 165 q 231 278 207 239 q 256 353 256 318 q 242 456 256 413 q 208 536 228 500 q 167 606 188 572 q 133 678 147 639 q 119 771 119 718 q 156 908 119 850 q 258 997 192 965 q 417 1028 325 1028 q 575 997 508 1028 q 678 906 642 965 q 715 764 714 847 l 583 764 q 538 875 583 833 q 415 917 492 917 q 290 877 335 917 q 246 764 246 838 q 260 688 246 721 q 294 625 274 656 q 334 560 314 594 q 368 478 354 525 q 382 365 382 432 q 358 255 382 306 q 298 167 333 204 q 229 111 263 131 l 743 111 l 743 0 l 104 0 m 104 424 l 104 535 l 604 535 l 604 424 l 104 424 z "},"₮":{"ha":833,"x_min":63,"x_max":771,"o":"m 356 0 l 356 254 l 111 188 l 111 292 l 356 358 l 356 497 l 111 431 l 111 535 l 356 601 l 356 904 l 63 904 l 63 1014 l 771 1014 l 771 904 l 478 904 l 478 635 l 722 701 l 722 597 l 478 531 l 478 392 l 722 458 l 722 354 l 478 288 l 478 0 l 356 0 z "},"¥":{"ha":833,"x_min":49,"x_max":785,"o":"m 83 375 l 83 479 l 750 479 l 750 375 l 83 375 m 83 167 l 83 271 l 750 271 l 750 167 l 83 167 m 354 0 l 354 379 l 49 1014 l 178 1014 l 379 597 q 406 538 396 563 q 418 503 415 514 q 431 538 421 514 q 458 597 442 563 l 656 1014 l 785 1014 l 479 379 l 479 0 l 354 0 z "},"∙":{"ha":833,"x_min":301,"x_max":532,"o":"m 417 333 q 333 364 364 333 q 301 446 301 394 q 333 532 301 500 q 417 564 364 564 q 501 532 469 564 q 532 446 532 500 q 501 364 532 394 q 417 333 469 333 z "},"∐":{"ha":833,"x_min":56,"x_max":778,"o":"m 56 -250 l 56 -136 l 146 -136 l 146 1014 l 271 1014 l 271 -136 l 563 -136 l 563 1014 l 688 1014 l 688 -136 l 778 -136 l 778 -250 l 56 -250 z "},"∣":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 0 l 354 1014 l 479 1014 l 479 0 l 354 0 z "},"∕":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 0 l 621 1014 l 708 1014 l 213 0 l 125 0 z "},"∈":{"ha":833,"x_min":49,"x_max":792,"o":"m 368 97 q 209 137 282 97 q 92 245 136 176 q 49 400 49 314 l 49 600 q 92 755 49 686 q 209 863 136 824 q 368 903 282 903 l 792 903 l 792 792 l 368 792 q 269 765 314 792 q 199 693 225 738 q 174 597 174 649 l 174 556 l 792 556 l 792 444 l 174 444 l 174 403 q 199 307 174 351 q 269 235 225 263 q 368 208 314 208 l 792 208 l 792 97 l 368 97 z "},"≡":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 667 l 111 764 l 722 764 l 722 667 l 111 667 m 111 153 l 111 250 l 722 250 l 722 153 l 111 153 m 111 410 l 111 507 l 722 507 l 722 410 l 111 410 z "},"∃":{"ha":833,"x_min":111,"x_max":694,"o":"m 111 0 l 111 114 l 569 114 l 569 472 l 160 472 l 160 586 l 569 586 l 569 900 l 111 900 l 111 1014 l 694 1014 l 694 0 l 111 0 z "},"≉":{"ha":833,"x_min":90,"x_max":743,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 90 493 l 90 590 q 140 722 90 672 q 271 771 190 771 q 358 753 322 771 q 420 708 394 735 q 467 653 446 681 q 510 608 488 626 q 560 590 532 590 q 608 610 592 590 q 625 667 625 629 l 625 764 l 743 764 l 743 667 q 694 536 743 586 q 563 486 644 486 q 475 504 511 486 q 413 549 439 522 q 367 603 388 576 q 324 649 346 631 q 274 667 301 667 q 226 647 243 667 q 208 590 208 628 l 208 493 l 90 493 m 90 153 l 90 250 q 140 381 90 332 q 271 431 190 431 q 358 413 322 431 q 420 367 394 394 q 467 313 446 340 q 510 268 488 286 q 560 250 532 250 q 608 269 592 250 q 625 326 625 289 l 625 424 l 743 424 l 743 326 q 694 196 743 246 q 563 146 644 146 q 475 164 511 146 q 413 209 439 182 q 367 263 388 236 q 324 308 346 290 q 274 326 301 326 q 226 307 243 326 q 208 250 208 288 l 208 153 l 90 153 z "},"∌":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 49 97 l 49 208 l 472 208 q 572 235 528 208 q 641 307 615 263 q 667 403 667 351 l 667 444 l 49 444 l 49 556 l 667 556 l 667 597 q 641 693 667 649 q 572 765 615 738 q 472 792 528 792 l 49 792 l 49 903 l 472 903 q 632 863 560 903 q 748 755 704 824 q 792 600 792 686 l 792 400 q 748 245 792 314 q 632 137 704 176 q 472 97 560 97 l 49 97 z "},"∉":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 368 97 q 209 137 282 97 q 92 245 136 176 q 49 400 49 314 l 49 600 q 92 755 49 686 q 209 863 136 824 q 368 903 282 903 l 792 903 l 792 792 l 368 792 q 269 765 314 792 q 199 693 225 738 q 174 597 174 649 l 174 556 l 792 556 l 792 444 l 174 444 l 174 403 q 199 307 174 351 q 269 235 225 263 q 368 208 314 208 l 792 208 l 792 97 l 368 97 z "},"⊄":{"ha":833,"x_min":49,"x_max":792,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 368 167 q 201 204 272 167 q 89 310 129 242 q 49 469 49 379 l 49 531 q 89 690 49 622 q 201 796 129 758 q 368 833 272 833 l 792 833 l 792 719 l 368 719 q 224 669 275 719 q 174 528 174 619 l 174 472 q 224 331 174 381 q 368 281 275 281 l 792 281 l 792 167 l 368 167 z "},"⊅":{"ha":833,"x_min":42,"x_max":785,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 42 167 l 42 281 l 465 281 q 609 331 558 281 q 660 472 660 381 l 660 528 q 609 669 660 619 q 465 719 558 719 l 42 719 l 42 833 l 465 833 q 633 796 561 833 q 744 690 704 758 q 785 531 785 622 l 785 469 q 744 310 785 379 q 633 204 704 242 q 465 167 561 167 l 42 167 z "},"+":{"ha":833,"x_min":90,"x_max":743,"o":"m 356 132 l 356 403 l 90 403 l 90 514 l 356 514 l 356 785 l 478 785 l 478 514 l 743 514 l 743 403 l 478 403 l 478 132 l 356 132 z "},"−":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 403 l 194 514 l 639 514 l 639 403 l 194 403 z "},"×":{"ha":833,"x_min":146,"x_max":686,"o":"m 217 189 l 146 261 l 342 457 l 146 654 l 217 725 l 414 529 l 615 731 l 686 658 l 485 457 l 682 261 l 610 189 l 414 386 l 217 189 z "},"÷":{"ha":833,"x_min":139,"x_max":694,"o":"m 139 410 l 139 514 l 694 514 l 694 410 l 139 410 m 403 118 q 338 140 363 118 q 313 200 313 161 q 338 261 313 238 q 403 285 363 285 l 431 285 q 496 261 471 285 q 521 200 521 238 q 496 140 521 163 q 431 118 471 118 l 403 118 m 403 639 q 338 660 363 639 q 313 721 313 682 q 338 782 313 758 q 403 806 363 806 l 431 806 q 496 782 471 806 q 521 721 521 758 q 496 661 521 683 q 431 639 471 639 l 403 639 z "},"=":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 569 l 118 681 l 715 681 l 715 569 l 118 569 m 118 236 l 118 347 l 715 347 l 715 236 l 118 236 z "},"≠":{"ha":833,"x_min":118,"x_max":715,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 m 118 569 l 118 681 l 715 681 l 715 569 l 118 569 m 118 236 l 118 347 l 715 347 l 715 236 l 118 236 z "},">":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 90 l 118 211 l 549 422 q 598 444 575 435 q 632 456 621 453 q 596 467 619 458 q 549 489 572 476 l 118 701 l 118 826 l 715 528 l 715 389 l 118 90 z "},"<":{"ha":833,"x_min":118,"x_max":715,"o":"m 715 90 l 118 389 l 118 528 l 715 826 l 715 706 l 285 494 q 235 473 258 482 q 201 461 213 464 q 238 449 214 458 q 285 428 261 440 l 715 215 l 715 90 z "},"≥":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 111 l 715 111 l 715 0 l 118 0 m 118 264 l 118 385 l 549 596 q 598 617 575 608 q 632 629 621 626 q 596 641 619 632 q 549 663 572 650 l 118 875 l 118 1000 l 715 701 l 715 563 l 118 264 z "},"≤":{"ha":833,"x_min":118,"x_max":715,"o":"m 118 0 l 118 111 l 715 111 l 715 0 l 118 0 m 715 264 l 118 563 l 118 701 l 715 1000 l 715 879 l 285 668 q 235 647 258 656 q 201 635 213 638 q 238 623 214 632 q 285 601 261 614 l 715 389 l 715 264 z "},"±":{"ha":833,"x_min":90,"x_max":743,"o":"m 97 0 l 97 97 l 356 97 l 356 410 l 90 410 l 90 521 l 356 521 l 356 792 l 478 792 l 478 521 l 743 521 l 743 410 l 478 410 l 478 97 l 736 97 l 736 0 l 97 0 z "},"≈":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 493 l 90 590 q 140 722 90 672 q 271 771 190 771 q 358 753 322 771 q 420 708 394 735 q 467 653 446 681 q 510 608 488 626 q 560 590 532 590 q 608 610 592 590 q 625 667 625 629 l 625 764 l 743 764 l 743 667 q 694 536 743 586 q 563 486 644 486 q 475 504 511 486 q 413 549 439 522 q 367 603 388 576 q 324 649 346 631 q 274 667 301 667 q 226 647 243 667 q 208 590 208 628 l 208 493 l 90 493 m 90 153 l 90 250 q 140 381 90 332 q 271 431 190 431 q 358 413 322 431 q 420 367 394 394 q 467 313 446 340 q 510 268 488 286 q 560 250 532 250 q 608 269 592 250 q 625 326 625 289 l 625 424 l 743 424 l 743 326 q 694 196 743 246 q 563 146 644 146 q 475 164 511 146 q 413 209 439 182 q 367 263 388 236 q 324 308 346 290 q 274 326 301 326 q 226 307 243 326 q 208 250 208 288 l 208 153 l 90 153 z "},"~":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 354 l 90 451 q 140 583 90 533 q 271 632 190 632 q 358 614 322 632 q 420 569 394 596 q 467 515 446 542 q 510 469 488 488 q 560 451 532 451 q 608 471 592 451 q 625 528 625 490 l 625 625 l 743 625 l 743 528 q 694 397 743 447 q 563 347 644 347 q 475 365 511 347 q 413 410 439 383 q 367 465 388 438 q 324 510 346 492 q 274 528 301 528 q 226 508 243 528 q 208 451 208 489 l 208 354 l 90 354 z "},"¬":{"ha":833,"x_min":97,"x_max":736,"o":"m 618 285 l 618 465 l 97 465 l 97 576 l 736 576 l 736 285 l 618 285 z "},"^":{"ha":833,"x_min":111,"x_max":722,"o":"m 111 472 l 360 1014 l 476 1014 l 722 472 l 610 472 l 454 831 q 434 884 443 858 q 421 924 425 910 q 406 884 415 910 q 383 831 396 858 l 224 472 l 111 472 z "},"∞":{"ha":833,"x_min":49,"x_max":785,"o":"m 231 222 q 99 274 149 222 q 49 410 49 325 l 49 514 q 101 650 49 599 q 239 701 154 701 q 358 666 310 701 q 431 564 407 631 l 435 564 q 462 626 442 594 q 517 679 482 657 q 603 701 553 701 q 735 650 685 701 q 785 514 785 599 l 785 410 q 733 274 785 325 q 594 222 681 222 q 475 258 524 222 q 403 360 426 293 l 399 360 q 372 299 393 331 q 317 244 351 267 q 231 222 282 222 m 243 306 q 308 322 283 306 q 348 360 333 338 q 369 401 363 382 q 378 429 376 421 l 335 546 q 243 618 304 618 q 173 590 200 618 q 146 514 146 561 l 146 410 q 173 334 146 363 q 243 306 200 306 m 590 306 q 661 334 635 306 q 688 410 688 363 l 688 514 q 661 590 688 561 q 590 618 635 618 q 526 602 551 618 q 485 564 500 586 q 464 522 471 542 q 456 494 457 503 l 499 378 q 537 324 514 342 q 590 306 560 306 z "},"∧":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 69 l 332 764 l 501 764 l 750 69 l 622 69 l 460 514 q 431 602 443 558 q 414 668 419 646 q 396 602 408 646 q 368 514 383 558 l 210 69 l 83 69 z "},"∨":{"ha":833,"x_min":83,"x_max":750,"o":"m 332 69 l 83 764 l 211 764 l 374 319 q 402 232 390 275 q 419 165 414 189 q 438 232 425 189 q 465 319 450 275 l 624 764 l 750 764 l 501 69 l 332 69 z "},"∫":{"ha":833,"x_min":0,"x_max":743,"o":"m 0 -250 l 0 -136 l 146 -136 q 263 -94 219 -136 q 306 21 306 -51 l 306 821 q 362 963 306 913 q 519 1014 418 1014 l 743 1014 l 743 903 l 519 903 q 453 882 475 903 q 431 819 431 861 l 431 21 q 395 -122 431 -61 q 296 -217 360 -183 q 146 -250 232 -250 l 0 -250 z "},"∏":{"ha":833,"x_min":56,"x_max":778,"o":"m 153 -250 l 153 900 l 56 900 l 56 1014 l 778 1014 l 778 900 l 681 900 l 681 -250 l 556 -250 l 556 900 l 278 900 l 278 -250 l 153 -250 z "},"∑":{"ha":833,"x_min":76,"x_max":750,"o":"m 76 -250 l 76 -136 l 518 381 l 76 900 l 76 1014 l 750 1014 l 750 903 l 229 903 l 610 454 l 610 311 l 221 -139 l 750 -139 l 750 -250 l 76 -250 z "},"√":{"ha":833,"x_min":42,"x_max":813,"o":"m 372 0 l 196 653 l 42 653 l 42 764 l 285 764 l 422 224 q 438 141 433 176 q 440 90 442 106 l 453 90 q 456 142 451 106 q 474 224 461 178 l 696 1014 l 813 1014 l 518 0 l 372 0 z "},"∂":{"ha":833,"x_min":125,"x_max":708,"o":"m 417 -14 q 260 22 325 -14 q 160 125 194 58 q 125 285 125 192 l 125 396 q 192 610 125 532 q 381 688 260 688 q 528 642 475 688 q 583 514 582 596 l 564 542 l 583 542 l 583 576 q 549 719 583 651 q 461 844 515 788 q 344 944 407 901 q 224 1014 282 988 l 411 1014 q 441 995 411 1014 q 515 939 471 976 q 604 847 560 901 q 678 722 649 793 q 708 563 708 650 l 708 285 q 631 66 708 146 q 417 -14 553 -14 m 417 97 q 540 146 497 97 q 583 285 583 194 l 583 396 q 541 535 583 488 q 417 583 499 583 q 293 535 336 583 q 250 396 250 486 l 250 285 q 293 146 250 194 q 417 97 336 97 z "},"µ":{"ha":833,"x_min":125,"x_max":708,"o":"m 125 -250 l 125 764 l 250 764 l 250 269 q 290 141 250 186 q 415 96 329 96 q 543 141 503 96 q 583 269 583 186 l 583 764 l 708 764 l 708 269 q 635 61 708 136 q 429 -14 561 -14 q 319 3 364 -14 q 248 46 274 21 q 215 93 222 71 l 210 93 q 217 74 211 93 q 227 30 222 56 q 233 -18 232 4 l 249 -250 l 125 -250 z "},"∥":{"ha":833,"x_min":215,"x_max":618,"o":"m 493 0 l 493 1014 l 618 1014 l 618 0 l 493 0 m 215 0 l 215 1014 l 340 1014 l 340 0 l 215 0 z "},"%":{"ha":833,"x_min":19,"x_max":814,"o":"m 19 0 l 711 1014 l 814 1014 l 122 0 l 19 0 m 618 -7 q 478 43 531 -7 q 425 181 425 93 l 425 271 q 478 408 425 358 q 618 458 531 458 q 758 408 706 458 q 811 271 811 358 l 811 181 q 758 43 811 93 q 618 -7 706 -7 m 618 89 q 708 181 708 89 l 708 271 q 618 364 708 364 q 528 271 528 364 l 528 181 q 618 89 528 89 m 215 556 q 75 606 128 556 q 22 743 22 656 l 22 833 q 75 971 22 921 q 215 1021 128 1021 q 356 971 303 1021 q 408 833 408 921 l 408 743 q 356 606 408 656 q 215 556 303 556 m 215 650 q 306 743 306 650 l 306 833 q 215 926 306 926 q 148 903 171 926 q 125 833 125 881 l 125 743 q 148 673 125 696 q 215 650 171 650 z "},"‰":{"ha":833,"x_min":-11,"x_max":833,"o":"m -11 0 l 540 1014 l 624 1014 l 72 0 l -11 0 m 450 65 q 506 86 486 65 q 525 146 525 107 l 525 271 q 506 331 525 311 q 450 351 486 351 q 397 331 415 351 q 378 271 378 310 l 378 146 q 397 86 378 107 q 450 65 415 65 m 444 -7 q 336 34 376 -7 q 296 146 296 75 l 296 271 q 336 383 296 342 q 444 424 376 424 q 533 394 506 424 q 564 335 561 364 q 596 394 567 364 q 685 424 625 424 q 794 383 754 424 q 833 271 833 342 l 833 146 q 794 34 833 75 q 685 -7 754 -7 q 597 23 625 -7 q 565 82 568 53 q 534 23 563 53 q 444 -7 506 -7 m 679 65 q 733 86 715 65 q 751 146 751 107 l 751 271 q 733 331 751 311 q 679 351 715 351 q 624 331 643 351 q 604 271 604 311 l 604 146 q 624 86 604 107 q 679 65 643 65 m 167 611 q 45 654 90 611 q 0 771 0 697 l 0 861 q 45 978 0 935 q 167 1021 90 1021 q 289 978 244 1021 q 333 861 333 935 l 333 771 q 289 654 333 697 q 167 611 244 611 m 167 693 q 225 713 206 693 q 244 771 244 732 l 244 861 q 225 919 244 900 q 167 939 206 939 q 108 919 128 939 q 89 861 89 900 l 89 771 q 108 713 89 732 q 167 693 128 693 z "},"⁺":{"ha":833,"x_min":222,"x_max":611,"o":"m 361 424 l 361 569 l 222 569 l 222 667 l 361 667 l 361 813 l 472 813 l 472 667 l 611 667 l 611 569 l 472 569 l 472 424 l 361 424 z "},"∷":{"ha":833,"x_min":76,"x_max":756,"o":"m 642 483 q 560 515 592 483 q 528 596 528 546 q 560 677 528 646 q 642 708 592 708 q 724 677 692 708 q 756 596 756 646 q 724 515 756 546 q 642 483 692 483 m 190 -14 q 108 17 140 -14 q 76 99 76 49 q 108 180 76 149 q 190 211 140 211 q 272 180 240 211 q 304 99 304 149 q 272 17 304 49 q 190 -14 240 -14 m 642 -14 q 560 17 592 -14 q 528 99 528 49 q 560 180 528 149 q 642 211 592 211 q 724 180 692 211 q 756 99 756 149 q 724 17 756 49 q 642 -14 692 -14 m 190 483 q 108 515 140 483 q 76 596 76 546 q 108 677 76 646 q 190 708 140 708 q 272 677 240 708 q 304 596 304 646 q 272 515 304 546 q 190 483 240 483 z "},"⊆":{"ha":833,"x_min":49,"x_max":792,"o":"m 69 0 l 69 114 l 792 114 l 792 0 l 69 0 m 368 278 q 201 315 272 278 q 89 422 129 353 q 49 581 49 490 l 49 642 q 89 801 49 733 q 201 907 129 869 q 368 944 272 944 l 792 944 l 792 831 l 368 831 q 224 781 275 831 q 174 639 174 731 l 174 583 q 224 442 174 492 q 368 392 275 392 l 792 392 l 792 278 l 368 278 z "},"⊇":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 0 l 42 114 l 764 114 l 764 0 l 42 0 m 42 278 l 42 392 l 465 392 q 609 442 558 392 q 660 583 660 492 l 660 639 q 609 781 660 731 q 465 831 558 831 l 42 831 l 42 944 l 465 944 q 633 907 561 944 q 744 801 704 869 q 785 642 785 733 l 785 581 q 744 422 785 490 q 633 315 704 353 q 465 278 561 278 l 42 278 z "},"∘":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 292 q 297 339 344 292 q 250 458 250 386 q 297 578 250 532 q 417 625 344 625 q 537 578 490 625 q 583 458 583 532 q 537 339 583 386 q 417 292 490 292 m 417 347 q 497 378 465 347 q 528 458 528 410 q 497 538 528 507 q 417 569 465 569 q 337 538 368 569 q 306 458 306 507 q 337 378 306 410 q 417 347 368 347 z "},"∼":{"ha":833,"x_min":90,"x_max":743,"o":"m 90 354 l 90 451 q 140 583 90 533 q 271 632 190 632 q 358 614 322 632 q 420 569 394 596 q 467 515 446 542 q 510 469 488 488 q 560 451 532 451 q 608 471 592 451 q 625 528 625 490 l 625 625 l 743 625 l 743 528 q 694 397 743 447 q 563 347 644 347 q 475 365 511 347 q 413 410 439 383 q 367 465 388 438 q 324 510 346 492 q 274 528 301 528 q 226 508 243 528 q 208 451 208 489 l 208 354 l 90 354 z "},"⊂":{"ha":833,"x_min":49,"x_max":792,"o":"m 368 167 q 201 204 272 167 q 89 310 129 242 q 49 469 49 379 l 49 531 q 89 690 49 622 q 201 796 129 758 q 368 833 272 833 l 792 833 l 792 719 l 368 719 q 224 669 275 719 q 174 528 174 619 l 174 472 q 224 331 174 381 q 368 281 275 281 l 792 281 l 792 167 l 368 167 z "},"∋":{"ha":833,"x_min":49,"x_max":792,"o":"m 49 97 l 49 208 l 472 208 q 572 235 528 208 q 641 307 615 263 q 667 403 667 351 l 667 444 l 49 444 l 49 556 l 667 556 l 667 597 q 641 693 667 649 q 572 765 615 738 q 472 792 528 792 l 49 792 l 49 903 l 472 903 q 632 863 560 903 q 748 755 704 824 q 792 600 792 686 l 792 400 q 748 245 792 314 q 632 137 704 176 q 472 97 560 97 l 49 97 z "},"⊃":{"ha":833,"x_min":42,"x_max":785,"o":"m 42 167 l 42 281 l 465 281 q 609 331 558 281 q 660 472 660 381 l 660 528 q 609 669 660 619 q 465 719 558 719 l 42 719 l 42 833 l 465 833 q 633 796 561 833 q 744 690 704 758 q 785 531 785 622 l 785 469 q 744 310 785 379 q 633 204 704 242 q 465 167 561 167 l 42 167 z "},"∀":{"ha":833,"x_min":69,"x_max":764,"o":"m 332 0 l 69 1014 l 196 1014 l 367 326 q 398 192 385 254 q 417 97 411 129 q 436 191 424 129 q 467 325 449 253 l 636 1014 l 764 1014 l 500 0 l 332 0 m 224 628 l 224 733 l 599 733 l 599 628 l 224 628 z "},"↑":{"ha":833,"x_min":14,"x_max":819,"o":"m 354 0 l 354 722 q 357 784 354 753 q 361 833 360 815 l 347 833 q 271 758 333 813 l 14 539 l 14 685 l 418 1028 l 819 686 l 819 540 l 561 760 q 512 806 531 786 q 486 833 493 825 l 472 833 q 477 784 475 815 q 479 722 479 753 l 479 0 l 354 0 z "},"↗":{"ha":833,"x_min":14,"x_max":771,"o":"m 96 106 l 14 192 l 504 686 q 544 723 524 706 q 578 750 565 740 l 576 760 q 531 756 561 758 q 465 753 500 753 l 194 753 l 194 861 l 771 861 l 771 285 l 660 285 l 660 561 q 663 629 660 596 q 668 681 665 663 l 658 683 q 628 646 649 669 q 589 603 608 622 l 96 106 z "},"→":{"ha":833,"x_min":56,"x_max":792,"o":"m 324 49 l 549 333 q 581 369 563 351 q 611 396 599 386 l 611 408 q 565 405 593 407 q 514 403 538 403 l 56 403 l 56 514 l 514 514 q 565 512 538 514 q 611 507 593 510 l 611 519 q 584 546 601 528 q 549 585 567 564 l 324 868 l 469 868 l 792 458 l 471 49 l 324 49 z "},"↘":{"ha":833,"x_min":14,"x_max":771,"o":"m 194 104 l 194 213 l 465 213 q 531 210 500 213 q 576 206 561 208 l 578 215 q 544 243 565 225 q 504 279 524 261 l 14 774 l 99 861 l 592 364 q 631 322 611 344 q 661 283 651 299 l 671 286 q 664 337 668 304 q 660 404 660 369 l 660 681 l 771 681 l 771 104 l 194 104 z "},"↓":{"ha":833,"x_min":14,"x_max":819,"o":"m 415 -14 l 14 328 l 14 474 l 272 254 q 322 208 303 228 q 347 181 342 189 l 361 181 q 357 230 360 199 q 354 292 354 261 l 354 1014 l 479 1014 l 479 292 q 477 230 479 261 q 472 181 475 199 l 486 181 q 563 256 500 201 l 819 475 l 819 329 l 415 -14 z "},"↙":{"ha":833,"x_min":63,"x_max":819,"o":"m 63 104 l 63 681 l 174 681 l 174 404 q 170 336 174 369 q 164 283 167 303 l 174 281 q 204 319 185 296 q 243 361 224 342 l 736 858 l 819 774 l 329 279 q 290 243 311 261 q 256 215 268 225 l 257 206 q 303 210 272 208 q 368 213 333 213 l 639 213 l 639 104 l 63 104 z "},"←":{"ha":833,"x_min":56,"x_max":792,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 792 514 l 792 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 263 371 246 389 q 299 332 281 353 l 524 49 l 378 49 z "},"↖":{"ha":833,"x_min":63,"x_max":819,"o":"m 735 104 l 242 601 q 203 644 222 621 q 172 682 183 668 l 163 679 q 169 628 165 661 q 174 561 174 596 l 174 285 l 63 285 l 63 861 l 639 861 l 639 753 l 368 753 q 303 756 333 753 q 257 760 272 758 l 256 750 q 290 723 268 740 q 329 686 311 706 l 819 192 l 735 104 z "},"↔":{"ha":833,"x_min":-111,"x_max":944,"o":"m 211 49 l -111 458 l 210 868 l 357 868 l 132 583 q 100 548 118 565 q 69 521 82 531 l 69 508 q 116 513 88 511 q 167 514 144 514 l 667 514 q 718 512 690 514 q 764 507 746 510 l 764 519 q 737 546 754 528 q 701 585 719 564 l 476 868 l 622 868 l 944 458 l 624 49 l 476 49 l 701 333 q 733 369 715 351 q 764 396 751 386 l 764 408 q 718 405 746 407 q 667 403 690 403 l 167 403 q 116 406 144 403 q 69 410 88 408 l 69 397 q 97 371 79 389 q 132 332 114 353 l 357 49 l 211 49 z "},"↕":{"ha":833,"x_min":14,"x_max":819,"o":"m 417 -236 l 14 106 l 14 251 l 272 32 q 322 -14 303 6 q 347 -42 342 -33 l 361 -42 q 357 8 360 -24 q 354 69 354 39 l 354 944 q 357 1006 354 975 q 361 1056 360 1038 l 347 1056 q 271 981 333 1035 l 14 761 l 14 907 l 417 1250 l 819 908 l 819 763 l 561 982 q 512 1028 531 1008 q 486 1056 493 1047 l 472 1056 q 477 1006 475 1038 q 479 944 479 975 l 479 69 q 477 8 479 39 q 472 -42 475 -24 l 486 -42 q 563 33 500 -21 l 819 253 l 819 107 l 417 -236 z "},"⇧":{"ha":833,"x_min":21,"x_max":813,"o":"m 194 0 l 194 471 l 306 471 l 306 0 l 194 0 m 21 371 l 21 471 l 236 471 l 236 371 l 21 371 m 528 0 l 528 471 l 639 471 l 639 0 l 528 0 m 597 371 l 597 471 l 813 471 l 813 371 l 597 371 m 194 0 l 194 106 l 639 106 l 639 0 l 194 0 m 21 471 l 349 764 l 485 764 l 811 471 l 649 471 l 414 678 l 181 471 l 21 471 z "},"⌄":{"ha":833,"x_min":14,"x_max":819,"o":"m 415 -14 l 14 328 l 14 474 l 424 128 l 819 475 l 819 329 l 415 -14 z "},"⟵":{"ha":1667,"x_min":56,"x_max":1625,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 1625 514 l 1625 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 264 372 246 389 q 299 332 282 354 l 524 49 l 378 49 z "},"⟶":{"ha":1667,"x_min":42,"x_max":1611,"o":"m 1289 49 l 1143 49 l 1368 332 q 1403 372 1385 354 q 1431 397 1421 389 l 1431 410 q 1385 406 1413 408 q 1333 403 1357 403 l 42 403 l 42 514 l 1333 514 q 1385 513 1357 514 q 1431 508 1413 511 l 1431 521 q 1400 548 1418 531 q 1368 583 1382 565 l 1143 868 l 1290 868 l 1611 458 l 1289 49 z "},"⟷":{"ha":1667,"x_min":56,"x_max":1611,"o":"m 378 49 l 56 458 l 376 868 l 524 868 l 299 583 q 267 548 285 565 q 236 521 249 531 l 236 508 q 283 513 254 511 q 333 514 311 514 l 1333 514 q 1385 512 1357 514 q 1431 507 1413 510 l 1431 519 q 1403 546 1421 528 q 1368 585 1386 564 l 1143 868 l 1289 868 l 1611 458 l 1290 49 l 1143 49 l 1368 333 q 1400 369 1382 351 q 1431 396 1418 386 l 1431 408 q 1385 405 1413 407 q 1333 403 1357 403 l 333 403 q 283 406 311 403 q 236 410 254 408 l 236 397 q 264 372 246 389 q 299 332 282 354 l 524 49 l 378 49 z "},"▁":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 -187 l 847 -187 l 847 -417 l -14 -417 z "},"▂":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 42 l 847 42 l 847 -417 l -14 -417 z "},"▃":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 271 l 847 271 l 847 -417 l -14 -417 z "},"▄":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 500 l 847 500 l 847 -417 l -14 -417 z "},"▅":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 729 l 847 729 l 847 -417 l -14 -417 z "},"▆":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 958 l 847 958 l 847 -417 l -14 -417 z "},"▇":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1188 l 847 1188 l 847 -417 l -14 -417 z "},"█":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 847 1417 l 847 -417 l -14 -417 z "},"▀":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 l -14 1417 l 847 1417 l 847 500 l -14 500 z "},"▔":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 1188 l -14 1417 l 847 1417 l 847 1188 l -14 1188 z "},"▏":{"ha":833,"x_min":-14,"x_max":104,"o":"m -14 -417 l -14 1417 l 104 1417 l 104 -417 l -14 -417 z "},"▎":{"ha":833,"x_min":-14,"x_max":208,"o":"m -14 -417 l -14 1417 l 208 1417 l 208 -417 l -14 -417 z "},"▍":{"ha":833,"x_min":-14,"x_max":278,"o":"m -14 -417 l -14 1417 l 278 1417 l 278 -417 l -14 -417 z "},"▌":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 -417 l -14 1417 l 417 1417 l 417 -417 l -14 -417 z "},"▋":{"ha":833,"x_min":-14,"x_max":521,"o":"m -14 -417 l -14 1417 l 521 1417 l 521 -417 l -14 -417 z "},"▊":{"ha":833,"x_min":-14,"x_max":625,"o":"m -14 -417 l -14 1417 l 625 1417 l 625 -417 l -14 -417 z "},"▉":{"ha":833,"x_min":-14,"x_max":729,"o":"m -14 -417 l -14 1417 l 729 1417 l 729 -417 l -14 -417 z "},"▐":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 -417 l 417 1417 l 847 1417 l 847 -417 l 417 -417 z "},"▕":{"ha":833,"x_min":729,"x_max":847,"o":"m 729 -417 l 729 1417 l 847 1417 l 847 -417 l 729 -417 z "},"▖":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 -417 l -14 500 l 417 500 l 417 -417 l -14 -417 z "},"▗":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 -417 l 417 500 l 847 500 l 847 -417 l 417 -417 z "},"▘":{"ha":833,"x_min":-14,"x_max":417,"o":"m -14 500 l -14 1417 l 417 1417 l 417 500 l -14 500 z "},"▙":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 417 1417 l 417 500 l 847 500 l 847 -417 l -14 -417 z "},"▚":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 l -14 1417 l 417 1417 l 417 500 l -14 500 m 417 -417 l 417 500 l 847 500 l 847 -417 l 417 -417 z "},"▛":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 1417 l 847 1417 l 847 500 l 417 500 l 417 -417 l -14 -417 z "},"▜":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 -417 l 417 500 l -14 500 l -14 1417 l 847 1417 l 847 -417 l 417 -417 z "},"▝":{"ha":833,"x_min":417,"x_max":847,"o":"m 417 500 l 417 1417 l 847 1417 l 847 500 l 417 500 z "},"▞":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 500 l 417 1417 l 847 1417 l 847 500 l 417 500 m -14 -417 l -14 500 l 417 500 l 417 -417 l -14 -417 z "},"▟":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 -417 l -14 500 l 417 500 l 417 1417 l 847 1417 l 847 -417 l -14 -417 z "},"░":{"ha":833,"x_min":83,"x_max":833,"o":"m 750 1333 l 750 1417 l 833 1417 l 833 1333 l 750 1333 m 83 1333 l 83 1417 l 167 1417 l 167 1333 l 83 1333 m 250 1333 l 250 1417 l 333 1417 l 333 1333 l 250 1333 m 417 1333 l 417 1417 l 500 1417 l 500 1333 l 417 1333 m 583 1333 l 583 1417 l 667 1417 l 667 1333 l 583 1333 m 750 1167 l 750 1250 l 833 1250 l 833 1167 l 750 1167 m 83 1167 l 83 1250 l 167 1250 l 167 1167 l 83 1167 m 250 1167 l 250 1250 l 333 1250 l 333 1167 l 250 1167 m 417 1167 l 417 1250 l 500 1250 l 500 1167 l 417 1167 m 583 1167 l 583 1250 l 667 1250 l 667 1167 l 583 1167 m 750 1000 l 750 1083 l 833 1083 l 833 1000 l 750 1000 m 83 1000 l 83 1083 l 167 1083 l 167 1000 l 83 1000 m 250 1000 l 250 1083 l 333 1083 l 333 1000 l 250 1000 m 417 1000 l 417 1083 l 500 1083 l 500 1000 l 417 1000 m 583 1000 l 583 1083 l 667 1083 l 667 1000 l 583 1000 m 750 833 l 750 917 l 833 917 l 833 833 l 750 833 m 83 833 l 83 917 l 167 917 l 167 833 l 83 833 m 250 833 l 250 917 l 333 917 l 333 833 l 250 833 m 417 833 l 417 917 l 500 917 l 500 833 l 417 833 m 583 833 l 583 917 l 667 917 l 667 833 l 583 833 m 750 667 l 750 750 l 833 750 l 833 667 l 750 667 m 83 667 l 83 750 l 167 750 l 167 667 l 83 667 m 250 667 l 250 750 l 333 750 l 333 667 l 250 667 m 417 667 l 417 750 l 500 750 l 500 667 l 417 667 m 583 667 l 583 750 l 667 750 l 667 667 l 583 667 m 750 500 l 750 583 l 833 583 l 833 500 l 750 500 m 83 500 l 83 583 l 167 583 l 167 500 l 83 500 m 250 500 l 250 583 l 333 583 l 333 500 l 250 500 m 417 500 l 417 583 l 500 583 l 500 500 l 417 500 m 583 500 l 583 583 l 667 583 l 667 500 l 583 500 m 750 333 l 750 417 l 833 417 l 833 333 l 750 333 m 83 333 l 83 417 l 167 417 l 167 333 l 83 333 m 250 333 l 250 417 l 333 417 l 333 333 l 250 333 m 417 333 l 417 417 l 500 417 l 500 333 l 417 333 m 583 333 l 583 417 l 667 417 l 667 333 l 583 333 m 750 167 l 750 250 l 833 250 l 833 167 l 750 167 m 83 167 l 83 250 l 167 250 l 167 167 l 83 167 m 250 167 l 250 250 l 333 250 l 333 167 l 250 167 m 417 167 l 417 250 l 500 250 l 500 167 l 417 167 m 583 167 l 583 250 l 667 250 l 667 167 l 583 167 m 750 0 l 750 83 l 833 83 l 833 0 l 750 0 m 83 0 l 83 83 l 167 83 l 167 0 l 83 0 m 250 0 l 250 83 l 333 83 l 333 0 l 250 0 m 417 0 l 417 83 l 500 83 l 500 0 l 417 0 m 583 0 l 583 83 l 667 83 l 667 0 l 583 0 m 750 -167 l 750 -83 l 833 -83 l 833 -167 l 750 -167 m 83 -167 l 83 -83 l 167 -83 l 167 -167 l 83 -167 m 250 -167 l 250 -83 l 333 -83 l 333 -167 l 250 -167 m 417 -167 l 417 -83 l 500 -83 l 500 -167 l 417 -167 m 583 -167 l 583 -83 l 667 -83 l 667 -167 l 583 -167 m 750 -333 l 750 -250 l 833 -250 l 833 -333 l 750 -333 m 83 -333 l 83 -250 l 167 -250 l 167 -333 l 83 -333 m 250 -333 l 250 -250 l 333 -250 l 333 -333 l 250 -333 m 417 -333 l 417 -250 l 500 -250 l 500 -333 l 417 -333 m 583 -333 l 583 -250 l 667 -250 l 667 -333 l 583 -333 z "},"▒":{"ha":833,"x_min":0,"x_max":833,"o":"m 750 1333 l 750 1417 l 833 1417 l 833 1333 l 750 1333 m 0 -417 l 0 -333 l 83 -333 l 83 -417 l 0 -417 m 0 -250 l 0 -167 l 83 -167 l 83 -250 l 0 -250 m 83 -333 l 83 -250 l 167 -250 l 167 -333 l 83 -333 m 167 -417 l 167 -333 l 250 -333 l 250 -417 l 167 -417 m 0 -83 l 0 0 l 83 0 l 83 -83 l 0 -83 m 83 -167 l 83 -83 l 167 -83 l 167 -167 l 83 -167 m 167 -250 l 167 -167 l 250 -167 l 250 -250 l 167 -250 m 250 -333 l 250 -250 l 333 -250 l 333 -333 l 250 -333 m 333 -417 l 333 -333 l 417 -333 l 417 -417 l 333 -417 m 0 83 l 0 167 l 83 167 l 83 83 l 0 83 m 83 0 l 83 83 l 167 83 l 167 0 l 83 0 m 167 -83 l 167 0 l 250 0 l 250 -83 l 167 -83 m 250 -167 l 250 -83 l 333 -83 l 333 -167 l 250 -167 m 333 -250 l 333 -167 l 417 -167 l 417 -250 l 333 -250 m 417 -333 l 417 -250 l 500 -250 l 500 -333 l 417 -333 m 500 -417 l 500 -333 l 583 -333 l 583 -417 l 500 -417 m 0 250 l 0 333 l 83 333 l 83 250 l 0 250 m 83 167 l 83 250 l 167 250 l 167 167 l 83 167 m 167 83 l 167 167 l 250 167 l 250 83 l 167 83 m 250 0 l 250 83 l 333 83 l 333 0 l 250 0 m 333 -83 l 333 0 l 417 0 l 417 -83 l 333 -83 m 417 -167 l 417 -83 l 500 -83 l 500 -167 l 417 -167 m 500 -250 l 500 -167 l 583 -167 l 583 -250 l 500 -250 m 583 -333 l 583 -250 l 667 -250 l 667 -333 l 583 -333 m 667 -417 l 667 -333 l 750 -333 l 750 -417 l 667 -417 m 0 417 l 0 500 l 83 500 l 83 417 l 0 417 m 83 333 l 83 417 l 167 417 l 167 333 l 83 333 m 167 250 l 167 333 l 250 333 l 250 250 l 167 250 m 250 167 l 250 250 l 333 250 l 333 167 l 250 167 m 333 83 l 333 167 l 417 167 l 417 83 l 333 83 m 417 0 l 417 83 l 500 83 l 500 0 l 417 0 m 500 -83 l 500 0 l 583 0 l 583 -83 l 500 -83 m 583 -167 l 583 -83 l 667 -83 l 667 -167 l 583 -167 m 667 -250 l 667 -167 l 750 -167 l 750 -250 l 667 -250 m 750 -333 l 750 -250 l 833 -250 l 833 -333 l 750 -333 m 0 583 l 0 667 l 83 667 l 83 583 l 0 583 m 83 500 l 83 583 l 167 583 l 167 500 l 83 500 m 167 417 l 167 500 l 250 500 l 250 417 l 167 417 m 250 333 l 250 417 l 333 417 l 333 333 l 250 333 m 333 250 l 333 333 l 417 333 l 417 250 l 333 250 m 417 167 l 417 250 l 500 250 l 500 167 l 417 167 m 500 83 l 500 167 l 583 167 l 583 83 l 500 83 m 583 0 l 583 83 l 667 83 l 667 0 l 583 0 m 667 -83 l 667 0 l 750 0 l 750 -83 l 667 -83 m 750 -167 l 750 -83 l 833 -83 l 833 -167 l 750 -167 m 0 750 l 0 833 l 83 833 l 83 750 l 0 750 m 83 667 l 83 750 l 167 750 l 167 667 l 83 667 m 167 583 l 167 667 l 250 667 l 250 583 l 167 583 m 250 500 l 250 583 l 333 583 l 333 500 l 250 500 m 333 417 l 333 500 l 417 500 l 417 417 l 333 417 m 417 333 l 417 417 l 500 417 l 500 333 l 417 333 m 500 250 l 500 333 l 583 333 l 583 250 l 500 250 m 583 167 l 583 250 l 667 250 l 667 167 l 583 167 m 667 83 l 667 167 l 750 167 l 750 83 l 667 83 m 750 0 l 750 83 l 833 83 l 833 0 l 750 0 m 0 917 l 0 1000 l 83 1000 l 83 917 l 0 917 m 83 833 l 83 917 l 167 917 l 167 833 l 83 833 m 167 750 l 167 833 l 250 833 l 250 750 l 167 750 m 250 667 l 250 750 l 333 750 l 333 667 l 250 667 m 333 583 l 333 667 l 417 667 l 417 583 l 333 583 m 417 500 l 417 583 l 500 583 l 500 500 l 417 500 m 500 417 l 500 500 l 583 500 l 583 417 l 500 417 m 583 333 l 583 417 l 667 417 l 667 333 l 583 333 m 667 250 l 667 333 l 750 333 l 750 250 l 667 250 m 750 167 l 750 250 l 833 250 l 833 167 l 750 167 m 0 1083 l 0 1167 l 83 1167 l 83 1083 l 0 1083 m 83 1000 l 83 1083 l 167 1083 l 167 1000 l 83 1000 m 167 917 l 167 1000 l 250 1000 l 250 917 l 167 917 m 250 833 l 250 917 l 333 917 l 333 833 l 250 833 m 333 750 l 333 833 l 417 833 l 417 750 l 333 750 m 417 667 l 417 750 l 500 750 l 500 667 l 417 667 m 500 583 l 500 667 l 583 667 l 583 583 l 500 583 m 583 500 l 583 583 l 667 583 l 667 500 l 583 500 m 667 417 l 667 500 l 750 500 l 750 417 l 667 417 m 750 333 l 750 417 l 833 417 l 833 333 l 750 333 m 0 1250 l 0 1333 l 83 1333 l 83 1250 l 0 1250 m 83 1167 l 83 1250 l 167 1250 l 167 1167 l 83 1167 m 167 1083 l 167 1167 l 250 1167 l 250 1083 l 167 1083 m 250 1000 l 250 1083 l 333 1083 l 333 1000 l 250 1000 m 333 917 l 333 1000 l 417 1000 l 417 917 l 333 917 m 417 833 l 417 917 l 500 917 l 500 833 l 417 833 m 500 750 l 500 833 l 583 833 l 583 750 l 500 750 m 583 667 l 583 750 l 667 750 l 667 667 l 583 667 m 667 583 l 667 667 l 750 667 l 750 583 l 667 583 m 750 500 l 750 583 l 833 583 l 833 500 l 750 500 m 83 1333 l 83 1417 l 167 1417 l 167 1333 l 83 1333 m 167 1250 l 167 1333 l 250 1333 l 250 1250 l 167 1250 m 250 1167 l 250 1250 l 333 1250 l 333 1167 l 250 1167 m 333 1083 l 333 1167 l 417 1167 l 417 1083 l 333 1083 m 417 1000 l 417 1083 l 500 1083 l 500 1000 l 417 1000 m 500 917 l 500 1000 l 583 1000 l 583 917 l 500 917 m 583 833 l 583 917 l 667 917 l 667 833 l 583 833 m 667 750 l 667 833 l 750 833 l 750 750 l 667 750 m 750 667 l 750 750 l 833 750 l 833 667 l 750 667 m 250 1333 l 250 1417 l 333 1417 l 333 1333 l 250 1333 m 333 1250 l 333 1333 l 417 1333 l 417 1250 l 333 1250 m 417 1167 l 417 1250 l 500 1250 l 500 1167 l 417 1167 m 500 1083 l 500 1167 l 583 1167 l 583 1083 l 500 1083 m 583 1000 l 583 1083 l 667 1083 l 667 1000 l 583 1000 m 667 917 l 667 1000 l 750 1000 l 750 917 l 667 917 m 750 833 l 750 917 l 833 917 l 833 833 l 750 833 m 417 1333 l 417 1417 l 500 1417 l 500 1333 l 417 1333 m 500 1250 l 500 1333 l 583 1333 l 583 1250 l 500 1250 m 583 1167 l 583 1250 l 667 1250 l 667 1167 l 583 1167 m 667 1083 l 667 1167 l 750 1167 l 750 1083 l 667 1083 m 750 1000 l 750 1083 l 833 1083 l 833 1000 l 750 1000 m 583 1333 l 583 1417 l 667 1417 l 667 1333 l 583 1333 m 667 1250 l 667 1333 l 750 1333 l 750 1250 l 667 1250 m 750 1167 l 750 1250 l 833 1250 l 833 1167 l 750 1167 z "},"▓":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -417 l 0 -333 l 83 -333 l 83 -250 l 0 -250 l 0 -167 l 83 -167 l 83 -83 l 0 -83 l 0 0 l 83 0 l 83 83 l 0 83 l 0 167 l 83 167 l 83 250 l 0 250 l 0 333 l 83 333 l 83 417 l 0 417 l 0 500 l 83 500 l 83 583 l 0 583 l 0 667 l 83 667 l 83 750 l 0 750 l 0 833 l 83 833 l 83 917 l 0 917 l 0 1000 l 83 1000 l 83 1083 l 0 1083 l 0 1167 l 83 1167 l 83 1250 l 0 1250 l 0 1333 l 83 1333 l 83 1417 l 167 1417 l 167 1333 l 250 1333 l 250 1417 l 333 1417 l 333 1333 l 417 1333 l 417 1417 l 500 1417 l 500 1333 l 583 1333 l 583 1417 l 667 1417 l 667 1333 l 750 1333 l 750 1417 l 833 1417 l 833 -417 l 0 -417 m 167 -333 l 250 -333 l 250 -250 l 167 -250 l 167 -333 m 167 -167 l 250 -167 l 250 -83 l 167 -83 l 167 -167 m 333 -333 l 417 -333 l 417 -250 l 333 -250 l 333 -333 m 167 0 l 250 0 l 250 83 l 167 83 l 167 0 m 333 -167 l 417 -167 l 417 -83 l 333 -83 l 333 -167 m 500 -333 l 583 -333 l 583 -250 l 500 -250 l 500 -333 m 167 167 l 250 167 l 250 250 l 167 250 l 167 167 m 333 0 l 417 0 l 417 83 l 333 83 l 333 0 m 500 -167 l 583 -167 l 583 -83 l 500 -83 l 500 -167 m 667 -333 l 750 -333 l 750 -250 l 667 -250 l 667 -333 m 167 333 l 250 333 l 250 417 l 167 417 l 167 333 m 333 167 l 417 167 l 417 250 l 333 250 l 333 167 m 500 0 l 583 0 l 583 83 l 500 83 l 500 0 m 667 -167 l 750 -167 l 750 -83 l 667 -83 l 667 -167 m 167 500 l 250 500 l 250 583 l 167 583 l 167 500 m 333 333 l 417 333 l 417 417 l 333 417 l 333 333 m 500 167 l 583 167 l 583 250 l 500 250 l 500 167 m 667 0 l 750 0 l 750 83 l 667 83 l 667 0 m 167 667 l 250 667 l 250 750 l 167 750 l 167 667 m 333 500 l 417 500 l 417 583 l 333 583 l 333 500 m 500 333 l 583 333 l 583 417 l 500 417 l 500 333 m 667 167 l 750 167 l 750 250 l 667 250 l 667 167 m 167 833 l 250 833 l 250 917 l 167 917 l 167 833 m 333 667 l 417 667 l 417 750 l 333 750 l 333 667 m 500 500 l 583 500 l 583 583 l 500 583 l 500 500 m 667 333 l 750 333 l 750 417 l 667 417 l 667 333 m 167 1000 l 250 1000 l 250 1083 l 167 1083 l 167 1000 m 333 833 l 417 833 l 417 917 l 333 917 l 333 833 m 500 667 l 583 667 l 583 750 l 500 750 l 500 667 m 667 500 l 750 500 l 750 583 l 667 583 l 667 500 m 167 1167 l 250 1167 l 250 1250 l 167 1250 l 167 1167 m 333 1000 l 417 1000 l 417 1083 l 333 1083 l 333 1000 m 500 833 l 583 833 l 583 917 l 500 917 l 500 833 m 667 667 l 750 667 l 750 750 l 667 750 l 667 667 m 333 1167 l 417 1167 l 417 1250 l 333 1250 l 333 1167 m 500 1000 l 583 1000 l 583 1083 l 500 1083 l 500 1000 m 667 833 l 750 833 l 750 917 l 667 917 l 667 833 m 500 1167 l 583 1167 l 583 1250 l 500 1250 l 500 1167 m 667 1000 l 750 1000 l 750 1083 l 667 1083 l 667 1000 m 667 1167 l 750 1167 l 750 1250 l 667 1250 l 667 1167 z "},"●":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 z "},"◯":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 731 685 778 603 q 601 814 683 767 q 417 861 519 861 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 z "},"◔":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 644 500 715 500 q 512 500 574 500 q 417 500 450 500 q 417 567 417 521 q 417 669 417 613 q 417 776 417 725 q 417 861 417 828 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 z "},"◕":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 56 500 q 216 500 154 500 q 324 500 278 500 q 417 500 369 500 q 417 651 417 553 q 417 861 417 750 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 z "},"◌":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 500 q 0 613 -14 561 l 67 594 q 58 549 61 572 q 56 500 56 525 q 58 452 56 475 q 67 406 61 429 l 0 388 q -14 500 -14 439 m 40 283 l 101 318 q 235 185 150 233 l 200 124 q 40 283 97 181 m 40 717 q 200 876 97 819 l 235 815 q 101 682 150 767 l 40 717 m 304 917 q 417 931 356 931 q 529 917 478 931 l 511 850 q 465 858 489 856 q 417 861 442 861 q 369 858 392 861 q 322 850 346 856 l 304 917 m 304 83 l 322 150 q 369 142 346 144 q 417 139 392 139 q 465 142 442 139 q 511 150 489 144 l 529 83 q 417 69 478 69 q 304 83 356 69 m 599 815 l 633 876 q 793 717 736 819 l 732 682 q 599 815 683 767 m 599 185 q 732 318 683 233 l 793 283 q 633 124 736 181 l 599 185 m 767 406 q 775 452 772 429 q 778 500 778 475 q 775 549 778 525 q 767 594 772 572 l 833 613 q 847 500 847 561 q 833 388 847 439 l 767 406 z "},"◎":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 q 197 126 294 69 q 42 280 99 182 q -14 500 -14 378 q 42 721 -14 624 q 197 874 99 818 q 417 931 294 931 q 638 874 540 931 q 791 721 735 818 q 847 500 847 624 q 791 280 847 378 q 638 126 735 182 q 417 69 540 69 m 417 139 q 601 186 519 139 q 731 315 683 233 q 778 500 778 397 q 731 685 778 603 q 601 814 683 767 q 417 861 519 861 q 232 814 314 861 q 103 685 150 767 q 56 500 56 603 q 103 315 56 397 q 232 186 150 233 q 417 139 314 139 m 417 324 q 291 374 342 324 q 240 500 240 425 q 291 626 240 575 q 417 676 342 676 q 542 626 492 676 q 593 500 593 575 q 542 374 593 425 q 417 324 492 324 m 417 388 q 497 420 465 388 q 529 500 529 453 q 497 581 529 549 q 417 613 465 613 q 337 581 369 613 q 304 500 304 549 q 337 420 304 453 q 417 388 369 388 z "},"◆":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 500 l 417 932 l 847 500 l 417 69 z "},"◇":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 500 l 417 932 l 847 500 l 417 69 m 417 178 l 739 500 l 417 824 l 94 500 l 417 178 z "},"◊":{"ha":833,"x_min":83,"x_max":750,"o":"m 333 0 l 83 450 l 83 549 l 333 1000 l 508 1000 l 750 549 l 750 450 l 508 0 l 333 0 m 415 83 l 421 83 q 449 140 431 103 q 489 218 468 178 l 625 478 l 625 521 l 489 782 q 449 860 468 822 q 421 917 431 897 l 415 917 q 386 860 406 897 q 346 782 367 822 l 208 521 l 208 478 l 346 218 q 387 140 368 176 q 415 83 406 103 z "},"■":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 z "},"□":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 847 l 69 153 z "},"▪":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 208 708 l 625 708 l 625 292 l 208 292 z "},"▫":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 208 708 l 625 708 l 625 292 l 208 292 m 278 361 l 556 361 l 556 639 l 278 639 l 278 361 z "},"◧":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 83 l 833 917 l 0 917 l 0 83 l 833 83 m 764 153 l 403 153 l 403 847 l 764 847 l 764 153 z "},"◨":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 431 153 l 431 847 l 69 847 l 69 153 z "},"◩":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 153 z "},"◪":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 917 l 833 83 l 0 83 l 0 917 l 833 917 m 764 847 l 69 847 l 69 153 l 764 847 z "},"◫":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 83 l 0 917 l 833 917 l 833 83 l 0 83 m 69 153 l 764 153 l 764 847 l 69 847 l 69 153 m 382 97 l 382 903 l 451 903 l 451 97 l 382 97 z "},"▲":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 83 l 417 931 l 847 83 l -14 83 z "},"▶":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 69 l 0 931 l 847 500 l 0 69 z "},"▼":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 917 l 847 917 l 417 69 z "},"◀":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 68 l -14 500 l 833 931 l 833 68 z "},"△":{"ha":833,"x_min":-14,"x_max":847,"o":"m -14 83 l 417 931 l 847 83 l -14 83 m 101 153 l 732 153 l 417 774 l 101 153 z "},"▷":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 69 l 0 931 l 847 500 l 0 69 m 69 185 l 692 500 l 69 815 l 69 185 z "},"▽":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 69 l -14 917 l 847 917 l 417 69 m 417 226 l 732 847 l 101 847 l 417 226 z "},"◁":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 69 l -14 500 l 833 931 l 833 69 m 764 185 l 764 815 l 142 500 l 764 185 z "},"►":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 292 l 0 708 l 847 500 l 0 292 z "},"◄":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 292 l 833 708 l -14 500 l 833 292 z "},"▻":{"ha":833,"x_min":0,"x_max":847,"o":"m 0 292 l 0 708 l 847 500 l 0 292 m 69 381 l 622 500 l 69 619 l 69 381 z "},"◅":{"ha":833,"x_min":-14,"x_max":833,"o":"m 833 292 l 833 708 l -14 500 l 833 292 m 764 381 l 211 500 l 764 619 l 764 381 z "},"▴":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 417 722 l 625 292 l 208 292 z "},"▸":{"ha":833,"x_min":208,"x_max":639,"o":"m 208 292 l 639 500 l 208 708 l 208 292 z "},"▾":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 708 l 417 278 l 625 708 l 208 708 z "},"◂":{"ha":833,"x_min":194,"x_max":625,"o":"m 625 708 l 194 500 l 625 292 l 625 708 z "},"▵":{"ha":833,"x_min":208,"x_max":625,"o":"m 208 292 l 417 722 l 625 292 l 208 292 m 297 347 l 536 347 l 417 594 l 297 347 z "},"▹":{"ha":833,"x_min":208,"x_max":639,"o":"m 208 292 l 208 708 l 639 500 l 208 292 m 264 381 l 511 500 l 264 619 l 264 381 z "},"▿":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 278 l 208 708 l 625 708 l 417 278 m 417 406 l 536 653 l 297 653 l 417 406 z "},"◃":{"ha":833,"x_min":194,"x_max":625,"o":"m 625 292 l 194 500 l 625 708 l 625 292 m 569 381 l 569 619 l 322 500 l 569 381 z "},"╦":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 z "},"╗":{"ha":833,"x_min":-28,"x_max":625,"o":"m 486 -417 l 486 583 l -28 583 l -28 722 l 625 722 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 z "},"╔":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 -417 l 208 722 l 861 722 l 861 583 l 347 583 l 347 -417 l 208 -417 m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 z "},"═":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 z "},"╩":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╝":{"ha":833,"x_min":-28,"x_max":625,"o":"m -28 306 l -28 444 l 486 444 l 486 1417 l 625 1417 l 625 306 l -28 306 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╚":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 306 l 208 1417 l 347 1417 l 347 444 l 861 444 l 861 306 l 208 306 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"║":{"ha":833,"x_min":208,"x_max":625,"o":"m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 z "},"╬":{"ha":833,"x_min":-28,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"╣":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 306 l -28 306 l -28 444 l 347 444 l 347 -417 l 208 -417 m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 m -28 583 l -28 722 l 208 722 l 208 1417 l 347 1417 l 347 583 l -28 583 z "},"╠":{"ha":833,"x_min":208,"x_max":861,"o":"m 486 -417 l 486 444 l 861 444 l 861 306 l 625 306 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 m 486 583 l 486 1417 l 625 1417 l 625 722 l 861 722 l 861 583 l 486 583 z "},"╥":{"ha":833,"x_min":-28,"x_max":861,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╖":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 625 583 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╓":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 -417 l 208 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"┰":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┒":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 556 583 l 556 -417 l 278 -417 z "},"┧":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 556 583 l 556 -417 l 278 -417 z "},"┎":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┟":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"╁":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┯":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┑":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 486 653 l 486 -417 l 347 -417 z "},"┩":{"ha":833,"x_min":-28,"x_max":556,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 375 l 486 375 l 486 -417 l 347 -417 z "},"┍":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┡":{"ha":833,"x_min":278,"x_max":861,"o":"m 347 -417 l 347 375 l 278 375 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╇":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╤":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 m -28 583 l -28 722 l 861 722 l 861 583 l -28 583 z "},"╕":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 486 722 l 486 -417 l 347 -417 z "},"╒":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"╍":{"ha":833,"x_min":104,"x_max":729,"o":"m 521 375 l 521 653 l 729 653 l 729 375 l 521 375 m 104 375 l 104 653 l 313 653 l 313 375 l 104 375 z "},"╏":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -201 l 278 375 l 556 375 l 556 -201 l 278 -201 m 278 639 l 278 1213 l 556 1213 l 556 639 l 278 639 z "},"╻":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 583 l 556 583 l 556 -417 l 278 -417 z "},"┳":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┓":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 556 653 l 556 -417 l 278 -417 z "},"┏":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"━":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 861 653 l 861 375 l -28 375 z "},"╸":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 375 l -28 653 l 486 653 l 486 375 l -28 375 z "},"╾":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 486 653 l 486 583 l 861 583 l 861 444 l 486 444 l 486 375 l -28 375 z "},"┉":{"ha":833,"x_min":35,"x_max":799,"o":"m 660 375 l 660 653 l 799 653 l 799 375 l 660 375 m 35 375 l 35 653 l 174 653 l 174 375 l 35 375 m 243 375 l 243 653 l 382 653 l 382 375 l 243 375 m 451 375 l 451 653 l 590 653 l 590 375 l 451 375 z "},"┋":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 1000 l 278 1299 l 556 1299 l 556 1000 l 278 1000 m 278 -271 l 278 28 l 556 28 l 556 -271 l 278 -271 m 278 153 l 278 451 l 556 451 l 556 153 l 278 153 m 278 576 l 278 875 l 556 875 l 556 576 l 278 576 z "},"╺":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 375 l 347 653 l 861 653 l 861 375 l 347 375 z "},"┅":{"ha":833,"x_min":51,"x_max":782,"o":"m 607 375 l 607 653 l 782 653 l 782 375 l 607 375 m 51 375 l 51 653 l 226 653 l 226 375 l 51 375 m 329 375 l 329 653 l 504 653 l 504 375 l 329 375 z "},"┇":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 253 l 278 749 l 556 749 l 556 253 l 278 253 m 278 -304 l 278 149 l 556 149 l 556 -304 l 278 -304 m 278 850 l 278 1303 l 556 1303 l 556 850 l 278 850 z "},"╹":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 444 l 278 1417 l 556 1417 l 556 444 l 278 444 z "},"┻":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l -28 375 z "},"┛":{"ha":833,"x_min":-28,"x_max":556,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 375 l -28 375 z "},"╿":{"ha":833,"x_min":278,"x_max":556,"o":"m 347 -417 l 347 444 l 278 444 l 278 1417 l 556 1417 l 556 444 l 486 444 l 486 -417 l 347 -417 z "},"┗":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 375 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 278 375 z "},"┃":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"╋":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┫":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"┣":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"╅":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 556 653 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┭":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 486 653 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┵":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 375 l -28 375 z "},"┽":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┲":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┺":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 375 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 278 375 z "},"╊":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"╃":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 375 l 486 375 l 486 -417 l 347 -417 z "},"╮":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 111 q 307 288 347 213 q 194 403 267 363 q 21 444 121 444 l -28 444 l -28 583 l 21 583 q 267 525 163 583 q 428 360 371 467 q 486 111 486 254 l 486 -417 l 347 -417 z "},"╭":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 111 q 405 360 347 254 q 567 525 463 467 q 813 583 672 583 l 861 583 l 861 444 l 813 444 q 640 403 714 444 q 526 288 567 363 q 486 111 486 213 l 486 -417 l 347 -417 z "},"╯":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 21 583 q 194 624 121 583 q 307 740 267 665 q 347 917 347 815 l 347 1417 l 486 1417 l 486 917 q 428 667 486 774 q 267 503 371 561 q 21 444 163 444 l -28 444 z "},"╰":{"ha":833,"x_min":347,"x_max":861,"o":"m 813 444 q 567 503 672 444 q 405 667 463 561 q 347 917 347 774 l 347 1417 l 486 1417 l 486 917 q 526 740 486 815 q 640 624 567 665 q 813 583 714 583 l 861 583 l 861 444 l 813 444 z "},"╳":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 -222 l -28 -167 l 346 500 l -28 1167 l -28 1222 l 83 1222 l 417 632 l 750 1222 l 861 1222 l 861 1167 l 488 500 l 861 -167 l 861 -222 l 750 -222 l 417 368 l 83 -222 l -28 -222 z "},"╲":{"ha":833,"x_min":-28,"x_max":861,"o":"m 750 -222 l -28 1167 l -28 1222 l 83 1222 l 861 -167 l 861 -222 l 750 -222 z "},"╱":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 -222 l -28 -167 l 750 1222 l 861 1222 l 861 1167 l 83 -222 l -28 -222 z "},"╌":{"ha":833,"x_min":97,"x_max":736,"o":"m 514 444 l 514 583 l 736 583 l 736 444 l 514 444 m 97 444 l 97 583 l 319 583 l 319 444 l 97 444 z "},"╎":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -229 l 347 403 l 486 403 l 486 -229 l 347 -229 m 347 611 l 347 1240 l 486 1240 l 486 611 l 347 611 z "},"╷":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -417 l 347 583 l 486 583 l 486 -417 l 347 -417 z "},"┬":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┐":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 486 583 l 486 -417 l 347 -417 z "},"┌":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"─":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 861 583 l 861 444 l -28 444 z "},"╴":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 486 583 l 486 444 l -28 444 z "},"╼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 375 l 347 444 l -28 444 l -28 583 l 347 583 l 347 653 l 861 653 l 861 375 l 347 375 z "},"┈":{"ha":833,"x_min":35,"x_max":799,"o":"m 660 444 l 660 583 l 799 583 l 799 444 l 660 444 m 35 444 l 35 583 l 174 583 l 174 444 l 35 444 m 243 444 l 243 583 l 382 583 l 382 444 l 243 444 m 451 444 l 451 583 l 590 583 l 590 444 l 451 444 z "},"┊":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 1000 l 347 1299 l 486 1299 l 486 1000 l 347 1000 m 347 -271 l 347 28 l 486 28 l 486 -271 l 347 -271 m 347 153 l 347 451 l 486 451 l 486 153 l 347 153 m 347 576 l 347 875 l 486 875 l 486 576 l 347 576 z "},"╶":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 444 l 347 583 l 861 583 l 861 444 l 347 444 z "},"┄":{"ha":833,"x_min":51,"x_max":782,"o":"m 607 444 l 607 583 l 782 583 l 782 444 l 607 444 m 51 444 l 51 583 l 226 583 l 226 444 l 51 444 m 329 444 l 329 583 l 504 583 l 504 444 l 329 444 z "},"┆":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 833 l 347 1303 l 486 1303 l 486 833 l 347 833 m 347 -304 l 347 164 l 486 164 l 486 -304 l 347 -304 m 347 268 l 347 732 l 486 732 l 486 268 l 347 268 z "},"╵":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 444 l 347 1417 l 486 1417 l 486 444 l 347 444 z "},"╽":{"ha":833,"x_min":278,"x_max":556,"o":"m 278 -417 l 278 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 556 583 l 556 -417 l 278 -417 z "},"┴":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l -28 444 z "},"┘":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 444 l -28 444 z "},"└":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 444 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 347 444 z "},"│":{"ha":833,"x_min":347,"x_max":486,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"┼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┤":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"├":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"╆":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┮":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┶":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 375 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 347 375 z "},"┾":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 347 583 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┱":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 556 653 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┹":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 375 l -28 375 z "},"╉":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 278 653 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"╄":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l 278 375 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╨":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l -28 444 z "},"╜":{"ha":833,"x_min":-28,"x_max":625,"o":"m -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 444 l -28 444 z "},"╙":{"ha":833,"x_min":208,"x_max":861,"o":"m 208 444 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 208 444 z "},"╀":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┸":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l -28 444 z "},"┦":{"ha":833,"x_min":-28,"x_max":556,"o":"m 347 -417 l 347 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 444 l 486 444 l 486 -417 l 347 -417 z "},"┚":{"ha":833,"x_min":-28,"x_max":556,"o":"m -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 444 l -28 444 z "},"┞":{"ha":833,"x_min":278,"x_max":861,"o":"m 347 -417 l 347 444 l 278 444 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 486 444 l 486 -417 l 347 -417 z "},"┖":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 444 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 278 444 z "},"╈":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┷":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l -28 375 z "},"┪":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 556 653 l 556 -417 l 278 -417 z "},"┙":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 375 l -28 375 z "},"┢":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 556 375 l 556 -417 l 278 -417 z "},"┕":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 375 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 347 375 z "},"╧":{"ha":833,"x_min":-28,"x_max":861,"o":"m -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l -28 583 m -28 306 l -28 444 l 861 444 l 861 306 l -28 306 z "},"╛":{"ha":833,"x_min":-28,"x_max":486,"o":"m -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 306 l -28 306 z "},"╘":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 306 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 347 306 z "},"╫":{"ha":833,"x_min":-28,"x_max":861,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 583 l 486 583 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 l 486 444 l 347 444 l 347 -417 l 208 -417 z "},"╢":{"ha":833,"x_min":-28,"x_max":625,"o":"m 208 -417 l 208 444 l -28 444 l -28 583 l 208 583 l 208 1417 l 347 1417 l 347 -417 l 208 -417 m 486 -417 l 486 1417 l 625 1417 l 625 -417 l 486 -417 z "},"╟":{"ha":833,"x_min":208,"x_max":861,"o":"m 486 -417 l 486 1417 l 625 1417 l 625 583 l 861 583 l 861 444 l 625 444 l 625 -417 l 486 -417 m 208 -417 l 208 1417 l 347 1417 l 347 -417 l 208 -417 z "},"╂":{"ha":833,"x_min":-28,"x_max":861,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┨":{"ha":833,"x_min":-28,"x_max":556,"o":"m 278 -417 l 278 444 l -28 444 l -28 583 l 278 583 l 278 1417 l 556 1417 l 556 -417 l 278 -417 z "},"┠":{"ha":833,"x_min":278,"x_max":861,"o":"m 278 -417 l 278 1417 l 556 1417 l 556 583 l 861 583 l 861 444 l 556 444 l 556 -417 l 278 -417 z "},"┿":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"┥":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 375 l -28 375 l -28 653 l 347 653 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"┝":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 653 l 861 653 l 861 375 l 486 375 l 486 -417 l 347 -417 z "},"╪":{"ha":833,"x_min":-28,"x_max":861,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"╡":{"ha":833,"x_min":-28,"x_max":486,"o":"m 347 -417 l 347 306 l -28 306 l -28 444 l 347 444 l 347 583 l -28 583 l -28 722 l 347 722 l 347 1417 l 486 1417 l 486 -417 l 347 -417 z "},"╞":{"ha":833,"x_min":347,"x_max":861,"o":"m 347 -417 l 347 1417 l 486 1417 l 486 722 l 861 722 l 861 583 l 486 583 l 486 444 l 861 444 l 861 306 l 486 306 l 486 -417 l 347 -417 z "},"⍴":{"ha":833,"x_min":131,"x_max":708,"o":"m 131 -250 l 131 494 q 166 646 131 582 q 267 744 201 710 q 421 778 332 778 q 575 744 511 778 q 674 647 639 710 q 708 494 708 583 l 708 271 q 678 119 708 183 q 594 21 649 56 q 461 -14 539 -14 q 312 38 368 -14 q 256 175 256 89 l 281 146 l 253 146 l 256 -28 l 256 -250 l 131 -250 m 419 94 q 541 142 499 94 q 583 278 583 189 l 583 486 q 541 622 583 575 q 419 669 499 669 q 298 622 340 669 q 256 486 256 575 l 256 278 q 299 143 256 192 q 419 94 343 94 z "},"⚠":{"ha":833,"x_min":-14,"x_max":847,"o":"m 417 133 q 371 181 371 133 q 417 228 371 228 l 419 228 q 465 181 465 228 q 419 133 465 133 l 417 133 m 403 283 l 382 432 l 382 511 l 451 511 l 451 432 l 431 283 l 403 283 m -14 0 l 417 847 l 847 0 l -14 0 m 101 69 l 732 69 l 417 690 l 101 69 z "},"⚡":{"ha":833,"x_min":28,"x_max":806,"o":"m 653 1167 l 403 611 l 806 611 l 69 -153 l 410 431 l 28 431 l 653 1167 z "},"✕":{"ha":833,"x_min":92,"x_max":742,"o":"m 171 140 l 93 218 l 338 463 l 92 708 l 172 789 l 418 543 l 663 788 l 740 710 l 496 465 l 742 219 l 661 139 l 415 385 l 171 140 z "},"@":{"ha":833,"x_min":63,"x_max":778,"o":"m 451 -250 q 246 -201 333 -250 q 110 -60 158 -151 q 63 153 63 31 l 63 625 q 108 840 63 750 q 237 979 153 931 q 438 1028 321 1028 q 619 987 543 1028 q 737 869 696 946 q 778 688 778 793 l 778 90 l 679 90 l 679 167 l 640 167 l 667 194 q 626 109 667 142 q 519 76 586 76 q 381 131 429 76 q 333 292 333 186 l 333 458 q 381 619 333 564 q 519 674 429 674 q 626 641 586 674 q 667 554 667 608 l 647 583 l 681 583 l 667 681 l 667 688 q 640 821 667 767 q 563 903 614 875 q 438 931 513 931 q 243 850 313 931 q 174 625 174 769 l 174 153 q 248 -66 174 14 q 451 -146 322 -146 l 549 -146 l 549 -250 l 451 -250 m 556 164 q 640 199 613 164 q 667 306 667 233 l 667 460 q 640 556 667 525 q 556 586 613 586 q 472 555 500 586 q 444 458 444 524 l 444 292 q 472 195 444 226 q 556 164 500 164 z "},"&":{"ha":833,"x_min":76,"x_max":786,"o":"m 319 -14 q 141 47 206 -14 q 76 215 76 108 l 76 389 q 115 513 76 463 q 224 585 153 564 l 214 599 q 151 707 171 657 q 132 807 132 757 q 163 924 132 874 q 251 1001 194 974 q 382 1028 307 1028 q 522 999 463 1028 q 613 917 581 969 q 644 790 644 864 l 519 790 q 503 860 519 831 q 456 904 486 889 q 382 919 425 919 q 316 906 344 919 q 272 866 288 892 q 257 804 257 840 q 272 729 257 769 q 313 653 286 689 l 551 324 l 650 500 l 781 500 l 624 224 l 786 0 l 649 0 l 561 121 q 319 -14 458 -14 m 326 97 q 417 128 374 97 q 492 215 461 160 l 288 497 q 223 463 244 490 q 201 389 201 435 l 201 215 q 234 128 201 160 q 326 97 267 97 z "},"¶":{"ha":833,"x_min":90,"x_max":701,"o":"m 354 -250 l 354 431 q 163 496 236 431 q 90 667 90 561 l 90 778 q 163 949 90 885 q 354 1014 236 1014 l 465 1014 l 465 -250 l 354 -250 m 590 -250 l 590 1014 l 701 1014 l 701 -250 l 590 -250 z "},"§":{"ha":833,"x_min":107,"x_max":726,"o":"m 396 -214 q 259 -187 321 -214 q 158 -112 197 -160 q 107 0 118 -64 l 239 0 q 294 -74 251 -46 q 396 -103 338 -103 l 438 -103 q 558 -70 517 -103 q 600 17 600 -37 q 565 99 600 67 q 460 146 529 132 l 332 172 q 178 253 236 192 q 119 396 119 315 q 171 532 119 475 q 299 596 222 589 l 299 606 q 221 624 261 606 q 153 687 181 643 q 125 804 125 731 q 198 967 125 907 q 401 1028 271 1028 l 443 1028 q 628 972 553 1028 q 718 826 704 917 l 586 826 q 537 892 576 867 q 443 917 497 917 l 401 917 q 291 886 331 917 q 251 803 251 856 q 287 726 251 758 q 386 679 322 693 l 511 653 q 667 572 610 632 q 724 428 724 513 q 673 292 724 347 q 539 236 622 236 l 539 226 q 623 203 579 225 q 697 136 667 181 q 726 21 726 92 q 650 -151 726 -87 q 438 -214 574 -214 l 396 -214 m 458 257 q 531 268 500 249 q 580 327 563 288 q 597 415 597 367 q 567 501 597 464 q 488 547 536 538 l 385 568 q 312 558 343 576 q 263 501 281 539 q 246 417 246 464 q 276 326 246 364 q 353 278 306 288 l 458 257 z "},"©":{"ha":833,"x_min":63,"x_max":771,"o":"m 417 153 q 231 194 311 153 q 107 311 151 236 q 63 486 63 386 l 63 694 q 107 869 63 794 q 231 986 151 944 q 417 1028 311 1028 q 603 986 524 1028 q 726 869 682 944 q 771 694 771 794 l 771 486 q 726 311 771 386 q 603 194 682 236 q 417 153 524 153 m 417 222 q 563 255 500 222 q 660 347 625 288 q 694 486 694 407 l 694 694 q 660 833 694 774 q 563 925 625 892 q 417 958 500 958 q 271 925 333 958 q 174 833 208 892 q 139 694 139 774 l 139 486 q 174 347 139 407 q 271 255 208 288 q 417 222 333 222 m 424 340 q 298 384 346 340 q 250 500 250 428 l 250 681 q 298 797 250 753 q 424 840 346 840 q 549 797 501 840 q 596 681 596 753 l 506 681 q 483 741 506 718 q 424 764 460 764 q 363 741 386 764 q 340 681 340 718 l 340 500 q 363 440 340 463 q 424 417 386 417 q 483 440 460 417 q 506 500 506 463 l 596 500 q 549 384 596 428 q 424 340 501 340 z "},"®":{"ha":833,"x_min":63,"x_max":771,"o":"m 417 153 q 231 194 311 153 q 107 311 151 236 q 63 486 63 386 l 63 694 q 107 869 63 794 q 231 986 151 944 q 417 1028 311 1028 q 603 986 524 1028 q 726 869 682 944 q 771 694 771 794 l 771 486 q 726 311 771 386 q 603 194 682 236 q 417 153 524 153 m 504 347 l 415 560 l 500 560 l 593 347 l 504 347 m 417 222 q 563 255 500 222 q 660 347 625 288 q 694 486 694 407 l 694 694 q 660 833 694 774 q 563 925 625 892 q 417 958 500 958 q 271 925 333 958 q 174 833 208 892 q 139 694 139 774 l 139 486 q 174 347 139 407 q 271 255 208 288 q 417 222 333 222 m 264 347 l 264 833 l 422 833 q 541 794 497 833 q 585 688 585 754 q 541 581 585 621 q 422 542 497 542 l 347 542 l 347 347 l 264 347 m 347 611 l 422 611 q 479 631 458 611 q 500 688 500 651 q 479 744 500 724 q 422 764 458 764 l 347 764 l 347 611 z "},"™":{"ha":833,"x_min":21,"x_max":785,"o":"m 160 514 l 160 944 l 21 944 l 21 1014 l 382 1014 l 382 944 l 243 944 l 243 514 l 160 514 m 431 514 l 431 1014 l 542 1014 l 589 872 q 602 823 596 853 q 611 774 608 793 q 619 823 614 793 q 631 872 624 853 l 676 1014 l 785 1014 l 785 514 l 708 514 l 708 821 q 710 876 708 847 q 714 930 711 904 q 718 972 717 956 q 700 909 710 944 q 686 861 690 874 l 644 718 l 574 718 l 528 863 q 514 910 524 875 q 496 972 504 944 q 501 930 499 956 q 505 876 503 904 q 507 821 507 847 l 507 514 l 431 514 z "},"°":{"ha":833,"x_min":208,"x_max":625,"o":"m 417 625 q 266 681 324 625 q 208 826 208 736 q 266 972 208 917 q 417 1028 324 1028 q 568 972 511 1028 q 625 826 625 917 q 568 681 625 736 q 417 625 511 625 m 415 696 q 507 732 472 696 q 542 826 542 768 q 507 922 542 886 q 415 958 472 958 q 326 922 360 958 q 292 826 292 886 q 326 732 292 768 q 415 696 360 696 z "},"′":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 646 l 340 1078 l 521 1078 l 340 646 l 229 646 z "},"″":{"ha":833,"x_min":118,"x_max":729,"o":"m 438 646 l 549 1078 l 729 1078 l 549 646 l 438 646 m 118 646 l 229 1078 l 410 1078 l 229 646 l 118 646 z "},"|":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 -153 l 354 1153 l 479 1153 l 479 -153 l 354 -153 z "},"¦":{"ha":833,"x_min":354,"x_max":479,"o":"m 354 625 l 354 1153 l 479 1153 l 479 625 l 354 625 m 354 -153 l 354 375 l 479 375 l 479 -153 l 354 -153 z "},"†":{"ha":833,"x_min":111,"x_max":722,"o":"m 354 -153 l 354 722 l 111 722 l 111 833 l 354 833 l 354 1153 l 479 1153 l 479 833 l 722 833 l 722 722 l 479 722 l 479 -153 l 354 -153 z "},"ℓ":{"ha":833,"x_min":97,"x_max":694,"o":"m 468 0 q 345 27 397 0 q 265 104 293 54 q 236 222 236 154 l 236 813 q 297 969 236 910 q 458 1028 358 1028 q 620 969 560 1028 q 681 813 681 911 l 681 694 q 626 526 681 601 q 474 415 571 451 l 139 288 l 97 400 l 435 524 q 524 590 493 546 q 556 694 556 635 l 556 813 q 531 888 556 861 q 458 914 506 914 q 387 888 413 914 q 361 813 361 861 l 361 222 q 390 142 361 171 q 468 114 418 114 q 526 128 500 114 q 571 161 551 142 q 600 199 590 181 l 694 140 q 651 78 682 111 q 574 23 619 46 q 468 0 528 0 z "},"‡":{"ha":833,"x_min":111,"x_max":722,"o":"m 354 -153 l 354 194 l 111 194 l 111 306 l 354 306 l 354 708 l 111 708 l 111 819 l 354 819 l 354 1153 l 479 1153 l 479 819 l 722 819 l 722 708 l 479 708 l 479 306 l 722 306 l 722 194 l 479 194 l 479 -153 l 354 -153 z "},"№":{"ha":833,"x_min":42,"x_max":819,"o":"m 42 0 l 42 1014 l 174 1014 l 336 385 q 356 308 344 356 q 378 210 367 261 q 399 118 390 158 q 393 186 396 149 q 388 264 390 224 q 383 340 385 304 q 382 403 382 376 l 382 1014 l 479 1014 l 479 0 l 347 0 l 189 631 q 170 710 182 663 q 147 808 158 757 q 125 897 135 858 q 130 831 128 868 q 134 753 132 793 q 138 677 136 714 q 139 611 139 640 l 139 0 l 42 0 m 688 417 q 594 457 632 417 q 556 563 556 497 l 556 882 q 594 988 556 947 q 688 1028 632 1028 q 782 988 744 1028 q 819 882 819 947 l 819 563 q 782 457 819 497 q 688 417 744 417 m 688 493 q 722 506 707 493 q 736 549 736 518 l 736 896 q 722 936 736 921 q 688 951 707 951 q 654 936 669 951 q 639 896 639 921 l 639 549 q 654 506 639 518 q 688 493 669 493 z "},"℮":{"ha":833,"x_min":83,"x_max":750,"o":"m 417 -14 q 242 31 318 -14 q 125 158 167 76 q 83 347 83 240 l 83 667 q 125 856 83 775 q 242 983 167 938 q 417 1028 318 1028 q 592 983 518 1028 q 708 857 667 938 q 750 667 750 776 l 750 499 l 181 499 l 181 568 l 621 568 l 611 557 l 611 875 q 544 935 594 904 q 417 965 494 965 q 290 935 340 965 q 222 875 239 904 l 222 139 q 290 79 239 110 q 417 49 340 49 q 567 91 499 49 q 663 201 635 133 l 732 201 q 663 89 710 138 q 552 13 615 40 q 417 -14 489 -14 z "},"⌃":{"ha":833,"x_min":83,"x_max":750,"o":"m 83 514 l 347 764 l 486 764 l 750 514 l 596 514 l 414 678 l 236 514 l 83 514 z "},"⌂":{"ha":833,"x_min":113,"x_max":721,"o":"m 113 0 l 113 482 l 417 778 l 721 482 l 721 0 l 113 0 m 182 69 l 651 69 l 651 449 l 417 678 l 182 449 l 182 69 z "},"⌥":{"ha":833,"x_min":14,"x_max":819,"o":"m 510 0 l 240 653 l 14 653 l 14 764 l 324 764 l 593 111 l 819 111 l 819 0 l 510 0 m 536 653 l 536 764 l 819 764 l 819 653 l 536 653 z "},"⌘":{"ha":833,"x_min":21,"x_max":813,"o":"m 658 471 l 658 564 q 703 581 686 564 q 719 625 719 597 q 703 669 719 653 q 658 685 686 685 q 615 669 632 685 q 599 625 599 653 l 506 625 q 548 736 506 694 q 658 778 590 778 q 770 736 728 778 q 813 625 813 694 q 770 513 813 556 q 658 471 728 471 m 174 -14 q 63 28 106 -14 q 21 140 21 71 q 63 251 21 210 q 174 293 106 293 l 174 200 q 131 184 147 200 q 114 140 114 168 q 131 96 114 113 q 174 79 147 79 q 218 96 201 79 q 235 140 235 113 l 328 140 q 285 28 328 71 q 174 -14 243 -14 m 235 140 l 235 625 l 328 625 l 328 140 l 235 140 m 174 200 l 174 293 l 658 293 l 658 200 l 174 200 m 658 -14 q 548 28 590 -14 q 506 140 506 71 l 599 140 q 615 96 599 113 q 658 79 632 79 q 703 96 686 79 q 719 140 719 113 q 703 184 719 168 q 658 200 686 200 l 658 293 q 770 251 728 293 q 813 140 813 210 q 770 28 813 71 q 658 -14 728 -14 m 174 471 q 63 513 106 471 q 21 625 21 556 q 63 736 21 694 q 174 778 106 778 q 285 736 243 778 q 328 625 328 694 l 235 625 q 218 669 235 653 q 174 685 201 685 q 131 669 147 685 q 114 625 114 653 q 131 581 114 597 q 174 564 147 564 l 174 471 m 174 471 l 174 564 l 658 564 l 658 471 l 174 471 m 506 140 l 506 625 l 599 625 l 599 140 l 506 140 z "},"⏻":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 7 593 -28 514 q 100 732 42 672 q 165 767 129 763 q 222 749 200 772 q 240 693 244 726 q 207 628 235 660 q 152 537 172 589 q 132 424 132 485 q 168 273 132 339 q 269 169 204 207 q 417 132 333 132 q 565 169 500 132 q 665 273 629 207 q 701 424 701 339 q 682 537 701 485 q 626 628 663 589 q 594 693 599 660 q 611 749 589 726 q 669 767 635 772 q 733 732 704 763 q 827 594 793 674 q 861 424 861 514 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 313 q 363 337 386 313 q 340 396 340 361 l 340 924 q 363 983 340 958 q 417 1007 386 1007 q 471 983 449 1007 q 493 924 493 958 l 493 396 q 471 337 493 361 q 417 313 449 313 z "},"⏼":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 6 594 -28 515 q 101 734 40 674 q 243 828 163 794 q 417 861 324 861 q 590 828 510 861 q 732 734 671 794 q 827 594 793 674 q 861 424 861 515 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 118 q 568 159 500 118 q 676 269 636 200 q 715 424 715 339 q 676 578 715 508 q 568 688 636 647 q 417 729 500 729 q 266 688 333 729 q 158 578 199 647 q 118 424 118 508 q 158 269 118 339 q 266 159 199 200 q 417 118 333 118 m 417 215 q 363 240 386 215 q 340 299 340 264 l 340 549 q 363 608 340 583 q 417 632 386 632 q 471 608 449 632 q 493 549 493 583 l 493 299 q 471 240 493 264 q 417 215 449 215 z "},"⭘":{"ha":833,"x_min":-28,"x_max":861,"o":"m 417 -14 q 243 19 324 -14 q 101 113 163 53 q 6 253 40 174 q -28 424 -28 332 q 6 594 -28 515 q 101 734 40 674 q 243 828 163 794 q 417 861 324 861 q 590 828 510 861 q 732 734 671 794 q 827 594 793 674 q 861 424 861 515 q 827 253 861 332 q 732 113 793 174 q 590 19 671 53 q 417 -14 510 -14 m 417 118 q 568 159 500 118 q 676 269 636 200 q 715 424 715 339 q 676 578 715 508 q 568 688 636 647 q 417 729 500 729 q 266 688 333 729 q 158 578 199 647 q 118 424 118 508 q 158 269 118 339 q 266 159 199 200 q 417 118 333 118 z "},"⏽":{"ha":833,"x_min":340,"x_max":493,"o":"m 417 -7 q 363 17 386 -7 q 340 76 340 42 l 340 771 q 363 830 340 806 q 417 854 386 854 q 471 830 449 854 q 493 771 493 806 l 493 76 q 471 17 493 42 q 417 -7 449 -7 z "},"⏾":{"ha":833,"x_min":8,"x_max":853,"o":"m 139 118 q 41 265 74 183 q 9 432 8 346 q 43 599 10 518 q 143 747 76 681 q 257 832 197 801 q 212 657 215 753 q 240 471 208 561 q 336 317 272 381 q 492 219 401 251 q 677 191 582 188 q 853 236 772 194 q 768 122 822 176 q 620 22 701 56 q 453 -12 539 -11 q 285 20 367 -12 q 139 118 204 53 z "},"⌅":{"ha":833,"x_min":83,"x_max":750,"o":"m 118 653 l 118 764 l 715 764 l 715 653 l 118 653 m 83 319 l 347 569 l 486 569 l 750 319 l 596 319 l 414 483 l 236 319 l 83 319 z "},"˳":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 -347 q 296 -309 342 -347 q 250 -208 250 -271 q 296 -108 250 -146 q 417 -69 342 -69 q 538 -108 492 -69 q 583 -208 583 -146 q 538 -309 583 -271 q 417 -347 492 -347 m 415 -276 q 477 -258 454 -276 q 500 -208 500 -239 q 478 -156 500 -172 q 415 -139 456 -139 q 356 -158 379 -139 q 333 -208 333 -176 q 356 -258 333 -239 q 415 -276 379 -276 z "},"˷":{"ha":833,"x_min":194,"x_max":639,"o":"m 514 -292 q 446 -277 472 -292 q 401 -243 419 -262 q 367 -209 383 -224 q 326 -194 350 -194 q 297 -206 308 -194 q 285 -243 285 -218 l 285 -285 l 194 -285 l 194 -243 q 229 -146 194 -181 q 319 -111 264 -111 q 388 -126 361 -111 q 432 -160 414 -140 q 467 -194 450 -179 q 507 -208 483 -208 q 538 -197 526 -208 q 549 -160 549 -185 l 549 -118 l 639 -118 l 639 -160 q 605 -257 639 -222 q 514 -292 571 -292 z "},"ʹ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 569 l 340 1001 l 521 1001 l 340 569 l 229 569 z "},"͵":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 -222 l 340 210 l 521 210 l 340 -222 l 229 -222 z "},"ʼ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 646 l 340 1078 l 521 1078 l 340 646 l 229 646 z "},"ʺ":{"ha":833,"x_min":76,"x_max":750,"o":"m 458 568 l 569 1000 l 750 1000 l 569 568 l 458 568 m 76 568 l 188 1000 l 368 1000 l 188 568 l 76 568 z "},"ˉ":{"ha":833,"x_min":194,"x_max":639,"o":"z "},"ʹ":{"ha":833,"x_min":229,"x_max":521,"o":"m 229 569 l 340 1001 l 521 1001 l 340 569 l 229 569 z "},"̈":{"ha":0,"x_min":174,"x_max":660,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"̇":{"ha":0,"x_min":318,"x_max":515,"o":"m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"̀":{"ha":0,"x_min":253,"x_max":544,"o":"m 413 896 l 253 1090 l 392 1090 l 544 896 l 413 896 z "},"́":{"ha":0,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"̋":{"ha":0,"x_min":204,"x_max":733,"o":"m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"̂":{"ha":0,"x_min":165,"x_max":668,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"̌":{"ha":0,"x_min":165,"x_max":668,"o":"m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"̆":{"ha":0,"x_min":194,"x_max":639,"o":"m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"̊":{"ha":0,"x_min":250,"x_max":583,"o":"m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"̃":{"ha":0,"x_min":194,"x_max":639,"o":"m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"̄":{"ha":0,"x_min":194,"x_max":639,"o":"m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"̉":{"ha":0,"x_min":292,"x_max":556,"o":"m 358 896 l 428 983 q 447 1028 447 1010 q 403 1056 447 1056 l 292 1056 l 292 1146 l 438 1146 q 523 1119 490 1146 q 556 1043 556 1092 q 532 968 556 999 l 476 896 l 358 896 z "},"̏":{"ha":0,"x_min":100,"x_max":629,"o":"m 381 896 l 260 896 l 100 1090 l 228 1090 l 381 896 m 629 896 l 508 896 l 349 1090 l 476 1090 l 629 896 z "},"̒":{"ha":0,"x_min":292,"x_max":576,"o":"m 576 1222 l 465 896 l 292 896 l 472 1222 l 576 1222 z "},"̛":{"ha":0,"x_min":-133,"x_max":56,"o":"m -133 674 l -133 764 l -97 764 q -61 776 -74 764 q -49 813 -49 789 l -49 917 l 56 917 l 56 806 q 15 710 56 746 q -90 674 -25 674 l -133 674 z "},"̣":{"ha":0,"x_min":318,"x_max":515,"o":"m 417 -296 q 344 -272 371 -296 q 318 -208 318 -249 q 344 -142 318 -167 q 417 -118 371 -118 q 489 -142 463 -118 q 515 -208 515 -167 q 489 -272 515 -249 q 417 -296 463 -296 z "},"̥":{"ha":0,"x_min":250,"x_max":583,"o":"m 417 -347 q 296 -309 342 -347 q 250 -208 250 -271 q 296 -108 250 -146 q 417 -69 342 -69 q 538 -108 492 -69 q 583 -208 583 -146 q 538 -309 583 -271 q 417 -347 492 -347 m 415 -276 q 477 -258 454 -276 q 500 -208 500 -239 q 478 -156 500 -172 q 415 -139 456 -139 q 356 -158 379 -139 q 333 -208 333 -176 q 356 -258 333 -239 q 415 -276 379 -276 z "},"̦":{"ha":0,"x_min":264,"x_max":542,"o":"m 264 -333 l 396 -132 l 542 -132 l 396 -333 l 264 -333 z "},"̧":{"ha":0,"x_min":285,"x_max":569,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 z "},"̨":{"ha":0,"x_min":257,"x_max":535,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 z "},"̶":{"ha":0,"x_min":-875,"x_max":42,"o":"m -875 403 l -875 500 l 42 500 l 42 403 l -875 403 z "},"̸":{"ha":0,"x_min":167,"x_max":667,"o":"m 167 -83 l 579 1083 l 667 1083 l 254 -83 l 167 -83 z "},"¨":{"ha":833,"x_min":174,"x_max":660,"o":"m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"˙":{"ha":833,"x_min":318,"x_max":515,"o":"m 417 901 q 344 925 371 901 q 318 989 318 949 q 344 1055 318 1031 q 417 1079 371 1079 q 489 1055 463 1079 q 515 989 515 1031 q 489 925 515 949 q 417 901 463 901 z "},"`":{"ha":833,"x_min":253,"x_max":544,"o":"m 413 896 l 253 1090 l 392 1090 l 544 896 l 413 896 z "},"´":{"ha":833,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"˝":{"ha":833,"x_min":204,"x_max":733,"o":"m 453 896 l 606 1090 l 733 1090 l 574 896 l 453 896 m 204 896 l 357 1090 l 485 1090 l 325 896 l 204 896 z "},"ˆ":{"ha":833,"x_min":165,"x_max":668,"o":"m 165 896 l 358 1090 l 474 1090 l 668 896 l 531 896 l 417 1004 l 306 896 l 165 896 z "},"ˇ":{"ha":833,"x_min":165,"x_max":668,"o":"m 360 896 l 165 1090 l 303 1090 l 417 982 l 528 1090 l 668 1090 l 475 896 l 360 896 z "},"˘":{"ha":833,"x_min":194,"x_max":639,"o":"m 417 889 q 256 944 317 889 q 194 1090 194 1000 l 293 1090 q 326 1003 293 1036 q 415 969 360 969 q 506 1003 472 969 q 540 1090 540 1036 l 639 1090 q 578 944 639 1000 q 417 889 517 889 z "},"˚":{"ha":833,"x_min":250,"x_max":583,"o":"m 417 844 q 296 888 342 844 q 250 1003 250 932 q 296 1117 250 1074 q 417 1161 342 1161 q 538 1117 492 1161 q 583 1003 583 1074 q 538 888 583 932 q 417 844 492 844 m 417 918 q 477 941 454 918 q 500 1003 500 964 q 477 1065 500 1042 q 417 1089 454 1089 q 356 1065 379 1089 q 333 1003 333 1042 q 356 941 333 964 q 417 918 379 918 z "},"˜":{"ha":833,"x_min":194,"x_max":639,"o":"m 514 903 q 446 917 472 903 q 401 951 419 932 q 367 985 383 971 q 326 1000 350 1000 q 297 988 308 1000 q 285 951 285 976 l 285 910 l 194 910 l 194 951 q 229 1049 194 1014 q 319 1083 264 1083 q 388 1069 361 1083 q 432 1035 414 1054 q 467 1001 450 1015 q 507 986 483 986 q 538 998 526 986 q 549 1035 549 1010 l 549 1076 l 639 1076 l 639 1035 q 605 938 639 972 q 514 903 571 903 z "},"¯":{"ha":833,"x_min":194,"x_max":639,"o":"m 194 931 l 194 1035 l 639 1035 l 639 931 l 194 931 z "},"¸":{"ha":833,"x_min":285,"x_max":569,"o":"m 285 -282 l 285 -206 l 382 -206 q 431 -190 413 -206 q 450 -156 450 -174 q 412 -114 450 -132 q 304 -96 374 -96 l 353 36 l 432 36 l 403 -49 q 478 -67 439 -53 q 543 -106 517 -81 q 569 -167 569 -131 q 524 -248 569 -214 q 403 -282 478 -282 l 285 -282 z "},"˛":{"ha":833,"x_min":257,"x_max":535,"o":"m 426 -282 q 303 -245 350 -282 q 257 -153 257 -208 q 283 -72 257 -112 q 375 14 310 -32 l 479 14 l 464 1 q 396 -69 417 -37 q 375 -129 375 -100 q 396 -179 375 -160 q 451 -199 417 -199 l 535 -199 l 535 -282 l 426 -282 z "},"΄":{"ha":833,"x_min":294,"x_max":576,"o":"m 294 896 l 442 1090 l 576 1090 l 422 896 l 294 896 z "},"΅":{"ha":833,"x_min":174,"x_max":660,"o":"m 360 1068 l 468 1250 l 579 1250 l 457 1068 l 360 1068 m 571 901 q 506 925 531 901 q 482 989 482 949 q 506 1055 482 1031 q 571 1079 531 1079 q 635 1055 611 1079 q 660 989 660 1031 q 635 925 660 949 q 571 901 611 901 m 263 901 q 198 925 222 901 q 174 989 174 949 q 198 1055 174 1031 q 263 1079 222 1079 q 327 1055 303 1079 q 351 989 351 1031 q 327 925 351 949 q 263 901 303 901 z "},"":{"ha":833,"x_min":125,"x_max":833,"o":"m 125 -375 l 125 154 q 156 277 125 215 q 238 376 186 339 l 439 526 q 494 583 474 551 q 514 640 514 614 l 514 876 l 361 876 l 597 1113 l 833 876 l 681 876 l 681 626 q 653 523 681 575 q 581 438 625 471 l 365 278 q 311 215 331 251 q 292 139 292 179 l 292 -375 l 125 -375 m 125 506 l 125 1347 l 292 1347 l 292 629 l 125 506 z "},"":{"ha":833,"x_min":146,"x_max":688,"o":"m 229 -264 l 229 417 l 358 417 l 538 10 q 569 -78 554 -29 q 590 -160 583 -128 l 604 -160 q 600 -126 606 -160 q 589 -48 594 -93 q 583 35 583 -3 l 583 417 l 688 417 l 688 -264 l 560 -264 l 382 143 q 349 231 365 182 q 325 313 333 281 l 311 313 q 326 219 318 275 q 333 118 333 163 l 333 -264 l 229 -264 m 146 556 l 146 1236 l 257 1236 l 257 660 l 564 660 l 564 556 l 146 556 z "},"":{"ha":833,"x_min":69,"x_max":764,"o":"m 153 -111 q 94 -87 118 -111 q 69 -28 69 -62 l 69 575 q 94 634 69 610 q 153 658 118 658 l 167 658 l 167 979 q 200 1103 167 1050 q 290 1186 233 1157 q 417 1215 346 1215 q 547 1185 490 1215 q 635 1101 603 1154 q 667 979 667 1049 l 667 658 l 681 658 q 740 634 715 658 q 764 575 764 610 l 764 -28 q 740 -87 764 -62 q 681 -111 715 -111 l 153 -111 m 354 69 l 478 69 l 478 292 q 529 329 503 301 q 556 404 556 357 q 517 494 556 460 q 417 528 479 528 q 316 494 354 528 q 278 404 278 460 q 303 329 278 357 q 354 292 329 301 l 354 69 m 278 660 l 556 660 l 556 979 q 517 1080 556 1042 q 417 1118 479 1118 q 316 1080 354 1118 q 278 979 278 1042 l 278 660 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -375 l 0 1347 l 833 486 l 0 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 0 -375 l 669 483 l 8 1347 l 164 1347 l 833 486 l 164 -375 l 0 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 833 -375 l 0 486 l 833 1347 l 833 -375 z "},"":{"ha":833,"x_min":0,"x_max":833,"o":"m 669 -375 l 0 486 l 669 1347 l 825 1347 l 164 483 l 833 -375 l 669 -375 z "}},"familyName":"JetBrains Mono","ascender":1417,"descender":-417,"underlinePosition":-215,"underlineThickness":69,"boundingBox":{"yMin":-417,"xMin":-2410,"yMax":1417,"xMax":1625},"resolution":1000,"original_font_information":{"format":0,"copyright":"Copyright 2020 The JetBrains Mono Project Authors (https://github.com/JetBrains/JetBrainsMono)","fontFamily":"JetBrains Mono","fontSubfamily":"Regular","uniqueID":"2.211;JB;JetBrainsMono-Regular","fullName":"JetBrains Mono Regular","version":"Version 2.211","postScriptName":"JetBrainsMono-Regular","trademark":"JetBrains Mono is a trademark of JetBrains s.r.o.","manufacturer":"JetBrains","designer":"Philipp Nurullin, Konstantin Bulenkov","manufacturerURL":"https://www.jetbrains.com","designerURL":"https://www.jetbrains.com","licence":"This Font Software is licensed under the SIL Open Font License, Version 1.1. This license is available with a FAQ at: https://scripts.sil.org/OFL","licenceURL":"https://scripts.sil.org/OFL","unknown1":"JetBrainsMonoRoman","unknown2":"Weight","unknown3":"Thin","unknown4":"ExtraLight","unknown5":"Light","unknown6":"Regular","unknown7":"Medium","unknown8":"Bold","unknown9":"ExtraBold","unknown10":"JetBrainsMonoRoman-Thin","unknown11":"JetBrainsMonoRoman-ExtraLight","unknown12":"JetBrainsMonoRoman-Light","unknown13":"JetBrainsMonoRoman-Regular","unknown14":"JetBrainsMonoRoman-Medium","unknown15":"JetBrainsMonoRoman-Bold","unknown16":"JetBrainsMonoRoman-ExtraBold","unknown17":"Italic","unknown18":"Roman"},"cssFontWeight":"normal","cssFontStyle":"normal"}');var v=new m,x=new i.dpR,g=v.parse(f),_=x.load("../../Images/yellow.png"),y=_,b=x.load("../../Images/cyan.png"),w=x.load("../../Images/red_2.png"),M=w,S=x.load("../../Images/matWhite.png"),T=S,E=_,z=w,k=S,A=S,L=S,R=S,P=new Audio("../../sounds/play.mp3"),C=(new Audio("../../sounds/settings.mp3"),new Audio("../../sounds/block-hit.mp3")),D=new Audio("../../sounds/win.mp3"),I=new Audio("../../sounds/lose.mp3"),N=new Audio("../../sounds/bim-bom-bomp.mp3");N.loop=!0},872:(e,t,n)=>{"use strict";var i=n(821),r=n(736),a=a||{};a.DomEvents=function(e,t){this._camera=e||null,this._domElement=t||document,this._raycaster=new r.iMs,this._selected=null,this._boundObjs={};var n=this;this._$onClick=function(){n._onClick.apply(n,arguments)},this._$onDblClick=function(){n._onDblClick.apply(n,arguments)},this._$onMouseMove=function(){n._onMouseMove.apply(n,arguments)},this._$onMouseDown=function(){n._onMouseDown.apply(n,arguments)},this._$onMouseUp=function(){n._onMouseUp.apply(n,arguments)},this._$onTouchMove=function(){n._onTouchMove.apply(n,arguments)},this._$onTouchStart=function(){n._onTouchStart.apply(n,arguments)},this._$onTouchEnd=function(){n._onTouchEnd.apply(n,arguments)},this._$onContextmenu=function(){n._onContextmenu.apply(n,arguments)},this._domElement.addEventListener("click",this._$onClick,!1),this._domElement.addEventListener("dblclick",this._$onDblClick,!1),this._domElement.addEventListener("mousemove",this._$onMouseMove,!1),this._domElement.addEventListener("mousedown",this._$onMouseDown,!1),this._domElement.addEventListener("mouseup",this._$onMouseUp,!1),this._domElement.addEventListener("touchmove",this._$onTouchMove,!1),this._domElement.addEventListener("touchstart",this._$onTouchStart,!1),this._domElement.addEventListener("touchend",this._$onTouchEnd,!1),this._domElement.addEventListener("contextmenu",this._$onContextmenu,!1)},a.DomEvents.prototype.destroy=function(){this._domElement.removeEventListener("click",this._$onClick,!1),this._domElement.removeEventListener("dblclick",this._$onDblClick,!1),this._domElement.removeEventListener("mousemove",this._$onMouseMove,!1),this._domElement.removeEventListener("mousedown",this._$onMouseDown,!1),this._domElement.removeEventListener("mouseup",this._$onMouseUp,!1),this._domElement.removeEventListener("touchmove",this._$onTouchMove,!1),this._domElement.removeEventListener("touchstart",this._$onTouchStart,!1),this._domElement.removeEventListener("touchend",this._$onTouchEnd,!1),this._domElement.removeEventListener("contextmenu",this._$onContextmenu,!1)},a.DomEvents.eventNames=["click","dblclick","mouseover","mouseout","mousemove","mousedown","mouseup","contextmenu","touchstart","touchend"],a.DomEvents.prototype._getRelativeMouseXY=function(e){var t=e.target||e.srcElement;3===t.nodeType&&(t=t.parentNode);var n={x:0,y:0},i=t,r=getComputedStyle(i,null);n.y+=parseInt(r.getPropertyValue("padding-top"),10),n.x+=parseInt(r.getPropertyValue("padding-left"),10);do{n.x+=i.offsetLeft,n.y+=i.offsetTop,r=getComputedStyle(i,null),n.x+=parseInt(r.getPropertyValue("border-left-width"),10),n.y+=parseInt(r.getPropertyValue("border-top-width"),10)}while(i=i.offsetParent);var a=t===window?window.innerWidth:t.offsetWidth,l=t===window?window.innerHeight:t.offsetHeight;return{x:+(e.pageX-n.x)/a*2-1,y:-(e.pageY-n.y)/l*2+1}},a.DomEvents.prototype._objectCtxInit=function(e){e._3xDomEvent={}},a.DomEvents.prototype._objectCtxDeinit=function(e){delete e._3xDomEvent},a.DomEvents.prototype._objectCtxIsInit=function(e){return!!e._3xDomEvent},a.DomEvents.prototype._objectCtxGet=function(e){return e._3xDomEvent},a.DomEvents.prototype.camera=function(e){return e&&(this._camera=e),this._camera},a.DomEvents.prototype.bind=function(e,t,n,i){console.assert(-1!==a.DomEvents.eventNames.indexOf(t),"not available events:"+t),this._objectCtxIsInit(e)||this._objectCtxInit(e);var r=this._objectCtxGet(e);r[t+"Handlers"]||(r[t+"Handlers"]=[]),r[t+"Handlers"].push({callback:n,useCapture:i}),void 0===this._boundObjs[t]&&(this._boundObjs[t]=[]),this._boundObjs[t].push(e)},a.DomEvents.prototype.addEventListener=a.DomEvents.prototype.bind,a.DomEvents.prototype.unbind=function(e,t,n,i){console.assert(-1!==a.DomEvents.eventNames.indexOf(t),"not available events:"+t),this._objectCtxIsInit(e)||this._objectCtxInit(e);var r=this._objectCtxGet(e);r[t+"Handlers"]||(r[t+"Handlers"]=[]);for(var l=r[t+"Handlers"],o=0;o<l.length;o++){var s=l[o];if(n==s.callback&&i==s.useCapture){l.splice(o,1);break}}var u=this._boundObjs[t].indexOf(e);console.assert(-1!==u),this._boundObjs[t].splice(u,1)},a.DomEvents.prototype.removeEventListener=a.DomEvents.prototype.unbind,a.DomEvents.prototype._bound=function(e,t){var n=this._objectCtxGet(t);return!!n&&!!n[e+"Handlers"]},a.DomEvents.prototype._onMove=function(e,t,n,i){var a=this._boundObjs[e];if(void 0!==a&&0!==a.length){var l=new r.FM8;l.set(t,n),this._raycaster.setFromCamera(l,this._camera);var o=this._raycaster.intersectObjects(a),s=this._selected;if(o.length>0){var u,h,c,m=o[0],d=m.object;this._selected=d,c=this._bound("mousemove",d),s!=d&&(u=this._bound("mouseover",d),h=s&&this._bound("mouseout",s))}else h=s&&this._bound("mouseout",s),this._selected=null;c&&this._notify("mousemove",d,i,m),u&&this._notify("mouseover",d,i,m),h&&this._notify("mouseout",s,i,m)}},a.DomEvents.prototype._onEvent=function(e,t,n,i){var a=this._boundObjs[e];if(void 0!==a&&0!==a.length){var l=new r.FM8;l.set(t,n),this._raycaster.setFromCamera(l,this._camera);var o=this._raycaster.intersectObjects(a,!0);if(0!==o.length){for(var s=o[0],u=s.object,h=this._objectCtxGet(u),c=u.parent;void 0===h&&c;)h=this._objectCtxGet(c),c=c.parent;h&&this._notify(e,u,i,s)}}},a.DomEvents.prototype._notify=function(e,t,n,i){var r=this._objectCtxGet(t),a=r?r[e+"Handlers"]:null;if(console.assert(4===arguments.length),r&&a&&0!==a.length){a=r[e+"Handlers"];for(var l=0;l<a.length;l++){var o=a[l],s=!0;o.callback({type:e,target:t,origDomEvent:n,intersect:i,stopPropagation:function(){s=!1}}),s&&(!1===o.useCapture&&t.parent&&this._notify(e,t.parent,n,i))}}else t.parent&&this._notify(e,t.parent,n,i)},a.DomEvents.prototype._onMouseDown=function(e){return this._onMouseEvent("mousedown",e)},a.DomEvents.prototype._onMouseUp=function(e){return this._onMouseEvent("mouseup",e)},a.DomEvents.prototype._onMouseEvent=function(e,t){var n=this._getRelativeMouseXY(t);this._onEvent(e,n.x,n.y,t)},a.DomEvents.prototype._onMouseMove=function(e){var t=this._getRelativeMouseXY(e);this._onMove("mousemove",t.x,t.y,e),this._onMove("mouseover",t.x,t.y,e),this._onMove("mouseout",t.x,t.y,e)},a.DomEvents.prototype._onClick=function(e){this._onMouseEvent("click",e)},a.DomEvents.prototype._onDblClick=function(e){this._onMouseEvent("dblclick",e)},a.DomEvents.prototype._onContextmenu=function(e){this._onMouseEvent("contextmenu",e)},a.DomEvents.prototype._onTouchStart=function(e){return this._onTouchEvent("touchstart",e)},a.DomEvents.prototype._onTouchEnd=function(e){return this._onTouchEvent("touchend",e)},a.DomEvents.prototype._onTouchMove=function(e){if(1==e.touches.length){e.preventDefault();var t=+e.touches[0].pageX/window.innerWidth*2-1,n=-e.touches[0].pageY/window.innerHeight*2+1;this._onMove("mousemove",t,n,e),this._onMove("mouseover",t,n,e),this._onMove("mouseout",t,n,e)}},a.DomEvents.prototype._onTouchEvent=function(e,t){if(1==t.touches.length){t.preventDefault();var n=+t.touches[0].pageX/window.innerWidth*2-1,i=-t.touches[0].pageY/window.innerHeight*2+1;this._onEvent(e,n,i,t)}};var l=n(512);function o(e){return o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},o(e)}function s(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function u(e,t,n){return t&&s(e.prototype,t),n&&s(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&m(e,t)}function m(e,t){return m=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},m(e,t)}function d(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=f(e);if(t){var r=f(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return p(this,n)}}function p(e,t){if(t&&("object"===o(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return q(e)}function q(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function f(e){return f=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},f(e)}var v={type:"change"},x={type:"start"},g={type:"end"},_=function(e){c(n,e);var t=d(n);function n(e,i){var a,l,o,s,u,c,m;h(this,n),a=t.call(this),void 0===i&&console.warn('THREE.OrbitControls: The second parameter "domElement" is now mandatory.'),i===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),a.object=e,a.domElement=i,a.domElement.style.touchAction="none",a.enabled=!0,a.target=new r.Pa4,a.minDistance=0,a.maxDistance=1/0,a.minZoom=0,a.maxZoom=1/0,a.minPolarAngle=0,a.maxPolarAngle=Math.PI,a.minAzimuthAngle=-1/0,a.maxAzimuthAngle=1/0,a.enableDamping=!1,a.dampingFactor=.05,a.enableZoom=!0,a.zoomSpeed=1,a.enableRotate=!0,a.rotateSpeed=1,a.enablePan=!0,a.panSpeed=1,a.screenSpacePanning=!0,a.keyPanSpeed=7,a.autoRotate=!1,a.autoRotateSpeed=2,a.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},a.mouseButtons={LEFT:r.RsA.ROTATE,MIDDLE:r.RsA.DOLLY,RIGHT:r.RsA.PAN},a.touches={ONE:r.QmN.ROTATE,TWO:r.QmN.DOLLY_PAN},a.target0=a.target.clone(),a.position0=a.object.position.clone(),a.zoom0=a.object.zoom,a._domElementKeyEvents=null,a.getPolarAngle=function(){return y.phi},a.getAzimuthalAngle=function(){return y.theta},a.getDistance=function(){return this.object.position.distanceTo(this.target)},a.listenToKeyEvents=function(e){e.addEventListener("keydown",ae),this._domElementKeyEvents=e},a.saveState=function(){d.target0.copy(d.target),d.position0.copy(d.object.position),d.zoom0=d.object.zoom},a.reset=function(){d.target.copy(d.target0),d.object.position.copy(d.position0),d.object.zoom=d.zoom0,d.object.updateProjectionMatrix(),d.dispatchEvent(v),d.update(),f=p.NONE},a.update=(l=new r.Pa4,o=(new r._fP).setFromUnitVectors(e.up,new r.Pa4(0,1,0)),s=o.clone().invert(),u=new r.Pa4,c=new r._fP,m=2*Math.PI,function(){var e=d.object.position;l.copy(e).sub(d.target),l.applyQuaternion(o),y.setFromVector3(l),d.autoRotate&&f===p.NONE&&O(2*Math.PI/60/60*d.autoRotateSpeed),d.enableDamping?(y.theta+=b.theta*d.dampingFactor,y.phi+=b.phi*d.dampingFactor):(y.theta+=b.theta,y.phi+=b.phi);var t=d.minAzimuthAngle,n=d.maxAzimuthAngle;return isFinite(t)&&isFinite(n)&&(t<-Math.PI?t+=m:t>Math.PI&&(t-=m),n<-Math.PI?n+=m:n>Math.PI&&(n-=m),y.theta=t<=n?Math.max(t,Math.min(n,y.theta)):y.theta>(t+n)/2?Math.max(t,y.theta):Math.min(n,y.theta)),y.phi=Math.max(d.minPolarAngle,Math.min(d.maxPolarAngle,y.phi)),y.makeSafe(),y.radius*=w,y.radius=Math.max(d.minDistance,Math.min(d.maxDistance,y.radius)),!0===d.enableDamping?d.target.addScaledVector(M,d.dampingFactor):d.target.add(M),l.setFromSpherical(y),l.applyQuaternion(s),e.copy(d.target).add(l),d.object.lookAt(d.target),!0===d.enableDamping?(b.theta*=1-d.dampingFactor,b.phi*=1-d.dampingFactor,M.multiplyScalar(1-d.dampingFactor)):(b.set(0,0,0),M.set(0,0,0)),w=1,!!(S||u.distanceToSquared(d.object.position)>_||8*(1-c.dot(d.object.quaternion))>_)&&(d.dispatchEvent(v),u.copy(d.object.position),c.copy(d.object.quaternion),S=!1,!0)}),a.dispose=function(){d.domElement.removeEventListener("contextmenu",le),d.domElement.removeEventListener("pointerdown",ee),d.domElement.removeEventListener("pointercancel",ie),d.domElement.removeEventListener("wheel",re),d.domElement.removeEventListener("pointermove",te),d.domElement.removeEventListener("pointerup",ne),null!==d._domElementKeyEvents&&d._domElementKeyEvents.removeEventListener("keydown",ae)};var d=q(a),p={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},f=p.NONE,_=1e-6,y=new r.$V,b=new r.$V,w=1,M=new r.Pa4,S=!1,T=new r.FM8,E=new r.FM8,z=new r.FM8,k=new r.FM8,A=new r.FM8,L=new r.FM8,R=new r.FM8,P=new r.FM8,C=new r.FM8,D=[],I={};function N(){return Math.pow(.95,d.zoomSpeed)}function O(e){b.theta-=e}function B(e){b.phi-=e}var F,U=(F=new r.Pa4,function(e,t){F.setFromMatrixColumn(t,0),F.multiplyScalar(-e),M.add(F)}),H=function(){var e=new r.Pa4;return function(t,n){!0===d.screenSpacePanning?e.setFromMatrixColumn(n,1):(e.setFromMatrixColumn(n,0),e.crossVectors(d.object.up,e)),e.multiplyScalar(t),M.add(e)}}(),G=function(){var e=new r.Pa4;return function(t,n){var i=d.domElement;if(d.object.isPerspectiveCamera){var r=d.object.position;e.copy(r).sub(d.target);var a=e.length();a*=Math.tan(d.object.fov/2*Math.PI/180),U(2*t*a/i.clientHeight,d.object.matrix),H(2*n*a/i.clientHeight,d.object.matrix)}else d.object.isOrthographicCamera?(U(t*(d.object.right-d.object.left)/d.object.zoom/i.clientWidth,d.object.matrix),H(n*(d.object.top-d.object.bottom)/d.object.zoom/i.clientHeight,d.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),d.enablePan=!1)}}();function V(e){d.object.isPerspectiveCamera?w/=e:d.object.isOrthographicCamera?(d.object.zoom=Math.max(d.minZoom,Math.min(d.maxZoom,d.object.zoom*e)),d.object.updateProjectionMatrix(),S=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),d.enableZoom=!1)}function W(e){d.object.isPerspectiveCamera?w*=e:d.object.isOrthographicCamera?(d.object.zoom=Math.max(d.minZoom,Math.min(d.maxZoom,d.object.zoom/e)),d.object.updateProjectionMatrix(),S=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),d.enableZoom=!1)}function j(e){T.set(e.clientX,e.clientY)}function X(e){k.set(e.clientX,e.clientY)}function Y(){if(1===D.length)T.set(D[0].pageX,D[0].pageY);else{var e=.5*(D[0].pageX+D[1].pageX),t=.5*(D[0].pageY+D[1].pageY);T.set(e,t)}}function Z(){if(1===D.length)k.set(D[0].pageX,D[0].pageY);else{var e=.5*(D[0].pageX+D[1].pageX),t=.5*(D[0].pageY+D[1].pageY);k.set(e,t)}}function J(){var e=D[0].pageX-D[1].pageX,t=D[0].pageY-D[1].pageY,n=Math.sqrt(e*e+t*t);R.set(0,n)}function K(e){if(1==D.length)E.set(e.pageX,e.pageY);else{var t=ue(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);E.set(n,i)}z.subVectors(E,T).multiplyScalar(d.rotateSpeed);var r=d.domElement;O(2*Math.PI*z.x/r.clientHeight),B(2*Math.PI*z.y/r.clientHeight),T.copy(E)}function Q(e){if(1===D.length)A.set(e.pageX,e.pageY);else{var t=ue(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);A.set(n,i)}L.subVectors(A,k).multiplyScalar(d.panSpeed),G(L.x,L.y),k.copy(A)}function $(e){var t=ue(e),n=e.pageX-t.x,i=e.pageY-t.y,r=Math.sqrt(n*n+i*i);P.set(0,r),C.set(0,Math.pow(P.y/R.y,d.zoomSpeed)),V(C.y),R.copy(P)}function ee(e){!1!==d.enabled&&(0===D.length&&(d.domElement.setPointerCapture(e.pointerId),d.domElement.addEventListener("pointermove",te),d.domElement.addEventListener("pointerup",ne)),function(e){D.push(e)}(e),"touch"===e.pointerType?function(e){switch(se(e),D.length){case 1:switch(d.touches.ONE){case r.QmN.ROTATE:if(!1===d.enableRotate)return;Y(),f=p.TOUCH_ROTATE;break;case r.QmN.PAN:if(!1===d.enablePan)return;Z(),f=p.TOUCH_PAN;break;default:f=p.NONE}break;case 2:switch(d.touches.TWO){case r.QmN.DOLLY_PAN:if(!1===d.enableZoom&&!1===d.enablePan)return;d.enableZoom&&J(),d.enablePan&&Z(),f=p.TOUCH_DOLLY_PAN;break;case r.QmN.DOLLY_ROTATE:if(!1===d.enableZoom&&!1===d.enableRotate)return;d.enableZoom&&J(),d.enableRotate&&Y(),f=p.TOUCH_DOLLY_ROTATE;break;default:f=p.NONE}break;default:f=p.NONE}f!==p.NONE&&d.dispatchEvent(x)}(e):function(e){var t;switch(e.button){case 0:t=d.mouseButtons.LEFT;break;case 1:t=d.mouseButtons.MIDDLE;break;case 2:t=d.mouseButtons.RIGHT;break;default:t=-1}switch(t){case r.RsA.DOLLY:if(!1===d.enableZoom)return;!function(e){R.set(e.clientX,e.clientY)}(e),f=p.DOLLY;break;case r.RsA.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===d.enablePan)return;X(e),f=p.PAN}else{if(!1===d.enableRotate)return;j(e),f=p.ROTATE}break;case r.RsA.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===d.enableRotate)return;j(e),f=p.ROTATE}else{if(!1===d.enablePan)return;X(e),f=p.PAN}break;default:f=p.NONE}f!==p.NONE&&d.dispatchEvent(x)}(e))}function te(e){!1!==d.enabled&&("touch"===e.pointerType?function(e){switch(se(e),f){case p.TOUCH_ROTATE:if(!1===d.enableRotate)return;K(e),d.update();break;case p.TOUCH_PAN:if(!1===d.enablePan)return;Q(e),d.update();break;case p.TOUCH_DOLLY_PAN:if(!1===d.enableZoom&&!1===d.enablePan)return;!function(e){d.enableZoom&&$(e),d.enablePan&&Q(e)}(e),d.update();break;case p.TOUCH_DOLLY_ROTATE:if(!1===d.enableZoom&&!1===d.enableRotate)return;!function(e){d.enableZoom&&$(e),d.enableRotate&&K(e)}(e),d.update();break;default:f=p.NONE}}(e):function(e){if(!1===d.enabled)return;switch(f){case p.ROTATE:if(!1===d.enableRotate)return;!function(e){E.set(e.clientX,e.clientY),z.subVectors(E,T).multiplyScalar(d.rotateSpeed);var t=d.domElement;O(2*Math.PI*z.x/t.clientHeight),B(2*Math.PI*z.y/t.clientHeight),T.copy(E),d.update()}(e);break;case p.DOLLY:if(!1===d.enableZoom)return;!function(e){P.set(e.clientX,e.clientY),C.subVectors(P,R),C.y>0?V(N()):C.y<0&&W(N()),R.copy(P),d.update()}(e);break;case p.PAN:if(!1===d.enablePan)return;!function(e){A.set(e.clientX,e.clientY),L.subVectors(A,k).multiplyScalar(d.panSpeed),G(L.x,L.y),k.copy(A),d.update()}(e)}}(e))}function ne(e){!1!==d.enabled&&(e.pointerType,d.dispatchEvent(g),f=p.NONE,oe(e),0===D.length&&(d.domElement.releasePointerCapture(e.pointerId),d.domElement.removeEventListener("pointermove",te),d.domElement.removeEventListener("pointerup",ne)))}function ie(e){oe(e)}function re(e){!1===d.enabled||!1===d.enableZoom||f!==p.NONE&&f!==p.ROTATE||(e.preventDefault(),d.dispatchEvent(x),function(e){e.deltaY<0?W(N()):e.deltaY>0&&V(N()),d.update()}(e),d.dispatchEvent(g))}function ae(e){!1!==d.enabled&&!1!==d.enablePan&&function(e){var t=!1;switch(e.code){case d.keys.UP:G(0,d.keyPanSpeed),t=!0;break;case d.keys.BOTTOM:G(0,-d.keyPanSpeed),t=!0;break;case d.keys.LEFT:G(d.keyPanSpeed,0),t=!0;break;case d.keys.RIGHT:G(-d.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),d.update())}(e)}function le(e){!1!==d.enabled&&e.preventDefault()}function oe(e){delete I[e.pointerId];for(var t=0;t<D.length;t++)if(D[t].pointerId==e.pointerId)return void D.splice(t,1)}function se(e){var t=I[e.pointerId];void 0===t&&(t=new r.FM8,I[e.pointerId]=t),t.set(e.pageX,e.pageY)}function ue(e){var t=e.pointerId===D[0].pointerId?D[1]:D[0];return I[t.pointerId]}return d.domElement.addEventListener("contextmenu",le),d.domElement.addEventListener("pointerdown",ee),d.domElement.addEventListener("pointercancel",ie),d.domElement.addEventListener("wheel",re,{passive:!1}),a.update(),a}return u(n)}(r.pBf);function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function b(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}function w(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function M(e,t){return M=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},M(e,t)}function S(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,i=E(e);if(t){var r=E(this).constructor;n=Reflect.construct(i,arguments,r)}else n=i.apply(this,arguments);return T(this,n)}}function T(e,t){if(t&&("object"===y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function E(e){return E=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},E(e)}for(var z=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&M(e,t)}(l,e);var t,n,i,a=S(l);function l(e){var t,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};w(this,l);var i=n.font;if(!i||!i.isFont)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),T(t,new r.u9r);var o=i.generateShapes(e,n.size);return n.depth=void 0!==n.height?n.height:50,void 0===n.bevelThickness&&(n.bevelThickness=10),void 0===n.bevelSize&&(n.bevelSize=8),void 0===n.bevelEnabled&&(n.bevelEnabled=!1),(t=a.call(this,o,n)).type="TextGeometry",t}return t=l,n&&b(t.prototype,n),i&&b(t,i),Object.defineProperty(t,"prototype",{writable:!1}),t}(r.O7d),k=new z("Break The Blocks Game",{font:i.LZ,size:14,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:1,bevelOffset:0,bevelSegments:5}),A=new z("Play",{font:i.LZ,size:10,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),L=new z("Settings",{font:i.LZ,size:8,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),R=new z("Created by Tariq",{font:i.LZ,size:8,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),P=new z("Music: ",{font:i.LZ,size:8,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),C=new z("Back",{font:i.LZ,size:8,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),D=new z("ON",{font:i.LZ,size:7,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),I=new z("+",{font:i.LZ,size:7,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),N=new z("-",{font:i.LZ,size:7,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),O=new z("OFF",{font:i.LZ,size:7,height:5,curveSegments:5,bevelEnabled:!0,bevelThickness:.1,bevelSize:.5,bevelOffset:0,bevelSegments:5}),B=new r.kaV({matcap:i.wz}),F=new r.kaV({matcap:i.pb}),U=new r.kaV({matcap:i.Je}),H=new r.kaV({matcap:i.Ig}),G=new r.kaV({matcap:i.f$}),V=new r.kaV({matcap:i.Yo}),W=new r.kaV({matcap:i.ew}),j=new r.kaV({matcap:i.Me}),X=new r.kaV({matcap:i.AE}),Y=new r.kaV({matcap:i.w1}),Z=new r.Kj0(k,B),J=new r.Kj0(A,F),K=new r.Kj0(L,U),Q=new r.Kj0(R,H),$=new r.Kj0(P,G),ee=new r.Kj0(C,V),te=new r.Kj0(D,W),ne=new r.Kj0(I,j),ie=new r.Kj0(N,X),re=new r.Kj0(O,Y),ae=[],le=0;le<1e4;le++){var oe=r.M8C.randFloatSpread(2e3),se=r.M8C.randFloatSpread(2e3),ue=r.M8C.randFloatSpread(2e3);ae.push(oe,se,ue)}var he=new r.u9r;he.setAttribute("position",new r.a$l(ae,3));var ce=(new r.dpR).load("/Images/1.png"),me=new r.UY4({size:5,sizeAttenuation:!0,transparent:!0,alphaMap:ce,depthWrite:!1}),de=new r.woe(he,me);function pe(e,t,n,i,r,a,l){try{var o=e[a](l),s=o.value}catch(e){return void n(e)}o.done?t(s):Promise.resolve(s).then(i,r)}var qe=null,fe=49,ve=50.5,xe=45.5,ge=59;i.I$.volume=.1,TweenMax.to(te.material,0,{opacity:0}),TweenMax.to(ne.material,0,{opacity:0}),TweenMax.to(ie.material,0,{opacity:0});new l.Z;var _e=new r.xsS;_e.background=new r.Ilk(0),Z.geometry.computeBoundingBox(),Z.geometry.center(),Z.position.y=105,J.geometry.computeBoundingBox(),J.geometry.center(),J.position.y=60,J.rotation.x=-.1,K.geometry.computeBoundingBox(),K.geometry.center(),K.position.y=40,K.rotation.x=-.1,Q.geometry.computeBoundingBox(),Q.geometry.center(),Q.position.y=-40,Q.position.z=-40,Q.rotateX(.5-.785),$.geometry.computeBoundingBox(),$.geometry.center(),$.position.y=-3e4,$.rotation.x=-.1,ee.geometry.computeBoundingBox(),ee.geometry.center(),ee.position.y=-3e4,ee.rotation.x=-.1,te.geometry.computeBoundingBox(),te.geometry.center(),te.position.y=-3e4,te.position.x=28,te.rotation.x=-.1,te.material.transparent=!0,ne.geometry.computeBoundingBox(),ne.geometry.center(),ne.position.x=38,ne.position.y=-3e4,ne.rotation.x=-.1,ne.material.transparent=!0,ie.geometry.computeBoundingBox(),ie.geometry.center(),ie.position.x=38,ie.position.y=-3e4,ie.rotation.x=-.1,ie.material.transparent=!0,re.geometry.computeBoundingBox(),re.geometry.center(),re.position.y=-3e4,re.position.x=31,re.rotation.x=-.1,re.material.transparent=!0;var ye=document.documentElement.clientWidth,be=document.documentElement.clientHeight,we=new r.CP7({antialias:!0});we.setSize(ye,be),document.body.append(we.domElement);var Me=new r.cPb(45,ye/be,.1,1e3),Se=new a.DomEvents(Me,we.domElement),Te=new _(Me,we.domElement);Te.enableDamping=!0,Te.target=J.position.clone(),Me.position.set(0,100,300),Te.update();var Ee=new r.SUY;function ze(){i.I$.volume=1===i.I$.volume?1:Number((i.I$.volume+.1).toFixed(1))}function ke(){i.I$.volume=.1===i.I$.volume?.1:Number((i.I$.volume-.1).toFixed(1))}function Ae(){Se.unbind(te,"click",Ae),Se.unbind(ne,"click",ze),Se.unbind(ie,"click",ke),Se.bind(re,"click",Le),i.I$.pause(),gsap.fromTo(te.position,{},{y:fe-=10,duration:1}),gsap.fromTo(ne.position,{},{y:ve-=10,duration:1}),gsap.fromTo(ie.position,{},{y:xe-=10,duration:1}),gsap.fromTo(re.position,{},{y:ge-=10,duration:1}),TweenMax.to(te.material,1,{opacity:0}),TweenMax.to(ne.material,1,{opacity:0}),TweenMax.to(ie.material,1,{opacity:0}),TweenMax.to(re.material,1,{opacity:1})}function Le(){Se.unbind(re,"click",Le),Se.bind(te,"click",Ae),Se.bind(ne,"click",ze),Se.bind(ie,"click",ke),i.I$.play(),gsap.fromTo(te.position,{},{y:fe+=10,duration:1}),gsap.fromTo(ne.position,{},{y:ve+=10,duration:1}),gsap.fromTo(ie.position,{},{y:xe+=10,duration:1}),gsap.fromTo(re.position,{},{y:ge+=10,duration:1}),TweenMax.to(te.material,1,{opacity:1}),TweenMax.to(ne.material,1,{opacity:1}),TweenMax.to(ie.material,1,{opacity:1}),TweenMax.to(re.material,1,{opacity:0})}_e.add(Me,Z,J,K,Q,$,ee,te,ne,ie,re,de),function e(){qe=requestAnimationFrame(e);var t=Ee.getElapsedTime();de.rotation.y+=.001,Q.position.y=-20*Math.abs(Math.cos(2*t)),Te.update(),we.render(_e,Me)}(),document.addEventListener("visibilitychange",(function(e){"visible"===document.visibilityState&&59===fe?i.I$.play():"hidden"!==document.visibilityState&&49!==fe||i.I$.pause()})),window.addEventListener("resize",(function(){ye=document.documentElement.clientWidth,be=document.documentElement.clientHeight,Me.aspect=ye/be,Me.updateProjectionMatrix(),we.setSize(ye,be)})),document.addEventListener("keypress",(function(e){document.fullscreenElement||"f"!==e.key&&"F"!==e.key?document.fullscreenElement||"f"!==e.key&&"F"!==e.key||document.exitFullscreen():document.body.requestFullscreen()})),document.addEventListener("keydown",(function(e){"ArrowUp"===e.key?i.I$.volume=1===i.I$.volume?1:Number((i.I$.volume+.1).toFixed(1)):"ArrowDown"===e.key&&(i.I$.volume=0===i.I$.volume?0:Number((i.I$.volume-.1).toFixed(1)))})),Se.addEventListener(J,"click",function(){var e,t=(e=regeneratorRuntime.mark((function e(t){var r,a;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return i.GN.play(),cancelAnimationFrame(qe),e.next=4,n.e(608).then(n.bind(n,608));case 4:r=e.sent,a=r.AppRenderer,document.body.append(a.domElement),we.domElement.remove();case 8:case"end":return e.stop()}}),e)})),function(){var t=this,n=arguments;return new Promise((function(i,r){var a=e.apply(t,n);function l(e){pe(a,i,r,l,o,"next",e)}function o(e){pe(a,i,r,l,o,"throw",e)}l(void 0)}))});return function(e){return t.apply(this,arguments)}}()),Se.addEventListener(K,"click",(function(e){gsap.to(Z.position,{duration:10.5,ease:"bounce.out",y:3e4,overwrite:!0}),gsap.to(J.position,{duration:10.5,ease:"bounce.out",y:3e4,overwrite:!0}),gsap.to(K.position,{duration:10.5,ease:"bounce.out",y:3e4,overwrite:!0}),gsap.to(Q.position,{duration:10.5,ease:"bounce.out",x:-3e4,overwrite:!0}),gsap.to($.position,{duration:2,ease:"power4.out",y:60,overwrite:!0}),gsap.to(ee.position,{duration:2,ease:"power4.out",y:40,overwrite:!0}),gsap.to(te.position,{duration:2,ease:"power4.out",y:fe,overwrite:!0}),gsap.to(ne.position,{duration:2,ease:"power4.out",y:ve,overwrite:!0}),gsap.to(ie.position,{duration:2,ease:"power4.out",y:xe,overwrite:!0}),gsap.to(re.position,{duration:2,ease:"power4.out",y:ge,overwrite:!0})})),Se.addEventListener(ee,"click",(function(e){gsap.to($.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(ee.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(te.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(ne.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(ie.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(re.position,{duration:10.5,ease:"bounce.out",y:-3e4,overwrite:!0}),gsap.to(Z.position,{duration:2,ease:"power4.out",y:105,overwrite:!0}),gsap.to(J.position,{duration:2,ease:"power4.out",y:60,overwrite:!0}),gsap.to(K.position,{duration:2,ease:"power4.out",y:40,overwrite:!0}),gsap.to(Q.position,{duration:2,ease:"power4.out",x:0,overwrite:!0})})),Se.bind(re,"click",Le),window.playAgain=function(){window.open("https://break-the-blocks-game.vercel.app","_self")}}},e=>{var t=t=>e(e.s=t);t(902),t(872)}]);